/*  -==================== INCLUDES ====================-*/
#include <a_samp>
#include <a_npc>
#include <core>
#include <float>
#include <time>
#include <file>
#include <streamer>
#include <seif_walk>
#include <sscanf2>
#include <zcmd>
#include <iPR>
#include <YSI\y_ini>
#include <progressbar>
#include <a_actor>
// -================= AntiDeAMX ====================- //
AntiDeAMX()
{
  new a[][] =
  {
   "Unarmed (Fist)",
   "Brass K"
  };
  #pragma unused a
}
// -=================== Macros ===================- //
#define PlayerToPoint(%1,%2,%3,%4,%5)  	IsPlayerInRangeOfPoint(%2,%1,%3,%4,%5)
#define	Params>							if(!strlen(tmp))
#define Connect							if(IsPlayerConnected(playerid)) {
#define Loop(%0,%1)						for(new %0; %0 != %1; %0++)
#define	function%0(%1)					forward %0(%1); public %0(%1)
#define GText   						GameTextForPlayer
#define TDStr    						TextDrawSetString
#define Skin        					SetPlayerSkin
#define GlobalMsg   					SendClientMessageToAll
#define Message 						SendClientMessage
#define IsNull(%1) 						((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
// -======== GAMEMODE LIMITS =======- //
#define SHOWPATH
#define VV 198
#undef 	MAX_PLAYERS
#define MAX_PLAYERS 100
#undef  MAX_VEHICLES
#define MAX_VEHICLES 500
#define MAX_ATTACKS 5
#define MAX_POINT_TEXT  48
#define MAX_ADMINS_MPS 3
#define MAX_PLAYERVEHICLES 4
// -===== Sistema de Previews =====- //
#define NEXT_TEXT  			"Sig"
#define PREV_TEXT  			"Ant"
#define DIALOG_BASE_X   	75.0
#define DIALOG_BASE_Y   	130.0
#define DIALOG_WIDTH    	550.0
#define DIALOG_HEIGHT   	180.0
#define SPRITE_DIM_X    	60.0
#define SPRITE_DIM_Y    	70.0
#define SELECTION_ITEMS 	21
#define ITEMS_PER_LINE  	7
#define TOTAL_SKINS         283
#define TOTAL_GROTTI        19
#define TOTAL_MEDIUM        27
#define TOTAL_CAS           33
#define TOTAL_TOYS          226
// -========== COLORS ===========- //
#define CHATNEW 0xB1C8FBAA
#define YELLOW 0xFFFF00FF
#define COLOR_ASKQ 0xFF0000FF
#define COLOR_NEGATIVE 0xFF6A6AFF
#define WANTED_COLOR 0xBF6000FF
#define COLOR_DUTY 0x00CA00FF
#define COLOR_MEGAPHONE 0xFF9B6AFF
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0x2471A3FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x9EC73DAA
#define COLOR_RED 0xAA3333AA
#define COLOR_RED2 0xFF6F6FFF
#define COLOR_ESTADO 0x00A5AAFF
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xDABB3EAA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_ORANGE 0xFF7F00FF
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_FADE 0xE6E6E6E6
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xB60597FF
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0x458E1DAA
#define COLOR_OOC 0x66FFFFFF
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define TEAM_RADIO_COLOR2 0xF2D068FF // Amarillo
#define TEAM_RADIO_COLOR 0x9B9BFFFF // Azul
#define TEAM_CYAN_COLOR 0xFF8282AA
#define COLOR_BLUE 0x2641FEAA
#define TRY_GREEN   0x00BF60FF
#define TRY_RED     0xB90000FF
// ==== COMANDO /COLOR ==== //
#define ROJO_ADMIN 0xDC092FFF
#define VERDE_ADMIN 0x41FF2FFF
#define CELESTE_ADMIN 0x41FFECFF
#define AMARILLO_ADMIN 0xFFFF00FF
#define CREMA_ADMIN 0xFFFFD4D4
#define ROSADO_ADMIN 0xFF4FD4D4
#define MORADO_ADMIN 0x9600FF2E
#define ORANGE_ADMIN 0xFF7617FF
#define NEGRO_ADMIN 0x000000A8
// ==== PRAGMA ==== //
#pragma semicolon 0
#pragma tabsize 0
// -====== MISCELLANEOUS ======- //
#define MAX_CANCER  			(100)
#define MAX_EPILEPSIA   		(75)
#define MAX_HOUSES				219
#define MAX_BIZZ            	38
#define MAX_FACTION             5
#define MAX_VEHICLES_FACTION    6
#define MAX_PLAYERTOYS          5
// -========= Dialogs ========- //
#define RadioFixFlow_.  2002
#define EQUIPO_DIALOG 	3
#define EQUIPO_DIALOG2 	4
#define EQUIPO_DIALOG4  6
#define EQUIPO_DIALOG5  7
#define AYUDA_DIALOG   15
#define EQUIPO_PIZZA   16
#define COLOR_ADM      17
#define CPRISION       19
#define CELDA1         20
#define CELDA2         21
#define CELDA3         22
#define EQUIPO_NG      23
#define DIALOG_HIT     25
#define EQUIPO_HITMAN  26
#define EQUIPO_TERROR  27
#define DIALOG_SO      38
#define EQUIPO_MECANICO 40
#define EQUIPO_GOBIERNO 41
#define EQUIPO_JOURNALIST 42

enum ptInfo
{
	ptModelID,
	ptBone,
	Float:ptPosX,
	Float:ptPosY,
	Float:ptPosZ,
	Float:ptRotX,
	Float:ptRotY,
	Float:ptRotZ
};

new PlayerToyInfo[MAX_PLAYERS+1][MAX_PLAYERTOYS][ptInfo];

new HoldingBones[][] = {
	"Nada",
	"Columna",
	"Cabeza",
	"Brazo Izq Sup",
	"Brazo Der Sup",
	"Mano Izq",
	"Mano Derecha",
	"Muslo Izq",
	"Muslo Der",
	"Pie Izq",
	"Pie Der",
	"Right calf",
	"Left calf",
	"AnteBrazo Izq",
	"AnteBrazo Der",
	"Clavicula Izq",
	"Clavicula Der",
	"Cuello",
	"Quijada"
};

enum pInfo
{
	pKey[24],
	pLevel,
	pAdminCP,
	pFacciones,
	pConnectTime,
	pReg,
	pSex,
	pAge,
	pOrigin,
	pWalk,
	pExp,
	pCash,
	pAccount,
	pCheques,
	pKills,
	pDeaths,
	pArrested,
	pLottoNr,
	pJob,
	pJobTime,
	pJailed,
	pJailTime,
	pMats,
	pDrugs,
	pSpeed,
	pEctasy,
	pRitalin,
	pHeroina,
	pMarihuana,
	pLeader,
	pMember,
	pRank,
	pChar,
	Float:pHealth,
	Float:pArmour,
	pInt,
	pPnumber,
	pMinutes,
	pMTexto,
	pPhousekey,
	pPhousevip,
	pPbizzkey,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pGunLic,
	pGafas,
	pTut,
	pVirWorld,
	pAntecedente1[64],
	pAntecedente2[64],
	pAntecedente3[64],
	pNote1[80],
	pNote2[80],
	pNote3[80],
	pNote4[80],
	pNote5[80],
	pSMS_1[80],
	pSMS_2[80],
	pSMS_3[80],
	pSMS_4[80],
	pSMS_5[80],
	pLighter,
	pCigarettes,
	pMask,
	pLocked,
	pAdvertencias,
    pAdminAdver,
	pDNI,
	pMSN[32],
	pEstado[18],
	pWeapon,
	pWeapon2,
	pWeapon3,
	pWeapon4,
	pWeapon5,
	pWeapon6,
	pWeapon7,
	pWeapon8,
	pWeapon9,
	pWeapon10,
	pWeapon11,
	pWeapon12,
	pAmmo,
	pAmmo2,
	pAmmo3,
	pAmmo4,
	pAmmo5,
	pAmmo6,
	pAmmo7,
	pAmmo8,
	pAmmo9,
	pAmmo10,
	pAmmo11,
 	pAmmo12,
 	pMaleta,
 	pMochila,
 	pCasco,
 	pCancer,
 	pEpilepsia,
 	pGripe,
 	pInfeccion,
 	pDEagle,
 	pShotgun,
 	pMP5,
 	pAK47,
 	pM4,
 	pSniper,
 	pFStyle,
 	pLeccion,
 	pBusqueda,
 	pAntiCancer,
 	pAntiEpilepsia,
 	pRent,
 	pRob,
 	pDonateT,
 	pBanDuda,
 	pSeguro,
 	pWalkie,
 	pHead,
 	pMarried,
 	pMarriedTo[24],
 	pEntered,
 	pPeces,
 	pImplementos,
 	pCarnada,
 	pDNIFalse,
 	pDNIName[24],
 	pSuciedad,
 	pHambre,
 	pSed,
 	pAnilloCom,
 	pAnilloOro,
 	pCollar,
 	pAnilloDia,
 	pPulsera,
 	pAretes,
 	pReloj,
 	pRecoger,
	pRecogidos,
	pChangeName,
	pAnuncio[90],
	pADSent,
 	pADTime,
	pAdverFaccion,
	pDismissed,
	pActSlot
};

new PlayerInfo[MAX_PLAYERS][pInfo];

// AttachedInfo
	new	Att_Obj_Slot_0[MAX_PLAYERS][20],
		Att_Obj_Slot_1[MAX_PLAYERS][20],
		Att_Obj_Slot_2[MAX_PLAYERS][20],
		Att_Obj_Slot_3[MAX_PLAYERS][20],
		Att_Obj_Slot_4[MAX_PLAYERS][20];
		
new ScriptMoney[MAX_PLAYERS];
new Float:ScriptArmor[MAX_PLAYERS];
new HasArmor[MAX_PLAYERS];

//// Vehiculos Facc ///
new LSPD_IsACopCarros[20];//
new Taxi_Vehiculos[10];//
new SAMD_Vehiculos[10];//
new GS_Vehiculos[40];//
new LK_Vehiculos[40];//
new Mecanico_Vehiculos[40];//
new Ita_Vehiculos[40];//
new Rus_Vehiculos[40];//
new Gobierno_Vehiculos[40];//
new CNN_Vehiculos[40];//
new IsABasurero_Vehiculos[40];//
new IsAPlane_Vehiculos[40];//
new Harvest_Vehiculos[40];//
new IsAPizzabike_Vehiculos[40];//
new SAEM_Vehiculos[40];//
/*new Hitman_Vehiculos[40];*/
new IsACamion_Vehiculos[40];//
new IsABoatFish_Vehiculos[40];//
new IsATerroristas_Vehiculos[40];//
new IsATrailer_Vehiculos[40];//
new Hire_Vehiculos[40];//
new IsATrain_Vehiculos[40];
/// Neones
new neon[MAX_VEHICLES][4], bool:mostrandoneon[MAX_VEHICLES];

function GiveArmorToPlayer(playerid, Float:armour)
{
	SetPlayerArmour(playerid, Float:armour);
	HasArmor[playerid] = 1;
	ScriptArmor[playerid] = armour;
	if(Team_LSPD(playerid)){SetPlayerAttachedObject(playerid,1,19142,1,0.099258,0.031748,-0.015871,360.000000,358.979064,357.476074,1.072590,1.239796,-1.046599);}
	else{SetPlayerAttachedObject(playerid, 1, 373, 1, 0.300327, -0.004779, -0.178271, 73.442504, 25.958881, 32.691726);}
	Att_Obj_Slot_1[playerid] = "Chaleco";
	return 1;
}

function MoneyInHand(playerid)
{
	return GetPlayerMoney(playerid);
}

function MoneyGiveToPlayer(playerid,amount)
{
	if(IsPlayerConnected(playerid))
	{
	    GivePlayerMoney(playerid,amount);
	    ScriptMoney[playerid] = ScriptMoney[playerid]+amount;
	    return 1;
	}
	return 0;
}

function MoneyResetToPlayer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerMoney(playerid);
	    ScriptMoney[playerid] = 0;
	    return 1;
	}
	return 0;
}

function GetScriptMoney(playerid)
{
	new amount;
	if(IsPlayerConnected(playerid))
	{
	    if(GetPlayerMoney(playerid)<ScriptMoney[playerid]) amount=GetPlayerMoney(playerid);
	    else amount=ScriptMoney[playerid];
	}
	return amount;
}

function SetMoneyToPlayer(playerid,amount)
{
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerMoney(playerid);
	    GivePlayerMoney(playerid,amount);
	    ScriptMoney[playerid] = amount;
	    return 1;
	}
	return 0;
}

function SetHP(playerid, Float:hp)
{
	if(IsPlayerConnected(playerid))
	{
	    PlayerInfo[playerid][pHealth] =hp;
    	SetPlayerHealth(playerid, hp);
    	return 1;
	}
	return 0;
}

#define DLOGIN 			501
#define ShowLoginDialog(%1,%2) ShowPlayerDialog(%1, %2, DIALOG_STYLE_PASSWORD, "Login", "{FFFFFF}Bienvenido a {2471A3}Miami Roleplay\n\n{FFFFFF}Ingresa tu contraseña para comenzar a jugar\n\n\t\t{37879F}Gracias por preferirnos", "Conectar", "Salir")
#define DREGISTER 504
#define ShowRegisterDialog(%1,%2) ShowPlayerDialog(%1, %2, DIALOG_STYLE_INPUT, "Registro", "{FFFFFF}Bienvenido a {2471A3}Miami Roleplay\n\n{FFFFFF}Tu cuenta no está registrada, ingresa una\ncontraseña para registrarte.\n\n\t\t{37879F}Gracias por preferirnos", "Registrar", "Salir")
// -==================-
#define SendRequest(%1,%2)  ShowPlayerDialog(%1, PETITION_DIALOG, DIALOG_STYLE_MSGBOX, "Petición", %2, "Aceptar", "Rechazar")
// -=========REGISTER~~TUTORIAL=========-
#define DIALOG_REG_AGE 		505
#define DIALOG_REG_NAC 		506
#define DIALOG_REG_MSN 		507
#define DIALOG_REG_MSNC 	508
#define DIALOG_REG_TUT 		509
// -====== GMLimits ======-
#define DINFO   		510
// -======= Toys ========-
#define TOYS        	511
#define DELETETOY       512
#define WEARTOY         513
#define BUYTOYS         514
#define BUYTOYS2        515
#define EDITTOYS        517
#define EDITTOYS2       518
#define EDITTOYSBONE    519
// -=========24/7\SHOPS===========-
#define D247_BUY 		550
#define LOTTO_BUY       559
// -================== NARCO & MAFIA ======================-
#define CAMEL_MENU 			2200
#define CREATE_WEAPON     	2201
// -================= FSTYLE =================-
#define FSTYLE_DIALOG   563
// -================= AMMUNATION ================-
#define AMMUNATION_MENU     566
#define AMMUNATION_MENU_DEF 567
#define AMMUNATION_MENU_PIS 568
#define AMMUNATION_MENU_ESC 570
#define AMMUNATION_MENU_PRO 572
#define AMMUNATION_MENU_LEC 573
// -==================== AMMUNATION MANAGER =====================-
#define DIALOG_LECCION 574
#define DIALOG_AMMU_MANAGER 575
// -==================== LSPD =========================-
#define DIALOG_LSPD_ELEVATOR   576
// -=================== Transportes ======================-
#define DIALOG_TAXI_RADAR 577
// -================== DIALOG BAR =======================- //
#define BAR_MENU 			578
#define BAR_MENU_TAPAS 		579
#define BAR_MENU_BEBIDAS    580
// -================= DIALOG FARMACIA ===================- //
#define DIALOG_FARMACIA 581
// -=======------======== MECÁNICO MENÚ ========---------=========- //
#define MECANICO_MENU   584
#define MECANICO_MENU_REPARACION    585
#define MECANICO_MENU_GASOLINA      586
#define MECANICO_MENU_TUNING        587
#define MECANICO_MENU_EMBARGAR      588
#define MECANICO_MENU_DESEMBARGAR   589
#define MECANICO_MENU_MULTAR        590
#define MECANICO_MENU_REMOLCAR      591
#define MECANICO_MENU_TUNING_global 592
#define MECANICO_MENU_TUNING_global_suspensionystereo 593
#define MECANICO_MENU_TUNING_color  594
#define MECANICO_MENU_TUNING_color_1  595
#define MECANICO_MENU_TUNING_color_2  596
#define MECANICO_MENU_TUNING_name  597
#define MECANICO_MENU_TUNING_motor 598
#define MECANICO_MENU_TUNING_bateria 599
#define MECANICO_MENU_TUNING_neon   2020
#define DIALOG_PONER_ALERON         2021
#define DIALOG_INFO_ALERON          2022
#define TUNING_MENU_NITRO   			600
#define MECANICO_MENU_OTROS         	601
#define MECANICO_MENU_OTROS_matricula  	602
#define MECANICO_MENU_TUNING_SPECIAL    603
#define TUNING_MENU_RUEDAS 				604
#define TUNING_WAA  					610
// -= Contrato =- //
#define REQF_ACCEPT 910
// -= Petition / Trade =- //
#define PETITION_DIALOG 911
// -= Gafas =- //
#define BRILLO_GAFAS 915
// -= LSRTV =- //
#define ENTER_LSRTV 916
// -= Gasolina =- //
#define GASOLINA_DIALOG 917
// -= GOOGLE =- //
#define GOOGLE  919
// -= Drugs =- //
#define CONFIRM_DRUGS_DIALOG    921
// -= IPHONE =- //
#define TEL_INPUT   	923
#define TEL_MSGBOX  	924
#define IPHONE_OPTIONS  925
#define IPHONE_AGENDA   926
#define IPHONE_AGENDA_VB     	912
#define IPHONE_AGENDA_ESCRIBIR  913
// -= Paintball =- //
#define DIALOG_PAINTBALL    	928
#define DIALOG_PAINTBALL_TVT	929
// -= Estado =- //
#define DIALOG_ESTADO   	930
#define DIALOG_REG_ESTADO   931
// -= Saldo OTECEL =- //
#define RECARGA_PHONE   	937
#define OTECEL_CONFIRM  	938
#define OTECEL_PAQUETES 	939
#define DIALOG_SAMUR_ELEVATOR   940
// -= Matrimonio =- //
#define MATRIMONIO_DIALOG   942
#define MATRIMONIO_CONFIRM  943
#define MATRIMONIO_CONFIRM2 944
#define DIVORCIO_DIALOG     945
#define DIVORCIO_CONFIRM    946
// -= Trabajo Camioneros =- //
#define CARGAR_CAMION       947
// VERTRABAJOS //
#define JOBSMENU        1712
// -= Vehicle GPS =- //
#define	GPS_DIALOG  	948
#define BARES       	949
#define EMERGENCIAS 	950
#define NEGOCIOS     	951
#define LUGARPUBLICO    952
#define SERVICIOS       953
// -= Trabajo Pescador =- //
#define DIALOG_PUERTO   954
// -= Sex Shop =- //
#define DELE_BUY_SEX    958
#define DELE_BUY_SEXM   959
#define DELE_BUY_SEXF   960
#define DELE_BUY_SEXJ   961
// -= Negocios =- //
#define QUIT_EXTORTION  962
// -= Electrónica =- //
#define ELECTRONIC_BUY  963
// -= DNI Falso =- //
#define DNI_MENU        964
#define DNI_CONFIRM     965
// -= Impuestos Casa =- //
#define HOUSE_IMPUESTOS 966
// -= Joyeria =- //
#define COMPRAR_JOYAS   967
#define VENDER_JOYAS    968
// -= Terroristas =- //
#define ATTACKS_DIALOG  969
#define ATTACK_TERRO    970
#define ATTACKS_ENTER   971
// -= Basurero =- //
#define BASURA          972
// -= Drogas Bandas =- //
#define DROGAS_BANDAS   973
// -= Seguro S.A. =- //
#define SEGURO_GPS      974
#define SEGURO_VEH      975
// -= Sistema de Catalogo -= //
#define SELECCION_SLOT  976
#define VEHICLE_INFO    977
// -= Ammu Balas -= //
#define AMMUNATION_9MM      978
#define AMMUNATION_DEAGLE   979
#define AMMUNATION_ESC_CAZ  980
// -= Renta de Vehiculos -= //
#define RENTA_VEHICULOS     981
// -= Publicidad -= //
#define VER_ANUNCIOS        982
#define CENTRODE_ANUNCIOS	983
/* -= FORWARD -==================================================== */
forward DestruirNeon(vehid);
forward ShowNeon(playerid, vehid);
forward LoadProperty();
forward LoadBizz();
forward SetPlayerWeapons(playerid);
forward OnPlayerLoginGM(playerid);
forward LoadUser(playerid, name[], value[]);
forward OnPlayerRegister(playerid, password[]);
forward Lotto(number);
forward DiseaseSystem();
forward CheckGas();
forward SyncTime();
forward SyncUp();
forward SaveAccounts();
forward PayDay();
forward OnPlayerUpdateTime(playerid);
forward AttVelocimetro(playerid);
/* -= Variables Servidor -======================================== */
new EventoOn = 0;
new PizzaCall = 999;
new PayDayLeft = 60;
new AtaqueRealizado = 0;
new TvTNaranjaKills = 0,
	TvTVerdeKills = 0,
	TotalDM = 0,
	TTeamVerde = 0,
	TTeamNaranja = 0,
	TotalPlayer = 0;
new pMatI, pMatII, pMatIII, pMatIV, pMatV;
new nod = 0;
new Misile_Launcher;
new tvp, tvp1, mafia2, terroristas, hospitalgate, pdgate1, pea1, pea2, pablo, brian, jennifer, matias, distasio, jeangate;
new lspddoor1, lspddoor2, lspdo,lspd2,lspdg,lspdk,cell,lspdg1,lspdg2,lspdg3,lspdg4,lspdg5, pdgate2;
new prison1, prison2, prison3, saem1, saem2, saem3, rusos, crgate, torres, torres2, torres3, estac, estac2;
new meca1, meca2;
new GMSuciedad = 8;
new AdminMPS[MAX_ADMINS_MPS] = 999;
new noac = 0;
new DobleOn = 0;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new realtime = 1;
new wtime = 16;
new realchat = 1;
new shifthour;
new mmtimer;
new levelexp = 4;
new cchargetime = 20;
new Text:SunGlasses;
//// Textdraw
new Text:Textdraw0;
new Text:Textdraw1;
new Text:Textdraw2;
new Text:Textdraw3;
///
new Text:PublicTD[3];
new AutoLavado = -1;
new
Text:Ciudad,
Text:Prohibida;
new Text:LoginMenu[8];
new
Text:streamer,
Text:box;
new
	gGas95_Cost 	= 	1,  gGas95_Full=100,
	gGas98_Cost 	= 	1,  gGas98_Full=120,
	gGasoil_Cost    =   2,  gGasoil_Full=160,
	gBiogas_Cost    =   3,  gBiogas_Full=230;
new Interview = 0;
new Interviewer[32] = "Nadie";
new Tax = 0;
new TaxValue = 0;
new Jackpot = 0;
new Blood = 1000;
new RLCN, RRusos;
new AutoCat[19];
new pdtrace = 0;
new Float:pdtrace_x;
new Float:pdtrace_y;
new Float:pdtrace_z;
new emdtrace = 0;
new Float:emdtrace_x;
new Float:emdtrace_y;
new Float:emdtrace_z;
new DefaultWeather = 10;
new TerroPoint[MAX_ATTACKS] = 0;
new Float:PointAttack[MAX_ATTACKS][3];
new StringPoint1[MAX_POINT_TEXT] = "Sin Definir", StringPoint2[MAX_POINT_TEXT] = "Sin Definir", StringPoint3[MAX_POINT_TEXT] = "Sin Definir", StringPoint4[MAX_POINT_TEXT] = "Sin Definir", StringPoint5[MAX_POINT_TEXT] = "Sin Definir";
new TaxiSlot1 = 999, TaxiSlot2 = 999, TaxiSlot3 = 999, TaxiSlot4 = 999, TaxiSlot5 = 999, TaxiSlot6 = 999, TaxiSlot7 = 999, TaxiSlot8 = 999;
new TiempoSlot1 = 0, TiempoSlot2 = 0, TiempoSlot3 = 0, TiempoSlot4 = 0, TiempoSlot5 = 0, TiempoSlot6 = 0, TiempoSlot7 = 0, TiempoSlot8 = 0;
new SlotZone1[48] = "Sin Localizar", SlotZone2[48] = "Sin Localizar", SlotZone3[48] = "Sin Localizar", SlotZone4[48] = "Sin Localizar", SlotZone5[48] = "Sin Localizar", SlotZone6[48] = "Sin Localizar", SlotZone7[48] = "Sin Localizar", SlotZone8[48] = "Sin Localizar";
/* -= Variables Vehículos -======================================= */
new VehicleOwner[MAX_VEHICLES] = 999;
new VehicleSlot[MAX_VEHICLES] = 999;
new bool:VehicleSpawned[MAX_VEHICLES] = false;
new bool:OwnableVehicle[MAX_VEHICLES] = false;
new Faction_Vehicle[MAX_FACTION][MAX_VEHICLES_FACTION];
new F_ID[MAX_VEHICLES] = -1;
new FV_ID[MAX_VEHICLES] = -1;
new VehTimer[MAX_VEHICLES];
new HireCarLock[MAX_VEHICLES];
new bool:HireState[MAX_VEHICLES] = false;
new
	engineOn[MAX_VEHICLES],
	LightsOn[MAX_VEHICLES],
	BootOpen[MAX_VEHICLES],
	BonnetOpen[MAX_VEHICLES],
	gEngine[MAX_PLAYERS],
	NoWheels[MAX_VEHICLES],
	Alarm[MAX_VEHICLES];
new bool:VehicleDeath[MAX_VEHICLES];
new VehicleWindows[MAX_VEHICLES] = 0;
new Gas[MAX_VEHICLES];
new Text:TextVelocimetro[11];
new PlayerText:TextVelocimetroP[MAX_PLAYERS][5];

new VehicleNames[212][] =
{
    {"Landstalker"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"},{"Dumper"},
    {"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},{"Pony"},{"Mule"},
    {"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},{"Washington"},
    {"Bobcat"},{"Mr Whoopee"},{"BF Injection"},{"Hunter"},{"Premier"},{"Enforcer"},{"Securicar"},
    {"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Trailer 1"},{"Previon"},
    {"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},{"Romero"},{"Packer"},{"Monster"},
    {"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Trailer 2"},{"Turismo"},
    {"Speeder"},{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},{"Berkley's RC Van"},
    {"Skimmer"},{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},
    {"Sanchez"},{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},{"Hermes"},{"Sabre"},
    {"Rustler"},{"ZR-350"},{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},
    {"Baggage"},{"Dozer"},{"Maverick"},{"News Chopper"},{"Rancher"},{"FBI Rancher"},{"Virgo"},{"Greenwood"},
    {"Jetmax"},{"Hotring"},{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},
    {"Mesa"},{"RC Goblin"},{"Hotring Racer A"},{"Hotring Racer B"},{"Bloodring Banger"},{"Rancher"},
    {"Super GT"},{"Elegant"},{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stunt"},
    {"Tanker"}, {"Roadtrain"},{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},
    {"NRG-500"},{"HPV1000"},{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},
    {"Willard"},{"Forklift"},{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},
    {"Blade"},{"Freight"},{"Streak"},{"Vortex"},{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},
    {"Firetruck LA"},{"Hustler"},{"Intruder"},{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},
    {"Utility"},{"Nevada"},{"Yosemite"},{"Windsor"},{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},
    {"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},
    {"Bandito"},{"Freight Flat"},{"Streak Carriage"},{"Kart"},{"Mower"},{"Duneride"},{"Sweeper"},
    {"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},{"Stafford"},{"BF-400"},{"Newsvan"},
    {"Tug"},{"Trailer 3"},{"Emperor"},{"Wayfarer"},{"Euros"},{"Hotdog"},{"Club"},{"Freight Carriage"},
    {"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police"},{"Police"},
    {"Police)"},{"Police Ranger"},{"Picador"},{"S.W.A.T. Van"},{"Alpha"},{"Phoenix"},{"Glendale"},
    {"Sadler"},{"Luggage Trailer A"},{"Luggage Trailer B"},{"Stair Trailer"},{"Boxville"},{"Farm Plow"},
    {"Utility Trailer"}
};

/* -= Variables Jugador -========================================= */
new gOoc[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new gNew[MAX_PLAYERS];
new gBcmd[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new Text3D:Estado[MAX_PLAYERS];
new ScriptWeapons[MAX_PLAYERS][12];
new ScriptAmmo[MAX_PLAYERS][12];
new NoAntiCheat[MAX_PLAYERS];
new Tied[MAX_PLAYERS];
new DeathPlayer[MAX_PLAYERS];
new AdminDuty[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new AFK[MAX_PLAYERS];
new AFKTime[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TarifaTaxi[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new AdminChat[MAX_PLAYERS];
new HireKey[MAX_PLAYERS];
new HireMinutes[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new PFrecuencia[MAX_PLAYERS];
new PaintballType[MAX_PLAYERS];
new First_Spawn[MAX_PLAYERS];
new MPToAdmin[MAX_PLAYERS][6];
new Refueling[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new Float:AFKLoc[MAX_PLAYERS][3];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:InceptionPos[MAX_PLAYERS][3];
new UsingDrugs[MAX_PLAYERS];
new BasuraPunto[MAX_PLAYERS];
new TimerBasura[MAX_PLAYERS];
new PlayerIsRuta[MAX_PLAYERS];
new PlayerCargando[MAX_PLAYERS];
new PlayerDescargando[MAX_PLAYERS];
new Mercancia[MAX_PLAYERS];
new Color[MAX_PLAYERS];
new RecentlyShot[MAX_PLAYERS];
new PlayerStatInfo[MAX_PLAYERS][8][22];
new StatString[MAX_PLAYERS][3][32];
new StatInt[MAX_PLAYERS][12];
new MemberFactionID[MAX_PLAYERS];
new Maskuse[MAX_PLAYERS];
new UsingEctasy[MAX_PLAYERS];
new EctasyEffect[MAX_PLAYERS];
new UsingRitalin[MAX_PLAYERS];
new RitalinEffect[MAX_PLAYERS];
new UsingHeroina[MAX_PLAYERS];
new HeroinaEffect[MAX_PLAYERS];
new HeroinaBeat[MAX_PLAYERS];
new UsingMarihuana[MAX_PLAYERS];
new MarihuanaEffect[MAX_PLAYERS];
new MarihuanaBeat[MAX_PLAYERS];
new CancerEffect[MAX_PLAYERS];
new EpilepsiaCrack[MAX_PLAYERS];
new Infeccion[MAX_PLAYERS];
new cNicotina[MAX_PLAYERS];
new cEnergysil[MAX_PLAYERS];
new cCancer[MAX_PLAYERS];
new cEpilepsia[MAX_PLAYERS];
new JustReported[MAX_PLAYERS];
new Mochila[MAX_PLAYERS][2];
new RadioOn[MAX_PLAYERS];
new MensajeMuriendo[MAX_PLAYERS];
new ForbidHandsUp[MAX_PLAYERS];
new Left4Life[MAX_PLAYERS];
new Rescued[MAX_PLAYERS];
new MsgL4L[MAX_PLAYERS];
new Text:TutTxt[4];
new Text:TextTut[MAX_PLAYERS];
new Text:RegDraw[MAX_PLAYERS];
new Text:RegInfo;
new Text:Taximeter[MAX_PLAYERS];
new Text3D:House3DText[MAX_HOUSES];
new Text3D:Bizz3DText[MAX_BIZZ];
new HousePickup[MAX_HOUSES];
new BizzPickup[MAX_BIZZ];
new LookHouse[MAX_PLAYERS];
new UsageTeam[MAX_PLAYERS];
new See_AD[MAX_PLAYERS];
new PlayerText:gCurrentPageTextDrawId[MAX_PLAYERS];
new PlayerText:gHeaderTextDrawId[MAX_PLAYERS];
new PlayerText:gBackgroundTextDrawId[MAX_PLAYERS];
new PlayerText:gNextButtonTextDrawId[MAX_PLAYERS];
new PlayerText:gPrevButtonTextDrawId[MAX_PLAYERS];
new PlayerText:gSelectionItems[MAX_PLAYERS][SELECTION_ITEMS];
new gSelectionItemsTag[MAX_PLAYERS][SELECTION_ITEMS];
new gTotalItems[MAX_PLAYERS];

#define GasMax 180
#define RefuelWait 10000

stock NomeVeiculo(vehicleid)
{
	new vehmodel = GetVehicleModel(vehicleid);
	new nameVeh[75];

	if (vehmodel < 400 || vehmodel > 611) {
		strcat(nameVeh, "Ninguno");
		return nameVeh;
	}
	strcat(nameVeh, VehicleNames[vehmodel - 400]);
	return nameVeh;
}
stock VelocidadeDoVeiculo(vehicleid)
{
	new Float:xPos[3];
	GetVehicleVelocity(vehicleid, xPos[0], xPos[1], xPos[2]);
	return floatround(floatsqroot(xPos[0] * xPos[0] + xPos[1] * xPos[1] + xPos[2] * xPos[2]) * 170.00);
}
stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

#define MAX_ROADBLOCKS 35

enum rInfo
{
    sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};

new Roadblocks[MAX_ROADBLOCKS][rInfo];

enum hInfo
{
    hOwned,
    hOwner[MAX_PLAYER_NAME],
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hInt,
    hLevel,
	hValue,
	hLock,
	hRooms,
	hRent,
	hRentabil,
	hWep,
	hAmmo,
    hMats,
    hDrugs,
    hSpeed,
    hEctasy,
    hRitalin,
    hHeroina,
    hMarihuana,
	hWorld,
	hTime
};

new HouseInfo[MAX_HOUSES][hInfo];

enum pvInfo
{
    pvID,
    pvSpawned,
	pvModel,
	Float:pvLocationx,
	Float:pvLocationy,
	Float:pvLocationz,
	Float:pvAngle,
	Float:pvHealth,
	pvColorOne,
	pvColorTwo,
	pvName[14],
	pvValue,
	pvLock,
	pvBattery,
	pvSpoiler,
	pvHood,
	pvRoof,
	pvSideskirt,
	pvNitro,
	pvExhaust,
	pvWheel,
	pvHydraulics,
	pvPaintjob,
	pvFrontBumper,
	pvRearBumper,
	pvEmbargo,
	pvMulta,
	pvPlate[12],
	pvGas,
	pvAlarm,
	pvGPS,
	pvGasolina,
	pvRespawn,
	pvSuciedad,
	pvTanque,
	pvNeon,
	pvSopiler
};

new PlayerVehicleInfo[MAX_PLAYERS+1][MAX_PLAYERVEHICLES][pvInfo];

enum fInfo
{
	fType,
	fName[24],
	fFounds,
	fRank1[20],
	fRank2[20],
	fRank3[20],
	fRank4[20],
	fRank5[20],
	fRank6[20],
	fInterior,
	fVirtualWorld,
    fLocked,
	Float:fEntrance[3],
	Float:fExit[3],
	fPickup,
	Text3D:fTextLabel
};

new FactionInfo[MAX_FACTION][fInfo];

enum fvInfo
{
	fvID,
	fvModel,
	Float:fvPos[4],
	fvColorOne,
	fvColorTwo
};

new FactionVehicleInfo[MAX_FACTION][MAX_VEHICLES_FACTION][fvInfo];

enum bInfo
{
	bOwned,
	bOwner[24],
	bName[24],
    bExtortion[MAX_PLAYER_NAME],
	Float:bEntrancex,
	Float:bEntrancey,
	Float:bEntrancez,
	bLevelNeeded,
	bBuyPrice,
	bTill,
	bTillEx
};

new BizzInfo[MAX_BIZZ][bInfo];

enum hqLocks
{
	GS,
	LH,
	LK,
	ITA,
	RUS,
	HIT,
	TER
};

new hqlock[hqLocks];

new Bar:Cargando[MAX_PLAYERS] = {INVALID_BAR_ID, ...};
new Bar:Lavando[MAX_PLAYERS] = {INVALID_BAR_ID, ...};
new Bar:Suciedad[MAX_PLAYERS] = {INVALID_BAR_ID, ...};
new Bar:Hambre[MAX_PLAYERS] = {INVALID_BAR_ID, ...};
new Bar:Sed[MAX_PLAYERS] = {INVALID_BAR_ID, ...};

new Float:gDrugFarmVar[26][3] = {
	{-259.6562,-57.9561,2.8377},
	{-254.5291,-33.8827,2.8385},
	{-238.1613,44.3417,2.2078},
	{-209.5157,80.1700,2.7024},
	{-175.4233,66.8039,2.8388},
	{-142.6084,45.4895,2.8388},
	{-160.0594,5.8592,2.8385},
	{-175.1070,-39.3283,2.8386},
	{-215.7219,-41.6478,2.8370},
	{-203.8972,139.3158,3.6730},
	{-182.4831,163.9266,7.1622},
	{-165.0118,147.7440,4.7341},
	{-135.8543,116.6793,2.9278},
	{-114.0200,134.7971,2.8386},
	{22.7234,32.2417,2.8387},
	{48.4623,24.3225,1.6563},
	{62.2001,4.4411,0.9688},
	{62.1774,-20.8292,1.0529},
	{48.4535,-91.2610,0.3311},
	{32.1094,-110.5129,0.3384},
	{12.0121,-110.4428,0.5447},
	{-17.0480,-107.2493,2.8238},
	{-38.7793,-95.6601,2.8387},
	{-23.5426,-60.4188,2.8392},
	{-0.5058,-57.3535,2.8387},
	{18.0054,-81.7280,1.5868}
};

new Float:PuntosDrogas[25][3] = {
	{187.0764,-1764.5869,4.3472},
	{518.3166,-1758.0962,14.2391},
	{927.3747,-1818.4655,13.3240},
	{1232.9554,-1878.9513,13.5469},
	{1271.6780,-1663.7734,19.7344},
	{732.7486,-1476.2113,5.4688},
	{328.4246,-1495.1135,24.9219},
	{809.6965,-1161.0931,16.9766},
	{1210.8723,-996.0535,35.2222},
	{1470.6146,-1847.7573,13.5469},
	{1413.3228,-1299.4044,13.5506},
	{1625.5681,-1043.2412,23.8984},
	{1812.4546,-1435.2362,13.4297},
	{1864.7393,-2021.3955,13.5469},
	{2184.0649,-2701.6274,13.5469},
	{2073.2646,-1583.2690,13.4746},
	{2260.7859,-1097.6287,37.9766},
	{2516.5862,-1225.6760,39.0156},
	{2445.4138,-1758.7061,13.5923},
	{2491.9502,-2133.0149,17.2712},
	{2644.7520,-1957.4399,13.5469},
	{2808.0022,-1176.0248,25.3820},
	{2783.4358,-1240.9036,47.8504},
	{2392.3838,-1205.1013,27.6034},
	{928.1414,-796.4779,116.1797}
};

new Float:AFKZone[5][3] = {
	{-1753.7677,885.5895,295.8750},
	{-1942.7980,537.1266,209.6516},
	{-1807.5276,523.5158,234.8906},
	{-1837.2823,574.0678,234.8874},
	{-1774.7689,573.7373,234.8906}
};

new Float:PaintballDMSpawns[4][3] = {
	{-1487.1887,1641.8083,1060.6719},
	{-1361.2830,1631.6606,1053.5317},
	{-1453.2238,1578.0221,1052.7500},
	{-1456.6083,1635.8208,1052.5313}
};

new Float:PaintPvPSpawns[3][3] = {
	{1948.7115,1653.6857,-11.8821},
	{1975.8000,1619.4677,-11.8929},
	{2003.1938,1598.9515,-11.8828}
};

new gSkinList[TOTAL_SKINS] = {
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,
97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,
133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,
168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,
203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,
238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,
273,289,290,291,292,293,294,295,296,297,298,299
};

new gGrottiList[TOTAL_GROTTI] = {
411,415,429,451,477,480,506,522,521,541,560,562,587,603,402,409,470,558,559
};

new gMediumList[TOTAL_MEDIUM] = {
565,400,405,424,426,434,439,445,458,463,468,475,482,489,496,500,535,551,554,555,561,579,581,589,602,421,507
};

new gCasList[TOTAL_CAS] = {
401,404,410,412,413,418,422,436,419,440,442,462,466,467,526,527,533,536,545,546,547,550,576,471,516,517,474,479,492,481,509,586,510
};

enum ToysEnumAll
{
	toymodelid,
	toyname[24]
}

new gToysList[TOTAL_TOYS][ToysEnumAll] = {
{18636, "GorroPolicia-1"},
{19099, "GorroPolicia-2"},
{19100, "GorroPolicia-3"},
{18637, "EscudoPolicia"},
{19161, "SombreroPolicia-1"},
{19162, "SombreroPolicia-2"},
{19200, "CascoPolicia-1"},
{19138, "LenterPolicia1"},
{19139, "LenterPolicia2"},
{19140, "LenterPolicia3"},
{18643, "Laser-1"},
{19080, "Laser-2"},
{19081, "Laser-3"},
{19082, "Laser-4"},
{19083, "Laser-5"},
{19084, "Laser-6"},
{18675, "Humo"},
{18693, "FuegoLargo"},
{18698, "Insectos"},
{18632, "CañaPesca"},
{18633, "Llave"},
{18635, "Martillo"},
{18634, "Palanca"},
{18638, "Sombrero-1"},
{19093, "Sombrero-2"},
{19160, "Sombrero-3"},
{18639, "SombreroNegro"},
{18640, "Peluca"},
{18975, "Peluca-2"},
{19136, "Peluca-3"},
{19274, "Peluca-4"},
{18641, "Linterna"},
{18644, "Desarmador"},
{18865, "Teléfono-1"},
{18866, "Teléfono-2"},
{18867, "Teléfono-3"},
{18868, "Teléfono-4"},
{18869, "Teléfono-5"},
{18870, "Teléfono-6"},
{18871, "Teléfono-7"},
{18872, "Teléfono-8"},
{18873, "Teléfono-9"},
{18874, "Teléfono-10"},
{19086, "DildoMotosierra"},
{18875, "Pager"},
{18890, "Rastrillo"},
{18891, "Bandana1"},
{18892, "Bandana2"},
{18893, "Bandana3"},
{18894, "Bandana4"},
{18895, "Bandana5"},
{18896, "Bandana6"},
{18897, "Bandana7"},
{18898, "Bandana8"},
{18899, "Bandana9"},
{18900, "Bandana10"},
{18901, "Bandana11"},
{18902, "Bandana12"},
{18903, "Bandana13"},
{18904, "Bandana14"},
{18905, "Bandana15"},
{18906, "Bandana16"},
{18907, "Bandana17"},
{18908, "Bandana18"},
{18909, "Bandana19"},
{18910, "Bandana20"},
{18911, "Mask1"},
{18912, "Mask2"},
{18913, "Mask3"},
{18914, "Mask4"},
{18915, "Mask5"},
{18916, "Mask6"},
{18917, "Mask7"},
{18918, "Mask8"},
{18919, "Mask9"},
{18920, "Mask10"},
{18921, "Beret1"},
{18922, "Beret2"},
{18923, "Beret3"},
{18924, "Beret4"},
{18925, "Beret5"},
{18926, "Sombrero1"},
{18927, "Sombrero2"},
{18928, "Sombrero3"},
{18929, "Sombrero4"},
{18930, "Sombrero5"},
{18931, "Sombrero6"},
{18932, "Sombrero7"},
{18933, "Sombrero8"},
{18934, "Sombrero9"},
{18935, "Sombrero10"},
{18936, "Chaleco1"},
{18937, "Chaleco2"},
{18938, "Chaleco3"},
{18939, "Gorra1"},
{18940, "Gorra2"},
{18941, "Gorra3"},
{18942, "Gorra4"},
{18943, "Gorra5"},
{18944, "Sombrero1"},
{18945, "Sombrero2"},
{18946, "Sombrero3"},
{18947, "Sombrero1"},
{18948, "Sombrero2"},
{18949, "Sombrero3"},
{18950, "Sombrero4"},
{18951, "Sombrero5"},
{18952, "CascoBox"},
{18953, "Gorra1"},
{18954, "Gorra2"},
{18955, "Gorra3"},
{18956, "Gorra4"},
{18957, "Gorra5"},
{18958, "Gorra6"},
{18959, "Gorra7"},
{18960, "Gorra8"},
{18961, "Gorra9"},
{18962, "Sombrero"},
{18964, "SkullyGorra"},
{18965, "SkullyGorra2"},
{18966, "SkullyGorra3"},
{18967, "HatMan1"},
{18968, "HatMan2"},
{18969, "HatMan3"},
{18970, "HatTiger"},
{18971, "HatCool1"},
{18972, "HatCool2"},
{18973, "HatCool3"},
{18974 ,"MaskZorro"},
{18976, "CascoMoto-1"},
{18977, "CascoMoto-2"},
{18978, "CascoMoto-3"},
{18979, "CascoMoto-4"},
{19006, "Lentes1"},
{19007, "Lentes2"},
{19008, "Lentes3"},
{19009, "Lentes4"},
{19010, "Lentes5"},
{19011, "Lentes6"},
{19012, "Lentes7"},
{19013, "Lentes8"},
{19014, "Lentes9"},
{19015, "Lentes10"},
{19016, "Lentes11"},
{19017, "Lentes12"},
{19018, "Lentes13"},
{19019, "Lentes14"},
{19020, "Lentes15"},
{19021, "Lentes16"},
{19022, "Lentes17"},
{19023, "Lentes18"},
{19024, "Lentes19"},
{19025, "Lentes20"},
{19026, "Lentes21"},
{19027, "Lentes22"},
{19028, "Lentes23"},
{19029, "Lentes24"},
{19030, "Lentes25"},
{19031, "Lentes26"},
{19032, "Lentes27"},
{19033, "Lentes28"},
{19034, "Lentes29"},
{19035, "Lentes30"},
{19036, "HockeyMask1"},
{19037, "HockeyMask2"},
{19038, "HockeyMask3"},
{19039, "Reloj1"},
{19040, "Reloj2"},
{19041, "Reloj3"},
{19042, "Reloj4"},
{19043, "Reloj5"},
{19044, "Reloj6"},
{19045, "Reloj7"},
{19046, "Reloj8"},
{19047, "Reloj9"},
{19048, "Reloj10"},
{19049, "Reloj11"},
{19050, "Reloj12"},
{19051, "Reloj13"},
{19052, "Reloj14"},
{19053, "Reloj15"},
{19064, "Santa-1"},
{19065, "Santa-2"},
{19066, "Santa-3"},
{19067, "HoodyHat1"},
{19068, "HoodyHat2"},
{19069, "HoodyHat3"},
{19078, "Loro-1"},
{19079, "Loro-2"},
{19085, "ParcheOjo"},
{19090, "PomPomAzul"},
{19091, "PomPomRojo"},
{19092, "PomPomVerde"},
{19094, "BurgerShotHat"},
{19095, "CowboyHat1"},
{19096, "CowboyHat3"},
{19097, "CowboyHat4"},
{19098, "CowboyHat5"},
{19101, "ArmyHelmet1"},
{19102, "ArmyHelmet2"},
{19103, "ArmyHelmet3"},
{19104, "ArmyHelmet4"},
{19105, "ArmyHelmet5"},
{19106, "ArmyHelmet6"},
{19107, "ArmyHelmet7"},
{19108, "ArmyHelmet8"},
{19109, "ArmyHelmet9"},
{19110, "ArmyHelmet10"},
{19111, "ArmyHelmet11"},
{19112, "ArmyHelmet12"},
{19113, "SillyHelmet1"},
{19114, "SillyHelmet2"},
{19115, "SillyHelmet3"},
{19116, "PlainHelmet1"},
{19117, "PlainHelmet2"},
{19118, "PlainHelmet3"},
{19119, "PlainHelmet4"},
{19120, "PlainHelmet5"},
{19137, "CluckinBellHat"},
{19163, "GimpMask"},
{19516, "Cabello1"},
{19517, "Cabello2"},
{19518, "Cabello3"},
{19519, "Cabello4"},
{19520, "Cabello5"},
{19521, "Cabello6"}
};

main()
{
	print("\n-==================== *** ====================-");
	print("        Miami - RolePlay 3.6");
	print("  CodeMan <-> Texter <-> Andrew <-> JunkBuster");
	print("-==================== *** ====================-");
	print("Todos los derechos reservados. Miami Roleplay 2013\n");
}

// -=== AntiCheat (Solo Funciones Abajo) =====-
#define GetPlayerMoney GetScriptMoney
#define ResetPlayerMoney MoneyResetToPlayer
#define GivePlayerMoney MoneyGiveToPlayer
#define SetPlayerMoney SetMoneyToPlayer
#define SetPlayerArmour GiveArmorToPlayer
// -=========================-
public DestruirNeon(vehid){
		DestroyDynamicObject(neon[vehid][0]);   DestroyDynamicObject(neon[vehid][1]);
        DestroyDynamicObject(neon[vehid][2]);   DestroyDynamicObject(neon[vehid][3]);
		return 1;
	}
public ShowNeon(playerid, vehid){
	if(IsAPlane(vehid) || IsABike(vehid)) return 1;
		new slotveh = GetVehicleSlot(playerid, vehid);
        if(PlayerVehicleInfo[playerid][slotveh][pvNeon] == 2){
                neon[vehid][0] = CreateDynamicObject(18648,0,0,0,0,0,0);  neon[vehid][1] = CreateDynamicObject(18648,0,0,0,0,0,0);
                neon[vehid][2] = CreateDynamicObject(18648,0,0,0,0,0,0);  neon[vehid][3] = CreateDynamicObject(18648,0,0,0,0,0,0);
                AttachDynamicObjectToVehicle(neon[vehid][0], vehid, -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][1], vehid, 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][2], vehid, 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
                AttachDynamicObjectToVehicle(neon[vehid][3], vehid, 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
          }
        if(PlayerVehicleInfo[playerid][slotveh][pvNeon] == 3){
                neon[vehid][0] = CreateDynamicObject(18649,0,0,0,0,0,0);  neon[vehid][1] = CreateDynamicObject(18649,0,0,0,0,0,0);
                neon[vehid][2] = CreateDynamicObject(18649,0,0,0,0,0,0);  neon[vehid][3] = CreateDynamicObject(18649,0,0,0,0,0,0);
                AttachDynamicObjectToVehicle(neon[vehid][0], vehid, -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][1], vehid, 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][2], vehid, 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
                AttachDynamicObjectToVehicle(neon[vehid][3], vehid, 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
        }
        if(PlayerVehicleInfo[playerid][slotveh][pvNeon] == 4){
                neon[vehid][0] = CreateDynamicObject(18652,0,0,0,0,0,0);  neon[vehid][1] = CreateDynamicObject(18652,0,0,0,0,0,0);
                neon[vehid][2] = CreateDynamicObject(18652,0,0,0,0,0,0);  neon[vehid][3] = CreateDynamicObject(18652,0,0,0,0,0,0);
                AttachDynamicObjectToVehicle(neon[vehid][0], vehid, -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][1], vehid, 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][2], vehid, 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
                AttachDynamicObjectToVehicle(neon[vehid][3], vehid, 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
        }
        if(PlayerVehicleInfo[playerid][slotveh][pvNeon] == 5){
                neon[vehid][0] = CreateDynamicObject(18650,0,0,0,0,0,0);  neon[vehid][1] = CreateDynamicObject(18650,0,0,0,0,0,0);
                neon[vehid][2] = CreateDynamicObject(18650,0,0,0,0,0,0);  neon[vehid][3] = CreateDynamicObject(18650,0,0,0,0,0,0);
                AttachDynamicObjectToVehicle(neon[vehid][0], vehid, -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][1], vehid, 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][2], vehid, 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
                AttachDynamicObjectToVehicle(neon[vehid][3], vehid, 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
        }
        if(PlayerVehicleInfo[playerid][slotveh][pvNeon] == 6){
				neon[vehid][0] = CreateDynamicObject(18647,0,0,0,0,0,0); neon[vehid][1] = CreateDynamicObject(18647,0,0,0,0,0,0);
                neon[vehid][2] = CreateDynamicObject(18647,0,0,0,0,0,0); neon[vehid][3] = CreateDynamicObject(18647,0,0,0,0,0,0);
                AttachDynamicObjectToVehicle(neon[vehid][0], vehid, -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][1], vehid, 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][2], vehid, 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
                AttachDynamicObjectToVehicle(neon[vehid][3], vehid, 0.034999, -2.034998, -0.629999, 0.000000, 0.000000, -88.589958);
        }
        if(PlayerVehicleInfo[playerid][slotveh][pvNeon] == 7){
                neon[vehid][0] = CreateDynamicObject(18651,0,0,0,0,0,0);    neon[vehid][1] = CreateDynamicObject(18651,0,0,0,0,0,0);
                neon[vehid][2] = CreateDynamicObject(18651,0,0,0,0,0,0);    neon[vehid][3] = CreateDynamicObject(18651,0,0,0,0,0,0);
                AttachDynamicObjectToVehicle(neon[vehid][0], vehid, -0.909999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][1], vehid, 0.914999, -0.009999, -0.649999, 0.000000, 0.000000, 0.000000);
                AttachDynamicObjectToVehicle(neon[vehid][2], vehid, 0.034999, 2.225003, -0.629999, 0.000000, 0.000000, -88.589958);
        }
        return 1;
	}
stock GetVehicleSlot(playerid, vehicleid){
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++){
	if(PlayerVehicleInfo[playerid][v][pvID] == vehicleid){
		 return v;
		}       }
	return -1;
}
stock GetVehicleOwner(vehicleid){
   for(new i=0; i<MAX_PLAYERS; i++){
   for(new v = 0; v < MAX_PLAYERVEHICLES; v++){
	if(PlayerVehicleInfo[i][v][pvID] == vehicleid){
			return i;
			}      }       }
	return -1;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new Float:cx, Float:cy, Float:cz;

	if(LSPD_IsACopCar(vehicleid) && !ispassenger)
	{
		if(Team_LSPD(playerid)) return 1;
  		else GetPlayerPos(playerid, cx, cy, cz);	{ SetPlayerPos(playerid, cx,  cy, cz); return 1; }
	}
	return 0;
}
public AttVelocimetro(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    PlayerTextDrawSetPreviewModel(playerid, TextVelocimetroP[playerid][2], GetVehicleModel(GetPlayerVehicleID(playerid)));
		new NV[30]; format(NV, sizeof(NV), "%s", NomeVeiculo(GetPlayerVehicleID(playerid)));
        PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][0], NV);
		new StrCombustivel[20]; format(StrCombustivel, sizeof(StrCombustivel), "%dL", Gas[GetPlayerVehicleID(playerid)]);
        PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][1], StrCombustivel);
        new Float:VidaV; GetVehicleHealth(GetPlayerVehicleID(playerid), VidaV);
        //VidaV * 100.0 / 1000.0;
        new Float:V1 = floatmul(VidaV, 100.0);
        new Float:V2 = floatdiv(V1, 1000.0);
        new StrPorcentagem[30]; format(StrPorcentagem, sizeof(StrPorcentagem), " %0.0f%s", V2, "%");
        PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][4], StrPorcentagem);
		new VDV[4]; format(VDV, sizeof(VDV), "%d", VelocidadeDoVeiculo(GetPlayerVehicleID(playerid)));
		PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][3], VDV);
		//
		new idcar = GetPlayerVehicleID(playerid);
	    SetTimerEx("AttVelocimetro", 200, false, "d", playerid);
	    new a = random(50);
	    if(a == 0)
	    {
	        if(engineOn[idcar] == 1){
	        Gas[GetPlayerVehicleID(playerid)] --;
	        return 1;
	        }
	    }
	    if(Gas[GetPlayerVehicleID(playerid)] <= 0){
            new lights,alarm,doors,bonnet,boot,objective;
		   	SetVehicleParamsEx(idcar,0,lights,alarm,doors,bonnet,boot,objective);
			engineOn[idcar] = false;
			gEngine[playerid] = 0;
     	}
	}
	else
	{
	for(new z; z < 11; z++)
	{
	    TextDrawHideForPlayer(playerid, TextVelocimetro[z]);
	    }
		for(new t; t < 5; t++)
		{
		    PlayerTextDrawHide(playerid, TextVelocimetroP[playerid][t]);
		}
	}
	return 1;
}

Team_LSPD(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	1)		{	return 1;	}
		else if(leader	==	1)	{	return 1;	}
	}
	return 0;
}

Team_NG(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	3)		{	return 1;	}
		else if(leader	==	3)	{	return 1;	}
	}
	return 0;
}

Team_Mecanicos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	7)		{	return 1;	}
		else if(leader	==	7)	{	return 1;	}
	}
	return 0;
}

Team_SAMUR(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	4)		{	return 1;	}
		else if(leader	==	4)	{	return 1;	}
	}
	return 0;
}

Team_Groove(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	9)		{	return 1;	}
		else if(leader	==	9)	{	return 1;	}
	}
	return 0;
}

Team_LK(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	10)		{	return 1;	}
		else if(leader	==	10)	{	return 1;	}
	}
	return 0;
}	

Mafia_Italiana(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	12)		{	return 1;	}
		else if(leader	==	12)	{	return 1;	}
	}
	return 0;
}

Hitman(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	5)		{	return 1;	}
		else if(leader	==	5)	{	return 1;	}
	}
	return 0;
}

Mafia_Rusa(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	11)		{	return 1;	}
		else if(leader	==	11)	{	return 1;	}
	}
	return 0;
}

Mafioso(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	11 || member ==	12)		{	return 1;	}
		else if(leader	==	11 || leader ==	12)	{	return 1;	}
	}
	return 0;
}

Pandilleros(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	9 || member	==	10)		{	return 1;	}
		else if(leader	==	9 || leader	==	10)	{	return 1;	}
	}
	return 0;
}

Journalist(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	6)		{	return 1;	}
		else if(leader == 6)	{	return 1;	}
	}
	return 0;
}

Gobierno(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	8)		{	return 1;	}
		else if(leader == 8)	{	return 1;	}
	}
	return 0;
}

Presidente(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
		if(leader == 8)	{	return 1;	}
	}
	return 0;
}

IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	1 || member	==	3)		{	return 1;	}
		else if(leader	==	1 || leader	==	3)	{	return 1;	}
	}
	return 0;
}

Terroristas(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==2)		{	return 1;	}
		else if(leader==2)	{	return 1;	}
	}
	return 0;
}

FacRadio(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 1 || member == 2 || member == 3 || member	== 4 || member == 5 || member == 6 || member == 7 || member == 8)		{	return 1;	}
		else if(leader == 1 || leader == 2 || leader == 3 || leader == 4 || leader == 5 || leader == 6 || leader == 7 || leader == 8)	{	return 1;	}
	}
	return 0;
}

IsAtDealership(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(30.0,playerid,544.5143,-1280.5714,17.2482)) { return 1; }
	    else if(PlayerToPoint(30.0,playerid,1045.3408,-905.2751,42.6273)) { return 1; }
	    else if(PlayerToPoint(50.0,playerid,2152.0850,-1150.7964,24.1398)) { return 1; }
	}
	return 0;
}

IsAtClothShop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(30.0,playerid,211.7609,-7.6523,1001.2109)) { return 1; }
	    else if(PlayerToPoint(20.0,playerid,207.7558,-103.3743,1005.2578)) { return 1; }
	}
	return 0;
}

IsAt247(playerid){
    if(IsPlayerConnected(playerid)){
		if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573)) { return 1; }
	}
	return 0;
}

IsAtATM(playerid){
    if(IsPlayerConnected(playerid)){
		if(PlayerToPoint(2.0,playerid,1144.09912109,-1766.47509766,13.42406273)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1269.66125488,-1323.76599121,13.40214443)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2823.22656250,-1593.80871582,11.00387192)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1589.39196777,-2295.21191406,13.46932220)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1591.40454102,-2295.21191406,13.46932220)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1593.41723633,-2295.21191406,13.46932220)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,450.53472900,-1794.50781250,5.43714857)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1415.19128418,-1020.33685303,23.73026848)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1417.67700195,-1020.33593750,23.73026848)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1187.0133,-1372.0013,13.5532)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1476.8065,-1778.5776,15.3706)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,800.3113,-1419.8861,1016.4688)) { return 1; }
		else if(PlayerToPoint(4.0,playerid,2389.6565,2463.1489,-18.9096)) { return 1; }
	}
	return 0;
}

IsAtBank(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(20.0,playerid,280.7292,-1624.5010,-72.2500)) { return 1; }
		if(PlayerToPoint(20.0,playerid,282.4917,-1624.5018,-72.2500)) { return 1; }
		if(PlayerToPoint(20.0,playerid,284.6435,-1624.5477,-72.2500)) { return 1; }
	}
	return 0;
}

IsAtBowling(playerid){
	if(IsPlayerConnected(playerid)){
	    if(PlayerToPoint(1.0,playerid, -2355.6067,920.6121,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.7280,914.9425,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.5491,910.4331,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.8269,905.1210,93.8007)) return 1;
	}
	return 0;
}

IsAtGasStation(playerid){
    if(IsPlayerConnected(playerid)){
  		if(PlayerToPoint(8.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(20.0,playerid,1767.0876,-1758.4585,13.5423))		return 1;
		else if(PlayerToPoint(8.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(8.0,playerid,-1609.7958,-2718.2048,48.5391))    return 1;
		else if(PlayerToPoint(8.0,playerid,2114.5444,920.1169,10.8203) || PlayerToPoint(8.0,playerid,2640.6272,1106.5349,10.8203))      return 1;
		else if(PlayerToPoint(8.0,playerid,1625.0463,-2167.6428,13.4402) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))     return 1;
		else if(PlayerToPoint(8.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(8.0,playerid,614.9333,1689.7418,6.6968))       return 1;
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(8.0,playerid,70.3882,1218.6783,18.5165))      return 1;
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(8.0,playerid,-1327.7218,2678.8723,50.0625))     return 1;
		else if(PlayerToPoint(8.0,playerid,1637.0149,2331.5129,10.8722) || PlayerToPoint(8.0,playerid,1636.6686,2325.8711,10.8722))     return 1;
		else if(PlayerToPoint(8.0,playerid,1636.6140,2320.6423,10.8722) || PlayerToPoint(8.0,playerid,1595.5337,2198.9404,10.8203))     return 1;
		else if(PlayerToPoint(8.0,playerid,656.4265,-559.8610,16.5015) || PlayerToPoint(8.0,playerid,656.3797,-570.4138,16.5015))       return 1;
		else if(PlayerToPoint(8.0,playerid,1099.2325,-350.4425,73.9922) || PlayerToPoint(8.0,playerid,1610.7238,-2172.8132,13.6000))    return 1;
		else if(PlayerToPoint(8.0,playerid,1766.4260,-1763.9540,13.7926) || PlayerToPoint(8.0,playerid,1766.4431,-1753.5789,13.7926))   return 1;
		else if(PlayerToPoint(8.0,playerid,1641.4966,-2169.0647,13.8859) || PlayerToPoint(8.0,playerid,1632.1943,-2169.0803,13.8859))   return 1;
	}
	return 0;
}

IsAtTaller(playerid)
{
    if(IsPlayerConnected(playerid)){
  		if(PlayerToPoint(15.0,playerid,2141.9529,-2255.8174,13.3001))   	 return 1;
		else if(PlayerToPoint(40.0,playerid,2150.1597,-2248.4607,13.2992))   return 1;
		else if(PlayerToPoint(40.0,playerid,2157.8130,-2268.4658,13.3036))   return 1;
    }
	return 0;
}

IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid)){
        if(PlayerToPoint(10.0,playerid,496.3752,-76.0410,998.7578))         return 1;
		else if(PlayerToPoint(10.0,playerid,499.9703,-20.3358,1000.6797))   return 1;
		else if(PlayerToPoint(10.0,playerid,802.8769,-1369.1670,1014.5603)) return 1;
		else if(PlayerToPoint(10.0,playerid,1215.9480,-13.3519,1000.9219))  return 1;
		else if(PlayerToPoint(10.0,playerid,1259.2834,-791.0306,1084.0078)) return 1;
		else if(PlayerToPoint(10.0,playerid,681.2731,-453.8256,-25.6172))   return 1;
		else if(PlayerToPoint(10.0,playerid,2246.8252,1661.6531,6.9099))    return 1;
		else if(PlayerToPoint(25.0,playerid,1920.0979,-1865.1298,13.6559))  return 1;
		else if(PlayerToPoint(10.0,playerid,1392.5297,-1893.1754,17.4266))  return 1;
		else if(PlayerToPoint(15.0,playerid,1311.1902,-890.2754,46.2558))   return 1;
		else if(PlayerToPoint(15.0,playerid,681.6176,-456.7339,-25.6172))   return 1;
		else if(PlayerToPoint(15.0,playerid,447.4146,-84.4904,999.5547))    return 1;
		else if(PlayerToPoint(15.0,playerid,1009.0618,-1355.6884,14.9562))  return 1;
		else if(PlayerToPoint(15.0,playerid,1155.7614,-1330.8407,-12.4844)) return 1;
		else if(PlayerToPoint(10.0,playerid,2147.5752,-1730.2357,13.5434))  return 1;
		else if(PlayerToPoint(15.0,playerid,2792.3904,2406.9988,1240.5358)) return 1;
	}
	return 0;
}
/// Tristre
LSPD_IsACopCar(carid)
{
	for(new v = 0; v < sizeof(LSPD_IsACopCarros); v++)
	{
	    if(carid == LSPD_IsACopCarros[v]) return 1;
	}
	return 0;
}
Taxi_Vehicle(carid)
{
	for(new v = 0; v < sizeof(Taxi_Vehiculos); v++)
	{
	    if(carid == Taxi_Vehiculos[v]) return 1;
	}
	return 0;
}
SAMD_Vehicle(carid)
{
	for(new v = 0; v < sizeof(SAMD_Vehiculos); v++)
	{
	    if(carid == SAMD_Vehiculos[v]) return 1;
	}
	return 0;
}
GS_Vehicle(carid)
{
	for(new v = 0; v < sizeof(GS_Vehiculos); v++)
	{
	    if(carid == GS_Vehiculos[v]) return 1;
	}
	return 0;
}
LK_Vehicle(carid)
{
	for(new v = 0; v < sizeof(LK_Vehiculos); v++)
	{
	    if(carid == LK_Vehiculos[v]) return 1;
	}
	return 0;
}
Mecanico_Vehicle(carid)
{
	for(new v = 0; v < sizeof(Mecanico_Vehiculos); v++)
	{
	    if(carid == Mecanico_Vehiculos[v]) return 1;
	}
	return 0;
}
Ita_Vehicle(carid)
{
	for(new v = 0; v < sizeof(Ita_Vehiculos); v++)
	{
	    if(carid == Ita_Vehiculos[v]) return 1;
	}
	return 0;
}
Rus_Vehicle(carid)
{
	for(new v = 0; v < sizeof(Rus_Vehiculos); v++)
	{
	    if(carid == Rus_Vehiculos[v]) return 1;
	}
	return 0;
}
Gobierno_Vehicle(carid)
{
	for(new v = 0; v < sizeof(Gobierno_Vehiculos); v++)
	{
	    if(carid == Gobierno_Vehiculos[v]) return 1;
	}
	return 0;
}
CNN_Vehicle(carid)
{
	for(new v = 0; v < sizeof(CNN_Vehiculos); v++)
	{
	    if(carid == CNN_Vehiculos[v]) return 1;
	}
	return 0;
}
IsABasurero(carid)
{
	for(new v = 0; v < sizeof(IsABasurero_Vehiculos); v++)
	{
	    if(carid == IsABasurero_Vehiculos[v]) return 1;
	}
	return 0;
}
IsAPlane(carid)
{
	for(new v = 0; v < sizeof(IsAPlane_Vehiculos); v++)
	{
	    if(carid == IsAPlane_Vehiculos[v]) return 1;
	}
	return 0;
}
Harvest_Vehicle(carid)
{
	for(new v = 0; v < sizeof(Harvest_Vehiculos); v++)
	{
	    if(carid == Harvest_Vehiculos[v]) return 1;
	}
	return 0;
}
IsAPizzabike(carid)
{
	for(new v = 0; v < sizeof(IsAPizzabike_Vehiculos); v++)
	{
	    if(carid == IsAPizzabike_Vehiculos[v]) return 1;
	}
	return 0;
}
SAEM_Vehicle(carid)
{
	for(new v = 0; v < sizeof(SAEM_Vehiculos); v++)
	{
	    if(carid == SAEM_Vehiculos[v]) return 1;
	}
	return 0;
}
/*Hitman_Vehicle(carid)
{
	for(new v = 0; v < sizeof(Hitman_Vehiculos); v++)
	{
	    if(carid == Hitman_Vehiculos[v]) return 1;
	}
	return 0;
}*/
IsACamion(carid)
{
	for(new v = 0; v < sizeof(IsACamion_Vehiculos); v++)
	{
	    if(carid == IsACamion_Vehiculos[v]) return 1;
	}
	return 0;
}
IsABoatFish(carid)
{
	for(new v = 0; v < sizeof(IsABoatFish_Vehiculos); v++)
	{
	    if(carid == IsABoatFish_Vehiculos[v]) return 1;
	}
	return 0;
}
IsATerroristas(carid)
{
	for(new v = 0; v < sizeof(IsATerroristas_Vehiculos); v++)
	{
	    if(carid == IsATerroristas_Vehiculos[v]) return 1;
	}
	return 0;
}
IsATrailer(carid)
{
	for(new v = 0; v < sizeof(IsATrailer_Vehiculos); v++)
	{
	    if(carid == IsATrailer_Vehiculos[v]) return 1;
	}
	return 0;
}
Hire_Vehicle(carid)
{
	for(new v = 0; v < sizeof(Hire_Vehiculos); v++)
	{
	    if(carid == Hire_Vehiculos[v]) return 1;
	}
	return 0;
}
IsATrain(carid)
{
	for(new v = 0; v < sizeof(IsATrain_Vehiculos); v++)
	{
	    if(carid == IsATrain_Vehiculos[v]) return 1;
	}
	return 0;
}

Faction_One(carid)          {   if(carid == Faction_Vehicle[0][0] || carid == Faction_Vehicle[0][1] || carid == Faction_Vehicle[0][2] || carid == Faction_Vehicle[0][3] || carid == Faction_Vehicle[0][4] || carid == Faction_Vehicle[0][5]) {    return 1;   }   return 0;   }
Faction_Two(carid)          {   if(carid == Faction_Vehicle[1][0] || carid == Faction_Vehicle[1][1] || carid == Faction_Vehicle[1][2] || carid == Faction_Vehicle[1][3] || carid == Faction_Vehicle[1][4] || carid == Faction_Vehicle[1][5]) {    return 1;   }   return 0;   }
Faction_Three(carid)        {   if(carid == Faction_Vehicle[2][0] || carid == Faction_Vehicle[2][1] || carid == Faction_Vehicle[2][2] || carid == Faction_Vehicle[2][3] || carid == Faction_Vehicle[2][4] || carid == Faction_Vehicle[2][5]) {    return 1;   }   return 0;   }
Faction_Four(carid)         {   if(carid == Faction_Vehicle[3][0] || carid == Faction_Vehicle[3][1] || carid == Faction_Vehicle[3][2] || carid == Faction_Vehicle[3][3] || carid == Faction_Vehicle[3][4] || carid == Faction_Vehicle[3][5]) {    return 1;   }   return 0;   }
Faction_Five(carid)         {   if(carid == Faction_Vehicle[4][0] || carid == Faction_Vehicle[4][1] || carid == Faction_Vehicle[4][2] || carid == Faction_Vehicle[4][3] || carid == Faction_Vehicle[4][4] || carid == Faction_Vehicle[4][5]) {    return 1;   }   return 0;   }

IsABike(carid)
{
	if(GetVehicleModel(carid) == 509 || GetVehicleModel(carid) ==  481|| GetVehicleModel(carid) == 510)
	{
		return 1;
	}
	return 0;
}
maps(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(5.0,playerid,1544.6503,-1681.0081,13.5588)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1738.1191,-1862.8081,13.5758)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1480.902587,-1812.145996,2982.906250)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1187.2397, -1308.5261, 13.36)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,981.88, -1157.62, 23.86)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1195.7616,-919.6393,43.1544)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,562.7845,-1250.2927,17.2599)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,805.9656,-1387.7549,13.5602)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,159.1252,-1946.8750,3.7734)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1309.5337,-912.6902,38.6741)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,1756.7098,-1147.4298,23.9336)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1829.0646,-1679.4893,13.5469)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1934.2709,-1761.6580,13.5469)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1205.8312,-1842.7323,13.5432)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,844.4606,-2059.8254,12.8672)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1355.6024,-1739.5306,13.5469)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,2047.2003,-1920.9122,13.5469)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1832.5538,-1845.5059,13.1817)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1719.21936,-1888.48071,13.36670)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1711.10828,-1888.84167,13.36670)) { return 1; }
		else if(PlayerToPoint(3.0,playerid,1499.56177, -1740.60071, 13.346)) { return 1; } // Delante del Ayuntamiento.
		else if(PlayerToPoint(3.0,playerid,1954.05957, -2178.77124, 13.360)) { return 1; } // Aeropuerto.
	}
	return 0;
}

public OnPlayerConnect(playerid)
{
	// Login
    TextDrawShowForPlayer(playerid, Text:Textdraw0);
	TextDrawShowForPlayer(playerid, Text:Textdraw1);
	TextDrawShowForPlayer(playerid, Text:Textdraw2);
	TextDrawShowForPlayer(playerid, Text:Textdraw3);
	
	ResetPlayerVariables(playerid);
	new plname[MAX_PLAYER_NAME], string[64];
	GetPlayerName(playerid, plname, sizeof(plname));
	new namestring = strfind(plname, "_", true);
 	if(namestring == -1)
	{
		Message(playerid, COLOR_WHITE, "{2471A3}-=== Miami Roleplay ===-");
		Message(playerid, COLOR_WHITE, "Su nombre debe ser en el formato Nombre_Apellido. Ejemplo: Mario_Perez");
		KickTimer(playerid);
		return 1;
	}
	TextVelocimetroP[playerid][0] = CreatePlayerTextDraw(playerid, 497.000000, 378.000000, "Sultan");
	PlayerTextDrawFont(playerid, TextVelocimetroP[playerid][0], 2);
	PlayerTextDrawLetterSize(playerid, TextVelocimetroP[playerid][0], 0.295830, 1.299998);
	PlayerTextDrawTextSize(playerid, TextVelocimetroP[playerid][0], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextVelocimetroP[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, TextVelocimetroP[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, TextVelocimetroP[playerid][0], 1);
	PlayerTextDrawColor(playerid, TextVelocimetroP[playerid][0], 0x2471A3);
	PlayerTextDrawBackgroundColor(playerid, TextVelocimetroP[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, TextVelocimetroP[playerid][0], 50);
	PlayerTextDrawUseBox(playerid, TextVelocimetroP[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, TextVelocimetroP[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, TextVelocimetroP[playerid][0], 0);

	TextVelocimetroP[playerid][1] = CreatePlayerTextDraw(playerid, 578.000000, 412.000000, "_100L");
	PlayerTextDrawFont(playerid, TextVelocimetroP[playerid][1], 2);
	PlayerTextDrawLetterSize(playerid, TextVelocimetroP[playerid][1], 0.262499, 1.350000);
	PlayerTextDrawTextSize(playerid, TextVelocimetroP[playerid][1], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextVelocimetroP[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, TextVelocimetroP[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, TextVelocimetroP[playerid][1], 1);
	PlayerTextDrawColor(playerid, TextVelocimetroP[playerid][1], 0x2471A3);
	PlayerTextDrawBackgroundColor(playerid, TextVelocimetroP[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, TextVelocimetroP[playerid][1], 50);
	PlayerTextDrawUseBox(playerid, TextVelocimetroP[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, TextVelocimetroP[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, TextVelocimetroP[playerid][1], 0);

/*	TextVelocimetroP[playerid][2] = CreatePlayerTextDraw(playerid, 536.000000, 316.000000, "");
	PlayerTextDrawLetterSize(playerid, TextVelocimetroP[playerid][2], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TextVelocimetroP[playerid][2], 90.000000, 90.000000);
	PlayerTextDrawAlignment(playerid, TextVelocimetroP[playerid][2], 1);
	PlayerTextDrawColor(playerid, TextVelocimetroP[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, TextVelocimetroP[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, TextVelocimetroP[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, TextVelocimetroP[playerid][2], 0);
	PlayerTextDrawFont(playerid, TextVelocimetroP[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, TextVelocimetroP[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, TextVelocimetroP[playerid][2], 0);
 	PlayerTextDrawSetPreviewModel(playerid, TextVelocimetroP[playerid][2], 560);
	PlayerTextDrawSetPreviewRot(playerid, TextVelocimetroP[playerid][2], -20.000000, 0.000000, -40.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextVelocimetroP[playerid][2], 1, 1);
*/
	TextVelocimetroP[playerid][3] = CreatePlayerTextDraw(playerid, 573.000000, 399.000000, "220");
	PlayerTextDrawFont(playerid, TextVelocimetroP[playerid][3], 2);
	PlayerTextDrawLetterSize(playerid, TextVelocimetroP[playerid][3], 0.266665, 1.399999);
	PlayerTextDrawTextSize(playerid, TextVelocimetroP[playerid][3], 400.000000, 9.000000);
	PlayerTextDrawSetOutline(playerid, TextVelocimetroP[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, TextVelocimetroP[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, TextVelocimetroP[playerid][3], 2);
	PlayerTextDrawColor(playerid, TextVelocimetroP[playerid][3], 0x2471A3);
	PlayerTextDrawBackgroundColor(playerid, TextVelocimetroP[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, TextVelocimetroP[playerid][3], 50);
	PlayerTextDrawUseBox(playerid, TextVelocimetroP[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, TextVelocimetroP[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, TextVelocimetroP[playerid][3], 0);

	TextVelocimetroP[playerid][4] = CreatePlayerTextDraw(playerid, 582.000000, 365.000000, "_100%");
	PlayerTextDrawFont(playerid, TextVelocimetroP[playerid][4], 2);
	PlayerTextDrawLetterSize(playerid, TextVelocimetroP[playerid][4], 0.299997, 1.399996);
	PlayerTextDrawTextSize(playerid, TextVelocimetroP[playerid][4], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextVelocimetroP[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, TextVelocimetroP[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, TextVelocimetroP[playerid][4], 1);
	PlayerTextDrawColor(playerid, TextVelocimetroP[playerid][4], 0x2471A3);
	PlayerTextDrawBackgroundColor(playerid, TextVelocimetroP[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, TextVelocimetroP[playerid][4], 50);
	PlayerTextDrawUseBox(playerid, TextVelocimetroP[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, TextVelocimetroP[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, TextVelocimetroP[playerid][4], 0);

	RemoveObjects(playerid);
	for (new c=0; c<12; c++) { ScriptWeapons[playerid][c] = 0; ScriptAmmo[playerid][c] = 0; }
	for(new x=0; x < SELECTION_ITEMS; x++) {	gSelectionItems[playerid][x] = PlayerText:INVALID_TEXT_DRAW;	}
	SetPlayerColor(playerid,COLOR_GRAD2);
	SetPVarString(playerid, "pPassword", "0") ;
	CameraLogin(playerid);
	ClearChatbox(playerid, 15);
	format(string, sizeof(string), "users/%s.ini", plname);
    if(INI_Exist(string))	ShowLoginDialog(playerid, DLOGIN);
    else                    ShowRegisterDialog(playerid, DREGISTER);
    SetPlayerVirtualWorld(playerid, 20);
    return 1;
}

INI_Exist(filename[]) {
	if (fexist(filename)) return true;
	return false;
}

ResetPlayerVariables(playerid)
{
    gHeaderTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;				gBackgroundTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gCurrentPageTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;		gNextButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gPrevButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;         gTotalItems[playerid] = 0;
    gOoc[playerid] = 0;                 gFam[playerid] = 0;                 gNew[playerid] = 0;                     gBcmd[playerid] = 0;
	NoAntiCheat[playerid] = 0;      	Tied[playerid] = 0;     			ScriptMoney[playerid] = 0;      		ScriptArmor[playerid] = 0;      	HasArmor[playerid] = 0;
    CellTime[playerid] = 0;         	PlayerDrunk[playerid] = 0;  		PlayerDrunkTime[playerid] = 0;  		AFK[playerid] = 0;              	AFKTime[playerid] = 0;
	UsedFind[playerid] = 0;         	TransportTime[playerid] = 0;    	TransportDriver[playerid] = 999;    	TransportCost[playerid] = 0;    	TarifaTaxi[playerid] = 0;
 	TransportDuty[playerid] = 0;    	gPlayerLogged[playerid] = 0;    	AdminChat[playerid] = 0;            	HireKey[playerid] = 999;        	HireMinutes[playerid] = 0;
 	MPToAdmin[playerid][0] = 999;   	MPToAdmin[playerid][1] = 999;   	MPToAdmin[playerid][2] = 999;   		MPToAdmin[playerid][3] = 999;   	MPToAdmin[playerid][4] = 999;
  	PhoneOnline[playerid] = 0;      	PFrecuencia[playerid] = 0;      	PaintballType[playerid] = 0;        	JustReported[playerid] = 0;     	MPToAdmin[playerid][5] = 999;
	MensajeMuriendo[playerid] = 0; 		ForbidHandsUp[playerid]=0; 			Left4Life[playerid] = 0; 				MsgL4L[playerid]=0; 				Rescued[playerid] = 0;
 	CallCost[playerid] = 0;				PlayerDescargando[playerid] = 0;	BasuraPunto[playerid] = 0;				PlayerIsRuta[playerid] = 0;			Mobile[playerid] = 255;
	PlayerCargando[playerid] = 0;   	Mercancia[playerid] = 0;			First_Spawn[playerid] = 1;				RecentlyShot[playerid] = 0;			gEngine[playerid] = 0;
	UsingDrugs[playerid] = 0; 			TimerBasura[playerid] = 0;			UsingEctasy[playerid] = 0; 				EctasyEffect[playerid] = 0; 		UsingRitalin[playerid] = 0;
	RitalinEffect[playerid] = 0; 		UsingMarihuana[playerid] = 0;		MarihuanaEffect[playerid] = 0; 			MarihuanaBeat[playerid] = 0; 		UsingHeroina[playerid] = 0;
	HeroinaEffect[playerid] = 0; 		HeroinaBeat[playerid] = 0;			CancerEffect[playerid] = 8;				RadioOn[playerid] = 0; 				Mochila[playerid][0] = 0;
	Mochila[playerid][1] = 0;			EpilepsiaCrack[playerid] = 8;		Color[playerid] = COLOR_WHITE;      	Refueling[playerid] = -1;           Infeccion[playerid] = 0;
    cEnergysil[playerid] = 0; 			cNicotina[playerid] = 0; 			cCancer[playerid] = 0; 					cEpilepsia[playerid] = 0;           MemberFactionID[playerid] = 0;
    PlayerStatInfo[playerid][0] = "No"; PlayerStatInfo[playerid][1] = "No";	PlayerStatInfo[playerid][2] = "No"; 	PlayerStatInfo[playerid][3] = "No"; Maskuse[playerid] = 0;
	PlayerStatInfo[playerid][4] = "No";	PlayerStatInfo[playerid][5] = "No"; PlayerStatInfo[playerid][6] = "No"; 	PlayerStatInfo[playerid][7] = "No"; LookHouse[playerid] = 0;
    UsageTeam[playerid] = 0;            See_AD[playerid] = 0;               DeathPlayer[playerid] = 0;              AdminDuty[playerid] = 0;            BigEar[playerid] = 0;

	PlayerInfo[playerid][pImplementos] = 0;		PlayerInfo[playerid][pCash] = 0;			PlayerInfo[playerid][pCarnada] = 0;
	PlayerInfo[playerid][pSuciedad] = 0;		PlayerInfo[playerid][pLevel] = 0;			PlayerInfo[playerid][pAdminCP] = 0;     PlayerInfo[playerid][pPhousekey] = 9999;
	PlayerInfo[playerid][pHambre] = 0;          PlayerInfo[playerid][pSed] = 0;
	PlayerInfo[playerid][pAnilloCom] = 0;       PlayerInfo[playerid][pAnilloOro] = 0;   	PlayerInfo[playerid][pCollar] = 0;      PlayerInfo[playerid][pAnilloDia] = 0;
	PlayerInfo[playerid][pPulsera] = 0;         PlayerInfo[playerid][pAretes] = 0;      	PlayerInfo[playerid][pReloj] = 0;       PlayerInfo[playerid][pFacciones] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;		PlayerInfo[playerid][pReg] = 0;				PlayerInfo[playerid][pSex] = 0;			PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pOrigin] = 0;			PlayerInfo[playerid][pExp] = 0;				PlayerInfo[playerid][pAccount] = 0;		PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pArrested] = 0;		PlayerInfo[playerid][pLottoNr] = 0;			PlayerInfo[playerid][pJob] = 0;         PlayerInfo[playerid][pCheques] = 0;
	PlayerInfo[playerid][pJailed] = 0;			PlayerInfo[playerid][pJailTime] = 0;		PlayerInfo[playerid][pMats] = 0;		PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pSpeed] = 0;			PlayerInfo[playerid][pEctasy] = 0;			PlayerInfo[playerid][pRitalin] = 0;		PlayerInfo[playerid][pHeroina] = 0;
	PlayerInfo[playerid][pMarihuana] = 0;		PlayerInfo[playerid][pLeader] = 0;			PlayerInfo[playerid][pMember] = 0;		PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pChar] = 0;			PlayerInfo[playerid][pHealth] = 50.0;		PlayerInfo[playerid][pArmour] = 0.0;	PlayerInfo[playerid][pPos_x] = 1612.3240;
	PlayerInfo[playerid][pPos_y] = -2330.1670;	PlayerInfo[playerid][pPos_z] = 13.5469;		PlayerInfo[playerid][pInt] = 0;         PlayerInfo[playerid][pMTexto] = 0;
	PlayerInfo[playerid][pPnumber] = 0;         PlayerInfo[playerid][pRecogidos] = 0;   	PlayerInfo[playerid][pChangeName] = 0;  PlayerInfo[playerid][pRecoger] = 0;
	PlayerInfo[playerid][pCarLic] = 0;			PlayerInfo[playerid][pFlyLic] = 0;			PlayerInfo[playerid][pBoatLic] = 0;		PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pGafas] = 0;			PlayerInfo[playerid][pTut] = 0;         	PlayerInfo[playerid][pPbizzkey] = 9999; PlayerInfo[playerid][pPhousevip] = 9999;
    PlayerInfo[playerid][pMinutes] = 0;         PlayerInfo[playerid][pMarried] = 0;			PlayerInfo[playerid][pLighter] = 0;		PlayerInfo[playerid][pCigarettes] = 0;
	PlayerInfo[playerid][pMask] = 0;            PlayerInfo[playerid][pAdvertencias] = 0;	PlayerInfo[playerid][pAdminAdver] = 0;  PlayerInfo[playerid][pCasco] = 0;
	PlayerInfo[playerid][pLocked] = 0;      	PlayerInfo[playerid][pEntered] = -1;   		PlayerInfo[playerid][pKills] = 0;       PlayerInfo[playerid][pDNIFalse] = 0;
    new dni = 100000 + random(899999);			PlayerInfo[playerid][pDNI] = dni;			PlayerInfo[playerid][pPeces] = 0;       PlayerInfo[playerid][pEpilepsia] = 0;
    PlayerInfo[playerid][pMP5] = 100;           PlayerInfo[playerid][pSniper] = 100;		PlayerInfo[playerid][pFStyle] = 4;      PlayerInfo[playerid][pInfeccion] = 0;
    PlayerInfo[playerid][pRent] = 0;            PlayerInfo[playerid][pWalkie] = 0;          PlayerInfo[playerid][pSeguro] = 0;      PlayerInfo[playerid][pHead] = 0;
    PlayerInfo[playerid][pBanDuda] = 0;         PlayerInfo[playerid][pRob] = 0;				PlayerInfo[playerid][pDonateT] = 0;     PlayerInfo[playerid][pJobTime] = 0;
	PlayerInfo[playerid][pWeapon] = 0;			PlayerInfo[playerid][pAmmo] = 0;			PlayerInfo[playerid][pWeapon2] = 0;		PlayerInfo[playerid][pAmmo2] = 0;
	PlayerInfo[playerid][pWeapon3] = 0;			PlayerInfo[playerid][pAmmo3] = 0;			PlayerInfo[playerid][pWeapon4] = 0;		PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pWeapon5] = 0;			PlayerInfo[playerid][pAmmo5] = 0;			PlayerInfo[playerid][pWeapon6] = 0;		PlayerInfo[playerid][pAmmo6] = 0;
	PlayerInfo[playerid][pWeapon7] = 0;			PlayerInfo[playerid][pAmmo7] = 0;			PlayerInfo[playerid][pWeapon8] = 0;		PlayerInfo[playerid][pAmmo8] = 0;
	PlayerInfo[playerid][pWeapon9] = 0;			PlayerInfo[playerid][pAmmo9] = 0;			PlayerInfo[playerid][pWeapon10] = 0;	PlayerInfo[playerid][pAmmo10] = 0;
	PlayerInfo[playerid][pWeapon11] = 0;		PlayerInfo[playerid][pAmmo11] = 0;			PlayerInfo[playerid][pWeapon12] = 0;	PlayerInfo[playerid][pAmmo12] = 0;
	PlayerInfo[playerid][pMaleta] = 0;			PlayerInfo[playerid][pMochila] = 0;			PlayerInfo[playerid][pCancer] = 0;      PlayerInfo[playerid][pGripe] = 0;
	PlayerInfo[playerid][pDEagle] = 100;		PlayerInfo[playerid][pShotgun] = 100;		PlayerInfo[playerid][pAK47] = 100;		PlayerInfo[playerid][pM4] = 100;
	PlayerInfo[playerid][pLeccion] = 0;			PlayerInfo[playerid][pBusqueda] = 0;		PlayerInfo[playerid][pAntiCancer] = 0;	PlayerInfo[playerid][pAntiEpilepsia] = 0;
	PlayerInfo[playerid][pADSent] = 0;          PlayerInfo[playerid][pADTime] = 0;          PlayerInfo[playerid][pAdverFaccion]= 0; PlayerInfo[playerid][pDismissed] = 0;
	PlayerInfo[playerid][pActSlot] = 0;

    format(PlayerInfo[playerid][pAntecedente1], 64, "None");		format(PlayerInfo[playerid][pAntecedente2], 64, "None");		format(PlayerInfo[playerid][pAntecedente3], 64, "None");
	format(PlayerInfo[playerid][pNote1], 80, "None");				format(PlayerInfo[playerid][pNote2], 80, "None");				format(PlayerInfo[playerid][pNote3], 80, "None");
	format(PlayerInfo[playerid][pNote4], 80, "None");				format(PlayerInfo[playerid][pNote5], 80, "None");   			format(PlayerInfo[playerid][pMarriedTo], 24, "Nadie");
	format(PlayerInfo[playerid][pSMS_1], 80, "Vacío");				format(PlayerInfo[playerid][pSMS_2], 80, "Vacío");				format(PlayerInfo[playerid][pSMS_3], 80, "Vacío");
	format(PlayerInfo[playerid][pSMS_4], 80, "Vacío");				format(PlayerInfo[playerid][pSMS_5], 80, "Vacío");              format(PlayerInfo[playerid][pMSN], 32, "None");
	format(PlayerInfo[playerid][pEstado], 18, "Ninguno");           format(PlayerInfo[playerid][pDNIName], 24, "Ninguno");          format(PlayerInfo[playerid][pAnuncio], 90, "Ninguno");
	for(new v = 0; v < MAX_PLAYERTOYS; v++)
 	{
  		PlayerToyInfo[playerid][v][ptModelID] = 0;
		PlayerToyInfo[playerid][v][ptBone] = 0;
 		PlayerToyInfo[playerid][v][ptPosX] = 0.0;
  		PlayerToyInfo[playerid][v][ptPosY] = 0.0;
   		PlayerToyInfo[playerid][v][ptPosZ] = 0.0;
    	PlayerToyInfo[playerid][v][ptRotX] = 0.0;
    	PlayerToyInfo[playerid][v][ptRotY] = 0.0;
    	PlayerToyInfo[playerid][v][ptRotZ] = 0.0;
	}
	for(new d = 0; d < MAX_PLAYERVEHICLES; d++)
	{
		PlayerVehicleInfo[playerid][d][pvID] = 9999;        PlayerVehicleInfo[playerid][d][pvHealth] = 0.0;       	PlayerVehicleInfo[playerid][d][pvSpoiler] = 0;
	    PlayerVehicleInfo[playerid][d][pvModel] = 0;        PlayerVehicleInfo[playerid][d][pvColorOne] = 0;        	PlayerVehicleInfo[playerid][d][pvHood] = 0;
	    PlayerVehicleInfo[playerid][d][pvLocationx] = 0.0;  PlayerVehicleInfo[playerid][d][pvColorTwo] = 0;        	PlayerVehicleInfo[playerid][d][pvRoof] = 0;
	    PlayerVehicleInfo[playerid][d][pvLocationy] = 0.0;  PlayerVehicleInfo[playerid][d][pvValue] = 0;        	PlayerVehicleInfo[playerid][d][pvSideskirt] = 0;
	    PlayerVehicleInfo[playerid][d][pvLocationz] = 0.0;  PlayerVehicleInfo[playerid][d][pvLock] = 0;        		PlayerVehicleInfo[playerid][d][pvNitro] = 0;
	    PlayerVehicleInfo[playerid][d][pvAngle] = 0.0;      PlayerVehicleInfo[playerid][d][pvBattery] = 0;        	PlayerVehicleInfo[playerid][d][pvExhaust] = 0;
	    PlayerVehicleInfo[playerid][d][pvWheel] = 0;        PlayerVehicleInfo[playerid][d][pvFrontBumper] = 0;      PlayerVehicleInfo[playerid][d][pvMulta] = 0;
	    PlayerVehicleInfo[playerid][d][pvHydraulics] = 0;   PlayerVehicleInfo[playerid][d][pvRearBumper] = 0;       PlayerVehicleInfo[playerid][d][pvGas] = 0;
	    PlayerVehicleInfo[playerid][d][pvPaintjob] = 0;     PlayerVehicleInfo[playerid][d][pvEmbargo] = 0;       	PlayerVehicleInfo[playerid][d][pvAlarm] = 0;
	    PlayerVehicleInfo[playerid][d][pvGPS] = 0;          PlayerVehicleInfo[playerid][d][pvGasolina] = 0;         PlayerVehicleInfo[playerid][d][pvRespawn] = 0;
	    PlayerVehicleInfo[playerid][d][pvSpawned] = 0;      PlayerVehicleInfo[playerid][d][pvSuciedad] = 0;
		PlayerVehicleInfo[playerid][d][pvTanque] = 0;       PlayerVehicleInfo[playerid][d][pvNeon] = 0;             PlayerVehicleInfo[playerid][d][pvSpoiler] = 0;
	    format(PlayerVehicleInfo[playerid][d][pvName], 14, "Ninguno");     format(PlayerVehicleInfo[playerid][d][pvPlate], 12, "SA - 00000");
	}
}

public Lotto(number)
{
	new JackpotFallen = 0;
	new string[100];
	format(string, sizeof(string), "Noticias de la Loteria: {FFFFFF}Hoy en dia el numero ganador ha recaido en: {FF0000}%d", number);
    OOCOff(COLOR_ORANGE, string);
    for(new i = 0; i < MAX_PLAYERS; i++){
		if(IsPlayerConnected(i)){
		    if(PlayerInfo[i][pLottoNr] > 0){
			    if(PlayerInfo[i][pLottoNr] == number){
			        JackpotFallen = 1;
					format(string, sizeof(string), "Noticias de la Loteria: %s ha ganado el acumulado de $%d .", PlayerName(i), Jackpot);
					OOCOff(COLOR_DBLUE, string);
					format(string, sizeof(string), "* Usted ha ganado $%d con su billete de loteria.", Jackpot);
					Message(i, COLOR_YELLOW, string);
					GivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        Message(i, COLOR_WHITE, "* Usted no ha ganado con su billete de loteria este momento.");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(20000); rand += 5000;
	    Jackpot = rand;
	    SaveStuff();
	    format(string, sizeof(string), "El nuevo Jackpot se ha iniciado con {9EC73D}$%d", Jackpot);
		OOCOff(0xFFFFFFFF, string);
	}
	else
	{
	    new rand = random(5000); rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	    format(string, sizeof(string), "El bote se ha aumentado a {9EC73D}$%d", Jackpot);
		OOCOff(0xFFFFFFFF, string);
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{

    for(new t; t < 5; t++)
	{
	    PlayerTextDrawDestroy(playerid, TextVelocimetroP[playerid][t]);
	}
	new string[64];
	SaveGuns(playerid);
	DestruirVehiculo(playerid);
	TextDrawHideForPlayer(playerid, SunGlasses);
	Delete3DTextLabel(Estado[playerid]);
	OnPlayerUpdateTime(playerid);
	TextDrawDestroy(PublicTD[0]);
	TextDrawDestroy(PublicTD[1]);
	TextDrawDestroy(PublicTD[2]);
	if(PlayerInfo[playerid][pAdminCP] >= 2013) SetIDMPS(playerid, 2);
	if(GetPVarInt(playerid, "SmokeTimer") != 0) KillTimer(GetPVarInt(playerid, "SmokeTimer"));
	if(GetPVarInt(playerid, "DrugTimer") != 0) KillTimer(GetPVarInt(playerid, "DrugTimer"));
	if(GetPVarInt(playerid, "TimerHouse") != 0) KillTimer(GetPVarInt(playerid, "TimerHouse"));
	if(GetPVarInt(playerid, "TimerLavadora") != 0) KillTimer(GetPVarInt(playerid, "TimerLavadora"));
	if(GetPVarInt(playerid, "TimerCarWash") != 0) KillTimer(GetPVarInt(playerid, "TimerCarWash"));
	if(GetPVarInt(playerid, "TimerRobo") != 0) KillTimer(GetPVarInt(playerid, "TimerRobo"));
	if(HireKey[playerid] != 999)
	{
	    SetVehicleToRespawn(HireKey[playerid]);
	    SetVehicleParamsEx(HireKey[playerid],0,0,0,0,0,0,0);
	    HireState[HireKey[playerid]] = false;
	    HireCarLock[HireKey[playerid]] = 0;
	}
	if(GetPVarType(playerid, "Llave_Prestada") != 0)
	{
	    DeletePVar(GetPVarInt(playerid, "Llave_Prestada"), "Llave_ID");
	    DeletePVar(GetPVarInt(playerid, "Llave_Prestada"), "Llave_Recibida");
	    Message(GetPVarInt(playerid, "Llave_Prestada"), COLOR_WHITE, "El dueño del vehiculo prestado se ha desconectado.");
	}
	if(GetPVarType(playerid, "Llave_Recibida") != 0)
	{
		if(GetPVarInt(GetPVarInt(playerid, "Llave_Recibida"), "Llave_Prestada") == playerid)
		{
			DeletePVar(GetPVarInt(playerid, "Llave_Recibida"), "Llave_Prestada");
  		}
		Message(GetPVarInt(playerid, "Llave_Recibida"), COLOR_WHITE, "El jugador al cual le prestaste tu vehículo se ha desconectado.");
	}
	if(PlayerInfo[playerid][pAdminCP] > 0)
	{
	    for(new i=0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            for(new d=0; d < 6; d++)
	        	{
          			if(MPToAdmin[i][d] == playerid)
           			{
 	            		MPToAdmin[i][d] = 999;
      				}
 				}
	        }
	    }
	}
    if(Interview != 0)
	{
		if(strcmp(Interviewer,PlayerName(playerid),true) == 0 )
		{
		    Message(playerid, COLOR_WHITE, "Se canceló tu entrevista!");
		    Interviewer = "Nadie";
		    Interview = 0;
		}
	}
	if(PaintballType[playerid] > 0)
 	{
 	    switch(PaintballType[playerid])
 	    {
 	    	case 1: TotalDM -= 1;
 	    	case 2: TTeamNaranja -= 1;
 	    	case 3: TTeamVerde -= 1;
 	    	case 4: TotalPlayer -= 1;
 		}
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] != 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    Bought(playerid, TransportCost[playerid]);
			Earn(TransportDriver[playerid], TransportCost[playerid]);
		    format(string, sizeof(string), "~w~Te costo ~r~%d$", TransportCost[playerid]);
		    GameTextForPlayer(playerid, string, 5000, 1);
		    format(string, sizeof(string), "~w~Has ganado ~g~%d$", TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		    TextDrawHideForPlayer(playerid, Taximeter[playerid]);
			TextDrawHideForPlayer(TransportDriver[playerid], Taximeter[TransportDriver[playerid]]);
			TransportCost[playerid] = 0;	TransportTime[playerid] = 0;    TransportDriver[playerid] = 999;
		}
	}
	if(GetPVarInt(playerid, "TaxiCalled") > 0)
	{
		switch(GetPVarInt(playerid, "TaxiCalled"))
		{
			case 1: { TaxiSlot1 = 999; SlotZone1 = "Sin Localizar"; TiempoSlot1 = 0; }
			case 2: { TaxiSlot2 = 999; SlotZone2 = "Sin Localizar"; TiempoSlot2 = 0; }
			case 3: { TaxiSlot3 = 999; SlotZone3 = "Sin Localizar"; TiempoSlot3 = 0; }
			case 4: { TaxiSlot4 = 999; SlotZone4 = "Sin Localizar"; TiempoSlot4 = 0; }
			case 5: { TaxiSlot5 = 999; SlotZone5 = "Sin Localizar"; TiempoSlot5 = 0; }
			case 6: { TaxiSlot6 = 999; SlotZone6 = "Sin Localizar"; TiempoSlot6 = 0; }
			case 7: { TaxiSlot7 = 999; SlotZone7 = "Sin Localizar"; TiempoSlot7 = 0; }
			case 8: { TaxiSlot8 = 999; SlotZone8 = "Sin Localizar"; TiempoSlot8 = 0; }
		}
	}
	return 1;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    if(PlayerInfo[playerid][pAdminCP] < 1) return 0;
	else if(PlayerInfo[playerid][pAdminCP] > 0 && GetPVarInt(playerid, "ActiveTeleport") != 0)
	{
		SetPlayerPos(playerid, fX, fY, fZ);
		return 1;
	}
	return 0;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
   	if(GetPVarInt(playerid, "ModelsActive") == 0) return 0;

	if(clickedid == Text:INVALID_TEXT_DRAW) {
        DestroySelectionMenu(playerid);
        DeletePVar(playerid, "ModelsActive");
        DeletePVar(playerid, "ModelsPage");
        DeletePVar(playerid, "ModelsType");
        if(GetPVarInt(playerid, "ModelsSkins") == 1) DeletePVar(playerid, "ModelsSkins");
        else if(GetPVarInt(playerid, "ModelsGrotti") == 1) DeletePVar(playerid, "ModelsGrotti");
        else if(GetPVarInt(playerid, "ModelsMedium") == 1) DeletePVar(playerid, "ModelsMedium");
        else if(GetPVarInt(playerid, "ModelsCas") == 1) DeletePVar(playerid, "ModelsCas");
        else if(GetPVarInt(playerid, "ModelsToys") == 1) DeletePVar(playerid, "ModelsToys");
        PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
        gTotalItems[playerid] = 0;
        return 1;
	}

	return 0;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(GetPVarInt(playerid, "ModelsActive") == 0) return 0;

	new curpage = GetPVarInt(playerid, "ModelsPage");

	if(playertextid == gNextButtonTextDrawId[playerid]) {
	    if(curpage < (GetNumberOfPages(playerid) - 1)) {
	        SetPVarInt(playerid, "ModelsPage", curpage + 1);
	        ShowPlayerModelPreviews(playerid);
         	UpdatePageTextDraw(playerid);
         	PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
		} else {
		    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		}
		return 1;
	}
	if(playertextid == gPrevButtonTextDrawId[playerid]) {
	    if(curpage > 0) {
	    	SetPVarInt(playerid, "ModelsPage", curpage - 1);
	    	ShowPlayerModelPreviews(playerid);
	    	UpdatePageTextDraw(playerid);
	    	PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		} else {
		    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		}
		return 1;
	}

	new x=0;
	while(x != SELECTION_ITEMS) {
	    if(playertextid == gSelectionItems[playerid][x]) {
	        PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
       		DestroySelectionMenu(playerid);
        	CancelSelectTextDraw(playerid);
        	if(GetPVarInt(playerid, "ModelsSkins") == 1)
	        {
		        HandlePlayerSkinSelection(playerid, x);
	        	DeletePVar(playerid, "ModelsSkins");
       		}
       		else if(GetPVarInt(playerid, "ModelsGrotti") == 1)
       		{
       		    HandlePlayerVehicleSelection(playerid, x);
       		    DeletePVar(playerid, "ModelsGrotti");
       		}
       		else if(GetPVarInt(playerid, "ModelsMedium") == 1)
       		{
       		    HandlePlayerVehicleSelection(playerid, x);
       		    DeletePVar(playerid, "ModelsMedium");
       		}
       		else if(GetPVarInt(playerid, "ModelsCas") == 1)
       		{
       		    HandlePlayerVehicleSelection(playerid, x);
       		    DeletePVar(playerid, "ModelsCas");
       		}
       		else if(GetPVarInt(playerid, "ModelsToys") == 1)
       		{
       		    HandlePlayerToySelection(playerid, x);
       		    DeletePVar(playerid, "ModelsToys");
       		}
       		DeletePVar(playerid, "ModelsActive");
        	DeletePVar(playerid, "ModelsPage");
        	DeletePVar(playerid, "ModelsType");
        	gTotalItems[playerid] = 0;
        	return 1;
		}
		x++;
	}
	return 0;
}

function TumbarPuerta(playerid, hid)
{
    CreateExplosion(HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez], 3, 5);
	HouseInfo[hid][hLock] = 0;
	ProxDetector(20.0, playerid, "¡El C4 ha sido detonado con exito, ya pueden entrar!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	return 1;
}

function MissileLaunchEx(Float:x, Float:y, Float:z, Float:radius, type)
{
    CreateExplosion(x, y, z, type, radius);
    Misile_Launcher --;
    new string[100];
    format(string, sizeof(string), "** Lanzamiento detonado en %0.2f - %0.2f - %0.2f, radio %d.",x,y,z,radius);
    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
    return 1;
}

function MissileLaunch(vehicleid)
{
	new Float:x,Float:y,Float:z;
	GetVehiclePos(vehicleid, x, y, z);
    CreateExplosion(x, y, z, 2, 10.0);  CreateExplosion(x, y, z, 2, 10.0);  CreateExplosion(x, y, z, 2, 10.0);
    Misile_Launcher --;
    new string[68];
    format(string, sizeof(string), "** Lanzamiento detonado en el objetivo, vehículo %d.",vehicleid);
    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
    return 1;
}

SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	    SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
    		SetTimerEx("FreezePlayer", 1000, false, "i", playerid);
	        ClearChatbox(playerid, 10);
	        gOoc[playerid] = 1;
	        gFam[playerid] = 1;
	        gNew[playerid] = 1;
			SetPosEx(playerid, -1636.6449, 1042.7776, 56.3147, 180.0000,14,playerid);  //Spawn Registro
			SetPlayerCameraPos(playerid, -1636.6199, 1038.7839, 58.2836);
			SetPlayerCameraLookAt(playerid, -1636.6508, 1039.7806, 58.0336);
			SetPVarInt(playerid, "RStep", 1);
			SetPVarInt(playerid, "RegText", 1);
			SetPVarInt(playerid, "RegConfig", 1);
			PlayerInfo[playerid][pAge] = 30;
			PlayerInfo[playerid][pSex] = 1;
			TextDrawShowForPlayer(playerid, RegInfo);
			TextDrawShowForPlayer(playerid, RegDraw[playerid]);
			TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~g~Sin Sexo          ~w~Edad: ~g~?~n~~n~~w~Origen: ~g~Sin Origen    ~w~Estilo: ~g~?");
			Message(playerid, COLOR_WHITE, "Bienvenido a Miami Roleplay, configure su personaje.");
			ClearChatbox(playerid, 5);
			Message(playerid, COLOR_YELLOW, "{009B7D}Utiliza las teclas DERECHA y IZQUIERDA para variar las opciones.");
			Message(playerid, COLOR_YELLOW, "{009B7D}Confirma con INTRO");
			return 1;
	    }
	    if(GetPVarType(playerid, "TutTime") == 0 && PlayerInfo[playerid][pTut] == 1 && DeathPlayer[playerid] == 0)
  		{
    		SetPosEx(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z] + 1, 0, PlayerInfo[playerid][pInt], PlayerInfo[playerid][pVirWorld]);
	    	SetHP(playerid, PlayerInfo[playerid][pHealth]);
			SetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
			SetPlayerWeapons(playerid);
            UpdatePlayerStat(playerid);
			if(PlayerInfo[playerid][pInt] > 0 || PlayerInfo[playerid][pVirWorld] > 0)
			{
				LoadObjects(playerid);
			}
		    return 1;
		}
		if(PaintballType[playerid] != 0)
		{
		    new rand;
			switch(PaintballType[playerid])
			{
			    case 1:
			    {
					SafeResetPlayerWeapons(playerid);
					ArmarPaintBall(playerid);
   					rand = random(sizeof(PaintballDMSpawns));
					SetPosEx(playerid, PaintballDMSpawns[rand][0], PaintballDMSpawns[rand][1], PaintballDMSpawns[rand][2],0,14,0);
					return 1;
				}
				case 2:
				{
					SafeResetPlayerWeapons(playerid);
					ArmarPaintBall(playerid);
					SetPosEx(playerid, -973.1844,1061.3037,1345.6699,0,10,0);
   					SetPlayerColor(playerid, ORANGE_ADMIN);
					return 1;
				}
				case 3:
				{
					SafeResetPlayerWeapons(playerid);
					ArmarPaintBall(playerid);
					SetPosEx(playerid, -1131.2336,1057.7888,1346.4170,0,10,0);
   					SetPlayerColor(playerid, VERDE_ADMIN);
					return 1;
				}
				case 4:
				{
					SafeResetPlayerWeapons(playerid);
					ArmarPaintBall(playerid);
   					rand = random(sizeof(PaintPvPSpawns));
   					LoadObjects(playerid);
					SetPosEx(playerid, PaintPvPSpawns[rand][0], PaintPvPSpawns[rand][1], PaintPvPSpawns[rand][2],0,0,0);
					return 1;
				}
			}
		}
		if(PlayerInfo[playerid][pJailed] > 0)
		{
			if(PlayerInfo[playerid][pJailed] == 1)
			{
			    SetHP(playerid, 50.0);
		    	SetPlayerInterior(playerid, 0);
				SetPosEx(playerid, 2767.8936,445.4332,3.7747,163.2555,1,0);
				Message(playerid, COLOR_LIGHTRED, "No has cumplido tu condena, estas denuevo en la carcel.");
				return 1;
			}
			else if(PlayerInfo[playerid][pJailed] == 3)
			{
        	    SetHP(playerid, 50.0);
				SetPosEx(playerid, 263.4922,77.0915,1001.0391,322.1463,6,0);
				Message(playerid, COLOR_LIGHTRED, "Has tenido un accidente en prisión.");
				Message(playerid, COLOR_LIGHTRED, "Te hemos transladado a la ultima celda.");
				return 1;
			}
			else if(PlayerInfo[playerid][pJailed] == 4)
			{
			    SetHP(playerid, 50.0);
				SetPosEx(playerid, 194.3425,158.1145,1003.0234,272.9291,3,0);
				Message(playerid, COLOR_LIGHTRED, "Has tenido un accidente en prisión.");
				Message(playerid, COLOR_LIGHTRED, "Te hemos transladado de celda.");
				return 1;
			}
			else if(PlayerInfo[playerid][pJailed] == 5)
			{
			    SetHP(playerid, 50.0);
				SetPosEx(playerid, 1553.4100,-1665.9277,1718.9019,273.6029,0,0);
				Message(playerid, COLOR_LIGHTRED, "Has tenido un accidente en prisión.");
				Message(playerid, COLOR_LIGHTRED, "Te hemos transladado de celda.");
				return 1;
			}
		}
		if(DeathPlayer[playerid] == 1 && PlayerInfo[playerid][pJailed] == 0)
		{
  			SetHP(playerid, 50.0);
  			DeathPlayer[playerid] = 0;
			Message(playerid, TEAM_CYAN_COLOR, "Te hemos transladado al hospital.");
  			Message(playerid, TEAM_CYAN_COLOR, "Te has recuperado exsitósamente de tu accidente.");
 			SetPosEx(playerid, 1172.8470,-1323.1869,15.3999,0,0,1);
 			LoadObjects(playerid);
	        if(PlayerInfo[playerid][pSeguro] == 0) { Bought(playerid, 500);  Message(playerid, COLOR_GREEN, "* No tienes seguro, te cobramos 500$. Compre uno en el hospital de LS."); }
      		return 1;
		}
	}
	return 0;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	new string[128];
	DeathPlayer[playerid] = 1;
	UsingDrugs[playerid] = 0;
	UsingEctasy[playerid] = 0;
	EctasyEffect[playerid] = 0;
	UsingRitalin[playerid] = 0;
	RitalinEffect[playerid] = 0;
	UsingHeroina[playerid] = 0;
	HeroinaEffect[playerid] = 0;
	HeroinaBeat[playerid] = 0;
	UsingMarihuana[playerid] = 0;
	MarihuanaEffect[playerid] = 0;
	MarihuanaBeat[playerid] = 0;
	Left4Life[playerid] = 0;
	PlayerInfo[playerid][pArmour] = 0;
	new drunk = GetPlayerDrunkLevel(playerid);
	if(drunk > 0) SetPlayerDrunkLevel(playerid, 0);
	if(PlayerDrunk[playerid] > 0) { PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0; }
	if(GetPVarInt(playerid, "InAmbu") > 0) DeletePVar(playerid, "InAmbu");
	PlayerInfo[killerid][pKills] += 1;
	PlayerInfo[playerid][pDeaths] += 1;

    if(GetPVarInt(playerid, "SmokeTimer") != 0) { KillTimer(GetPVarInt(playerid, "SmokeTimer")); DeletePVar(playerid, "SmokeTimer"); }
	if(GetPVarInt(playerid, "DrugTimer") != 0) { KillTimer(GetPVarInt(playerid, "DrugTimer")); DeletePVar(playerid, "DrugTimer"); }
	if(GetPVarInt(playerid, "TimerHouse") != 0) { KillTimer(GetPVarInt(playerid, "TimerHouse")); DeletePVar(playerid, "TimerHouse"); }
	if(GetPVarInt(playerid, "TimerCarWash") != 0) { KillTimer(GetPVarInt(playerid, "TimerCarWash")); DeletePVar(playerid, "TimerCarWash"); }
	if(IsPlayerConnected(killerid))
	{
		if(GetPlayerWeapon(killerid) == 24)	{   PlayerInfo[killerid][pDEagle] += 10;   	}
		if(GetPlayerWeapon(killerid) == 25)	{   PlayerInfo[killerid][pShotgun] += 15;   }
		if(GetPlayerWeapon(killerid) == 29)	{   PlayerInfo[killerid][pMP5] += 15;   	}
		if(GetPlayerWeapon(killerid) == 31)	{   PlayerInfo[killerid][pM4] += 15;   		}
		if(GetPlayerWeapon(killerid) == 30)	{   PlayerInfo[killerid][pAK47] += 15;    	}
		if(GetPlayerWeapon(killerid) == 34)	{   PlayerInfo[killerid][pSniper] += 30;   }
	}
	if(Pandilleros(killerid) && Pandilleros(playerid))
	{
		if(PlayerToPoint(40.0, playerid, 2491.8098,-1664.8685,13.3438) || PlayerToPoint(40.0, playerid, 2263.5684,-1042.4086,51.5750))
		{
		    if(PlayerInfo[killerid][pMember] == PlayerInfo[playerid][pMember]) { Message(playerid, COLOR_GRAD2, "No mates a los de tu banda!"); }
		    if(PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember])
		    {
				Message(playerid, COLOR_WHITE, "Te ha matado el de la banda enemiga, pierdes 50$ que van hacia el.");
				if(PlayerInfo[killerid][pMember] == 9) 	{ GText(playerid, "own~g~3~w~d", 5000, 1); }
				if(PlayerInfo[killerid][pMember] == 11) { GText(playerid, "own~y~3~w~d", 5000, 1); }

				GText(killerid, "Muerte ~r~enemiga~n~~w~+50~g~$", 5000, 1);
				format(string, sizeof(string), "~w~Te ha ~r~matado~n~~r~%s", PlayerName(killerid));
				GText(playerid, string, 5000, 1);

				GivePlayerMoney(playerid, -50); GivePlayerMoney(killerid, 50);
			}
		}
	}
	new caller = Mobile[playerid];
	if(caller != 255)
	{
		if(caller < 255)
		{
			Message(caller,  COLOR_GRAD2, "La llamada se perdió.");
            CellTime[caller] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	if(PaintballType[playerid] > 0)
	{
		if(PaintballType[playerid] == 1)
		{
 			SetPVarInt(killerid, "PaintballDMKills", GetPVarInt(killerid, "PaintballDMKills")+1);
 			format(string, sizeof(string), "* [DM] %s[%d] hizo polvo a %s[%d]", PlayerName(killerid), GetPVarInt(killerid, "PaintballDMKills"), PlayerName(playerid), GetPVarInt(playerid, "PaintballDMKills"));
			SendPBMessage(1, 0xFFB18CFF, string);
		}
		else if(PaintballType[playerid] == 2)
		{
	    	TvTVerdeKills += 1;
			format(string, sizeof(string), "{3CB9FF}* [TVT] Muerte naranja. El equipo verde aumenta su puntaje a %d", TvTVerdeKills);
			SendPBMessage(2, -1, string);
			SendPBMessage(3, -1, string);
		}
		else if(PaintballType[playerid] == 3)
		{
	    	TvTNaranjaKills += 1;
			format(string, sizeof(string), "{3CB9FF}* [TVT] Muerte verde. El equipo naranja aumenta su puntaje a %d", TvTNaranjaKills);
			SendPBMessage(2, -1, string);
			SendPBMessage(3, -1, string);
		}
		else if(PaintballType[playerid] == 4)
		{
	    	SetPVarInt(killerid, "PaintPvPKills", GetPVarInt(killerid, "PaintPvPKills")+1);
	    	format(string, sizeof(string), "* [PVP] %s[%d] ha masacrado a %s[%d]", PlayerName(killerid), GetPVarInt(killerid, "PaintPvPKills"), PlayerName(playerid), GetPVarInt(playerid, "PaintPvPKills"));
			SendPBMessage(4, 0xEBBDA3FF, string);
		}
	}
	if(PlayerInfo[playerid][pHead] > 0)
	{
	    if(IsPlayerConnected(killerid))
	    {
		    if(Hitman(killerid) && PlayerInfo[killerid][pRank] > 0)
		    {
		        GivePlayerMoney(killerid, PlayerInfo[playerid][pHead]);
		        format(string, sizeof(string), "** Central: %s mató a %s, y consiguió %d$", PlayerName(killerid), PlayerName(playerid), PlayerInfo[playerid][pHead]);
		        SendRadioMessage(23, TEAM_RADIO_COLOR, string);
		        format(string, sizeof(string), "** Te mató un hitman. Tu cabeza tenía un valor de: %d$", PlayerInfo[playerid][pHead]);
		        Message(playerid, COLOR_WHITE, string);
		        PlayerInfo[playerid][pHead] = 0;
			}
		}
	}
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,COLOR_GRAD2);
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid)
{
	if(IsPlayerConnected(damagedid))
	{
		if(weaponid >= 22 && weaponid <= 34)
		{
		    if(ScriptArmor[damagedid] > 1.0)
		    {
		        new Float:Armour;
		        GetPlayerArmour(damagedid, Armour);
		        if(Armour >= amount)
		        {
	                GiveArmorToPlayer(damagedid, (Armour-amount));
	                return 1;
          		}
          		else
          		{
          		    new Float:total = amount-Armour;
          		    GiveArmorToPlayer(damagedid, 0.0);
          		    new Float:Health;
          		    GetPlayerHealth(damagedid, Health);
          		    SetHP(damagedid, (Health-total));
          		    return 1;
          		}
          	}
          	else
          	{
		    	new Float:Health;
		    	GetPlayerHealth(damagedid, Health);
	    		SetHP(damagedid, (Health-amount));
	    		return 1;
    		}
		}
	}
	return 0;
}

public OnPlayerSpawn(playerid)
{
	if(gPlayerLogged[playerid] == 0)
	{
    	Message(playerid, COLOR_LIGHTRED, "** Este servidor requiere una conexion antes de entrar (Kick) **");
        KickTimer(playerid);
        return 1;
 	}
 	SetPlayerColor(playerid,TEAM_HIT_COLOR);
	SetPlayerSpawn(playerid);
	return 1;
}

function BanLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}

public OnVehicleDeath(vehicleid)
{
	if(OwnableVehicle[vehicleid] && VehicleSpawned[vehicleid])
 	{
		PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvRespawn] += 1;
		PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvSuciedad] += 10;
  		SetVehicleVirtualWorld(vehicleid, vehicleid);
	    VehTimer[vehicleid] = SetTimerEx("MostrarVehiculo", 30000, false, "i", vehicleid);
	    DestruirNeon(vehicleid);
	}
	return 1;
}

function MostrarVehiculo(vehicleid)
{
	if(VehicleSpawned[vehicleid])
	{
		if(PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvRespawn] < 3 || PlayerInfo[VehicleOwner[vehicleid]][pDonateT] > 0)
		{
	    	SetVehiclePos(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvLocationx], PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvLocationy], PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvLocationz]);
			SetVehicleZAngle(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvAngle]);
			SetVehicleParamsEx(vehicleid ,0,0,0,PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvLock],0,0,0);
			ChangeVehicleColor(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvColorOne], PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvColorTwo]);
			SetVehicleVirtualWorld(vehicleid, 0);
			AddCarTuning(vehicleid, VehicleSlot[vehicleid]);
			VehTimer[vehicleid] = 0;
			VehicleDeath[vehicleid] = false;
		}
		else {
		    Message(VehicleOwner[vehicleid], -1, "{FF7617}Seguro S.A: {FFFFFF}Se le informa que su vehículo ha sido trasladado a nuestras instalaciones.");
	    	ChangeVehicleColor(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvColorOne], PlayerVehicleInfo[VehicleOwner[vehicleid]][VehicleSlot[vehicleid]][pvColorTwo]);
	    	AddCarTuning(vehicleid, VehicleSlot[vehicleid]);
	    	VehTimer[vehicleid] = 0;
	    	VehicleDeath[vehicleid] = false;
 		}
 		return 1;
	}
 	return 0;
}

public OnPlayerEnterCheckpoint(playerid)
{
    DisablePlayerCheckpoint(playerid);
    new carid = GetPlayerVehicleID(playerid), string[128];
    if(GetPVarInt(playerid, "UsageCarWash") == 1 && PlayerToPoint(3.0,playerid,2454.4141,-1461.0684,24.0000))
    {
        Lavando[playerid] = CreateProgressBar(253.00, 175.00, 130.50, 3.20, -16776961, 12.0);
        ShowProgressBarForPlayer(playerid, Lavando[playerid]);
        new timer = SetTimerEx("CarWash", 5000, true, "i", playerid);
        SetPVarInt(playerid, "TimerCarWash", timer);
        SetPVarInt(playerid, "UpdatesBar", 1);
        TogglePlayerControllable(playerid, 0);
        Message(playerid, COLOR_WHITE, "{018CFE}AutoLavado: {FFFFFF}Su auto empezó a ser lavado espere unos segundos para terminar (No te bajes).");
        return 1;
    }
	else if(PlayerInfo[playerid][pJob] == 1 && GetPVarInt(playerid, "Train_Route") > 0)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) { Message(playerid, COLOR_GRAD2, "¡No estás en un Tren!"); DeletePVar(playerid, "Train_Route"); return 1; }

		switch(GetPVarInt(playerid, "Train_Route"))
		{
		    case 1:
		    {
				SetPlayerCheckpoint(playerid, -1943.2317,159.9102,27.0006, 5.0);
	        	GText(playerid, "~g~30$~n~~n~~w~Proxima estacion:~n~~r~SF", 5000, 1);
	        	SetPVarInt(playerid, "Train_Route", 2);
	        	GivePlayerMoney(playerid, 150);
	        	return 1;
	    	}
	    	case 2:
			{
		        SetPlayerCheckpoint(playerid, 1455.6279,2632.2500,12.1256, 5.0);
		        GText(playerid, "~g~30$~n~~n~~w~Proxima estacion:~n~~r~LV", 5000, 1);
		        SetPVarInt(playerid, "Train_Route", 3);
	        	GivePlayerMoney(playerid, 150);
	        	return 1;
	    	}
	    	case 3:
	    	{
		        SetPlayerCheckpoint(playerid, 2864.7500,1274.8271,12.1256, 5.0);
		        GText(playerid, "~g~30$~n~~n~~w~Proxima estacion:~n~~r~LV", 5000, 1);
		        SetPVarInt(playerid, "Train_Route", 4);
	        	GivePlayerMoney(playerid, 150);
	        	return 1;
	    	}
	    	case 4:
	    	{
		        SetPlayerCheckpoint(playerid, 1715.0220,-1953.7056,14.8756, 5.0);
		        GText(playerid, "~g~30$~n~~n~~w~Proxima estacion:~n~~r~LS", 5000, 1);
		        SetPVarInt(playerid, "Train_Route", 5);
	        	GivePlayerMoney(playerid, 150);
	        	return 1;
	    	}
	    	case 5:
	    	{
		        GText(playerid, "~g~30$~n~~n~~w~Final recorrido", 5000, 1);
		        DeletePVar(playerid, "Train_Route");
		        DeletePVar(playerid, "IDCarRoute");
	    	    GivePlayerMoney(playerid, 400);
	        	Message(playerid, COLOR_YELLOW2, "Final del recorrido, obtenido: 1000$");
	        	RemovePlayerFromVehicle(playerid);
	        	return 1;
	    	}
  		}
	}
	else if(PlayerInfo[playerid][pJob] == 2 && BasuraPunto[playerid] > 0)
	{
	    if(!IsABasurero(carid)) { Message(playerid, COLOR_GRAD2, "¡No estás en un camion de Basura!"); BasuraPunto[playerid] = 0; return 1; }
		if(BasuraPunto[playerid] < 12)
		{
		    TimerBasura[playerid] = 5;
      		TogglePlayerControllable(playerid, 0);
        	Message(playerid, COLOR_WHITE, "* Debes esperar 5 segundos para poder seguir.");
         	return 1;
       	}
       	else if(BasuraPunto[playerid] == 12)
       	{
       	    PlayerInfo[playerid][pCheques] += 1000;
       	    Message(playerid, COLOR_GRAD4, "* Has recibido un cheque de 1000$ por tu trabajo realizado.");
       	    SetVehicleToRespawn(carid);
            BasuraPunto[playerid] = 0;
			DeletePVar(playerid, "Basurero");
            return 1;
        }
  	}
	else if(PlayerInfo[playerid][pJob] == 3 && GetPVarInt(playerid, "Plane_Route") > 0)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) { Message(playerid, COLOR_GRAD2, "¡No estás en un avión!"); DeletePVar(playerid, "Plane_Route"); return 1; }

		switch(GetPVarInt(playerid, "Plane_Route"))
		{
		    case 1:
		    {
		        GText(playerid, "~w~proximo destino: ~n~~r~Verdant Meadows", 5000, 1);
		        SetPVarInt(playerid, "Plane_Route", 2);
	    	    SetPlayerCheckpoint(playerid, 211.2588,2502.7649,17.4063, 15.0);
	    	    return 1;
	    	}
	    	case 2:
	    	{
	            GText(playerid, "~w~proximo destino: ~n~~r~san fierro", 5000, 1);
	            SetPVarInt(playerid, "Plane_Route", 3);
	    	    SetPlayerCheckpoint(playerid, -1378.8790,113.1982,15.0826, 15.0);
	    	    return 1;
	    	}
	    	case 3:
	    	{
	            GText(playerid, "~w~proximo destino: ~n~~r~Aeropuerto de Los Santos", 5000, 1);
	            SetPVarInt(playerid, "Plane_Route", 4);
	    	    SetPlayerCheckpoint(playerid, 2004.8916,-2593.5776,14.4709, 15.0);
	    	    return 1;
	    	}
	    	case 4:
			{
            	GText(playerid, "~w~proximo destino: ~n~~r~Los Santos", 5000, 1);
            	SetPVarInt(playerid, "Plane_Route", 5);
	        	SetPlayerCheckpoint(playerid, 1563.2407,-2458.6262,16.6014, 15.0);
	        	return 1;
	    	}
	    	case 5:
	    	{
	            GText(playerid, "~w~final del recorrido~n~~g~1400$ ganados en cheque", 5000, 1);
	            DeletePVar(playerid, "Plane_Route");
	            DeletePVar(playerid, "IDCarRoute");
	    	    PlayerInfo[playerid][pCheques] += 1400;
				SetVehicleToRespawn(carid);
				return 1;
		    }
    	}
	}
    else if(PlayerInfo[playerid][pJob] == 8 && PlayerIsRuta[playerid] == 1)
    {
   		if(!IsACamion(carid)) { Message(playerid, COLOR_GRAD2, "¡No estás en un Camión!"); PlayerIsRuta[playerid] = 0; Mercancia[playerid] = 0; return 1; }
    	PlayerCargando[playerid] = 10;
    	TogglePlayerControllable(playerid, 0);
    	Cargando[playerid] = CreateProgressBar(286.00, 171.00, 92.50, 4.50, 1107243007, 10.0);
		ShowProgressBarForPlayer(playerid, Cargando[playerid]);
		Message(playerid, COLOR_GRAD4, "¡Debes esperar a que se cargue el camión!");
		return 1;
	}
	else if(PlayerInfo[playerid][pJob] == 8 && PlayerIsRuta[playerid] == 2 && Mercancia[playerid] > 0)
	{
		if(!IsACamion(carid)) { Message(playerid, COLOR_GRAD2, "¡No estás en un Camión!"); PlayerIsRuta[playerid] = 0; Mercancia[playerid] = 0; return 1; }
 		PlayerDescargando[playerid] = 10;
		TogglePlayerControllable(playerid, 0);
		Cargando[playerid] = CreateProgressBar(286.00, 171.00, 92.50, 4.50, 1107243007, 10.0);
		ShowProgressBarForPlayer(playerid, Cargando[playerid]);
		SetProgressBarValue(Cargando[playerid], 10);
		UpdateProgressBar(Cargando[playerid], playerid);
		Message(playerid, COLOR_GRAD4, "¡Debes esperar a que se descargue el camion!");
		return 1;
	}
	else if(PlayerInfo[playerid][pJob] == 8 && PlayerIsRuta[playerid] == 3 && Mercancia[playerid] > 0)
	{
 		if(!IsACamion(carid)) { Message(playerid, COLOR_GRAD2, "¡Debes regresar con el camión!"); SetPlayerCheckpoint(playerid, 2228.5657,-2636.0427,13.4365, 5.0); return 1; }
		switch(Mercancia[playerid])
		{
  			case 1:	{ PlayerInfo[playerid][pCheques] += 500;  Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $500 por completar la entrega."); }
			case 2:	{ PlayerInfo[playerid][pCheques] += 600;  Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $600 por completar la entrega."); }
			case 3:	{ PlayerInfo[playerid][pCheques] += 700;  Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $700 por completar la entrega."); }
			case 4:	{ PlayerInfo[playerid][pCheques] += 800;  Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $800 por completar la entrega."); }
			case 5:	{ PlayerInfo[playerid][pCheques] += 900;  Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $900 por completar la entrega."); }
		}
  		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
   		RemovePlayerFromVehicle(playerid);
   		Mercancia[playerid] = 0;
   		PlayerIsRuta[playerid] = 0;
   		PlayerCargando[playerid] = 0;
   		PlayerDescargando[playerid] = 0;
   		return 1;
	}
	else if(PlayerInfo[playerid][pJob] == 10 && GetPVarInt(playerid, "DrugFarming") > 0)
	{
	    new drugs = random(10);
    	format(string, sizeof(string), "¡Has cosechado y has conseguido %d gramos de droga!", drugs);
		Message(playerid, COLOR_WHITE, string);
		PlayerInfo[playerid][pDrugs] += drugs;
		new randomize = random(sizeof(gDrugFarmVar));
		SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
		return 1;
	}
	else if(PlayerInfo[playerid][pJob] == 11 && GetPVarInt(playerid, "Trailer_Route") > 0)
	{
	    new idcar = GetPlayerVehicleID(playerid);
		if(!IsATrailer(idcar)) { Message(playerid, COLOR_GRAD2, "No estás en un trailer."); DeletePVar(playerid, "Trailer_Route"); return 1; }

        if(!IsTrailerAttachedToVehicle(idcar)){
			Message(playerid, COLOR_GRAD2, "No llevas la parte de atras.");
			SetVehicleToRespawn(idcar);
			SetVehicleToRespawn((idcar-1));
			DeletePVar(playerid, "Trailer_Route");
			return 1;
		}
		switch(GetPVarInt(playerid, "Trailer_Route"))
	    {
			case 1:{
			    if(PlayerToPoint(10.0, playerid, 1769.0547,-1736.0787,13.3828)){
					SetPVarInt(playerid, "Trailer_Route", 2);
					SetPlayerCheckpoint(playerid, 2195.5386,2456.9365,10.6719, 5.0);
					Message(playerid, COLOR_WHITE, "Dirígete al otro punto.");
					return 1;
				}
				else {
					Message(playerid, COLOR_GRAD2, "No has llegado al punto correcto.");
				    SetPlayerCheckpoint(playerid,1769.0547,-1736.0787,13.3828, 5.0);
				    return 1;
    			}
			}
			case 2:{
			    if(PlayerToPoint(10.0, playerid, 2195.5386,2456.9365,10.6719)){
					SetPVarInt(playerid, "Trailer_Route", 3);
					SetPlayerCheckpoint(playerid, -1295.7021,2702.5684,50.0625, 5.0);
					Message(playerid, COLOR_WHITE, "Dirígete al otro punto.");
					return 1;
				}
				else {
				    Message(playerid, COLOR_GRAD2, "No has llegado al punto correcto.");
				    SetPlayerCheckpoint(playerid,2195.5386,2456.9365,10.6719, 5.0);
				    return 1;
    			}
			}
			case 3:{
			    if(PlayerToPoint(10.0, playerid, -1295.7021,2702.5684,50.0625)){
					SetPVarInt(playerid, "Trailer_Route", 4);
					SetPlayerCheckpoint(playerid, -1570.0261,-2739.0039,48.5391, 5.0);
					Message(playerid, COLOR_WHITE, "Dirígete al otro punto.");
					return 1;
				}
				else {
				    Message(playerid, COLOR_GRAD2, "No has llegado al punto correcto.");
				    SetPlayerCheckpoint(playerid,-1295.7021,2702.5684,50.0625, 5.0);
				    return 1;
    			}
			}
			case 4:{
                if(PlayerToPoint(10.0, playerid, -1570.0261,-2739.0039,48.5391)){
					SetPVarInt(playerid, "Trailer_Route", 5);
					SetPlayerCheckpoint(playerid, -70.2621,-1131.0231,1.0781, 5.0);
					Message(playerid, COLOR_WHITE, "Dirígete al otro punto.");
					return 1;
				}
				else {
				    Message(playerid, COLOR_GRAD2, "No has llegado al punto correcto.");
				    SetPlayerCheckpoint(playerid,-1570.0261,-2739.0039,48.5391, 5.0);
				    return 1;
    			}
			}
			case 5:{
			    if(PlayerToPoint(10.0, playerid, -70.2621,-1131.0231,1.0781)){
					DeletePVar(playerid, "Trailer_Route");
					Message(playerid, COLOR_GRAD2, "Recorrido completado, has recibido un cheque de $3600.");
					PlayerInfo[playerid][pCheques] += 3600;
					SetVehicleToRespawn(carid);
					SetVehicleToRespawn((carid-1));
					return 1;
				}
				else {
				    Message(playerid, COLOR_GRAD2, "No has llegado al punto correcto.");
				    SetPlayerCheckpoint(playerid,-70.2621,-1131.0231,1.0781, 5.0);
				    return 1;
    			}
			}
		}
	}
	else if(Pandilleros(playerid) && GetPVarInt(playerid, "RecogiendoDrogas") == 1 || GetPlayerFactionType(playerid) == 2 && GetPVarInt(playerid, "RecogiendoDrogas") == 1)
	{
	    PlayerInfo[playerid][pRecogidos] += 1;
		if(PlayerInfo[playerid][pRecogidos] < 20){
		    new number = random(sizeof(PuntosDrogas));
   			SetPlayerCheckpoint(playerid, PuntosDrogas[number][0], PuntosDrogas[number][1], PuntosDrogas[number][2], 2.0);
		}
		else {
		    Message(playerid, COLOR_GRAD2, "* Has recogido ya 20 puntos, debes esperar 4 PayDay's mas para seguir.");
		    PlayerInfo[playerid][pRecoger] = 4;
		}
	    switch(GetPVarInt(playerid, "TipoDroga")){
	        case 1:{
	            new drogas = random(6)+1;
	            format(string, sizeof string, "~y~+%d Speed", drogas);
	            GText(playerid, string, 3000, 1);
	            PlayerInfo[playerid][pSpeed] += drogas;
	            return 1;
         	}
         	case 2:{
         	    new drogas = random(5)+1;
	            format(string, sizeof string, "~y~+%d Extasis", drogas);
	            GText(playerid, string, 3000, 1);
	            PlayerInfo[playerid][pEctasy] += drogas;
	            return 1;
          	}
          	case 3:{
          	    new drogas = random(5)+1;
	            format(string, sizeof string, "~y~+%d Ritalin", drogas);
	            GText(playerid, string, 3000, 1);
	            PlayerInfo[playerid][pRitalin] += drogas;
	            return 1;
 			}
 			case 4:{
          	    new drogas = random(4)+1;
	            format(string, sizeof string, "~y~+%d Heroina", drogas);
	            GText(playerid, string, 3000, 1);
	            PlayerInfo[playerid][pHeroina] += drogas;
	            return 1;
 			}
 			case 5:{
          	    new drogas = random(5)+1;
	            format(string, sizeof string, "~y~+%d Marihuana", drogas);
	            GText(playerid, string, 3000, 1);
				PlayerInfo[playerid][pMarihuana] += drogas;
	            return 1;
 			}
		}
	}
	return 0;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(pickupid == pMatI)
	{
 		new mats = random(3)+1;
		if(!Mafioso(playerid) && GetPlayerFactionType(playerid) != 1) return Message(playerid, COLOR_GRAD2, "¡No eres mafioso!");
 		if(GetPVarInt(playerid, "Delivery") > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
  		SetPVarInt(playerid, "Delivery", mats);
		Message(playerid, COLOR_WHITE, "Has recogido un paquete, ve y entregalo en el mercado negro.");
  		return 1;
	}
	else if(pickupid == pMatII)
	{
 		new mats = random(3)+1;
  		if(!Mafioso(playerid) && GetPlayerFactionType(playerid) != 1) return Message(playerid, COLOR_GRAD2, "¡No eres mafioso!");
   		if(GetPVarInt(playerid, "Delivery") > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
    	SetPVarInt(playerid, "Delivery", mats);
    	Message(playerid, COLOR_WHITE, "Has recogido un paquete, eve y entregalo en el mercado negro.");
    	return 1;
	}
	else if(pickupid == pMatIII)
	{
 		new mats = random(6)+1;
   		if(!Mafioso(playerid) && GetPlayerFactionType(playerid) != 1) return Message(playerid, COLOR_GRAD2, "¡No eres mafioso!");
    	if(GetPVarInt(playerid, "Delivery") > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
    	SetPVarInt(playerid, "Delivery", mats);
    	Message(playerid, COLOR_WHITE, "Has recogido un paquete, ve y entregalo en el mercado negro.");
    	return 1;
	}
	else if(pickupid == pMatIV)
	{
 		new mats = random(4)+1;
   		if(!Mafioso(playerid) && GetPlayerFactionType(playerid) != 1) return Message(playerid, COLOR_GRAD2, "¡No eres mafioso!");
    	if(GetPVarInt(playerid, "Delivery") > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
    	SetPVarInt(playerid, "Delivery", mats);
    	Message(playerid, COLOR_WHITE, "Has recogido un paquete, ve y entregalo en el mercado negro.");
    	return 1;
	}
	else if(pickupid == pMatV)
	{
 		new mats = random(3)+1;
   		if(!Mafioso(playerid) && GetPlayerFactionType(playerid) != 1) return Message(playerid, COLOR_GRAD2, "¡No eres mafioso!");
    	if(GetPVarInt(playerid, "Delivery") > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
    	SetPVarInt(playerid, "Delivery", mats);
    	Message(playerid, COLOR_WHITE, "Has recogido un paquete, ve y entregalo en el mercado negro.");
    	return 1;
	}
	return 0;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
     if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER)//O jogador entrou no veículo como motorista
    {
        PlayerTextDrawSetPreviewModel(playerid, TextVelocimetroP[playerid][2], GetVehicleModel(GetPlayerVehicleID(playerid)));
		new NV[30]; format(NV, sizeof(NV), "%s", NomeVeiculo(GetPlayerVehicleID(playerid)));
        PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][0], NV);
		new StrCombustivel[20]; format(StrCombustivel, sizeof(StrCombustivel), "%dL", Gas[GetPlayerVehicleID(playerid)]);
        PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][1], StrCombustivel);
        new Float:VidaV; GetVehicleHealth(GetPlayerVehicleID(playerid), VidaV);
        //VidaV * 100.0 / 1000.0;
        new Float:V1 = floatmul(VidaV, 100.0);
        new Float:V2 = floatdiv(V1, 1000.0);
        new StrPorcentagem[30]; format(StrPorcentagem, sizeof(StrPorcentagem), "%0.0f%s", V2, "%");
        PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][4], StrPorcentagem);
		new VDV[4]; format(VDV, sizeof(VDV), "%d", VelocidadeDoVeiculo(GetPlayerVehicleID(playerid)));
		PlayerTextDrawSetString(playerid, TextVelocimetroP[playerid][3], VDV);
        //
		for(new z; z < 11; z++)
		{
		TextDrawShowForPlayer(playerid, TextVelocimetro[z]);
		}
		for(new t; t < 5; t++)
		{
		    PlayerTextDrawShow(playerid, TextVelocimetroP[playerid][t]);
		}
		SetTimerEx("AttVelocimetro", 200, false, "d", playerid);
    }

	new string[128];
	new carprice;
	new engine,lights,alarm,doors,bonnet,boot,objective;
	new newcar = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    MsgL4L[playerid]=0; MensajeMuriendo[playerid] = 0;
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] != 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
				Bought(playerid, TransportCost[playerid]);
				Earn(TransportDriver[playerid], TransportCost[playerid]);
				format(string, sizeof(string), "~w~Te costo ~r~%d$",TransportCost[playerid]);
			    GameTextForPlayer(playerid, string, 5000, 1);
			    format(string, sizeof(string), "~w~Has ganado ~g~%d$",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
			    TextDrawHideForPlayer(playerid, Taximeter[playerid]);
				TextDrawHideForPlayer(TransportDriver[playerid], Taximeter[TransportDriver[playerid]]);
				TransportCost[playerid] = 0;	TransportTime[playerid] = 0;	TransportDriver[playerid] = 999;
				return 1;
			}
		}
		if(GetPVarInt(playerid, "Train_Route") > 0)
		{
		    Message(playerid, COLOR_WHITE, "Ruta tren finalizada");
		    SetVehicleToRespawn(GetPVarInt(playerid, "IDCarRoute"));
		    DisablePlayerCheckpoint(playerid);
		    DeletePVar(playerid, "Train_Route");
		    DeletePVar(playerid, "IDCarRoute");
			return 1;
		}
		if(GetPVarInt(playerid, "DrugFarming") > 0)
	 	{
	 	    DisablePlayerCheckpoint(playerid);
	 	    SetVehicleToRespawn(newcar);
	 	    DeletePVar(playerid, "DrugFarming");
	 	    Message(playerid, COLOR_WHITE, "¡Dejaste de cosechar!");
	 	    return 1;
	 	}
		if(GetPVarInt(playerid, "Plane_Route") > 0)
		{
		    Message(playerid, COLOR_WHITE, "¡Has abandonado el avión!");
		    SetVehicleToRespawn(GetPVarInt(playerid, "IDCarRoute"));
		    DisablePlayerCheckpoint(playerid);
		    DeletePVar(playerid, "Plane_Route");
		    DeletePVar(playerid, "IDCarRoute");
			return 1;
	 	}
	 	if(GetPVarInt(playerid, "UsageCarWash") > 0)
		{
      		AutoLavado = -1;
      		DisablePlayerCheckpoint(playerid);
	    	DeletePVar(playerid, "UsageCarWash");
	    	if(GetPVarType(playerid, "UpdatesBar") == 1)
			{
 				KillTimer(GetPVarInt(playerid, "TimerCarWash"));
   				DestroyProgressBar(Lavando[playerid]);
     			Lavando[playerid] = INVALID_BAR_ID;
      			DeletePVar(playerid, "TimerCarWash");
	    		DeletePVar(playerid, "UpdatesBar");
  			}
  			return 1;
		}
	}
	else if(newstate == PLAYER_STATE_PASSENGER)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0 && Taxi_Vehicle(vehicleid))
	            {
	                if(GetPlayerMoney(playerid) < TarifaTaxi[i])
	                {
	                    format(string, sizeof(string), "* Necesitas %d$ para pagar el taxi!", TarifaTaxi[i]);
						Message(playerid, COLOR_NEGATIVE, string);
						RemovePlayerFromVehicle(playerid);
						return 1;
	                }
	                else
	                {
                		TransportTime[playerid] = 1;
                		TransportCost[playerid] = TarifaTaxi[i];
                		TransportDriver[playerid] = i;
                   		format(string, sizeof(string), "* Has entrado al taxi. Tarifa: %d", TarifaTaxi[i]);
						Message(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s entró a su taxi.", PlayerName(playerid));
						Message(i, COLOR_WHITE, string);
						TextDrawShowForPlayer(playerid, Taximeter[playerid]);
						TextDrawShowForPlayer(i, Taximeter[i]);
						format(string, sizeof(string), "   A pagar: ~g~%d$ ~w~- Tiempo: ~b~%d",TransportCost[playerid],TransportTime[playerid]);
			   			TextDrawSetString(Taximeter[playerid], string);
					    TextDrawSetString(Taximeter[i], string);
						return 1;
	                }
	            }
	            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416)
				{
	    			if(GetPlayerVehicleSeat(playerid) >= 2)
	    			{
	        			LoadObjects(playerid);
    					SetPosEx(playerid, 2003.3566,2288.7163,1011.1256,0,0,GetPlayerVehicleID(playerid));
						SetPVarInt(playerid, "InAmbu", GetPlayerVehicleID(playerid));
						return 1;
					}
				}
	        }
	    }
	}
	else if(newstate == PLAYER_STATE_DRIVER)
	{
		GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(newcar,engineOn[newcar],lights,alarm,doors,bonnet,boot,objective);
		if(IsABike(newcar))
		{
		    SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
  }
  if(Hire_Vehicle(newcar))
		{
			if(!HireState[newcar])
			{
				switch(newcar)
				{
				    case 1..30: { carprice = 50; format(string, sizeof(string), "\t\tVehiculo de Renta\n{FFFFFF}Puedes rentar por 10 minutos (%d)", carprice); }
				}
				ShowPlayerDialog(playerid, RENTA_VEHICULOS, DIALOG_STYLE_MSGBOX, "Renta de Vehículos", string, "Aceptar", "Cancelar");
			}
			return 1;
		}
		else if(IsACamion(newcar) && PlayerInfo[playerid][pJob] == 8)
		{
		    if(PlayerIsRuta[playerid] == 0)
		    {
				SetPVarInt(playerid, "Camion", newcar);
		    	ShowPlayerDialog(playerid, CARGAR_CAMION, DIALOG_STYLE_LIST, "{FFFFFF}Selecciona la carga", "{FFFFFF}Ropa - Binco\nComida y Accesorios - 24-7\nMedicamentos - Farmacia\nMateriales - Anmunation\nMateriales Ilegales", "Aceptar", "Cancelar");
		    	return 1;
   			}
   			else { Message(playerid, COLOR_GRAD2, "¡Debes terminar la entrega que tienes pendiente!"); return 1; }
  		}
  		else if(IsABasurero(newcar) && PlayerInfo[playerid][pJob] == 2)
  		{
  		    if(BasuraPunto[playerid] < 1)
  		    {
  		        SetPVarInt(playerid, "Basurero", newcar);
				ShowPlayerDialog(playerid, BASURA, DIALOG_STYLE_MSGBOX, "Recogedor de Basura", "{FFFFFF}¿Estás seguro que deseas empezar a trabajar como recogedor de basura?", "Si", "No");
				return 1;
			} else { Message(playerid, COLOR_GRAD2, "¡Ya estas recogiendo basura!"); return 1; }
	    }
		// ========================== Info Embargos & Multa ================================ //
		else if(PlayerVehicleInfo[playerid][0][pvID] == newcar || PlayerVehicleInfo[playerid][1][pvID] == newcar || PlayerVehicleInfo[playerid][2][pvID] == newcar || PlayerVehicleInfo[playerid][3][pvID] == newcar)
		{
			if(PlayerVehicleInfo[VehicleOwner[newcar]][VehicleSlot[newcar]][pvEmbargo] > 0 || PlayerVehicleInfo[VehicleOwner[newcar]][VehicleSlot[newcar]][pvMulta] > 0)
			{
			    Message(playerid, COLOR_YELLOW, "-------------------------------------------");
			    format(string, sizeof(string), "  Embargos: %d <> Multa: %d$", PlayerVehicleInfo[VehicleOwner[newcar]][VehicleSlot[newcar]][pvEmbargo], PlayerVehicleInfo[VehicleOwner[newcar]][VehicleSlot[newcar]][pvMulta]);
			    Message(playerid, COLOR_WHITE, string);
			    Message(playerid, COLOR_YELLOW, "-------------------------------------------");
				return 1;
			}
        }
        // ============================ Embargos ============================== //
       	else if(OwnableVehicle[newcar] && PlayerVehicleInfo[VehicleOwner[newcar]][VehicleSlot[newcar]][pvEmbargo] > 2)
		{
			Message(playerid, COLOR_GRAD2, "Este vehículo esta embargado! No puede ser conducido.");
			RemovePlayerFromVehicle(playerid);
			return 1;
		}
  		// -================================ Carros de Facciones ================================- //
		else if(SAMD_Vehicle(newcar))
  		{
 		    if(Team_SAMUR(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(GS_Vehicle(newcar))
  		{
  		    if(Team_Groove(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(Gobierno_Vehicle(newcar))
  		{
  		    if(Gobierno(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(LK_Vehicle(newcar))
  		{
  		    if(Team_LK(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		/*else if(Hitman_Vehicle(newcar))
		{
  		    if(Hitman(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}*/
		else if(Mecanico_Vehicle(newcar))
  		{
  		    if(Team_Mecanicos(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(Ita_Vehicle(newcar))
  		{
  		    if(Mafia_Italiana(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(Rus_Vehicle(newcar))
  		{
  		    if(Mafia_Rusa(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(CNN_Vehicle(newcar))
  		{
  		    if(Journalist(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(SAEM_Vehicle(newcar))
		{
  		    if(Team_NG(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(IsATerroristas(newcar))
		{
		    if(Terroristas(playerid)) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
  		}
		else if(IsATrain(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 1) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres Conductor de Tren!");return 1;
		}
		else if(IsABasurero(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 2) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres recogedor de basura!");return 1;
		}
		else if(IsAPizzabike(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 6) { return 1; }
            else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres Pizzero!");return 1;
		}
		else if(IsACamion(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 8) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres camionero!");return 1;
		}
		else if(IsABoatFish(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 7) { return 1;}
            else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres pescador!");return 1;
      	}
		else if(Taxi_Vehicle(newcar))
  		{
  		    if(PlayerInfo[playerid][pJob] == 9) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres taxista!"); return 1;
		}
		else if(IsATrailer(newcar))
  		{
  		    if(PlayerInfo[playerid][pJob] == 11) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "No eres Conductor de Trailers.");return 1;
    	}
		else if(IsAPlane(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 3 || PlayerInfo[playerid][pFlyLic] > 0 && PlayerInfo[playerid][pJob] == 0) { return 1; }
		    else { RemovePlayerFromVehicle(playerid); TogglePlayerControllable(playerid, 1); return 1; }
		}
		else if(Faction_One(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
  		}
  		else if(Faction_Two(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
  		}
  		else if(Faction_Three(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
  		}
  		else if(Faction_Four(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
  		}
  		else if(Faction_Five(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
  		}
		if(OwnableVehicle[newcar]) format(string, 16, "%s", PlayerVehicleInfo[VehicleOwner[newcar]][VehicleSlot[newcar]][pvName]);
		else format(string, 16, "%s", GetVehicleFriendlyName(newcar));
		GText(playerid, string, 3000, 1);
	}
	else if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		return 1;
	}
	return 1;
}

public DiseaseSystem()
{
	new string[80];
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(IsPlayerConnected(j))
	    {
		    new Float:health;
		    GetPlayerHealth(j, health);
			// -============================== Cancer ================================- //
			if(PlayerInfo[j][pCancer] > 250)
			{
				if(PlayerInfo[j][pCancer] > 250 && PlayerInfo[j][pCancer] < 300)
				{
					if(CancerEffect[j] > 0) CancerEffect[j] -= 1;
    				else if(CancerEffect[j] == 0)
				    {
						SetHP(j, health-20);
						format(string, sizeof(string), "* %s tose.", PlayerName(j));
						ProxDetectorEx(30.0, j, string, COLOR_PURPLE);
						CancerEffect[j] = 0;
						PlayerInfo[j][pCancer] += 2;
						CancerEffect[j] = 8;
					}
				}
				else if(PlayerInfo[j][pCancer] > 300 && PlayerInfo[j][pCancer] < 400)
				{
				    if(CancerEffect[j] > 0) CancerEffect[j] -= 1;
    				else if(CancerEffect[j] == 0)
    				{
						SetHP(j, health-30);
						format(string, sizeof(string), "* %s tose.", PlayerName(j));
						ProxDetectorEx(30.0, j, string, COLOR_PURPLE);
						CancerEffect[j] = 0;
						PlayerInfo[j][pCancer] += 4;
						CancerEffect[j] = 8;
					}
				}
				else if(PlayerInfo[j][pCancer] > 400 && PlayerInfo[j][pCancer] < 600)
				{
				    if(CancerEffect[j] > 0) CancerEffect[j] -= 1;
    				else if(CancerEffect[j] == 0)
    				{
						SetHP(j, health-40);
						format(string, sizeof(string), "* %s tose.", PlayerName(j));
						ProxDetectorEx(30.0, j, string, COLOR_PURPLE);
						CancerEffect[j] = 0;
						PlayerInfo[j][pCancer] += 6;
						CancerEffect[j] = 8;
					}
				}
			}
			// -================================ Epilepsia ===============================- //
			if(PlayerInfo[j][pEpilepsia] > 250)
			{
				if(cEpilepsia[j] == 0)
				{
					if(PlayerInfo[j][pEpilepsia] > 250 && PlayerInfo[j][pEpilepsia] < 350)
					{
					    if(EpilepsiaCrack[j] > 0) EpilepsiaCrack[j] -= 1;
					    else if(EpilepsiaCrack[j] == 0)
				    	{
		           			ApplyAnimation(j, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 1, 60000);
		           			ApplyAnimation(j, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 1, 60000);
					        format(string, sizeof(string), "* %s se cae y empieza a echar saliva.", PlayerName(j));
							ProxDetectorEx(30.0, j, string, COLOR_PURPLE);
							EpilepsiaCrack[j] = 0;
							PlayerInfo[j][pEpilepsia] += 5;
							SetHP(j, health-30);
							SetPlayerDrunkLevel(j, 30000);
							EpilepsiaCrack[j] = 8;
						}
					}
					else if(PlayerInfo[j][pEpilepsia] > 350 && PlayerInfo[j][pEpilepsia] < 600)
					{
					    if(EpilepsiaCrack[j] > 0) EpilepsiaCrack[j] -= 1;
					    else if(EpilepsiaCrack[j] == 0)
					    {
					        ApplyAnimation(j, "CRACK", "crckdeth1", 2.5, 0, 0, 0, 1, 90000);
					        ApplyAnimation(j, "CRACK", "crckdeth1", 2.5, 0, 0, 0, 1, 90000);
					        format(string, sizeof(string), "* %s se cae y empieza a echar saliva.", PlayerName(j));
							ProxDetectorEx(30.0, j, string, COLOR_PURPLE);
							EpilepsiaCrack[j] = 0;
							PlayerInfo[j][pEpilepsia] += 10;
							SetHP(j, health-40);
							SetPlayerDrunkLevel(j, 40000);
							EpilepsiaCrack[j] = 8;
						}
					}
					else if(PlayerInfo[j][pEpilepsia] > 600)
					{
					    if(EpilepsiaCrack[j] > 0) EpilepsiaCrack[j] -= 1;
					    else if(EpilepsiaCrack[j] == 0)
					    {
					        ApplyAnimation(j, "CRACK", "crckdeth3", 2.5, 0, 0, 0, 1, 120000);
					        ApplyAnimation(j, "CRACK", "crckdeth3", 2.5, 0, 0, 0, 1, 120000);
					        format(string, sizeof(string), "* %s se cae y empieza a echar saliva.", PlayerName(j));
							ProxDetectorEx(30.0, j, string, COLOR_PURPLE);
							EpilepsiaCrack[j] = 0;
							PlayerInfo[j][pEpilepsia] += 15;
							SetHP(j, health-60);
							SetPlayerDrunkLevel(j, 50000);
							EpilepsiaCrack[j] = 8;
						}
					}
				}
			}
			// -====================== Gripe =======================- //
			if(PlayerInfo[j][pGripe] > 15)
			{
			    format(string, sizeof(string), "* %s estornuda fuertemente.", PlayerName(j));
				ProxDetectorEx(20.0, j, string, COLOR_PURPLE);
				SetHP(j, health-1);
			}
			// -==================== Infeccion ========================- //
			if(PlayerInfo[j][pInfeccion] > 15)
			{
			    if(PlayerInfo[j][pInfeccion] > 15 && PlayerInfo[j][pInfeccion] < 21)
			    {
			    	if(Infeccion[j] == 10)
			    	{
			        	format(string, sizeof(string), "* %s se siente un poco mareado y tambalea.", PlayerName(j));
						ProxDetectorEx(20.0, j, string, COLOR_PURPLE);
						PlayerInfo[j][pInfeccion] += 2;
						SetPlayerDrunkLevel(j, 10000);
						SetHP(j, health-20);
						Infeccion[j] = 0;
					}
					Infeccion[j] += 1;
				}
				else if(PlayerInfo[j][pInfeccion] > 20)
				{
				    if(Infeccion[j] == 10)
				    {
				        format(string, sizeof(string), "* %s se siente un poco mareado y se desmaya.", PlayerName(j));
						ProxDetectorEx(20.0, j, string, COLOR_PURPLE);
						ApplyAnimation(j, "CRACK", "crckdeth3", 2.5, 0, 0, 0, 1, 120000);
      					ApplyAnimation(j, "CRACK", "crckdeth3", 2.5, 0, 0, 0, 1, 120000);
						PlayerInfo[j][pInfeccion] += 2;
						SetPlayerDrunkLevel(j, 25000);
						SetHP(j, health-30);
						Infeccion[j] = 0;
					}
					Infeccion[j] += 1;
				}
			}
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(GetPVarInt(playerid, "UsingBelt") == 1) DeletePVar(playerid, "UsingBelt");
	TogglePlayerControllable(playerid, 1);
	StopAudioStreamForPlayer(playerid);
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(gPlayerLogged[playerid] == 1)
	{
		SpawnPlayer(playerid);
	}
	return 1;
}

function OtherTimer()
{
	AntiCheat();
    new string[100], Float:armor;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new vehicleid = GetPlayerVehicleID(i);
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
			    if(Gas[vehicleid] < 10) PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
			}
			if(Tied[i] > 0)
			{
			    TogglePlayerControllable(i, 0);
			}
			if(CellTime[i] > 0)
			{
				if(CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
				}
				if(Mobile[Mobile[i]] == i)
				{
				    if(CallCost[i] >= PlayerInfo[i][pMinutes]) { StopCall(i); Message(i, COLOR_WHITE, "{018CFE}OTECEL: {FFFFFF}Se te acabó el saldo, debes realizar una recarga."); }
					else { CallCost[i] = CallCost[i]+1; }
				}
				CellTime[i] = CellTime[i]+1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
				{
				    if(IsPlayerConnected(Mobile[i]))
				    {
						format(string, sizeof(string), "* El teléfono de %s suena", PlayerName(Mobile[i]));
						ProxDetectorEx(30.0, Mobile[i], string, COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(string, sizeof(string), "~w~La llamada te costo~n~~r~$%d",CallCost[i]/10);
				GameTextForPlayer(i, string, 5000, 1);
				PlayerInfo[i][pMinutes] -= CallCost[i];
				CallCost[i] = 0;
			}
			if(engineOn[vehicleid] && Gas[vehicleid] == 0 && IsPlayerInAnyVehicle(i))
 			{
				ApagarMotor(vehicleid);
				GameTextForPlayer(i,"~w~vehiculo sin~n~~r~gasolina",1500,1);
			}
			if (PlayerToPoint(2.0, i, 1425.2998,-1291.2107,13.5560))
			{
				GameTextForPlayer(i, "~b~Hitman ~w~Deje su mensaje~n~{DC092F}Utilize:{2471A3} ~y~~n~/hitman (id) (Monto)", 3000, 3);
			}
			if(AFK[i] > 0){
			    if(AFKTime[i] == gettime())
				{
        			Message(i, COLOR_WHITE, "{FF9562}Has sido kickeado del servidor por permanecer más de 10 minutos en estado AFK.");
					KickTimer(i);
					continue;
     			}
			}
			GetPlayerArmour(i, armor);
			if(HasArmor[i] == 1 && armor < 1)
			{
			    HasArmor[i] = 0;
			    RemovePlayerAttachedObject(i, 1);
			    Att_Obj_Slot_1[i] = "Vacío";
   			}
			if(PlayerInfo[i][pBusqueda] > 0)
			{
			    SetPlayerWantedLevel(i, PlayerInfo[i][pBusqueda]);
			}
			if(PlayerDrunk[i] > 0)
			{
				if(PlayerDrunk[i] > 9)
				{
				    if(PlayerDrunkTime[i] > 20)
				    {
			    		ApplyAnimation(i,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[i]*1000);
			    		SetPlayerDrunkLevel(i, PlayerDrunk[i]*1000);
			    		PlayerDrunk[i] = PlayerDrunk[i]-1;
			    		PlayerDrunkTime[i] = 0;
					}
					PlayerDrunkTime[i] = PlayerDrunkTime[i]+1;
				}
				if(PlayerDrunk[i] < 10 && PlayerDrunk[i] > 0)
				{
			    	if(PlayerDrunkTime[i] > 30)
			    	{
				        PlayerDrunk[i] = PlayerDrunk[i]-1;
				        PlayerDrunkTime[i] = 0;
					}
					PlayerDrunkTime[i] = PlayerDrunkTime[i]+1;
				}
			}
			if(UsingRitalin[i] > 0)
			{
			    if(UsingRitalin[i] == 200 && armor < 101) { SetPlayerArmour(i, armor+20); }
			    if(UsingRitalin[i] == 100 && armor < 101) { SetPlayerArmour(i, armor+20); }
			    UsingRitalin[i] -= 1;
			}
			if(UsingRitalin[i] == 0 &&RitalinEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    GText(i, "~w~Efecto ~b~ritalin ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
       			SetPlayerWeather(i, DefaultWeather);
       			UsingRitalin[i] = 0;
			    RitalinEffect[i] = 0
			}
			if(UsingHeroina[i] > 0)
			{
			    new Float:PlayerHealth;
			    GetPlayerHealth(i, PlayerHealth);
			    new crack = random(10);
			    if(crack == 2) { ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 0, 5000); }
			    if(HeroinaBeat[i] == 1) { SetHP(i, PlayerHealth-1);}
			    UsingHeroina[i] -= 1;
			}
			if(UsingHeroina[i] == 0 &&HeroinaEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    GText(i, "~w~Efecto ~g~heroina ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
       			UsingHeroina[i] = 0;
			    HeroinaEffect[i] = 0
			    HeroinaBeat[i] = 0;
			    SetHP(i, 25);
			}
			if(UsingMarihuana[i] > 0)
			{
			    new Float:PlayerHealth;
			    GetPlayerHealth(i, PlayerHealth);
			    new crack = random(10);
			    if(crack == 2) { ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 0, 5000); }
			    if(MarihuanaBeat[i] == 1) { SetHP(i, PlayerHealth-1);}
			    UsingMarihuana[i] -= 1;
			}
			if(UsingMarihuana[i] == 0 &&MarihuanaEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    GText(i, "~w~Efecto ~g~marihuana ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
       			UsingMarihuana[i] = 0;
			    MarihuanaEffect[i] = 0
			    MarihuanaBeat[i] = 0;
			    SetHP(i, 25);
			    ClearAnimations(i);
			}
			if(NoAntiCheat[i] > 0) NoAntiCheat[i] -= 1;
			if(RecentlyShot[i] == 1)	RecentlyShot[i] = 0;
			new Float:Life;
			GetPlayerHealth(i,Life);
			{
				if(Life < 15.1 && First_Spawn[i] == 0)
				{
				    ForbidHandsUp[i] = 1;
					if(IsPlayerInAnyVehicle(i))
					{
						GetPlayerHealth(i, Life);
						SetHP(i, Life-1.0);
					}
					if(MensajeMuriendo[i]==0 && gPlayerLogged[i] == 1)
					{
					    if(!IsPlayerInAnyVehicle(i))
					    {
							Message(i,COLOR_LIGHTRED,"Tu estado actual es crítico. Te estás muriendo!");
							Message(i,COLOR_LIGHTRED,"Ojalá alguien pueda llamar a una ambulancia, y rápido!");
							Message(i,COLOR_LIGHTRED,"Si no es así, morirás en poco tiempo!");
							ApplyAnimation(i, "CRACK", "crckdeth1", 2.5, 1, 0, 1, 0, 0);
							MensajeMuriendo[i]=1;
							if(MsgL4L[i] == 0)
							{
							    if(Life < 16 && Life > 12) { Left4Life[i] = 180; }
							    if(Life < 13 && Life > 8) { Left4Life[i] = 149; }
							    if(Life <  9) { Left4Life[i] = 99; }
								MsgL4L[i] = 1;
							}
						}
					    if(IsPlayerInAnyVehicle(i))
					    {
							Message(i,COLOR_LIGHTRED,"Tu estado actual es crítico. Te estás muriendo!");
							Message(i,COLOR_LIGHTRED,"Si sigues en el coche tu vida disminuairá más rapido!");
							Message(i,COLOR_LIGHTRED,"Intenta bajar inmediatamente!");
							MensajeMuriendo[i]=1;
						}
					}
				}
				else{MensajeMuriendo[i]=0; ForbidHandsUp[i] = 0; MsgL4L[i] = 0; Left4Life[i] = 0;}
			}
		}
	}
	return 1;
}

function TimerGlobal()
{
    if(TaxiSlot1 < 999) { TiempoSlot1 += 1; }
	if(TaxiSlot2 < 999) { TiempoSlot2 += 1; }
	if(TaxiSlot3 < 999) { TiempoSlot3 += 1; }
	if(TaxiSlot4 < 999) { TiempoSlot4 += 1; }
	if(TaxiSlot5 < 999) { TiempoSlot5 += 1; }
	if(TaxiSlot6 < 999) { TiempoSlot6 += 1; }
	if(TaxiSlot7 < 999) { TiempoSlot7 += 1; }
	if(TaxiSlot8 < 999) { TiempoSlot8 += 1; }
	new string[80];
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(UsedFind[i] > 0)
		    {
		        UsedFind[i]--;
		    }
            if(TransportTime[i] > 0)
			{
			    if(TransportTime[i] >= 10)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] != 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
						    TransportCost[i] = TransportCost[i]+TarifaTaxi[TransportDriver[i]];
						}
					}
				}
				TransportTime[i] = TransportTime[i]+1;
			    format(string, sizeof(string), "   A pagar: ~g~%d$ ~w~- Tiempo: ~b~%d",TransportCost[i], TransportTime[i]);
			    TextDrawSetString(Taximeter[i], string);
			    TextDrawSetString(Taximeter[TransportDriver[i]], string);
			}
			if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0)
				{
					PlayerInfo[i][pJailTime]--;
				}
				if(PlayerInfo[i][pJailTime] <= 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
				    switch(PlayerInfo[i][pJailed])
				    {
				        case 1:
				        {
				            SetPlayerInterior(i, 0);
					    	SetPlayerPos(i, 1549.6013,-1681.5797,13.5563);
			    		}
				        case 3:
				        {
							SetPosEx(i,243.5500,71.0335,1003.6406,225.9520,6,0);
							PlayerInfo[i][pBusqueda] = 0;
							SetPlayerWantedLevel(i, 0);
						}
						case 4:
						{
							SetPosEx(i,230.1667,141.7600,1003.0234,280.4726,3,0);
							PlayerInfo[i][pBusqueda] = 0;
							SetPlayerWantedLevel(i, 0);
						}
						case 5:
						{
							SetPosEx(i,2440.4939,2371.7617,11.1414,87.1910,0,0);
							PlayerInfo[i][pBusqueda] = 0;
							SetPlayerWantedLevel(i, 0);
						}
					}
					PlayerInfo[i][pJailed] = 0;
					Message(i, COLOR_GRAD1,"Warden: Usted ha sido dejado en libertad.");
					Message(i, COLOR_GRAD1,"Warden: Piense un tiempo, antes de que usted cometa un crimen.");
					GameTextForPlayer(i, "~g~Dejado En Libertad~n~~w~Trate de ser un mejor ciudadano", 5000, 1);
					SetPlayerColor(i,TEAM_HIT_COLOR);
				}
			}
			if(Left4Life[i] > 0)
			{
				switch(Left4Life[i])
				{
				    case 1:{
						format(string, sizeof(string), "* %s muere desangrado.", PlayerName(i));
		    			ProxDetectorEx(30.0, i, string, COLOR_PURPLE);
					    SetHP(i, 0);
						Left4Life[i] = 0;
					}
					case 30:
					{
						format(string, sizeof(string), "* %s agoniza lentamente.", PlayerName(i));
					    ProxDetectorEx(30.0, i, string, COLOR_PURPLE);
        				new Float:PlayerHealth;
					    GetPlayerHealth(i, PlayerHealth)
                	    SetHP(i, PlayerHealth-5);
                    	if(Rescued[i] == 0)
                    	{
	                    	ApplyAnimation(i, "CRACK", "crckdeth4", 2.5, 1, 0, 1, 0, 0);
    	                	ApplyAnimation(i, "CRACK", "crckdeth4", 2.5, 1, 0, 1, 0, 0);
					 	}
					}
					case 100:
					{
						format(string, sizeof(string), "* %s empieza a sangrar más.", PlayerName(i));
					    ProxDetectorEx(30.0, i, string, COLOR_PURPLE);
					    new Float:PlayerHealth;
					    GetPlayerHealth(i, PlayerHealth)
                	    SetHP(i, PlayerHealth-3);
                    	if(Rescued[i] == 0)
                    	{
	                    	ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
    	                	ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
        	            }
					}
					case 150:
					{
						format(string, sizeof(string), "* %s se encuentra incosciente y sangrando.", PlayerName(i));
					    ProxDetectorEx(30.0, i, string, COLOR_PURPLE);
					    new Float:PlayerHealth;
					    GetPlayerHealth(i, PlayerHealth)
                	    SetHP(i, PlayerHealth-2);
                    	if(Rescued[i] == 0)
                    	{
	                    	ApplyAnimation(i, "CRACK", "crckdeth1", 2.5, 1, 0, 1, 0, 0);
    	                	ApplyAnimation(i, "CRACK", "crckdeth1", 2.5, 1, 0, 1, 0, 0);
					 	}
					}
				}
				Left4Life[i] -= 1;
			}
			if(BasuraPunto[i] > 0 && TimerBasura[i] > 0)
			{
			    TimerBasura[i] -= 1;
				if(TimerBasura[i] == 0)
				{
				    TogglePlayerControllable(i, 1);
				    GText(i, "~y~Dirigete hasta el siguiente punto", 3000, 3);
				    switch(BasuraPunto[i])
	    			{
	        			case 1:{
	            			SetPlayerCheckpoint(i, 2717.6382,-2007.8524,13.1123, 5.0);
	            			BasuraPunto[i] = 2;
         				}
			         	case 2:{
	            			SetPlayerCheckpoint(i, 2449.5056,-1728.4385,13.2896, 5.0);
	            			BasuraPunto[i] = 3;
    	     			}
	    		     	case 3:{
		            		SetPlayerCheckpoint(i, 2374.1885,-1271.7231,23.6024, 5.0);
	        	    		BasuraPunto[i] = 4;
         				}
			         	case 4:{
	        			    SetPlayerCheckpoint(i, 1862.7455,-1117.5304,23.5488, 5.0);
	            			BasuraPunto[i] = 5;
         				}
			         	case 5:{
	        			    SetPlayerCheckpoint(i, 1085.9076,-1055.2142,30.5625, 5.0);
	        			    BasuraPunto[i] = 6;
         				}
			         	case 6:{
				            SetPlayerCheckpoint(i, 624.0922,-1381.5123,13.3082, 5.0);
	            			BasuraPunto[i] = 7;
         				}
			         	case 7:{
	            			SetPlayerCheckpoint(i, 699.8269,-1768.7094,13.3033, 5.0);
	        			    BasuraPunto[i] = 8;
         				}
			         	case 8:{
	            			SetPlayerCheckpoint(i, 1226.8656,-1855.9769,13.1494, 5.0);
	            			BasuraPunto[i] = 9;
         				}
			         	case 9:{
	        			    SetPlayerCheckpoint(i, 1692.9868,-1825.9608,13.1495, 5.0);
	            			BasuraPunto[i] = 10;
         				}
			         	case 10:{
	            			SetPlayerCheckpoint(i, 2173.0698,-1897.6833,13.1100, 5.0);
	            			BasuraPunto[i] = 11;
         				}
			         	case 11:{
	            			SetPlayerCheckpoint(i, 2190.2854,-1995.5562,13.3135, 5.0);
	            			BasuraPunto[i] = 12;
         				}
					}
				}
			}
			if(PlayerIsRuta[i] == 1 && PlayerCargando[i] >= 1)
			{
				PlayerCargando[i] -= 1;
   				if(PlayerCargando[i] >= 1)
	    		{
		    		SetProgressBarValue(Cargando[i], 10-PlayerCargando[i]);
    	   			UpdateProgressBar(Cargando[i], i);
	    		}
		    	else if(PlayerCargando[i] == 0)
		    	{
 	    			SetProgressBarValue(Cargando[i], 10);
        			UpdateProgressBar(Cargando[i], i);
          			SetTimerEx("DestroyProgg", 1000, false, "i", i);
					PlayerIsRuta[i] = 2;
					switch(Mercancia[i])
					{
					    case 1:
					    {
							new point = random(2);
							if(point == 1) SetPlayerCheckpoint(i, 2245.7646,-1658.8499,15.2865, 5.0);
							else SetPlayerCheckpoint(i, 454.2690,-1502.2506,30.8709, 5.0);
 							Message(i, COLOR_WHITE, "¡Has cargado tu camion con prendas de vestir, ve y entregalas a binco!");
						}
						case 2:
						{
	    					new mappo = random(2);
							if(mappo == 1) SetPlayerCheckpoint(i, 1841.0033,-1863.2201,13.3897, 5.0);
							else SetPlayerCheckpoint(i, 1314.4264,-918.9805,38.0876, 5.0);
	    					Message(i, COLOR_WHITE, "¡Has cargado tu camion con comida y accesorios, ve y entregalas al 24-7!");
						}
						case 3:
						{
    						SetPlayerCheckpoint(i, 1231.8279,-1276.1675,13.3828, 5.0);
					    	Message(i, COLOR_WHITE, "¡Has cargado tu camion con medicamentos, ve y entregalas a la farmacia!");
						}
						case 4:
						{
		    				SetPlayerCheckpoint(i, 1361.2109,-1279.8762,13.3828, 5.0);
						    Message(i, COLOR_WHITE, "¡Has cargado tu camion con materiales armamentisticos, ve y entregalos a ammunation!");
						}
						case 5:
						{
							SetPlayerCheckpoint(i, -84.9333,-1572.7817,2.6107, 5.0);
			    			Message(i, COLOR_WHITE, "¡Has cargado tu camion con materiales ilegales, ve y entregalos pero ten cuidado con la policia!");
						}
					}
    			}
			}
			if(PlayerIsRuta[i] == 2 && PlayerDescargando[i] >= 1)
			{
  				PlayerDescargando[i] -= 1;
	    		if(PlayerDescargando[i] >= 1)
		    	{
	    			SetProgressBarValue(Cargando[i], PlayerDescargando[i]);
	       			UpdateProgressBar(Cargando[i], i);
	    		}
	    		else if(PlayerDescargando[i] == 0)
	    		{
	 	    		DestroyProgressBar(Cargando[i]);
					Cargando[i] = INVALID_BAR_ID;
					TogglePlayerControllable(i, 1);
					PlayerIsRuta[i] = 3;
					SetPlayerCheckpoint(i, 2224.5657,-2636.0427,13.4365, 8.0);
					Message(i, COLOR_WHITE, "¡Has entregado la carga, ahora regresa a la estacion por tu paga y recuerda regresar con el camión!");
	    		}
			}
		}
	}
	return 1;
}

public CheckGas()
{
	new engine,lights,alarm,doors,bonnet,boot,objective, panels, tires;
	for(new i=0;i<MAX_VEHICLES;i++)
	{
	    if(VehicleSpawned[i])
	    {
			if(engineOn[i] == 1)
			{
				if(Gas[i] >= 1 && !IsAPlane(i) && !IsATrain(i) && !IsABike(i))
				{
					Gas[i] -= 2;
				}
				if(OwnableVehicle[i] && !IsABike(i))
				{
				    PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvBattery] -= 2;
					if(PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvBattery] < 40)
					{
						GetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(i,0,lights,alarm,doors,bonnet,boot,objective);
						engineOn[i] = false;
					}
					if(NoWheels[i] > 0)
					{
		        		new component = GetVehicleComponentInSlot(i, CARMODTYPE_WHEELS);
		        		GetVehicleDamageStatus(i, panels, doors, lights, tires);
	    	    		if (component == 1025)
	        			{
							UpdateVehicleDamageStatus(i, panels, doors, lights, 15);
    						SetVehicleVelocity(i, 0.0, 0.0, 0.0);
		        		}
		    	    	else
	    	    		{
		    	    	    NoWheels[i] = 0;
    		            	UpdateVehicleDamageStatus(i, panels, doors, lights, 0);
						}
	        		}
    			}
			}
		}
	}
	CheckCarHealth();
	return 1;
}

public SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pJailed] < 1)
	    {
   			if (PlayerInfo[playerid][pWeapon] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon], PlayerInfo[playerid][pAmmo]);
				PlayerInfo[playerid][pWeapon] = 0; PlayerInfo[playerid][pAmmo] = 0;
			}
			if (PlayerInfo[playerid][pWeapon2] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon2], PlayerInfo[playerid][pAmmo2]);
				PlayerInfo[playerid][pWeapon2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
			}
			if (PlayerInfo[playerid][pWeapon3] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon3], PlayerInfo[playerid][pAmmo3]);
				PlayerInfo[playerid][pWeapon3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
			}
			if (PlayerInfo[playerid][pWeapon4] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon4], PlayerInfo[playerid][pAmmo4]);
				PlayerInfo[playerid][pWeapon4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
			}
			if (PlayerInfo[playerid][pWeapon5] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon5], PlayerInfo[playerid][pAmmo5]);
				PlayerInfo[playerid][pWeapon5] = 0; PlayerInfo[playerid][pAmmo5] = 0;
			}
			if (PlayerInfo[playerid][pWeapon6] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon6], PlayerInfo[playerid][pAmmo6]);
				PlayerInfo[playerid][pWeapon6] = 0; PlayerInfo[playerid][pAmmo6] = 0;
			}
			if (PlayerInfo[playerid][pWeapon7] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon7], PlayerInfo[playerid][pAmmo7]);
				PlayerInfo[playerid][pWeapon7] = 0; PlayerInfo[playerid][pAmmo7] = 0;
			}
			if (PlayerInfo[playerid][pWeapon8] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon8], PlayerInfo[playerid][pAmmo8]);
				PlayerInfo[playerid][pWeapon8] = 0; PlayerInfo[playerid][pAmmo8] = 0;
			}
			if (PlayerInfo[playerid][pWeapon9] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon9], PlayerInfo[playerid][pAmmo9]);
				PlayerInfo[playerid][pWeapon9] = 0; PlayerInfo[playerid][pAmmo9] = 0;
			}
			if (PlayerInfo[playerid][pWeapon10] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon10], PlayerInfo[playerid][pAmmo10]);
				PlayerInfo[playerid][pWeapon10] = 0; PlayerInfo[playerid][pAmmo10] = 0;
			}
			if (PlayerInfo[playerid][pWeapon11] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon11], PlayerInfo[playerid][pAmmo11]);
				PlayerInfo[playerid][pWeapon11] = 0; PlayerInfo[playerid][pAmmo11] = 0;
			}
			if (PlayerInfo[playerid][pWeapon12] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon12], PlayerInfo[playerid][pAmmo12]);
				PlayerInfo[playerid][pWeapon12] = 0; PlayerInfo[playerid][pAmmo12] = 0;
			}
		}
	}
	return 1;
}

UpdatePlayerStat(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pSex] == 2) 	PlayerStatInfo[playerid][0] = "Mujer";
		else 									PlayerStatInfo[playerid][0] = "Hombre";

        if(PlayerInfo[playerid][pDonateT] > 0) PlayerStatInfo[playerid][5] = "Si";
  		else 									PlayerStatInfo[playerid][5] = "No";

  		if(PlayerInfo[playerid][pMarried] == 1) PlayerStatInfo[playerid][6] = "Si";
		else 									PlayerStatInfo[playerid][6] = "No";

		if(PlayerInfo[playerid][pSeguro] == 1)  PlayerStatInfo[playerid][7] = "LS";
		else 									PlayerStatInfo[playerid][7] = "No";

		switch(PlayerInfo[playerid][pOrigin])
		{
		    case 1: PlayerStatInfo[playerid][1] = "América";
		    case 2: PlayerStatInfo[playerid][1] = "Europa";
		    case 3: PlayerStatInfo[playerid][1] = "Asia";
		    case 4: PlayerStatInfo[playerid][1] = "África";
		    case 5: PlayerStatInfo[playerid][1] = "Oceanía";
		}

		switch(PlayerInfo[playerid][pJob]){
      		case 1:     PlayerStatInfo[playerid][2] = "Chófer de Tren";
		    case 2:     PlayerStatInfo[playerid][2] = "Recogedor de Basura";
		    case 3:     PlayerStatInfo[playerid][2] = "Piloto";
		    case 4:     PlayerStatInfo[playerid][2] = "Vendedor de móviles";
		    case 5:     PlayerStatInfo[playerid][2] = "Ladrón";
		    case 6:     PlayerStatInfo[playerid][2] = "Pizzero";
		    case 7:     PlayerStatInfo[playerid][2] = "Pescador";
		    case 8:     PlayerStatInfo[playerid][2] = "Camionero";
		    case 9:     PlayerStatInfo[playerid][2] = "Taxista";
		    case 10:    PlayerStatInfo[playerid][2] = "Cosechador";
		    case 11:    PlayerStatInfo[playerid][2] = "Trailero";
		    default:    PlayerStatInfo[playerid][2] = "No";
  		}

  		new Faction_Player;
		if(PlayerInfo[playerid][pMember] > PlayerInfo[playerid][pLeader])	Faction_Player = PlayerInfo[playerid][pMember];
		else																Faction_Player = PlayerInfo[playerid][pLeader];

		switch(Faction_Player){
		    case 1:{
				PlayerStatInfo[playerid][3] = "Policía Local";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Cadete";
					case 2:     PlayerStatInfo[playerid][4] = "Oficial";
					case 3:     PlayerStatInfo[playerid][4] = "Investigador";
					case 4:     PlayerStatInfo[playerid][4] = "Sargento";
					case 5:     PlayerStatInfo[playerid][4] = "Teniente";
					case 6:     PlayerStatInfo[playerid][4] = "Capitán";
					case 7:     PlayerStatInfo[playerid][4] = "Inspector";
					case 8:     PlayerStatInfo[playerid][4] = "Comandante";
					default:    PlayerStatInfo[playerid][4] = "Cadete";
				}
			}
		    case 2:{
				PlayerStatInfo[playerid][3] = "Terroristas ELN";
					switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Recluta";
					case 2:     PlayerStatInfo[playerid][4] = "Paramilitar";
					case 3:     PlayerStatInfo[playerid][4] = "Teniente";
					case 4:     PlayerStatInfo[playerid][4] = "Jefe de Bloque";
					case 5:     PlayerStatInfo[playerid][4] = "Jefe de Frente";
					case 6:     PlayerStatInfo[playerid][4] = "Cabezilla";
					default:    PlayerStatInfo[playerid][4] = "Recluta";
				}
			}
		    case 3:{
				PlayerStatInfo[playerid][3] = "Guardia Nacional";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Recluta";
					case 2:     PlayerStatInfo[playerid][4] = "Soldado";
					case 3:     PlayerStatInfo[playerid][4] = "Cabo";
					case 4:     PlayerStatInfo[playerid][4] = "Sargento";
					case 5:     PlayerStatInfo[playerid][4] = "Teniente";
					case 6:     PlayerStatInfo[playerid][4] = "Capitán";
					case 7:     PlayerStatInfo[playerid][4] = "Mayor";
					case 8:     PlayerStatInfo[playerid][4] = "Coronel";
					case 9:     PlayerStatInfo[playerid][4] = "General";
					default:    PlayerStatInfo[playerid][4] = "Recluta";
				}
			}
		    case 4:{
				PlayerStatInfo[playerid][3] = "LSMC";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Práctico";
					case 2:     PlayerStatInfo[playerid][4] = "Paramédico";
					case 3:     PlayerStatInfo[playerid][4] = "Médico";
					case 4:     PlayerStatInfo[playerid][4] = "Supervisor";
					case 5:     PlayerStatInfo[playerid][4] = "Responsable Técnico";
					case 6:     PlayerStatInfo[playerid][4] = "Director";
					default:    PlayerStatInfo[playerid][4] = "Práctico";
				}
			}
		    case 5:{
				PlayerStatInfo[playerid][3] = "Hitman";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Novato";
					case 2:     PlayerStatInfo[playerid][4] = "Asesino";
					case 3:     PlayerStatInfo[playerid][4] = "Sicario";
					case 4:     PlayerStatInfo[playerid][4] = "Agente Especial";
					case 5:     PlayerStatInfo[playerid][4] = "Vice-Director";
					case 6:     PlayerStatInfo[playerid][4] = "Director";
					default:    PlayerStatInfo[playerid][4] = "Novato";
				}
			}
		    case 6:{
				PlayerStatInfo[playerid][3] = "LSRTV";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Camarógrafo";
					case 2:     PlayerStatInfo[playerid][4] = "Redactor";
					case 3:     PlayerStatInfo[playerid][4] = "Periodista";
					case 4:     PlayerStatInfo[playerid][4] = "Enviado Especial";
					case 5:     PlayerStatInfo[playerid][4] = "Presentador";
					case 6:     PlayerStatInfo[playerid][4] = "Director";
					default:    PlayerStatInfo[playerid][4] = "Camarógrafo";
				}
			}
		    case 7:{
				PlayerStatInfo[playerid][3] = "Mecánicos";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Ayudante";
					case 2:     PlayerStatInfo[playerid][4] = "Trucker";
					case 3:     PlayerStatInfo[playerid][4] = "Mecánico";
					case 4:     PlayerStatInfo[playerid][4] = "Ingeniero";
					case 5:     PlayerStatInfo[playerid][4] = "Supervisor";
					case 6:     PlayerStatInfo[playerid][4] = "Director";
					default:    PlayerStatInfo[playerid][4] = "Ayudante";
				}
			}
		    case 8:{
				PlayerStatInfo[playerid][3] = "Gobierno";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Seguridad";
					case 2:     PlayerStatInfo[playerid][4] = "Secretariado";
					case 3:     PlayerStatInfo[playerid][4] = "Ministro";
					case 4:     PlayerStatInfo[playerid][4] = "Juez";
					case 5:     PlayerStatInfo[playerid][4] = "Alcalde";
					case 6:     PlayerStatInfo[playerid][4] = "Vice-Presidente";
					case 7:     PlayerStatInfo[playerid][4] = "Presidente";
					default:    PlayerStatInfo[playerid][4] = "Seguridad";
				}
			}
		    case 9:{
				PlayerStatInfo[playerid][3] = "Groove Street";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Joto";
					case 2:     PlayerStatInfo[playerid][4] = "Propagador";
					case 3:     PlayerStatInfo[playerid][4] = "Soldado";
					case 4:     PlayerStatInfo[playerid][4] = "Cabezilla";
					case 5:     PlayerStatInfo[playerid][4] = "General";
					case 6:     PlayerStatInfo[playerid][4] = "Líder";
					default:    PlayerStatInfo[playerid][4] = "Joto";
				}
			}
			case 10:{
				PlayerStatInfo[playerid][3] = "Latin Kings";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Joto";
					case 2:     PlayerStatInfo[playerid][4] = "Propagador";
					case 3:     PlayerStatInfo[playerid][4] = "Soldado";
					case 4:     PlayerStatInfo[playerid][4] = "Cabezilla";
					case 5:     PlayerStatInfo[playerid][4] = "General";
					case 6:     PlayerStatInfo[playerid][4] = "Líder";
					default:    PlayerStatInfo[playerid][4] = "Joto";
				}
			}
			case 11:{
				PlayerStatInfo[playerid][3] = "Família Karsakova";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Assotsiirovat";
					case 2:     PlayerStatInfo[playerid][4] = "Soldat";
					case 3:     PlayerStatInfo[playerid][4] = "Kapo";
					case 4:     PlayerStatInfo[playerid][4] = "Konsul'tant";
					case 5:     PlayerStatInfo[playerid][4] = "Zamestitel";
					case 6:     PlayerStatInfo[playerid][4] = "Don";
					case 7:     PlayerStatInfo[playerid][4] = "Líder";
					default:    PlayerStatInfo[playerid][4] = "Assotsiirovat";
				}
			}
			case 12:{
				PlayerStatInfo[playerid][3] = "La Cosa Nostra";
				switch(PlayerInfo[playerid][pRank]){
					case 1:     PlayerStatInfo[playerid][4] = "Giovane D' Honore";
					case 2:     PlayerStatInfo[playerid][4] = "Soldati";
					case 3:     PlayerStatInfo[playerid][4] = "Avvocato";
					case 4:     PlayerStatInfo[playerid][4] = "Capo";
					case 5:     PlayerStatInfo[playerid][4] = "Capodecime";
					case 6:     PlayerStatInfo[playerid][4] = "Consigliere";
					case 7:     PlayerStatInfo[playerid][4] = "Sottocapo";
					case 8:     PlayerStatInfo[playerid][4] = "Don";
					case 9:     PlayerStatInfo[playerid][4] = "Capi Di Tutti Capi";
					default:    PlayerStatInfo[playerid][4] = "Giovane d' Honore";
				}
			}
			case 15..19:{
			    format(PlayerStatInfo[playerid][3], 24, FactionInfo[(Faction_Player-15)][fName]);
				switch(PlayerInfo[playerid][pRank]){
				    case 1:     format(PlayerStatInfo[playerid][4], 20, FactionInfo[(Faction_Player-15)][fRank1]);
				    case 2:     format(PlayerStatInfo[playerid][4], 20, FactionInfo[(Faction_Player-15)][fRank2]);
				    case 3:     format(PlayerStatInfo[playerid][4], 20, FactionInfo[(Faction_Player-15)][fRank3]);
				    case 4:     format(PlayerStatInfo[playerid][4], 20, FactionInfo[(Faction_Player-15)][fRank4]);
				    case 5:     format(PlayerStatInfo[playerid][4], 20, FactionInfo[(Faction_Player-15)][fRank5]);
				    case 6:     format(PlayerStatInfo[playerid][4], 20, FactionInfo[(Faction_Player-15)][fRank6]);
				    default:    format(PlayerStatInfo[playerid][4], 20, FactionInfo[(Faction_Player-15)][fRank1]);
    			}
 			}
			default:{
				PlayerStatInfo[playerid][3] = "No";
				PlayerStatInfo[playerid][4] = "No";
			}
		}
	}
}
//BCD
function ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
        new cash =  GetPlayerMoney(targetid);			new account = PlayerInfo[targetid][pAccount];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;	new expamount = nxtlevel*levelexp;
		ClearChatbox(playerid, 10);
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring)," {DC092F}Tus Stats :{2471A3}%s ",PlayerName(targetid));
		Message(playerid, 0x2471A3fF,coordsstring);
		format(coordsstring, sizeof(coordsstring)," {DC092F}Edad{2471A3}[%d]  {DC092F}Nivel{2471A3}[%d]  {DC092F}Sexo{2471A3}[%s]  {DC092F}Capital{2471A3}[%d$]", PlayerInfo[targetid][pAge],PlayerInfo[targetid][pLevel],PlayerStatInfo[targetid][0],cash+account);
		Message(playerid, 0x2471A3FF,coordsstring);
		format(coordsstring, sizeof(coordsstring)," {DC092F}Teléfono{2471A3}[%d]  {DC092F}Seguro{2471A3}[%s]  {DC092F}Advertencias{2471A3}[%d] {DC092F}Trabajo{2471A3}[%s]", PlayerInfo[targetid][pPnumber], PlayerStatInfo[targetid][7], PlayerInfo[targetid][pAdvertencias], PlayerStatInfo[targetid][2]);
		Message(playerid, 0x2471A3FF,coordsstring);
		format(coordsstring, sizeof(coordsstring), " {DC092F}Proximo Nivel:{2471A3} %d (%d/%d)  {DC092F}Facción{2471A3}}[%s]  {DC092F}Rango{2471A3}[%s]", nxtlevel,PlayerInfo[targetid][pExp],expamount,PlayerStatInfo[targetid][3],PlayerStatInfo[targetid][4]);
		Message(playerid, 0x2471A3FF,coordsstring);
		format(coordsstring, sizeof(coordsstring), " {DC092F}Horas Jugadas{2471A3}[%d] {DC092F} Muertes{2471A3}[%d]  {DC092F}Arrestos{2471A3}[%d]  {DC092F}Asesinatos{2471A3}[%d]",PlayerInfo[targetid][pConnectTime],PlayerInfo[targetid][pDeaths],PlayerInfo[targetid][pArrested],PlayerInfo[targetid][pKills]);
		Message(playerid, 0x2471A3FF,coordsstring);
		format(coordsstring, sizeof(coordsstring)," {DC092F}Casado{2471A3}[%s]  {009B7D}Premium{2471A3}[%s]  Coche Renta{2471A3}[%d]  {DC092F}Renta{2471A3}[%d]", PlayerStatInfo[targetid][6], PlayerStatInfo[targetid][5], HireKey[targetid], PlayerInfo[targetid][pRent]);
		Message(playerid, 0x2471A3F,coordsstring);
		format(coordsstring, sizeof(coordsstring), " {DC092F}Casa{2471A3}[%d]  {DC092F}CasaVIP{2471A3}[%d]  {DC092F}Llave Vehículo{2471A3}[%d]  {DC092F}Negocio{2471A3}[%d]",PlayerInfo[targetid][pPhousekey], PlayerInfo[targetid][pPhousevip], PlayerVehicleInfo[targetid][0][pvID], PlayerInfo[targetid][pPbizzkey]);
		Message(playerid, 0xDC092FFF,coordsstring);
		if(PlayerVehicleInfo[targetid][0][pvModel] != 0)
		{
		    format(coordsstring, sizeof(coordsstring), " Vehículo:{FFFFFF} %s  Valor: %d$  Colores:%d/%d  Locked:%d ", PlayerVehicleInfo[targetid][0][pvName], PlayerVehicleInfo[targetid][0][pvValue], PlayerVehicleInfo[targetid][0][pvColorOne], PlayerVehicleInfo[targetid][0][pvColorTwo], PlayerVehicleInfo[targetid][0][pvLock]);
		    Message(playerid, 0xDC092FFF,coordsstring);
		}
		if(PlayerVehicleInfo[targetid][1][pvModel] != 0)
		{
			format(coordsstring, sizeof(coordsstring), " Vehículo Premium:{FFFFFF}  %s  Valor: %d$  Colores:%d/%d  Locked:%d  Llave:%d ", PlayerVehicleInfo[targetid][1][pvName], PlayerVehicleInfo[targetid][1][pvValue], PlayerVehicleInfo[targetid][1][pvColorOne], PlayerVehicleInfo[targetid][1][pvColorTwo], PlayerVehicleInfo[targetid][1][pvLock], PlayerVehicleInfo[targetid][1][pvID]);
		    Message(playerid, 0xDC092FFF,coordsstring);
		}
		if(PlayerVehicleInfo[targetid][2][pvModel] != 0)
		{
			format(coordsstring, sizeof(coordsstring), " Vehículo Premium2:{FFFFFF}  %s  Valor: %d$  Colores:%d/%d  Locked:%d  Llave:%d ", PlayerVehicleInfo[targetid][2][pvName], PlayerVehicleInfo[targetid][2][pvValue], PlayerVehicleInfo[targetid][2][pvColorOne], PlayerVehicleInfo[targetid][2][pvColorTwo], PlayerVehicleInfo[targetid][2][pvLock], PlayerVehicleInfo[targetid][2][pvID]);
		    Message(playerid, 0xDC092FFF,coordsstring);
		}
		if(PlayerVehicleInfo[targetid][3][pvModel] != 0)
		{
		    format(coordsstring, sizeof(coordsstring), " Vehículo Premium3:{FFFFFF}  %s  Valor: %d$  Colores:%d/%d  Locked:%d  Llave:%d ", PlayerVehicleInfo[targetid][3][pvName], PlayerVehicleInfo[targetid][3][pvValue], PlayerVehicleInfo[targetid][3][pvColorOne], PlayerVehicleInfo[targetid][3][pvColorTwo], PlayerVehicleInfo[targetid][3][pvLock], PlayerVehicleInfo[targetid][3][pvID]);
		    Message(playerid, 0xDC092FFF,coordsstring);
  		}
	}
	return 1;
}

public OnGameModeExit()
{
	new year, month,day;	getdate(year, month,day);
    printf("Gamemode Miami Roleplay Finalizado. [%d/%d/%d]", day,month,year);
	return 1;
}

public LoadProperty()
{
	new arrCoords[26][64];
	new strFromFile2[256];
	new File: file = fopen("property.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hOwned] = strval(arrCoords[0]);
			format(HouseInfo[idx][hOwner], 24, arrCoords[1]);
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[2]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[3]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[5]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[6]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[7]);
			HouseInfo[idx][hInt] = strval(arrCoords[8]);
			HouseInfo[idx][hLevel] = strval(arrCoords[9]);
			HouseInfo[idx][hValue] = strval(arrCoords[10]);
			HouseInfo[idx][hLock] = strval(arrCoords[11]);
			HouseInfo[idx][hRooms] = strval(arrCoords[12]);
			HouseInfo[idx][hRent] = strval(arrCoords[13]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[14]);
			HouseInfo[idx][hWep] = strval(arrCoords[15]);
			HouseInfo[idx][hAmmo] = strval(arrCoords[16]);
			HouseInfo[idx][hMats] = strval(arrCoords[17]);
			HouseInfo[idx][hDrugs] = strval(arrCoords[18]);
			HouseInfo[idx][hSpeed] = strval(arrCoords[19]);
			HouseInfo[idx][hEctasy] = strval(arrCoords[20]);
			HouseInfo[idx][hRitalin] = strval(arrCoords[21]);
			HouseInfo[idx][hHeroina] = strval(arrCoords[22]);
			HouseInfo[idx][hMarihuana] = strval(arrCoords[23]);
			HouseInfo[idx][hWorld] = strval(arrCoords[24]);
			HouseInfo[idx][hTime] = strval(arrCoords[25]);
			idx++;
		}
		printf("Gamemode: Loaded %d houses succesfully.",idx);
		fclose(file);
	}
	return 1;
}

public LoadBizz()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("bizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			format(BizzInfo[idx][bOwner], 24, arrCoords[1]);
			format(BizzInfo[idx][bName], 24, arrCoords[2]);
			format(BizzInfo[idx][bExtortion], 24, arrCoords[3]);
			BizzInfo[idx][bEntrancex] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntrancey] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntrancez] = floatstr(arrCoords[6]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[7]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[8]);
			BizzInfo[idx][bTill] = strval(arrCoords[9]);
			BizzInfo[idx][bTillEx] = strval(arrCoords[10]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public OnGameModeInit()
{
new ActorR[3]
	//Actores
	// Banco
	CreateActor(17,1307.4492,-979.9894,39.1699,92.6808);
	CreateActor(141,1307.4174,-978.3529,39.1699,89.8607); // Banco
	CreateActor(147,1307.4287,-976.3575,39.1699,89.8607); // Banco
	CreateActor(150,1307.3981,-974.5737,39.1299,89.8607); // Banco
	CreateActor(187,1307.4178,-972.8307,39.1299,89.8607); // Banco
	// RentBike
	ActorR[0] = CreateActor(20,2276.5242,-1261.8730,24.0533,87.1051);
	
	//TextDrawns

	PublicTD[0] = TextDrawCreate(513.000000, 122.000000, "hud:radar_tshirt");
	TextDrawFont(PublicTD[0], 4);
	TextDrawLetterSize(PublicTD[0], 0.600000, 2.000000);
	TextDrawTextSize(PublicTD[0], 17.000000, 17.000000);
	TextDrawSetOutline(PublicTD[0], 1);
	TextDrawSetShadow(PublicTD[0], 0);
	TextDrawAlignment(PublicTD[0], 1);
	TextDrawColor(PublicTD[0], -1);
	TextDrawBackgroundColor(PublicTD[0], 255);
	TextDrawBoxColor(PublicTD[0], 50);
	TextDrawUseBox(PublicTD[0], 1);
	TextDrawSetProportional(PublicTD[0], 1);
	TextDrawSetSelectable(PublicTD[0], 0);

	PublicTD[1] = TextDrawCreate(513.000000, 150.000000, "hud:radar_burgershot");
	TextDrawFont(PublicTD[1], 4);
	TextDrawLetterSize(PublicTD[1], 0.600000, 2.000000);
	TextDrawTextSize(PublicTD[1], 17.000000, 17.000000);
	TextDrawSetOutline(PublicTD[1], 1);
	TextDrawSetShadow(PublicTD[1], 0);
	TextDrawAlignment(PublicTD[1], 1);
	TextDrawColor(PublicTD[1], -1);
	TextDrawBackgroundColor(PublicTD[1], 255);
	TextDrawBoxColor(PublicTD[1], 50);
	TextDrawUseBox(PublicTD[1], 1);
	TextDrawSetProportional(PublicTD[1], 1);
	TextDrawSetSelectable(PublicTD[1], 0);

	PublicTD[2] = TextDrawCreate(513.000000, 179.000000, "hud:radar_datedrink");
	TextDrawFont(PublicTD[2], 4);
	TextDrawLetterSize(PublicTD[2], 0.600000, 2.000000);
	TextDrawTextSize(PublicTD[2], 17.000000, 17.000000);
	TextDrawSetOutline(PublicTD[2], 1);
	TextDrawSetShadow(PublicTD[2], 0);
	TextDrawAlignment(PublicTD[2], 1);
	TextDrawColor(PublicTD[2], -1);
	TextDrawBackgroundColor(PublicTD[2], 255);
	TextDrawBoxColor(PublicTD[2], 50);
	TextDrawUseBox(PublicTD[2], 1);
	TextDrawSetProportional(PublicTD[2], 1);
	TextDrawSetSelectable(PublicTD[2], 0);

	//// LoginMenu
Textdraw0 = TextDrawCreate(641.531494, 332.833312, "usebox");
TextDrawLetterSize(Textdraw0, 0.000000, 12.581483);
TextDrawTextSize(Textdraw0, -2.000000, 0.000000);
TextDrawAlignment(Textdraw0, 1);
TextDrawColor(Textdraw0, 0);
TextDrawUseBox(Textdraw0, true);
TextDrawBoxColor(Textdraw0, 611427871);
TextDrawSetShadow(Textdraw0, 0);
TextDrawSetOutline(Textdraw0, 0);
TextDrawFont(Textdraw0, 0);

Textdraw1 = TextDrawCreate(641.531494, 1.500000, "usebox");
TextDrawLetterSize(Textdraw1, 0.000000, 11.998147);
TextDrawTextSize(Textdraw1, -2.000000, 0.000000);
TextDrawAlignment(Textdraw1, 1);
TextDrawColor(Textdraw1, 611427871);
TextDrawUseBox(Textdraw1, true);
TextDrawBoxColor(Textdraw1, 611427871);
TextDrawSetShadow(Textdraw1, 0);
TextDrawSetOutline(Textdraw1, 0);
TextDrawFont(Textdraw1, 0);

Textdraw2 = TextDrawCreate(228.638473, 25.666662, "Miami");
TextDrawLetterSize(Textdraw2, 1.264286, 6.750833);
TextDrawTextSize(Textdraw2, -116.661773, -99.166671);
TextDrawAlignment(Textdraw2, 1);
TextDrawColor(Textdraw2, -603377665);
TextDrawSetShadow(Textdraw2, 0);
TextDrawSetOutline(Textdraw2, -1);
TextDrawBackgroundColor(Textdraw2, 51);
TextDrawFont(Textdraw2, 1);
TextDrawSetProportional(Textdraw2, 1);

Textdraw3 = TextDrawCreate(289.545837, 63.000015, "Roleplay");
TextDrawLetterSize(Textdraw3, 1.024873, 4.359167);
TextDrawAlignment(Textdraw3, 1);
TextDrawColor(Textdraw3, 611427327);
TextDrawSetShadow(Textdraw3, 0);
TextDrawSetOutline(Textdraw3, 1);
TextDrawBackgroundColor(Textdraw3, 51);
TextDrawFont(Textdraw3, 0);
TextDrawSetProportional(Textdraw3, 1);
	////


TextVelocimetro[0] = TextDrawCreate(554.000000, 362.000000, "_");
TextDrawFont(TextVelocimetro[0], 0);
TextDrawLetterSize(TextVelocimetro[0], 0.600000, 8.249995);
TextDrawTextSize(TextVelocimetro[0], 316.500000, 149.000000);
TextDrawSetOutline(TextVelocimetro[0], 1);
TextDrawSetShadow(TextVelocimetro[0], 0);
TextDrawAlignment(TextVelocimetro[0], 2);
TextDrawColor(TextVelocimetro[0], -1);
TextDrawBackgroundColor(TextVelocimetro[0], 255);
TextDrawBoxColor(TextVelocimetro[0], 230);
TextDrawUseBox(TextVelocimetro[0], 1);
TextDrawSetProportional(TextVelocimetro[0], 1);
TextDrawSetSelectable(TextVelocimetro[0], 0);

TextVelocimetro[1] = TextDrawCreate(518.000000, 366.000000, "_");
TextDrawFont(TextVelocimetro[1], 0);
TextDrawLetterSize(TextVelocimetro[1], 0.679166, 2.699976);
TextDrawTextSize(TextVelocimetro[1], 298.500000, 70.500000);
TextDrawSetOutline(TextVelocimetro[1], 0);
TextDrawSetShadow(TextVelocimetro[1], 3);
TextDrawAlignment(TextVelocimetro[1], 2);
TextDrawColor(TextVelocimetro[1], -1);
TextDrawBackgroundColor(TextVelocimetro[1], 255);
TextDrawBoxColor(TextVelocimetro[1], 135);
TextDrawUseBox(TextVelocimetro[1], 1);
TextDrawSetProportional(TextVelocimetro[1], 1);
TextDrawSetSelectable(TextVelocimetro[1], 0);

TextVelocimetro[2] = TextDrawCreate(592.000000, 366.000000, "_");
TextDrawFont(TextVelocimetro[2], 1);
TextDrawLetterSize(TextVelocimetro[2], 0.600000, 2.549993);
TextDrawTextSize(TextVelocimetro[2], 295.500000, 66.000000);
TextDrawSetOutline(TextVelocimetro[2], 1);
TextDrawSetShadow(TextVelocimetro[2], 0);
TextDrawAlignment(TextVelocimetro[2], 2);
TextDrawColor(TextVelocimetro[2], -1);
TextDrawBackgroundColor(TextVelocimetro[2], 255);
TextDrawBoxColor(TextVelocimetro[2], 135);
TextDrawUseBox(TextVelocimetro[2], 1);
TextDrawSetProportional(TextVelocimetro[2], 1);
TextDrawSetSelectable(TextVelocimetro[2], 0);

TextVelocimetro[3] = TextDrawCreate(554.000000, 397.000000, "_");
TextDrawFont(TextVelocimetro[3], 1);
TextDrawLetterSize(TextVelocimetro[3], 0.608332, 3.299993);
TextDrawTextSize(TextVelocimetro[3], 295.000000, 141.500000);
TextDrawSetOutline(TextVelocimetro[3], 1);
TextDrawSetShadow(TextVelocimetro[3], 0);
TextDrawAlignment(TextVelocimetro[3], 2);
TextDrawColor(TextVelocimetro[3], -1);
TextDrawBackgroundColor(TextVelocimetro[3], 255);
TextDrawBoxColor(TextVelocimetro[3], 135);
TextDrawUseBox(TextVelocimetro[3], 1);
TextDrawSetProportional(TextVelocimetro[3], 1);
TextDrawSetSelectable(TextVelocimetro[3], 0);

TextVelocimetro[4] = TextDrawCreate(554.000000, 356.000000, "_");
TextDrawFont(TextVelocimetro[4], 1);
TextDrawLetterSize(TextVelocimetro[4], 0.550000, 0.200001);
TextDrawTextSize(TextVelocimetro[4], 300.500000, 149.500000);
TextDrawSetOutline(TextVelocimetro[4], 1);
TextDrawSetShadow(TextVelocimetro[4], 0);
TextDrawAlignment(TextVelocimetro[4], 2);
TextDrawColor(TextVelocimetro[4], 0x2471A3);
TextDrawBackgroundColor(TextVelocimetro[4], 255);
TextDrawBoxColor(TextVelocimetro[4], 0x2471A3);
TextDrawUseBox(TextVelocimetro[4], 1);
TextDrawSetProportional(TextVelocimetro[4], 1);
TextDrawSetSelectable(TextVelocimetro[4], 0);

TextVelocimetro[5] = TextDrawCreate(483.000000, 365.000000, "Modelo");
TextDrawFont(TextVelocimetro[5], 2);
TextDrawLetterSize(TextVelocimetro[5], 0.308331, 1.350000);
TextDrawTextSize(TextVelocimetro[5], 400.000000, 544.000000);
TextDrawSetOutline(TextVelocimetro[5], 1);
TextDrawSetShadow(TextVelocimetro[5], 0);
TextDrawAlignment(TextVelocimetro[5], 1);
TextDrawColor(TextVelocimetro[5], -1);
TextDrawBackgroundColor(TextVelocimetro[5], 255);
TextDrawBoxColor(TextVelocimetro[5], 50);
TextDrawUseBox(TextVelocimetro[5], 0);
TextDrawSetProportional(TextVelocimetro[5], 1);
TextDrawSetSelectable(TextVelocimetro[5], 0);

TextVelocimetro[6] = TextDrawCreate(568.000000, 364.000000, "Estado");
TextDrawFont(TextVelocimetro[6], 2);
TextDrawLetterSize(TextVelocimetro[6], 0.299997, 1.399999);
TextDrawTextSize(TextVelocimetro[6], 400.000000, 544.000000);
TextDrawSetOutline(TextVelocimetro[6], 1);
TextDrawSetShadow(TextVelocimetro[6], 0);
TextDrawAlignment(TextVelocimetro[6], 1);
TextDrawColor(TextVelocimetro[6], -1);
TextDrawBackgroundColor(TextVelocimetro[6], 255);
TextDrawBoxColor(TextVelocimetro[6], 50);
TextDrawUseBox(TextVelocimetro[6], 0);
TextDrawSetProportional(TextVelocimetro[6], 1);
TextDrawSetSelectable(TextVelocimetro[6], 0);

TextVelocimetro[7] = TextDrawCreate(484.000000, 399.000000, "VELOCIDAD");
TextDrawFont(TextVelocimetro[7], 2);
TextDrawLetterSize(TextVelocimetro[7], 0.254164, 1.499997);
TextDrawTextSize(TextVelocimetro[7], 400.000000, 17.000000);
TextDrawSetOutline(TextVelocimetro[7], 1);
TextDrawSetShadow(TextVelocimetro[7], 0);
TextDrawAlignment(TextVelocimetro[7], 1);
TextDrawColor(TextVelocimetro[7], -1);
TextDrawBackgroundColor(TextVelocimetro[7], 255);
TextDrawBoxColor(TextVelocimetro[7], 50);
TextDrawUseBox(TextVelocimetro[7], 0);
TextDrawSetProportional(TextVelocimetro[7], 1);
TextDrawSetSelectable(TextVelocimetro[7], 0);

TextVelocimetro[8] = TextDrawCreate(485.000000, 412.000000, "COMBUSTIBLE");
TextDrawFont(TextVelocimetro[8], 2);
TextDrawLetterSize(TextVelocimetro[8], 0.245831, 1.499999);
TextDrawTextSize(TextVelocimetro[8], 400.000000, 17.000000);
TextDrawSetOutline(TextVelocimetro[8], 1);
TextDrawSetShadow(TextVelocimetro[8], 0);
TextDrawAlignment(TextVelocimetro[8], 1);
TextDrawColor(TextVelocimetro[8], -1);
TextDrawBackgroundColor(TextVelocimetro[8], 255);
TextDrawBoxColor(TextVelocimetro[8], 50);
TextDrawUseBox(TextVelocimetro[8], 0);
TextDrawSetProportional(TextVelocimetro[8], 1);
TextDrawSetSelectable(TextVelocimetro[8], 0);

TextVelocimetro[9] = TextDrawCreate(554.000000, 437.000000, "_");
TextDrawFont(TextVelocimetro[9], 1);
TextDrawLetterSize(TextVelocimetro[9], 0.600000, 0.200001);
TextDrawTextSize(TextVelocimetro[9], 298.500000, 149.000000);
TextDrawSetOutline(TextVelocimetro[9], 1);
TextDrawSetShadow(TextVelocimetro[9], 0);
TextDrawAlignment(TextVelocimetro[9], 2);
TextDrawColor(TextVelocimetro[9], 0x2471A3);
TextDrawBackgroundColor(TextVelocimetro[9], 255);
TextDrawBoxColor(TextVelocimetro[9], 0x2471A3);
TextDrawUseBox(TextVelocimetro[9], 1);
TextDrawSetProportional(TextVelocimetro[9], 1);
TextDrawSetSelectable(TextVelocimetro[9], 0);

TextVelocimetro[10] = TextDrawCreate(597.000000, 399.000000, "Km/h");
TextDrawFont(TextVelocimetro[10], 2);
TextDrawLetterSize(TextVelocimetro[10], 0.254166, 1.399999);
TextDrawTextSize(TextVelocimetro[10], 400.000000, 17.000000);
TextDrawSetOutline(TextVelocimetro[10], 1);
TextDrawSetShadow(TextVelocimetro[10], 0);
TextDrawAlignment(TextVelocimetro[10], 1);
TextDrawColor(TextVelocimetro[10], 0x2471A3);
TextDrawBackgroundColor(TextVelocimetro[10], 255);
TextDrawBoxColor(TextVelocimetro[10], 50);
TextDrawUseBox(TextVelocimetro[10], 0);
TextDrawSetProportional(TextVelocimetro[10], 1);
TextDrawSetSelectable(TextVelocimetro[10], 0);
	
    AntiDeAMX();
    ManualVehicleEngineAndLights();
	for(new c=0;c<VV;c++)
	{
	    Gas[c] = GasMax;
	}
	for(new f = 0; f < MAX_FACTION; f++)
	{
	    for(new fv = 0; fv < MAX_VEHICLES_FACTION; fv++)
	    {
	        FactionVehicleInfo[f][fv][fvID] = INVALID_VEHICLE_ID;
     	}
	}
	UsePlayerPedAnims(); // CJ Anims
	LoadBizz();
	LoadProperty();
	INI_Load("robs.ini");
	INI_Load("stuff.ini");
	INI_Load("hq_locks.ini");
	INI_Load("autos.ini");
	INI_Load("Facciones.ini");
	SetGameModeText("Roleplay");
	SendRconCommand("mapname Las Venturas");
	SendRconCommand("hostname Miami Roleplay - Rol en Español");
	SendRconCommand("rcon_password Apple345x");
	SendRconCommand("weburl discord.gg/AN2cy7FFT8");
	gettime(ghour, gminute, gsecond);
	ghour = ghour - 7;
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	ShowPlayerMarkers(0);
	AllowInteriorWeapons(1);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	OnGlobalPropTextdrawUpdate();
	OnGlobalBizzTextdrawUpdate();
	// 3D Labels
	CreateDynamic3DTextLabel("RentBike\nPuedes Rentar la Motocicleta para desplazarte. ", 				0x2471A3FF, 2276.5242,-1261.8730,24.0533, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Floristeria\nUtiliza /comprarflores", 				0xB900B9FF, 1416.3882,-1718.3469,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Casa de Impuestos\n Utiliza /pagarimpuestos", 		0xF4BA0BFF, 358.3462,186.2765,1008.3828, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,3);
	CreateDynamic3DTextLabel("Club VIP \nUtiliza /comprarentrada", 				0xFF0000FF, 1790.4347,-1591.3114,13.4938, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFF, -1464.7714,1555.9248,1052.5313, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,14);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFF, -977.8622,1053.0814,1344.9912, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,10);
 	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFF, -1128.6946,1066.2456,1345.7439, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,10);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFF, 1947.2084,1653.8584,-4.6563, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Estacionamiento\nUtiliza /parqueadero", 	0xB900B9FF, 1800.0516,-1723.1569,13.5408, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
 	CreateDynamic3DTextLabel("Estacionamiento\nUtiliza /parqueadero", 	0xB900B9FF, 1759.5232,-1696.3058,13.4539, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Cyber\nUtiliza: /google", 				0x007DFBFF, 1089.6310,-1379.9451,13.8127, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mansión LCN", 			0xF4BA0BFF, 1122.7068,-2036.8125,69.8942, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("HQ Terroristas", 			0xF4BA0BFF, 1068.4430,-350.0796,74.2184, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mansión Rusa", 			0xF4BA0BFF, 893.6533,-1635.7021,14.9297, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Central de Taxis", 			0xE6DE48FF, 1752.7571,-1894.2361,13.5573, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Pizza Stack", 				0xFF9B6AFF, 2105.2734,-1806.5475,13.5547, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mercado Negro\nUtilize /bmbuy", 				0x400000FF, 1293.6071,-984.9811,32.6953, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Oficina LSRTV", 				0x13D269FF, 758.1428,-1361.2177,14.0281, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Departamento\nde Policía", 	0xFFFFFFFF, 1554.9644,-1675.6254,16.1953, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Ayuntamiento",             0xE8E202FF, 1480.2529,-1814.8264,15.3678, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Ayuntamiento",             0xE8E202FF, 1480.0485,-1780.6600,15.3666, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Hospital", 					0xFF0000FF, 1172.8470,-1323.1869,15.3999, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Emergencias", 				0xFF0000FF, 1144.9569,-1329.5032,13.5840, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Atencion al Cliente\n/gpsveh /seguroveh", 	0xFF0000FF, 1258.3003,-1246.8680,-0.9000, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,1,0);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nVendedor móviles", 	0x00D56AFF, 994.3785,-1296.4718,13.5469, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nConductor de Tren", 			0x00D56AFF, 1684.6482,-1944.7058,13.5469, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nRecogedor de Basura", 	0x00D56AFF, 2195.8293,-1972.7570,13.5730, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nPiloto", 				0x00D56AFF, 1957.3217,-2183.6399,13.5469, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nLadrón", 				0x00D56AFF, 2275.2427,-1105.6196,37.9766, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nTaxista", 				0x00D56AFF, 1762.1024,-1915.1565,-8.1672, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nCosechador", 				0x00D56AFF, -38.7022,55.7954,3.1172, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nTrailero", 				0x00D56AFF, -75.8972,-1105.9155,1.0781, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nPizzero", 				0x00D56AFF, 378.3128,-119.6172,1001.4922, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,5);
    CreateDynamic3DTextLabel("[!]  Solo Personal\n/trajepizza", 		0x00D56AFF, 369.0226,-114.5778,1001.4995, 2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,5);
    CreateDynamic3DTextLabel("Recoger Paga\nCosechador",                0xFF0000FF, -28.1515,61.8475,3.1172, 5.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Quieres aprender a pelear?\n {DC092F}Utilize:{2471A3} /apelear", 		0xFF0000FF, 767.6719,13.6320,1000.7010, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,5);
	CreateDynamic3DTextLabel("Cuartel Militar", 	0x00D56AFF, 2787.4355,-2420.5334,13.6337, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Armeria Militar", 	0x00D56AFF, 2758.7417,-2514.7607,13.6425, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("*Prisión Militar*", 	0x00D56AFF, 2691.1526,-2471.4546,13.6469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Oficina Militar",     0x00D56AFF, 2777.3066,-2529.1965,14.0538, 8.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("[Pandilleros]\nAdquirir Drogas",          0xF4BA0BFF, -60.2980,83.5256,3.1172, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Iglesia", 					0xFF0000FF, 2253.9565,-1333.4288,23.9816, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nCamionero", 	0x00D56AFF, 2215.4924,-2661.2336,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nPescador", 	0x00D56AFF, 986.9383,-1937.5042,2835.0078, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,1,0);
	CreateDynamic3DTextLabel("Skin\n/cropa", 				0xF1E00AFF, -1828.5704,55.5554,1055.1891, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,1);
	CreateDynamic3DTextLabel("Lavadoras\nUsa /lavarropa",           0xE6DE48FF,-2368.2078,435.6127,73.2922, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Joyeria\nPresiona 'Y'",           0xE6DE48FF,1143.4807,-1880.8014,851.0969, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Farmacia\nPresiona 'Y' para comprar",           0xE6DE48FF,2420.7935,2468.5439,69.4834, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Ammunation\nPresiona 'Y' para comprar",           0xE6DE48FF,308.2177,-141.4641,999.6016, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("24/7\nPresiona 'Y' para comprar",           0xE6DE48FF,-21.9333,-138.6319,1003.5469, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("24/7\nPresiona 'Y' para comprar",           0xE6DE48FF,-23.3348,-55.6397,1003.5469, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Fabrica de Armas",           0xE6DE48FF,1421.1550,2755.8625,-2.5838, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("{DC092F}Gama Alta\n{2471A3}Presiona {DC092F}'Y' {2471A3}para ver el catálogo",           0xE6DE48FF,563.0288,-1300.2478,17.2871, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("{DC092F}Gama Media\n{2471A3}Presiona {DC092F}'Y' {2471A3}para ver el catálogo",           0xE6DE48FF,552.3003,-1300.5541,17.2871, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("{DC092F}Gama Baja\n{2471A3}Presiona {DC092F}'Y' {2471A3}para ver el catálogo",           0xE6DE48FF,537.9150,-1300.2504,17.2871, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Banco LS",						   0xE6DE48FF,300.030303,-1611.889282,33.127998, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Centro de Publicidad\n/anuncio",     0x00D56AFF,2065.6050,-2218.2114,2664.6157, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1,0);
	CreateDynamic3DTextLabel("Mercado Negro\nPresiona 'Y' para comprar",       0xE6DE48FF,2611.4368,-2202.0574,-0.2188, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1711.10828,-1888.84167,13.36670+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1719.21936,-1888.48071,13.36670+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1738.1191,-1862.8081,13.5758+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1738.1191,-1862.8081,13.5758+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1187.2397, -1308.5261, 13.36+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,981.88, -1157.62, 23.86+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1195.7616,-919.6393,43.1544+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,562.7845,-1250.2927,17.2599+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,805.9656,-1387.7549,13.5602+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,159.1252,-1946.8750,3.7734+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1309.5337,-912.6902,38.6741+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1756.7098,-1147.4298,23.9336+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1829.0646,-1679.4893,13.5469+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1934.2709,-1761.6580,13.5469+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1205.8312,-1842.7323,13.5432+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,844.4606,-2059.8254,12.8672+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1355.6024,-1739.5306,13.5469+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,2047.2003,-1920.9122,13.5469+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1832.5538,-1845.5059,13.1817+0.6,5.0);
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1499.56177, -1740.60071, 13.34690+0.6,5.0);// Delante del Ayuntamiento.
	CreateDynamic3DTextLabel("{DC092F}Lugares de interés\n{2471A3}/Mapa",		 COLOR_YELLOW,1954.05957, -2178.77124, 13.36050+0.6,5.0);// Aeropuerto.

	CreateDynamic3DTextLabel("{DC092F}Utilize:\n{2471A3}/mm",					 COLOR_YELLOW,2141.8096,-2255.5789,12.9255,15.0);
 	CreateDynamic3DTextLabel("{DC092F}Utilize:\n{2471A3}/mm",					 COLOR_YELLOW,2150.1597,-2248.4607,13.2992,15.0);
 	CreateDynamic3DTextLabel("{DC092F}Utilize:\n{2471A3}/mm",					 COLOR_YELLOW,2157.8130,-2268.4658,13.3036,15.0);
 	CreateDynamic3DTextLabel("{DC092F}Equipo No Limits\n{2471A3}/Equipo",		 COLOR_YELLOW,2125.4524,-2278.0686,20.6709,15.0);

	// Maps Icons
	CreateDynamicMapIcon(1185.0560,-1323.9019,13.5730, 22, 0, 0, 0); // Hospital
	CreateDynamicMapIcon(1601.3207,-2178.9736,13.5547, 27, 0, 0, 0); // CarPoint
	CreateDynamicMapIcon(1547.4792,-1675.3093,13.5541, 30, 0, 0, 0); // LSPD
	CreateDynamicMapIcon(1829.5077,-1842.7311,13.5781, 17, 0, 0, 0); // 24-7 UNITY
	CreateDynamicMapIcon(1352.1354,-1759.1620,13.5541, 17, 0, 0, 0); // 24-7 Ayunta
	CreateDynamicMapIcon(2098.5596,-1805.6979,13.5546, 29, 0, 0, 0); // Pizza
	CreateDynamicMapIcon(1368.7128,-1279.8639,13.5541, 18, 0, 0, 0); // Ammunation
	CreateDynamicMapIcon(2245.9502,-1660.6981,15.2864, 45, 0, 0, 0); // Binco
	CreateDynamicMapIcon(456.8236,-1501.6539,31.0389, 45, 0, 0, 0); // Binco
    CreateDynamicMapIcon(2229.5786,-1721.5316,13.5638, 54, 0, 0, 0); // GYM
    CreateDynamicMapIcon(1797.5867,-1578.8649,14.0855, 23, 0, 0, 0); // Club VIP
	// ==================      TextDrawX       ================ //
	LoginMenu[0] = TextDrawCreate(642.000000,1.000000,"_");//abajo
	TextDrawUseBox(LoginMenu[0],1);
	TextDrawBoxColor(LoginMenu[0],0x000000ff);
	TextDrawTextSize(LoginMenu[0],-61.000000,7.000000);
	TextDrawBackgroundColor(LoginMenu[0],0x000000ff);
	TextDrawFont(LoginMenu[0],3);
	TextDrawLetterSize(LoginMenu[0],0.700000,10.700009);
	TextDrawColor(LoginMenu[0],0xffffffff);
	TextDrawSetOutline(LoginMenu[0],1);
	TextDrawSetProportional(LoginMenu[0],1);
	TextDrawSetShadow(LoginMenu[0],1);

	LoginMenu[1] = TextDrawCreate(642.000000,341.000000,"_");//arriba
    TextDrawUseBox(LoginMenu[1],1);
    TextDrawBoxColor(LoginMenu[1],0x000000ff);
    TextDrawTextSize(LoginMenu[1],-36.000000,2.000000);
    TextDrawBackgroundColor(LoginMenu[1],0x000000ff);
    TextDrawFont(LoginMenu[1],3);
    TextDrawLetterSize(LoginMenu[1],1.300000,18.500022);
    TextDrawColor(LoginMenu[1],0xffffffff);
    TextDrawSetOutline(LoginMenu[1],1);
    TextDrawSetProportional(LoginMenu[1],1);
    TextDrawSetShadow(LoginMenu[1],1);
	
	LoginMenu[2] = TextDrawCreate(160.000000, 27.000000, "Miami");
	TextDrawBackgroundColor(LoginMenu[2], 255);
	TextDrawFont(LoginMenu[2], 1);
	TextDrawLetterSize(LoginMenu[2], 1.099999, 4.899997);
	TextDrawColor(LoginMenu[2], 0xBC9009FF);
	TextDrawSetOutline(LoginMenu[2], 0);
	TextDrawSetProportional(LoginMenu[2], 1);
	TextDrawSetShadow(LoginMenu[2], 3);
	
	LoginMenu[3] = TextDrawCreate(396.000000, 70.000000, "ROLEPLAY HISPANO");
	TextDrawBackgroundColor(LoginMenu[3], 255);
	TextDrawFont(LoginMenu[3], 1);
	TextDrawLetterSize(LoginMenu[3], 0.389999, 1.600000);
	TextDrawColor(LoginMenu[3], 0xBC9009FF);
	TextDrawSetOutline(LoginMenu[3], 0);
	TextDrawSetProportional(LoginMenu[3], 1);
	TextDrawSetShadow(LoginMenu[3], 1);
	
	LoginMenu[4] = TextDrawCreate(29.000000, 386.000000, "WEB/FORO:");
	TextDrawBackgroundColor(LoginMenu[4], 255);
	TextDrawFont(LoginMenu[4], 1);
	TextDrawLetterSize(LoginMenu[4], 0.479999, 1.700000);
	TextDrawColor(LoginMenu[4], 0xBC9009FF);
	TextDrawSetOutline(LoginMenu[4], 0);
	TextDrawSetProportional(LoginMenu[4], 1);
	TextDrawSetShadow(LoginMenu[4], 1);
	
	LoginMenu[5] = TextDrawCreate(121.000000, 386.000000, "...");
	TextDrawBackgroundColor(LoginMenu[5], 255);
	TextDrawFont(LoginMenu[5], 1);
	TextDrawLetterSize(LoginMenu[5], 0.460000, 1.700000);
	TextDrawColor(LoginMenu[5], -1);
	TextDrawSetOutline(LoginMenu[5], 0);
	TextDrawSetProportional(LoginMenu[5], 1);
	TextDrawSetShadow(LoginMenu[5], 1);

	LoginMenu[6] = TextDrawCreate(358.000000, 386.000000, "TEAMSPEAK3:");
	TextDrawBackgroundColor(LoginMenu[6], 255);
	TextDrawFont(LoginMenu[6], 1);
	TextDrawLetterSize(LoginMenu[6], 0.519999, 1.700000);
	TextDrawColor(LoginMenu[6], 0xBC9009FF);
	TextDrawSetOutline(LoginMenu[6], 0);
	TextDrawSetProportional(LoginMenu[6], 1);
	TextDrawSetShadow(LoginMenu[6], 1);

	LoginMenu[7] = TextDrawCreate(471.000000, 385.000000, "...");
	TextDrawBackgroundColor(LoginMenu[7], 255);
	TextDrawFont(LoginMenu[7], 1);
	TextDrawLetterSize(LoginMenu[7], 0.370000, 1.899999);
	TextDrawColor(LoginMenu[7], -1);
	TextDrawSetOutline(LoginMenu[7], 0);
	TextDrawSetProportional(LoginMenu[7], 1);
	TextDrawSetShadow(LoginMenu[7], 1);
	
	Ciudad = TextDrawCreate(40.292877, 296.916564, "Miami");
	TextDrawLetterSize(Ciudad, 0.424699, 2.119168);
	TextDrawAlignment(Ciudad, 1);
	TextDrawColor(Ciudad, 0x2471A3FF);
	TextDrawSetShadow(Ciudad, 0);
	TextDrawSetOutline(Ciudad, 1);
	TextDrawBackgroundColor(Ciudad, 51);
	TextDrawFont(Ciudad, 1);
	TextDrawSetProportional(Ciudad, 1);

	Prohibida = TextDrawCreate(63.250396, 309.166564, "Roleplay");
	TextDrawLetterSize(Prohibida, 0.449999, 1.600000);
	TextDrawAlignment(Prohibida, 1);
	TextDrawColor(Prohibida, -1);
	TextDrawSetShadow(Prohibida, 0);
	TextDrawSetOutline(Prohibida, 1);
	TextDrawBackgroundColor(Prohibida, 51);
	TextDrawFont(Prohibida, 0);
	TextDrawSetProportional(Prohibida, 1);
	
	TutTxt[0] =
	TextDrawCreate(159.000000, 302.000000, "_"); // BOX
	TextDrawBackgroundColor(TutTxt[0], 255);
	TextDrawFont(TutTxt[0], 2);
	TextDrawLetterSize(TutTxt[0], 0.290000, 14.099998);
	TextDrawColor(TutTxt[0], -1);
	TextDrawSetOutline(TutTxt[0], 0);
	TextDrawSetProportional(TutTxt[0], 1);
	TextDrawSetShadow(TutTxt[0], 1);
	TextDrawUseBox(TutTxt[0], 1);
	TextDrawBoxColor(TutTxt[0], 75);
	TextDrawTextSize(TutTxt[0], 473.000000, -43.000000);

	TutTxt[1] =
	TextDrawCreate(173.000000, 407.000000, "Discord: ~w~...");
	TextDrawBackgroundColor(TutTxt[1], 255);
	TextDrawFont(TutTxt[1], 1);
	TextDrawLetterSize(TutTxt[1], 0.319999, 1.700000);
	TextDrawColor(TutTxt[1], 0x2471A3FF);
	TextDrawSetOutline(TutTxt[1], 0);
	TextDrawSetProportional(TutTxt[1], 1);
	TextDrawSetShadow(TutTxt[1], 1);

	TutTxt[2] =
	TextDrawCreate(394.000000, 407.000000, "Pulsa: ~w~Y");
	TextDrawBackgroundColor(TutTxt[2], 255);
	TextDrawFont(TutTxt[2], 1);
	TextDrawLetterSize(TutTxt[2], 0.319999, 1.700000);
	TextDrawColor(TutTxt[2], 0x2471A3FF);
	TextDrawSetOutline(TutTxt[2], 0);
	TextDrawSetProportional(TutTxt[2], 1);
	TextDrawSetShadow(TutTxt[2], 1);

	TutTxt[3] =
	TextDrawCreate(317.000000, 313.000000, "Miami Roleplay - Tutorial");
	TextDrawAlignment(TutTxt[3], 2);
	TextDrawBackgroundColor(TutTxt[3], 255);
	TextDrawFont(TutTxt[3], 2);
	TextDrawLetterSize(TutTxt[3], 0.359999, 2.000000);
	TextDrawColor(TutTxt[3], 0x2471A3FF);
	TextDrawSetOutline(TutTxt[3], 0);
	TextDrawSetProportional(TutTxt[3], 1);
	TextDrawSetShadow(TutTxt[3], 1);

	box =
	TextDrawCreate			(199.000000, 182.000000, "_");
	TextDrawBackgroundColor (box, 255);
	TextDrawFont			(box, 2);
	TextDrawLetterSize		(box, 1.200000, 8.000000);
	TextDrawColor			(box, -1);
	TextDrawSetOutline		(box, 0);
	TextDrawSetProportional	(box, 1);
	TextDrawSetShadow		(box, 1);
	TextDrawUseBox			(box, 1);
	TextDrawBoxColor		(box, 75);
	TextDrawTextSize		(box, 436.000000, 90.000000);

	streamer =
	TextDrawCreate(210.000000, 214.000000, "CARGANDO OBJETOS ESPERA POR FAVOR");
	TextDrawBackgroundColor	(streamer, 255);
	TextDrawFont			(streamer, 2);
	TextDrawLetterSize		(streamer, 0.260000, 1.300000);
	TextDrawColor			(streamer, -1);
	TextDrawSetOutline		(streamer, 0);
	TextDrawSetProportional	(streamer, 1);
	TextDrawSetShadow		(streamer, 1);

	SunGlasses = TextDrawCreate(0.0,0.0,"_");
 	TextDrawFont(SunGlasses,1);
  	TextDrawLetterSize(SunGlasses,0.0,50.0);
   	TextDrawUseBox(SunGlasses,true);
   	TextDrawColor(SunGlasses,0);
// Policía Puertas
lspdo = CreateDynamicObject(2957, 250.52018737793, 62.803260803223, 1004.2604370117, 0.000000, 0.000000, 90,0,6);
lspd2 = CreateDynamicObject(988, 258.94287109375, 90.618301391602, 1001.330078125, 0.000000, 0.000000, 270,0,6);
lspdg = CreateDynamicObject(1649, 250.607421875, 67.644607543945, 1003.560546875, 0.000000, 0.000000, 270,0,6);
lspdk = CreateDynamicObject(2886, 245.17594909668, 72.789848327637, 1003.8690795898, 0.000000, 0.000000, 180,0,6);
cell =  CreateDynamicObject(980, 266.3408203125, 82.641418457031, 1001.8412475586, 0.000000, 0.000000, 270,0,6);
lspddoor1 = CreateDynamicObject(1500, 245.0578,72.4314,1002.5406,0, 0.0000, 0.0000,0,6);
lspddoor2 = CreateDynamicObject(1500, 245.9478,72.4314,1002.5406,0, 0.0000, 0.0000,0,6);
pdgate1 = CreateDynamicObject(971,1589.053344,-1638.123168,14.122960,0.000000,0.000000,180);
lspdg1 = CreateDynamicObject(2957, 248.01469421387, 75.232604980469, 1004.2604370117, 0, 0, 90, 0, 6);
lspdg2 = CreateDynamicObject(2957, 244.78970336914, 75.232421875, 1004.2604370117, 0, 0, 90, 0, 6);
lspdg3 = CreateDynamicObject(2957, 226.30581665039, 71.110366821289, 1005.6588745117, 0, 0, 90, 0, 6);
lspdg4 = CreateDynamicObject(2957, 226.3056640625, 75.235343933105, 1005.6588745117, 0, 0, 90, 0, 6);
lspdg5 = CreateDynamicObject(2957, 250.81405639648, 86.482467651367, 1003.235168457, 0, 0, 90, 0, 6);
pdgate2 = CreateDynamicObject(980, 1545.7398681641, -1627.7280273438, 15.206203460693, 0, 0, 90);
// Puertas
crgate = CreateDynamicObject(980, 1426.6943359375, -1882.537109375, 15.131196975708, 0.000000, 0.000000, 0.000000); //LCN
// LSRTV
tvp1 = CreateDynamicObject(969,774.11444092,-1384.98632812,12.92022705,0.00000000,0.00000000,0.00000000);
tvp = CreateDynamicObject(976, 781.77209500,-1330.31884800,12.68660500,0.00000000,0.00000000,-180.85939924);
// ++
CreateDynamicObject(971, 1042.2530,-1026.0344,32.1016,0, 0.0000, 0.0000);
// Prision Militar
prison1 = CreateDynamicObject(971,601.87536621,857.28271484,-91.00811768,0.00000000,0.00000000,0.00000000); //object(subwaygate) (1)
prison2 = CreateDynamicObject(971,610.68005371,857.30963135,-91.00811768,0.00000000,0.00000000,0.00000000); //object(subwaygate) (2)
prison3 = CreateDynamicObject(971,619.55297852,857.30340576,-91.00819397,0.00000000,0.00000000,0.00000000); //object(subwaygate) (3)
// Cerrado Lugares Tuning LS - SF
CreateDynamicObject(971, 2644.53, -2039.20, 12.51,   0.00, 0.00, 0.00);
CreateDynamicObject(971, -2716.49, 217.20, 4.45,   0.00, 0.00, 89.98);
//·| << Objetos Moviles >> =====================================================================================|·
//·| Hospital >> ===============================================================================================|·
CreateDynamicObject(19129,482.57,-8.31,999.74,0.00,0.00,0.00);// Piso de Colores en Alhambra
CreateDynamicObject(987,664.32916260,-1220.21582031,15.85455418,0.00000000,0.00000000,54.00000000); // Rusa Fix
CreateDynamicObject(14784, 1975.80, 1617.00, -3.50,   0.00, 0.00, 0.00); //PVP
CreateDynamicObject(16775, 1964.29, 1654.73, -2.77,   0.00, 0.00, 0.13); //PVP
CreateDynamicObject(16775, 1949.66, 1654.70, -2.76,   0.00, 0.00, 0.05); //PVP
CreateDynamicObject(16775, 1942.45, 1649.74, -0.33,   0.00, 0.00, 269.64); //PVP
/// MAPEOS
	//**************** DOMINOS********************************************************

//// Taller By Jhon
	CreateDynamicObject(19462, 2136.53174, -2282.36914, 21.38170, 0.00000, 0.00000, 44.80000);
	CreateDynamicObject(19462, 2123.68042, -2277.90527, 21.32070, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19462, 2128.67407, -2274.48462, 21.34670, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19462, 2128.67407, -2274.46460, 23.82490, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19462, 2125.24951, -2271.02930, 23.81770, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19462, 2121.52612, -2275.77051, 23.81770, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19462, 2128.30542, -2282.56226, 23.81770, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19462, 2128.30542, -2282.54224, 21.32070, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19443, 2118.68994, -2272.91797, 21.34090, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19462, 2135.28247, -2281.09888, 23.82490, 0.00000, 0.00000, 44.90000);
	CreateDynamicObject(19462, 2125.24951, -2271.04932, 21.34670, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19443, 2118.45850, -2272.02759, 24.04940, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2121.74683, -2268.75171, 24.83050, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2120.61377, -2269.87646, 24.56490, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2119.50073, -2270.98999, 24.56490, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2118.45850, -2272.04761, 21.35200, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2135.03540, -2281.64893, 23.31350, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2120.61377, -2269.89648, 21.35200, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2121.74683, -2268.77173, 21.35200, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2119.50073, -2271.01001, 21.35200, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2131.85498, -2284.84692, 23.19500, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2132.96143, -2283.73926, 23.92360, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2134.05908, -2282.64233, 23.43310, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2134.98730, -2281.63062, 21.35200, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2134.05908, -2282.62231, 21.35200, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2132.96143, -2283.71924, 21.35200, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19443, 2131.83496, -2284.84692, 21.35200, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(1499, 2118.12769, -2274.58765, 19.57340, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(1502, 2132.14282, -2277.77808, 19.55340, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19377, 2138.26465, -2287.61279, 19.58900, 0.00000, 90.00000, 134.00000);
	CreateDynamicObject(19377, 2124.87964, -2271.62158, 19.58500, 0.00000, 90.00000, 134.00000);
	CreateDynamicObject(19377, 2132.11646, -2279.12109, 19.58500, 0.00000, 90.00000, 134.00000);
	CreateDynamicObject(19377, 2139.29541, -2286.54761, 19.58500, 0.00000, 90.00000, 134.00000);
	CreateDynamicObject(19454, 2176.87573, -2252.87012, 19.63700, 0.00000, 90.00000, -45.00000);
	CreateDynamicObject(19454, 2147.99512, -2281.75195, 19.59400, 0.00000, 90.00000, -45.00000);
	CreateDynamicObject(19454, 2154.76685, -2274.97339, 19.59400, 0.00000, 90.00000, -45.00000);
	CreateDynamicObject(19454, 2161.55444, -2268.19531, 19.59400, 0.00000, 90.00000, -45.00000);
	CreateDynamicObject(19454, 2168.24609, -2261.50952, 19.59700, 0.00000, 90.00000, -45.00000);
	CreateDynamicObject(19454, 2174.93115, -2254.82129, 19.61700, 0.00000, 90.00000, -45.00000);
	CreateDynamicObject(982, 2169.45435, -2257.88843, 20.19950, 0.00000, 180.00000, -45.00000);
	CreateDynamicObject(982, 2152.50391, -2274.83032, 20.19950, 0.00000, 180.00000, -45.00000);
	CreateDynamicObject(983, 2126.49707, -2266.48047, 20.21990, 0.00000, 180.00000, 44.00000);
	CreateDynamicObject(983, 2141.17114, -2281.64307, 20.21990, 0.00000, 180.00000, 44.00000);
	CreateDynamicObject(983, 2138.96167, -2279.32983, 20.21990, 0.00000, 180.00000, 44.00000);
	CreateDynamicObject(983, 2132.07715, -2272.24072, 20.21990, 0.00000, 180.00000, 44.00000);
	CreateDynamicObject(983, 2127.62378, -2267.61963, 20.21990, 0.00000, 180.00000, 44.00000);
	CreateDynamicObject(19377, 2183.93750, -2260.83911, 12.31300, 0.00000, 75.00000, 135.00000);
	CreateDynamicObject(19377, 2174.38086, -2250.69775, 12.33300, 0.00000, 75.00000, 315.00000);
	CreateDynamicObject(19454, 2171.96484, -2254.97803, 10.97070, -15.00000, 0.00000, 45.00000);
	CreateDynamicObject(18766, 2138.98218, -2281.97241, 26.60980, 0.00000, 0.00000, -46.00000);
	CreateDynamicObject(18766, 2138.95679, -2288.46680, 26.64980, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18766, 2132.30762, -2288.08350, 26.64980, 0.00000, 0.00000, -46.00000);
	CreateDynamicObject(18766, 2132.32813, -2281.58838, 26.64980, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18766, 2137.03760, -2283.93896, 29.58390, 90.00000, 0.00000, -46.00000);
	CreateDynamicObject(18766, 2120.38208, -2275.87744, 26.64980, 0.00000, 0.00000, -46.00000);
	CreateDynamicObject(18766, 2120.41040, -2269.40332, 26.60980, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18766, 2127.38647, -2276.63843, 26.64980, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18766, 2127.41162, -2270.11133, 26.60980, 0.00000, 0.00000, -46.00000);
	CreateDynamicObject(18766, 2134.10669, -2286.79175, 29.58890, 90.00000, 0.00000, -46.00000);
	CreateDynamicObject(18766, 2122.55103, -2274.25049, 29.38190, 90.00000, 0.00000, -46.00000);
	CreateDynamicObject(18766, 2125.49072, -2271.40552, 29.35990, 90.00000, 0.00000, -46.00000);
	CreateDynamicObject(9192, 2124.03784, -2273.06128, 28.79000, 0.00000, 0.00000, 105.00000);
	CreateDynamicObject(9192, 2135.46997, -2284.51270, 29.07977, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(982, 2261.62500, -2263.54541, 13.20570, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(982, 2254.41724, -2256.40088, 13.20570, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(982, 2236.28320, -2274.55347, 13.20570, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(982, 2218.14502, -2292.70581, 13.20570, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(982, 2200.02100, -2310.81079, 13.20570, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(982, 2197.73462, -2313.09131, 13.20570, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(982, 2204.61938, -2320.53687, 13.20570, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(982, 2222.71411, -2302.42358, 13.20570, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(982, 2240.88257, -2284.32471, 13.20570, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(982, 2258.21191, -2266.93896, 13.20570, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2275.98999, -2263.73560, 14.19430, 0.00000, 0.00000, 134.69701);
	CreateDynamicObject(19456, 2260.68848, -2243.52710, 14.23430, 0.00000, 0.00000, 36.00000);
	CreateDynamicObject(19456, 2258.56421, -2240.58130, 14.23430, 0.00000, 0.00000, 36.00000);
	CreateDynamicObject(19456, 2252.36719, -2233.31860, 14.23430, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(975, 2267.23291, -2250.92700, 14.32990, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19456, 2232.71680, -2213.71387, 14.23430, 0.00000, 0.00000, 44.90000);
	CreateDynamicObject(19456, 2226.01074, -2206.99927, 14.21430, 0.00000, 0.00000, 44.90000);
	CreateDynamicObject(19456, 2219.51270, -2200.45630, 14.21430, 0.00000, 0.00000, 44.90000);
	CreateDynamicObject(19456, 2212.79785, -2193.71094, 14.21430, 0.00000, 0.00000, 44.90000);
	CreateDynamicObject(19456, 2206.10278, -2187.00952, 14.21430, 0.00000, 0.00000, 44.90000);
	CreateDynamicObject(19456, 2202.15063, -2183.03320, 14.21430, 0.00000, 0.00000, 44.90000);
	CreateDynamicObject(19456, 2195.31445, -2183.03589, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2188.54541, -2189.81519, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2181.79443, -2196.56982, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2175.02588, -2203.31860, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2168.24536, -2210.11328, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2161.46924, -2216.88208, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2154.73633, -2223.60791, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2148.02905, -2230.33081, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2141.24780, -2237.11523, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2134.51001, -2243.86426, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2127.74878, -2250.62769, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2120.96729, -2257.39355, 14.21430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2118.61450, -2259.74561, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2113.45190, -2267.57349, 14.19430, 0.00000, 0.00000, 158.00000);
	CreateDynamicObject(19456, 2112.57446, -2269.73242, 14.19430, 0.00000, 0.00000, 158.00000);
	CreateDynamicObject(19456, 2110.79248, -2278.95996, 14.19430, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19456, 2110.79712, -2288.48730, 14.19430, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19456, 2110.80078, -2297.92676, 14.19430, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19456, 2110.81738, -2307.21924, 14.19430, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19456, 2115.50171, -2312.79126, 14.19430, 0.00000, 0.00000, 79.50000);
	CreateDynamicObject(19456, 2124.81201, -2314.52222, 14.19430, 0.00000, 0.00000, 79.50000);
	CreateDynamicObject(19456, 2126.45898, -2314.82910, 14.19430, 0.00000, 0.00000, 79.50000);
	CreateDynamicObject(19456, 2135.47729, -2317.78052, 14.19430, 0.00000, 0.00000, 64.00000);
	CreateDynamicObject(19456, 2143.99927, -2321.95264, 14.19430, 0.00000, 0.00000, 64.00000);
	CreateDynamicObject(19456, 2144.61865, -2322.27271, 14.19430, 0.00000, 0.00000, 64.00000);
	CreateDynamicObject(19456, 2152.75024, -2327.26001, 14.19430, 0.00000, 0.00000, 53.00000);
	CreateDynamicObject(19456, 2156.56030, -2330.14331, 14.19430, 0.00000, 0.00000, 53.00000);
	CreateDynamicObject(19456, 2163.98975, -2335.94751, 14.19430, 0.00000, 0.00000, 51.00000);
	CreateDynamicObject(19456, 2171.41553, -2341.99854, 14.19430, 0.00000, 0.00000, 51.00000);
	CreateDynamicObject(19456, 2178.74902, -2347.93188, 14.19430, 0.00000, 0.00000, 51.00000);
	CreateDynamicObject(19456, 2182.21606, -2350.73584, 14.19430, 0.00000, 0.00000, 51.00000);
	CreateDynamicObject(19456, 2189.27222, -2350.33398, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2196.04858, -2343.59106, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2202.79443, -2336.82837, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2209.44116, -2330.19653, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2216.04761, -2323.57227, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2222.67896, -2316.95190, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2229.45264, -2310.18530, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2236.27100, -2303.38550, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2243.08301, -2296.56079, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2249.76123, -2289.86963, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2256.48486, -2283.14624, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2263.24292, -2276.40112, 14.19430, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19456, 2270.06079, -2269.59619, 14.19430, 0.00000, 0.00000, 134.69701);
	CreateDynamicObject(19364, 2272.12402, -2255.23438, 14.18520, 0.00000, 0.00000, 66.00000);
	CreateDynamicObject(19364, 2278.28418, -2259.33350, 14.18520, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19364, 2276.88940, -2257.95093, 14.18520, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19364, 2274.33276, -2256.20435, 14.18520, 0.00000, 0.00000, 66.00000);
	CreateDynamicObject(18980, 2236.39160, -2217.20142, 3.65440, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18980, 2270.68579, -2254.26929, 3.65440, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18980, 2263.79468, -2247.54395, 3.65440, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18980, 2242.45801, -2223.17651, 3.65440, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(3474, 2218.32715, -2299.63745, 18.41227, 0.00000, 0.00000, 314.93713);
	CreateDynamicObject(3594, 2215.56079, -2301.24219, 17.45470, 0.00000, 19.00000, 113.00000);
	CreateDynamicObject(3567, 2233.56226, -2288.09497, 13.48550, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(3567, 2233.59668, -2288.16211, 13.48550, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(3567, 2206.66553, -2314.82788, 13.48550, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(3567, 2206.66553, -2314.82788, 13.48550, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(3567, 2220.44800, -2300.99976, 13.48550, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(3567, 2220.28101, -2301.22144, 13.48550, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(3594, 2206.21729, -2314.75269, 15.60360, 0.00000, 0.00000, 140.00000);
	CreateDynamicObject(3594, 2202.95947, -2318.05298, 14.77490, 0.00000, 0.00000, -49.00000);
	CreateDynamicObject(3594, 2236.94702, -2285.08179, 14.77490, 0.00000, 0.00000, 141.00000);
	CreateDynamicObject(3594, 2208.85669, -2312.24341, 14.77490, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(3594, 2217.10156, -2304.20776, 14.77490, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(3594, 2230.37183, -2291.58032, 14.77490, 0.00000, 0.00000, 314.00000);
	CreateDynamicObject(18980, 2160.21606, -2326.57275, 7.92761, 0.00000, 0.00000, 315.37601);
	CreateDynamicObject(18980, 2169.10767, -2336.53296, 7.92761, 0.00000, 0.00000, 316.49323);
	CreateDynamicObject(3594, 2163.81104, -2325.88306, 13.10983, 0.00000, 0.00000, -47.00000);
	CreateDynamicObject(4100, 2167.67090, -2328.66992, 20.39188, -51.00000, -91.00000, 42.00000);
	CreateDynamicObject(4100, 2165.61646, -2330.61157, 20.35286, -51.00000, -91.00000, 42.00000);
	CreateDynamicObject(3594, 2170.03369, -2333.25952, 13.22788, 0.00000, 0.00000, 320.37030);
	CreateDynamicObject(3594, 2167.69824, -2330.88599, 13.18892, 0.00000, 0.00000, 140.00000);
	CreateDynamicObject(3594, 2165.72900, -2328.36035, 13.14957, 0.00000, 0.00000, 140.00000);
	CreateDynamicObject(18980, 2173.73901, -2332.12207, 7.92761, 0.00000, 0.00000, 316.08716);
	CreateDynamicObject(18980, 2164.12964, -2323.00806, 7.92761, 0.00000, 0.00000, 315.57703);
	CreateDynamicObject(3594, 2170.27490, -2333.21289, 17.12380, 0.00000, 0.00000, 320.37030);
	CreateDynamicObject(3594, 2167.94214, -2330.83862, 17.12380, 0.00000, 0.00000, 140.00000);
	CreateDynamicObject(3594, 2165.97510, -2328.31299, 17.12380, 0.00000, 0.00000, 140.00000);
	CreateDynamicObject(3594, 2164.05981, -2325.83472, 17.12380, 0.00000, 0.00000, -47.00000);
	CreateDynamicObject(3594, 2170.27490, -2333.21289, 21.00304, 0.00000, 0.00000, 320.37030);
	CreateDynamicObject(3594, 2167.94214, -2330.83862, 20.96170, 0.00000, 0.00000, 140.00000);
	CreateDynamicObject(3594, 2165.97510, -2328.31299, 20.98080, 0.00000, 0.00000, 140.00000);
	CreateDynamicObject(3594, 2164.05981, -2325.83472, 20.90030, 0.00000, 0.00000, -47.00000);
	CreateDynamicObject(4100, 2165.61646, -2330.61157, 16.45030, -51.00000, -91.00000, 42.00000);
	CreateDynamicObject(4100, 2167.67090, -2328.66992, 16.45030, -51.00000, -91.00000, 42.00000);
	CreateDynamicObject(19456, 2245.80811, -2226.75513, 14.23430, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18717, 2228.06470, -2255.49023, 17.12691, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9697, 2223.58496, -2281.91602, 12.57980, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(3460, 2169.28882, -2267.53198, 16.34050, 0.00000, 0.00000, 237.00000);
	CreateDynamicObject(3460, 2255.76392, -2252.44751, 16.34046, 0.00000, 0.00000, 46.44384);
	CreateDynamicObject(3460, 2243.53149, -2264.77393, 16.34046, 0.00000, 0.00000, 46.44384);
	CreateDynamicObject(3460, 2231.06445, -2276.97070, 16.34046, 0.00000, 0.00000, 46.44384);
	CreateDynamicObject(3460, 2218.62134, -2289.47949, 16.34046, 0.00000, 0.00000, 46.44384);
	CreateDynamicObject(3460, 2203.19287, -2304.92651, 16.34046, 0.00000, 0.00000, 46.14083);
	CreateDynamicObject(3460, 2187.84180, -2320.36743, 16.34046, 0.00000, 0.00000, 46.14083);
	CreateDynamicObject(3460, 2162.07178, -2275.43530, 16.34050, 0.00000, 0.00000, 237.00000);
	CreateDynamicObject(3383, 2138.62622, -2274.02637, 23.74711, -42.00000, 0.00000, 44.80000);
	CreateDynamicObject(3383, 2166.71582, -2245.20337, 23.64611, -42.00000, 0.00000, 45.00000);
	CreateDynamicObject(3383, 2159.40747, -2252.86768, 23.64611, -42.00000, 0.00000, 45.00000);
	CreateDynamicObject(3383, 2152.97388, -2259.14453, 23.64611, -42.00000, 0.00000, 44.90000);
	CreateDynamicObject(3383, 2147.33276, -2265.09155, 23.64611, -42.00000, 0.00000, 44.90000);
	CreateDynamicObject(18980, 2151.63867, -2246.46362, 3.60960, 0.00000, 0.00000, 43.63070);
	CreateDynamicObject(18980, 2148.22339, -2249.83447, 3.60960, 0.00000, 0.00000, 43.73070);
	CreateDynamicObject(18980, 2139.92212, -2257.50781, 3.60960, 0.00000, 0.00000, 43.73070);
	CreateDynamicObject(18980, 2143.61597, -2253.88184, 3.60960, 0.00000, 0.00000, 43.63070);
	CreateDynamicObject(2886, 2175.14014, -2257.11865, 15.66251, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(2886, 2242.14819, -2223.50952, 14.29890, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(2253, 2122.37671, -2268.67212, 19.94040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2254, 2120.26147, -2270.39941, 21.83640, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(2290, 2133.39282, -2282.27197, 19.63980, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(2295, 2134.47534, -2281.19775, 19.55540, 0.00000, 0.00000, 258.00000);
	CreateDynamicObject(948, 2131.35376, -2284.86963, 19.63190, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2191, 2126.76294, -2273.35693, 19.67180, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(2191, 2125.09351, -2271.71777, 19.61150, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(2191, 2126.16211, -2279.57129, 19.67180, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(2191, 2124.54785, -2277.99023, 19.67180, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(2267, 2133.35498, -2283.15991, 21.76040, 0.00000, 0.00000, -135.00000);
	CreateDynamicObject(2244, 2133.55273, -2278.74854, 19.93750, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(2244, 2132.22778, -2277.41089, 19.93750, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(3761, 2137.10327, -2282.78613, 15.75990, 0.00000, 0.00000, 314.10001);
	CreateDynamicObject(3761, 2127.93286, -2273.65894, 15.75990, 0.00000, 0.00000, -46.00000);
	CreateDynamicObject(3761, 2132.79077, -2278.11328, 15.75990, 0.00000, 0.00000, -46.00000);
	CreateDynamicObject(1348, 2151.52026, -2279.97754, 14.46010, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1686, 2159.51416, -2232.35522, 12.25800, 0.00000, 0.00000, 43.48990);
	CreateDynamicObject(1686, 2162.11938, -2234.98364, 12.25800, 0.00000, 0.00000, 44.00000);
	CreateDynamicObject(1060, 2127.29614, -2274.17603, 15.38089, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1045, 2134.12988, -2275.29004, 15.88554, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1023, 2136.61621, -2283.19092, 15.38189, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1078, 2128.01123, -2273.06909, 18.21660, 0.00000, 0.00000, 359.59393);
	CreateDynamicObject(1078, 2126.42554, -2275.24805, 18.21660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1078, 2127.00146, -2274.49170, 18.21660, 0.00000, 0.00000, 359.59393);
	CreateDynamicObject(1078, 2127.53101, -2273.71875, 18.21660, 0.00000, 0.00000, 359.59393);
	CreateDynamicObject(1081, 2132.85645, -2277.76636, 18.22520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1081, 2131.10986, -2279.99463, 18.22520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1081, 2131.66455, -2279.32349, 18.22520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1081, 2132.30054, -2278.53613, 18.22520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1074, 2137.12231, -2282.37622, 18.22100, 0.00000, 0.00000, 359.79898);
	CreateDynamicObject(1074, 2135.61719, -2284.31543, 18.22100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1074, 2136.09766, -2283.59888, 18.22100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1074, 2136.55298, -2282.98022, 18.22100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1008, 2138.49878, -2281.17749, 15.38192, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(959, 2145.68018, -2244.10132, 13.11860, 0.00000, 0.00000, 224.00000);
	CreateDynamicObject(958, 2145.68872, -2244.12769, 13.11860, 0.00000, 0.00000, 224.00000);
	CreateDynamicObject(958, 2137.67920, -2252.27075, 13.11860, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(959, 2137.67920, -2252.27075, 13.11860, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(939, 2143.08252, -2247.69629, 14.79900, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(3096, 2245.05811, -2225.96460, 14.30280, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(3096, 2233.14014, -2214.13281, 14.30280, 0.00000, 0.00000, -45.10000);
	CreateDynamicObject(12929, 2156.49365, -2269.92383, 12.28960, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(12928, 2156.49365, -2269.92383, 12.28960, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(10282, 2154.71924, -2271.56348, 13.28500, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(10281, 2178.79810, -2256.12988, 20.62491, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19425, 2181.58960, -2255.82031, 13.70450, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19425, 2179.25830, -2258.15308, 13.70450, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19425, 2179.09326, -2253.34473, 13.70450, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19425, 2176.76025, -2255.67944, 13.70450, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1025, 2151.36499, -2238.14941, 14.54680, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1074, 2152.14722, -2237.31982, 15.79780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1075, 2153.01904, -2236.44604, 15.79780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1076, 2153.81152, -2235.63501, 15.79780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1077, 2154.59668, -2234.82739, 15.79780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1078, 2155.39868, -2234.02344, 15.79780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1079, 2156.25439, -2233.23999, 15.79780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1080, 2157.01514, -2232.43921, 15.79780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1073, 2151.33569, -2238.12598, 15.79780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1098, 2152.13989, -2237.33252, 14.54680, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1097, 2153.00537, -2236.48633, 14.54680, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1096, 2153.80786, -2235.66528, 14.54680, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1084, 2154.59668, -2234.82739, 14.54680, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1083, 2155.40454, -2233.99658, 14.54680, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1082, 2156.23853, -2233.23218, 14.54680, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(1081, 2157.04590, -2232.42578, 14.54680, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(19445, 2151.88599, -2269.01904, 13.72640, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(5130, 2139.73706, -2271.59131, 16.67970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1009, 2160.29419, -2271.09497, 13.11350, 0.00000, 0.00000, 13.69830);
	CreateDynamicObject(1009, 2160.48218, -2270.66260, 13.11350, 0.00000, 0.00000, 256.54324);
	CreateDynamicObject(1009, 2160.61743, -2270.55469, 13.11350, 0.00000, 0.00000, 256.54321);
	CreateDynamicObject(1650, 2159.42432, -2271.57397, 13.47000, 0.00000, 0.00000, 331.68350);
	CreateDynamicObject(2690, 2159.61523, -2271.42090, 13.51000, 0.00000, 0.00000, 331.68350);
	CreateDynamicObject(1428, 2157.20117, -2273.61548, 11.82180, 13.00000, 0.00000, 347.16110);
	CreateDynamicObject(1428, 2157.18848, -2273.76953, 11.84180, 13.00000, 0.00000, 347.16110);
	CreateDynamicObject(1428, 2157.15479, -2273.93115, 11.82180, 13.00000, 0.00000, 347.16110);
	CreateDynamicObject(1355, 2159.61548, -2271.60889, 12.71100, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1355, 2160.24854, -2270.96143, 12.71100, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1355, 2160.48584, -2270.71338, 12.71100, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1355, 2160.11157, -2271.13818, 12.93100, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1355, 2160.51343, -2270.68433, 12.93100, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1355, 2159.58203, -2271.62061, 12.89100, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1805, 2152.33667, -2276.08447, 12.87680, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1805, 2152.12061, -2275.88989, 12.87680, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1805, 2151.79565, -2275.56299, 12.87680, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1805, 2151.47266, -2275.30957, 12.87680, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1805, 2151.16577, -2275.02856, 12.83080, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1805, 2150.11157, -2273.57520, 13.54960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1805, 2150.01074, -2273.54761, 12.55180, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1805, 2150.00830, -2273.55396, 12.94690, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3633, 2150.19653, -2271.79248, 13.71680, 0.00000, 0.00000, 42.88784);
	CreateDynamicObject(3633, 2149.71069, -2272.33252, 14.65600, 0.00000, 0.00000, 39.44600);
	CreateDynamicObject(3633, 2150.19189, -2271.72046, 12.77040, 0.00000, 0.00000, 45.59233);
	CreateDynamicObject(1428, 2150.17993, -2273.42822, 12.21390, 13.00000, 0.00000, 312.12390);
	CreateDynamicObject(1428, 2149.94678, -2273.42188, 12.21390, 13.00000, 0.00000, 42.78380);
	CreateDynamicObject(1428, 2151.41919, -2274.97949, 11.55090, 13.00000, 0.00000, 312.79568);
	CreateDynamicObject(1428, 2150.22632, -2273.74805, 12.21390, 13.00000, 0.00000, 42.78380);
	CreateDynamicObject(1428, 2149.88525, -2273.67236, 12.21390, 13.00000, 0.00000, 309.65369);
	CreateDynamicObject(1428, 2151.85620, -2275.42432, 11.55090, 13.00000, 0.00000, 312.79568);
	CreateDynamicObject(1428, 2152.48779, -2276.16528, 11.55090, 13.00000, 0.00000, 225.15739);
	CreateDynamicObject(1428, 2152.35718, -2275.91772, 11.55090, 13.00000, 0.00000, 312.79568);
	CreateDynamicObject(1428, 2151.11938, -2274.85767, 11.55090, 13.00000, 0.00000, 225.15739);
	CreateDynamicObject(3633, 2149.43726, -2272.66089, 12.77040, 0.00000, 0.00000, 46.81794);
	CreateDynamicObject(3633, 2149.39063, -2272.61816, 13.71680, 0.00000, 0.00000, 39.44600);
	CreateDynamicObject(3633, 2150.00806, -2240.34351, 14.63200, 0.00000, 0.00000, 44.64470);
	CreateDynamicObject(3633, 2150.00806, -2240.34351, 12.75520, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(3633, 2150.00806, -2240.34351, 13.68670, 0.00000, 0.00000, 47.37916);
	CreateDynamicObject(1428, 2154.72388, -2267.17993, 11.56180, 13.00000, 0.00000, 20.25880);
	CreateDynamicObject(1428, 2154.66113, -2267.01025, 11.56180, 13.00000, 0.00000, 20.25880);
	CreateDynamicObject(1428, 2155.24097, -2266.38501, 11.56180, 13.00000, 0.00000, 45.18690);
	CreateDynamicObject(1428, 2155.15137, -2266.30469, 11.56180, 13.00000, 0.00000, 45.18690);
	CreateDynamicObject(1428, 2155.04712, -2266.21094, 11.56180, 13.00000, 0.00000, 45.18690);
	CreateDynamicObject(1428, 2154.60938, -2266.86621, 11.56180, 13.00000, 0.00000, 20.25880);
	CreateDynamicObject(1502, 2119.21021, -2273.46899, 19.57340, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19387, 2141.22705, -2286.85376, 21.40730, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19430, 2142.90723, -2288.53369, 21.40730, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1523, 2141.80737, -2287.34644, 19.64900, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19358, 2136.59497, -2289.18774, 21.37780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(19358, 2138.85986, -2286.92358, 21.37780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(19358, 2136.51880, -2291.35840, 21.37780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19358, 2137.61548, -2292.45703, 21.37780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19358, 2142.14282, -2290.13867, 21.37780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(19358, 2139.91724, -2292.36182, 21.37780, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(2514, 2138.91797, -2292.60034, 19.66850, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(19431, 2139.33936, -2291.81226, 21.37780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1523, 2137.01123, -2291.77002, 19.64900, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19431, 2138.63989, -2291.10962, 21.37780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(2514, 2140.07275, -2291.42578, 19.66850, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(2514, 2141.23828, -2290.23511, 19.66850, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(19431, 2139.76294, -2289.95117, 21.37780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1523, 2138.16309, -2290.56006, 19.64900, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19431, 2140.41699, -2290.61157, 21.37780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19431, 2140.92212, -2288.76343, 21.37780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1523, 2139.31836, -2289.39795, 19.64900, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19431, 2141.58569, -2289.44556, 21.37780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(2008, 2128.96362, -2282.29883, 19.65860, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(1671, 2129.14551, -2280.69507, 20.13420, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(2007, 2127.11450, -2280.55664, 19.65460, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(2007, 2142.42505, -2289.13403, 15.14490, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(2007, 2141.67798, -2289.85962, 15.14490, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(2007, 2140.93994, -2290.59473, 15.14490, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(2007, 2140.93994, -2290.59473, 13.75910, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(2007, 2141.67798, -2289.85962, 13.75910, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(2007, 2142.42505, -2289.13403, 13.75910, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(1886, 2122.38452, -2268.95410, 23.89640, 20.00000, 0.00000, 3.51391);
	CreateDynamicObject(1886, 2118.81543, -2272.38110, 23.89640, 20.00000, 0.00000, 92.95260);
	CreateDynamicObject(1886, 2131.15283, -2284.70239, 23.89640, 20.00000, 0.00000, 190.87184);
	CreateDynamicObject(1886, 2134.63525, -2281.17847, 23.89640, 20.00000, 0.00000, 269.69696);
	CreateDynamicObject(1886, 2179.58887, -2251.91577, 19.56810, 20.00000, 0.00000, 269.69699);
	CreateDynamicObject(1886, 2158.72046, -2231.43628, 23.08660, 30.00000, 0.00000, 0.00000);
	CreateDynamicObject(1886, 2178.78540, -2250.97803, 23.06660, 10.00000, 0.00000, -45.00000);
	CreateDynamicObject(1886, 2144.28320, -2287.22876, 23.06660, 10.00000, 0.00000, 219.65788);
	CreateDynamicObject(1886, 2118.04565, -2272.17773, 19.52570, 10.00000, 0.00000, 90.00000);
	CreateDynamicObject(1886, 2124.56958, -2267.89331, 23.06660, 10.00000, 0.00000, 45.00000);
	CreateDynamicObject(19377, 2123.56567, -2273.03784, 19.58500, 0.00000, 90.00000, 134.00000);
	CreateDynamicObject(19377, 2130.51270, -2280.53027, 19.58500, 0.00000, 90.00000, 134.00000);
	CreateDynamicObject(1886, 2138.66821, -2292.85986, 19.52570, 10.00000, 0.00000, 183.04359);
	CreateDynamicObject(1886, 2142.58301, -2289.20166, 19.52570, 10.00000, 0.00000, 225.00000);
	CreateDynamicObject(1886, 2121.31421, -2268.59229, 19.52570, 10.00000, 0.00000, 45.00000);
	CreateDynamicObject(1886, 2126.01758, -2280.28979, 19.52570, 10.00000, 0.00000, 135.00000);
	CreateDynamicObject(1886, 2130.48877, -2284.87866, 19.52570, 10.00000, 0.00000, 135.00000);
	CreateDynamicObject(1886, 2136.80664, -2290.72705, 23.14646, 10.00000, 0.00000, 135.00000);
	CreateDynamicObject(11392, 2147.51855, -2254.39478, 12.30980, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(17969, 2217.73657, -2198.49634, 14.28070, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(18659, 2221.95947, -2202.75098, 14.20320, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(18659, 2205.50171, -2186.22900, 14.20320, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(18659, 2176.50635, -2346.26465, 14.20320, 0.00000, 0.00000, 50.79062);
	CreateDynamicObject(18659, 2189.91284, -2349.87671, 14.20320, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(2886, 2242.74438, -2222.80298, 14.29890, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(2886, 2175.77295, -2257.95654, 15.66250, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19443, 2133.01782, -2256.23193, 13.62920, 90.00000, 0.00000, 135.00000);
	CreateDynamicObject(18641, 2132.11890, -2257.29370, 14.11580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18641, 2132.22290, -2257.16748, 13.80980, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18641, 2132.17700, -2257.23682, 13.80980, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18641, 2132.22290, -2257.16748, 14.11580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18641, 2132.17700, -2257.23682, 14.11580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18641, 2132.11890, -2257.29370, 13.80980, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.38062, -2257.02246, 14.24200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.41016, -2256.99561, 14.24200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.43994, -2256.96875, 14.24200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.46973, -2256.94189, 14.24200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.49658, -2256.91211, 14.24200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.52344, -2256.88232, 14.24200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.55029, -2256.85254, 13.83190, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.55029, -2256.85254, 14.24200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.52344, -2256.88232, 13.83190, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.49658, -2256.91211, 13.83190, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.46973, -2256.94189, 13.83190, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.43994, -2256.96875, 13.83190, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.41016, -2256.99561, 13.83190, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, 2132.38062, -2257.02246, 13.83190, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18635, 2132.65039, -2256.78906, 13.96530, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18635, 2132.77783, -2256.67163, 13.96530, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18635, 2132.90186, -2256.54614, 13.41010, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18635, 2133.03003, -2256.41797, 13.96530, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18635, 2133.15576, -2256.28394, 13.96530, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18635, 2132.90186, -2256.54614, 13.96530, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18635, 2133.03003, -2256.41797, 13.41010, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18635, 2133.15576, -2256.28394, 13.41010, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18635, 2132.77783, -2256.67163, 13.41010, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18635, 2132.65039, -2256.78906, 13.41010, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18634, 2133.41992, -2255.96362, 13.83960, 75.00000, 0.00000, 135.00000);
	CreateDynamicObject(18634, 2133.65967, -2255.73584, 13.83960, 75.00000, 0.00000, 135.00000);
	CreateDynamicObject(18634, 2133.88037, -2255.51294, 13.83960, 75.00000, 0.00000, 135.00000);
	CreateDynamicObject(18634, 2134.10596, -2255.28271, 13.42440, 75.00000, 0.00000, 135.00000);
	CreateDynamicObject(18634, 2134.10596, -2255.28271, 13.83960, 75.00000, 0.00000, 135.00000);
	CreateDynamicObject(18634, 2133.88037, -2255.51294, 13.42440, 75.00000, 0.00000, 135.00000);
	CreateDynamicObject(18634, 2133.65967, -2255.73584, 13.42440, 75.00000, 0.00000, 135.00000);
	CreateDynamicObject(18634, 2133.43994, -2255.94360, 13.42440, 75.00000, 0.00000, 135.00000);
	CreateDynamicObject(18633, 2131.91235, -2257.47974, 13.20650, 75.00000, 0.00000, 315.00000);
	CreateDynamicObject(18633, 2131.91235, -2257.47974, 14.02270, 75.00000, 0.00000, 315.00000);
	CreateDynamicObject(18633, 2132.10962, -2257.30347, 13.20650, 75.00000, 0.00000, 315.00000);
	CreateDynamicObject(18633, 2132.28687, -2257.11841, 13.10650, 75.00000, 0.00000, 315.00000);
	CreateDynamicObject(19171, 2118.75488, -2271.31128, 14.52370, 90.00000, 90.00000, 0.00000);
	CreateDynamicObject(19428, 2118.65869, -2271.26489, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19169, 2118.75488, -2271.31128, 16.02390, 90.00000, 90.00000, 0.00000);
	CreateDynamicObject(19168, 2118.75488, -2272.81128, 16.02390, 90.00000, 90.00000, 0.00000);
	CreateDynamicObject(19170, 2118.75488, -2272.81128, 14.52370, 90.00000, 90.00000, 0.00000);
	CreateDynamicObject(19428, 2118.65869, -2272.86987, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2118.29883, -2272.86987, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2118.47876, -2271.26489, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2118.29883, -2271.26489, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 22118.33984, -2272.86987, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2118.47876, -2272.86987, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2118.11890, -2271.26489, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2118.11890, -2272.86987, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2117.93896, -2272.86987, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2117.93896, -2271.26489, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2117.75903, -2272.86987, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2117.75903, -2271.26489, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2117.57910, -2271.26489, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2117.57910, -2272.86987, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2117.39917, -2272.06494, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19428, 2117.21924, -2272.06494, 15.02200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(941, 2136.10278, -2261.52173, 12.71630, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(941, 2138.55835, -2267.66431, 12.71630, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(1009, 2139.25610, -2267.83472, 13.19350, 0.00000, 0.00000, 280.54721);
	CreateDynamicObject(1009, 2139.05054, -2268.06152, 13.19350, 0.00000, 0.00000, 303.59122);
	CreateDynamicObject(1009, 2138.79956, -2268.29395, 13.19350, 0.00000, 0.00000, 256.54321);
	CreateDynamicObject(1008, 2135.76807, -2260.69556, 13.19350, 0.00000, 0.00000, 163.97652);
	CreateDynamicObject(1008, 2137.66284, -2267.05688, 13.19350, 0.00000, 0.00000, 273.07999);
	CreateDynamicObject(1008, 2138.01538, -2267.29370, 13.19350, 0.00000, 0.00000, 244.37599);
	CreateDynamicObject(1010, 2138.23291, -2267.67969, 13.19350, 0.00000, 0.00000, 268.93213);
	CreateDynamicObject(1010, 2138.57129, -2267.93237, 13.19350, 0.00000, 0.00000, 238.31689);
	CreateDynamicObject(1010, 2138.63867, -2267.29272, 13.19350, 0.00000, 0.00000, 315.46344);
	CreateDynamicObject(1010, 2136.15112, -2262.18945, 13.19350, 0.00000, 0.00000, 315.46344);
	CreateDynamicObject(1009, 2135.06616, -2261.00098, 13.19350, 0.00000, 0.00000, 280.54721);
	CreateDynamicObject(1010, 2136.56372, -2261.90210, 13.19350, 0.00000, 0.00000, 270.64142);
	CreateDynamicObject(1008, 2136.69165, -2261.52344, 13.19350, 0.00000, 0.00000, 318.22910);
	CreateDynamicObject(1009, 2135.31665, -2261.01392, 13.19350, 0.00000, 0.00000, 263.22852);
	CreateDynamicObject(1009, 2135.57642, -2261.12671, 13.19350, 0.00000, 0.00000, 243.64635);
	CreateDynamicObject(1010, 2135.92041, -2261.64746, 13.19350, 0.00000, 0.00000, 250.66040);
	CreateDynamicObject(1008, 2136.27026, -2261.52197, 13.19350, 0.00000, 0.00000, 272.48291);
	CreateDynamicObject(1009, 2136.00513, -2261.15552, 13.19350, 0.00000, 0.00000, 215.32985);
	CreateDynamicObject(1009, 2135.63135, -2261.45923, 13.19350, 0.00000, 0.00000, 263.67581);
	CreateDynamicObject(3761, 2169.17896, -2261.99756, 14.29640, 0.00000, 0.00000, -46.00000);
	CreateDynamicObject(2255, 2128.27905, -2281.70947, 21.59700, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(11392, 2156.06396, -2254.92993, 12.30980, 0.00000, 0.00000, 309.16077);
	CreateDynamicObject(365, 2151.50317, -2275.22900, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2151.61450, -2275.34424, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2151.83765, -2275.54639, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2151.43457, -2275.10083, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2151.65381, -2275.52930, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2152.04980, -2275.56421, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2151.80591, -2275.74414, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2152.01709, -2275.81860, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2151.82715, -2275.33398, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2151.27612, -2275.25366, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2151.26660, -2274.98438, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2151.06787, -2275.00928, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2151.97339, -2275.91382, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2152.27661, -2275.87720, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2152.33667, -2276.31274, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2152.44653, -2276.01050, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2152.20288, -2276.12671, 13.31090, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(365, 2152.68506, -2275.55322, 12.34720, 50.00000, 90.00000, 90.00000);
	CreateDynamicObject(365, 2152.27222, -2275.13550, 12.34720, 50.00000, 90.00000, 13.35607);
	CreateDynamicObject(987, 2181.69604, -2251.80420, 12.52910, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(987, 2190.18970, -2243.34766, 12.52910, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(987, 2205.39893, -2228.31836, 12.52910, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(987, 2213.77930, -2219.85352, 12.52910, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(987, 2217.88110, -2215.63574, 12.52910, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(987, 2226.15088, -2207.43970, 12.52910, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(987, 2217.66821, -2198.96924, 12.52910, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(987, 2209.20044, -2190.45630, 12.52910, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(987, 2207.08521, -2188.30786, 12.52910, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(987, 2198.73071, -2179.87598, 12.52910, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(987, 2190.26978, -2188.32886, 12.52910, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(987, 2181.78857, -2196.80322, 12.52910, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(18980, 2205.19189, -2228.85400, 12.55500, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18980, 2198.94092, -2234.82715, 12.55502, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(987, 2173.33716, -2205.29419, 12.52910, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(987, 2164.83301, -2213.77271, 12.52910, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(987, 2162.72974, -2215.91357, 12.52910, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(987, 2154.10352, -2224.46948, 12.42910, 0.00000, 0.00000, 315.00000);
	CreateDynamicObject(2886, 2199.31738, -2235.04053, 14.64126, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(2886, 2198.76660, -2234.35889, 14.64130, 0.00000, 0.00000, 225.00000);
	CreateDynamicObject(2254, 2127.58228, -2262.05566, 16.43670, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1886, 2199.21313, -2235.09570, 24.97200, 30.00000, 180.00000, 45.00000);
	CreateDynamicObject(1886, 2205.39282, -2229.16797, 24.97200, 30.00000, 180.00000, 45.00000);
	CreateDynamicObject(1886, 2198.65234, -2234.58618, 24.97200, 30.00000, 180.00000, 225.00000);
	CreateDynamicObject(1886, 2204.86523, -2228.63940, 24.97200, 30.00000, 180.00000, 225.00000);
	CreateDynamicObject(18980, 2154.50708, -2224.52148, 5.06780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18980, 2198.74927, -2180.22192, 5.06780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(18980, 2225.76538, -2207.35718, 5.06780, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1886, 2155.02319, -2224.50195, 17.34010, 20.00000, 180.00000, 90.00000);
	CreateDynamicObject(1886, 2198.75391, -2180.70459, 17.34010, 20.00000, 180.00000, 0.00000);
	CreateDynamicObject(1886, 2225.59839, -2207.38525, 17.34010, 20.00000, 180.00000, 270.00000);
	CreateDynamicObject(1886, 2182.70752, -2249.55347, 17.24640, 20.00000, 180.00000, 167.16110);
	CreateDynamicObject(1886, 2179.76050, -2248.04297, 17.24640, 20.00000, 180.00000, 215.00000);
	CreateDynamicObject(1886, 2197.87769, -2234.55396, 17.24640, 30.00000, 180.00000, 135.00000);
	CreateDynamicObject(18980, 2197.58643, -2234.87500, 5.09297, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1886, 2204.96021, -2227.99902, 17.24640, 30.00000, 180.00000, 315.00000);
	CreateDynamicObject(18980, 2205.17163, -2227.48901, 5.09297, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1886, 2204.78784, -2228.52563, 17.96780, 35.00000, 180.00000, 225.00000);
	CreateDynamicObject(1886, 2198.69165, -2234.32349, 17.96780, 35.00000, 180.00000, 225.00000);
	CreateDynamicObject(1886, 2242.24780, -2223.13501, 16.03550, 35.00000, 180.00000, 225.00000);
	CreateDynamicObject(1886, 2236.37622, -2217.44336, 16.03550, 35.00000, 180.00000, 45.00000);
	CreateDynamicObject(1886, 2236.37622, -2217.44336, 16.03550, 35.00000, 180.00000, 315.00000);
	CreateDynamicObject(1886, 2242.24780, -2223.13501, 16.03550, 35.00000, 180.00000, 315.00000);
	CreateDynamicObject(1886, 2173.93506, -2331.93311, 20.34360, 10.00000, 180.00000, 135.00000);
	CreateDynamicObject(1886, 2169.14624, -2336.93066, 20.34360, 40.00000, 180.00000, 0.00000);
	CreateDynamicObject(1886, 2159.73901, -2326.68555, 20.34360, 40.00000, 180.00000, 270.00000);
	CreateDynamicObject(1886, 2160.25317, -2327.08472, 20.34360, 40.00000, 180.00000, 0.00000);
	CreateDynamicObject(1886, 2168.58179, -2336.59473, 20.34360, 40.00000, 180.00000, 270.00000);
	CreateDynamicObject(1886, 2159.86279, -2305.86743, 19.53152, 10.00000, 180.00000, 135.00000);
	CreateDynamicObject(1886, 2136.78491, -2308.21753, 19.53150, 20.00000, 180.00000, 270.00000);
	CreateDynamicObject(1886, 2138.23267, -2306.83374, 19.53150, 20.00000, 180.00000, 225.00000);
	CreateDynamicObject(3578, 2158.22852, -2321.41968, 11.88769, 3.14160, 0.00000, 45.00000);
	CreateDynamicObject(3578, 2154.89624, -2318.09985, 11.88769, 3.14160, 0.00000, 45.00000);
	CreateDynamicObject(3578, 2153.95532, -2324.78442, 11.88770, 3.14160, 0.00000, 135.00000);
	CreateDynamicObject(3578, 2146.79834, -2317.59058, 11.88770, 3.14160, 0.00000, 135.00000);
	CreateDynamicObject(3578, 2161.19409, -2324.40015, 11.88769, 3.14160, 0.00000, 45.00000);
	CreateDynamicObject(3578, 2159.30078, -2313.70801, 11.88770, 3.14160, 0.00000, 45.00000);
	CreateDynamicObject(3578, 2162.72729, -2316.93433, 11.88770, 3.14160, 0.00000, 45.00000);
	CreateDynamicObject(3578, 2165.67798, -2319.92578, 11.88770, 3.14160, 0.00000, 45.00000);
	//// Banco BYJhon
    	//Banco

new tmpobjid;
tmpobjid = CreateDynamicObjectEx(19378, 1291.208, -999.041, 37.264, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 1730, "cj_furniture", "CJ_WOOD5", 0);
tmpobjid = CreateDynamicObjectEx(19378, 1291.196, -989.763, 37.284, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 1730, "cj_furniture", "CJ_WOOD5", 0);
tmpobjid = CreateDynamicObjectEx(19378, 1291.209, -980.086, 37.284, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 1730, "cj_furniture", "CJ_WOOD5", 0);
tmpobjid = CreateDynamicObjectEx(19378, 1286.303, -973.075, 37.264, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 1730, "cj_furniture", "CJ_WOOD5", 0);
tmpobjid = CreateDynamicObjectEx(19378, 1298.057, -980.094, 37.264, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 1730, "cj_furniture", "CJ_WOOD5", 0);
tmpobjid = CreateDynamicObjectEx(19378, 1296.814, -973.065, 37.305, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 1730, "cj_furniture", "CJ_WOOD5", 0);
tmpobjid = CreateDynamicObjectEx(19384, 1285.254, -975.916, 39.011, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19388, 1311.713, -969.916, 39.833, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6351, "rodeo02_law2", "helmutwall1_LAw", 0);
tmpobjid = CreateDynamicObjectEx(19450, 1306.822, -968.331, 39.837, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6351, "rodeo02_law2", "helmutwall1_LAw", 0);
tmpobjid = CreateDynamicObjectEx(19450, 1311.712, -976.318, 39.837, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6351, "rodeo02_law2", "helmutwall1_LAw", 0);
tmpobjid = CreateDynamicObjectEx(19450, 1311.724, -979.468, 39.837, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6351, "rodeo02_law2", "helmutwall1_LAw", 0);
tmpobjid = CreateDynamicObjectEx(19450, 1300.942, -984.226, 39.837, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6351, "rodeo02_law2", "helmutwall1_LAw", 0);
tmpobjid = CreateDynamicObjectEx(19450, 1300.921, -984.247, 36.536, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6351, "rodeo02_law2", "helmutwall1_LAw", 0);
tmpobjid = CreateDynamicObjectEx(19450, 1306.991, -984.231, 39.837, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6351, "rodeo02_law2", "helmutwall1_LAw", 0);
tmpobjid = CreateDynamicObjectEx(19450, 1301.646, -968.348, 36.347, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6351, "rodeo02_law2", "helmutwall1_LAw", 0);
tmpobjid = CreateDynamicObjectEx(19450, 1300.834, -968.317, 39.837, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6351, "rodeo02_law2", "helmutwall1_LAw", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1291.616, -1003.755, 39.049, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1285.990, -988.351, 39.069, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1285.907, -968.179, 39.049, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1296.337, -999.044, 39.069, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1290.693, -968.181, 39.069, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19357, 1281.036, -969.713, 39.066, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19357, 1281.117, -971.533, 39.085, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19357, 1286.008, -997.775, 39.085, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1296.354, -994.869, 39.090, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19357, 1286.037, -1002.357, 39.085, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(1491, 1286.025, -993.145, 37.323, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "sanairtex3", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1290.937, -1003.768, 39.069, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19446, 1279.615, -984.176, 42.589, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(1491, 1286.041, -996.156, 37.324, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "sanairtex3", 0);
tmpobjid = CreateDynamicObjectEx(2755, 1281.899, -970.354, 39.064, 0.018, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1280.208, -984.197, 42.567, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1279.437, -984.236, 39.076, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1301.458, -985.114, 39.126, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1284.467, -1002.697, 38.910, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.977, -994.671, 40.600, 90.000, -90.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.223, -996.229, 38.919, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1276.281, -972.880, 38.930, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1284.480, -1000.943, 38.890, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1274.725, -979.518, 39.047, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1289.193, -1004.218, 39.067, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1293.230, -1004.245, 39.087, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1297.968, -999.526, 39.106, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1297.977, -994.992, 39.106, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1308.313, -985.077, 39.106, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1308.229, -967.072, 39.087, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1284.354, -988.361, 42.547, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.223, -996.229, 42.419, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1284.469, -997.742, 42.410, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1284.480, -1000.943, 42.390, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1284.467, -1002.697, 42.390, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.110, -993.093, 38.919, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.282, -1002.421, 44.149, 0.000, -90.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.110, -993.093, 42.400, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1291.207, -999.007, 44.146, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1291.166, -989.372, 44.146, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.977, -994.671, 42.340, 90.000, -90.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.996, -994.671, 43.439, 90.000, -90.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1307.982, -980.372, 44.387, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1308.147, -971.765, 44.407, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1290.567, -972.895, 44.207, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1290.610, -979.757, 44.126, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1280.114, -979.252, 44.087, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1280.093, -977.727, 44.067, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1286.327, -971.866, 44.187, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1284.354, -988.361, 39.047, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1284.469, -997.742, 38.910, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1280.931, -968.528, 38.890, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1274.729, -977.598, 39.027, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1280.911, -971.366, 38.910, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1279.244, -972.861, 38.930, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1274.764, -977.632, 42.527, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1276.281, -972.880, 42.430, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1279.244, -972.861, 42.430, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1280.911, -971.366, 42.410, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19355, 1280.931, -968.528, 42.390, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1285.739, -967.039, 42.606, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1287.094, -971.877, 44.227, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1297.855, -971.849, 44.227, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1285.739, -967.039, 39.106, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1295.305, -967.070, 42.606, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1295.305, -967.070, 39.106, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1304.938, -967.049, 42.617, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1304.931, -967.077, 39.087, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1308.233, -967.043, 42.587, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1274.740, -979.533, 42.547, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1289.613, -988.393, 44.106, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.224, -994.658, 39.900, 0.000, -90.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3096, "bbpcpx", "blugrad32", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.380, -997.971, 44.209, 0.000, -90.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1293.230, -1004.245, 42.587, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1297.968, -999.526, 42.606, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1289.193, -1004.218, 42.567, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1297.977, -989.882, 42.606, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1302.709, -985.114, 42.626, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1308.359, -985.130, 42.606, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1297.592, -980.268, 44.306, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1292.640, -989.825, 44.166, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1292.724, -999.448, 44.236, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1312.543, -970.677, 39.089, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1313.069, -967.734, 39.109, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1313.069, -967.734, 42.589, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1312.445, -969.049, 42.489, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 18064, "ab_sfammuunits", "gun_blackbox", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1311.785, -969.872, 42.439, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1312.435, -969.039, 39.089, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1312.653, -970.666, 42.439, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1313.092, -968.281, 39.109, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1313.092, -968.281, 42.589, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1323.036, -980.106, 34.249, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3531, "triadprops_lvs", "casinowall1", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1318.092, -980.091, 34.229, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3531, "triadprops_lvs", "casinowall1", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1317.041, -972.396, 34.269, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3531, "triadprops_lvs", "casinowall1", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1313.639, -971.998, 32.629, 0.200, 0.099, -89.299, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1323.041, -970.468, 34.229, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3531, "triadprops_lvs", "casinowall1", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1328.327, -972.637, 39.368, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "nt_bonav1", 0);
tmpobjid = CreateDynamicObjectEx(19446, 1280.494, -972.986, 38.971, 0.000, 0.000, -91.099, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1313.378, -975.442, 38.949, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1318.411, -972.708, 44.429, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1313.380, -980.270, 38.949, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1317.134, -985.023, 39.388, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "nt_bonav1", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1315.067, -967.880, 39.368, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "nt_bonav1", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1328.334, -980.153, 39.368, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "nt_bonav1", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1323.587, -984.974, 39.368, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "nt_bonav1", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1323.590, -967.851, 39.368, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "nt_bonav1", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1323.134, -972.539, 44.448, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1318.462, -980.325, 44.378, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1322.987, -980.080, 44.428, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19428, 1285.962, -994.698, 40.752, 90.599, 0.000, 0.499, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19354, 1285.230, -981.520, 39.000, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19400, 1285.203, -978.270, 38.980, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19427, 1285.229, -973.872, 39.000, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19432, 1284.269, -989.429, 39.076, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3096, "bbpcpx", "blugrad32", 0);
tmpobjid = CreateDynamicObjectEx(19432, 1284.277, -989.426, 42.563, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3096, "bbpcpx", "blugrad32", 0);
tmpobjid = CreateDynamicObjectEx(19432, 1285.255, -1000.128, 44.128, 0.000, 89.000, -87.900, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19432, 1286.817, -1003.409, 44.152, 0.000, -90.299, -1.098, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19378, 1306.567, -973.062, 38.044, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14760, "sfhosemed2", "carp19S", 0);
tmpobjid = CreateDynamicObjectEx(19376, 1279.995, -977.840, 37.284, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "AH_flroortiledirt1", 0);
tmpobjid = CreateDynamicObjectEx(19378, 1306.550, -979.523, 38.084, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14760, "sfhosemed2", "carp19S", 0);
tmpobjid = CreateDynamicObjectEx(2773, 1304.901, -981.335, 38.679, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 2487, "rc_shop_hanger", "CJ_kite", 0);
tmpobjid = CreateDynamicObjectEx(2773, 1304.875, -979.177, 38.679, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 2487, "rc_shop_hanger", "CJ_kite", 0);
tmpobjid = CreateDynamicObjectEx(2773, 1304.733, -971.651, 38.679, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 2487, "rc_shop_hanger", "CJ_kite", 0);
tmpobjid = CreateDynamicObjectEx(2773, 1304.853, -975.369, 38.679, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 2487, "rc_shop_hanger", "CJ_kite", 0);
tmpobjid = CreateDynamicObjectEx(2773, 1304.869, -973.807, 38.679, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 2487, "rc_shop_hanger", "CJ_kite", 0);
tmpobjid = CreateDynamicObjectEx(2773, 1304.885, -977.564, 38.679, 0.000, 0.000, 90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 2487, "rc_shop_hanger", "CJ_kite", 0);
tmpobjid = CreateDynamicObjectEx(2774, 1286.522, -968.093, 31.173, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 16434, "des_stwnsigns1", "des_banksign", 0);
tmpobjid = CreateDynamicObjectEx(2774, 1296.128, -1000.159, 31.173, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1290.607, -973.476, 40.787, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1291.207, -999.007, 40.766, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1291.166, -989.414, 40.857, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1280.114, -979.252, 40.786, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1280.092, -977.898, 40.766, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1300.783, -973.221, 41.682, 0.099, -99.499, 1.599, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1286.306, -973.198, 40.817, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1290.610, -979.966, 40.797, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1306.446, -979.575, 41.706, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4828, "airport3_las", "mirrwind1_LAn", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1306.383, -973.182, 41.667, 0.000, -90.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4828, "airport3_las", "mirrwind1_LAn", 0);
tmpobjid = CreateDynamicObjectEx(19377, 1301.023, -979.717, 41.804, 0.300, -101.199, 0.500, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1285.972, -988.104, 42.590, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1285.990, -988.351, 42.549, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19357, 1286.008, -997.775, 42.585, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19357, 1286.037, -1002.357, 42.506, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1290.937, -1003.768, 42.569, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1296.363, -999.034, 42.569, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1291.616, -1003.755, 42.569, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1296.354, -989.539, 42.569, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19449, 1285.907, -968.179, 42.590, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19357, 1281.036, -969.713, 42.585, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19357, 1281.036, -971.533, 42.566, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19430, 1303.663, -980.226, 36.466, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", 0);
tmpobjid = CreateDynamicObjectEx(19430, 1303.584, -972.710, 36.387, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", 0);
tmpobjid = CreateDynamicObjectEx(19430, 1303.609, -976.471, 36.466, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", 0);
tmpobjid = CreateDynamicObjectEx(19447, 1313.187, -980.393, 39.106, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4593, "buildblk55", "sl_plazatile01", 0);
tmpobjid = CreateDynamicObjectEx(2172, 1318.906, -974.239, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0);
tmpobjid = CreateDynamicObjectEx(1649, 1285.232, -979.507, 38.611, 0.000, 0.000, 90.698, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14808, "lee_strip2", "Strip_neon2", 0);
tmpobjid = CreateDynamicObjectEx(1649, 1285.227, -979.435, 38.561, 0.000, 0.000, -90.198, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "sanairtex3", 0);
tmpobjid = CreateDynamicObjectEx(1687, 1277.625, -976.051, 44.893, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0);
tmpobjid = CreateDynamicObjectEx(19432, 1284.354, -999.519, 38.969, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3096, "bbpcpx", "blugrad32", 0);
tmpobjid = CreateDynamicObjectEx(19432, 1284.254, -999.531, 42.406, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3096, "bbpcpx", "blugrad32", 0);
tmpobjid = CreateDynamicObjectEx(1491, 1296.503, -986.338, 37.334, 0.000, 0.000, -89.699, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "sanairtex3", 0);
tmpobjid = CreateDynamicObjectEx(19354, 1277.878, -984.315, 42.631, 0.000, 0.000, -86.899, 300.000, 300.000);
SetDynamicObjectMaterialText(tmpobjid, 0, "BANCO", 20, "courier", 20, 1, -16777216, 0, 1);
tmpobjid = CreateDynamicObjectEx(19354, 1281.494, -984.274, 42.631, 0.000, 0.000, -89.300, 300.000, 300.000);
SetDynamicObjectMaterialText(tmpobjid, 0, "LS", 10, "courier", 20, 1, -16777216, 0, 1);
tmpobjid = CreateDynamicObjectEx(19354, 1297.987, -996.485, 41.350, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterialText(tmpobjid, 0, "CO", 10, "Calibri", 20, 1, -16777216, 0, 0);
tmpobjid = CreateDynamicObjectEx(1491, 1296.535, -989.361, 37.332, 0.000, 0.000, 89.699, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "sanairtex3", 0);
tmpobjid = CreateDynamicObjectEx(19427, 1296.488, -990.135, 39.080, 0.000, 0.000, 177.400, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19427, 1297.318, -989.867, 39.098, 0.000, 0.000, 60.399, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19427, 1297.060, -985.722, 39.123, 0.000, 0.000, -44.600, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19427, 1296.657, -987.842, 40.549, 84.299, -90.500, -87.799, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19427, 1296.313, -989.483, 40.959, 0.000, 90.699, 0.100, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19427, 1297.263, -986.939, 40.954, 2.000, -89.500, 89.699, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19427, 1296.363, -985.538, 39.036, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19427, 1297.195, -989.803, 39.097, 0.000, 0.000, -122.100, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "ballywall02_128", 0);
tmpobjid = CreateDynamicObjectEx(19427, 1296.557, -987.854, 40.635, 90.699, 0.000, 1.799, 300.000, 300.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "airportwall_256128", 0);
tmpobjid = CreateDynamicObjectEx(19354, 1298.000, -999.440, 41.390, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterialText(tmpobjid, 0, "BAN", 10, "Calibri", 20, 1, -16777216, 0, 0);
tmpobjid = CreateDynamicObjectEx(19354, 1298.016, -994.189, 41.350, 0.000, 0.000, 0.000, 300.000, 300.000);
SetDynamicObjectMaterialText(tmpobjid, 0, "LS", 10, "Calibri", 20, 1, -16777216, 0, 0);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
tmpobjid = CreateDynamicObjectEx(2774, 1285.869, -983.966, 31.114, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(11665, 1276.696, -974.731, 38.071, 0.000, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2256, 1311.607, -974.231, 39.854, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19450, 1311.734, -979.508, 42.716, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19450, 1311.730, -973.331, 42.716, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19450, 1300.834, -968.297, 42.536, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19446, 1274.775, -977.994, 42.368, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19446, 1274.788, -979.325, 42.348, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19446, 1280.427, -984.018, 42.308, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19447, 1313.241, -975.429, 39.196, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19447, 1313.264, -975.437, 42.606, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(14409, 1314.336, -969.963, 34.943, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19377, 1318.701, -962.960, 34.319, 0.000, -90.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1322.526, -982.138, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19427, 1285.224, -974.344, 38.980, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19354, 1324.665, -967.984, 34.424, 0.000, 0.000, -92.198, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19354, 1325.887, -967.937, 34.415, 0.000, 0.000, -90.198, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19432, 1325.719, -966.956, 34.323, 0.000, -88.199, 0.098, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19432, 1326.720, -966.963, 34.348, 0.000, 87.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19376, 1280.008, -979.424, 37.264, 0.000, -90.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(14394, 1300.274, -980.275, 37.357, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(14394, 1300.267, -972.281, 37.358, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19384, 1285.192, -975.919, 38.991, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19446, 1279.588, -973.159, 39.019, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19446, 1274.775, -977.994, 38.949, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19446, 1279.666, -983.594, 38.969, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19446, 1274.788, -979.325, 38.969, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19354, 1285.188, -981.466, 38.998, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19446, 1280.447, -983.596, 38.949, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19427, 1285.187, -973.877, 39.000, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19446, 1280.365, -973.151, 39.008, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2604, 1306.550, -972.028, 38.928, 0.000, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2604, 1306.563, -975.724, 38.928, 0.000, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2604, 1306.584, -979.406, 38.928, 0.000, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2774, 1296.093, -968.039, 31.194, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2774, 1295.902, -984.437, 31.114, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2774, 1286.282, -1000.198, 31.093, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2591, 1296.008, -995.250, 38.177, -0.018, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2591, 1296.020, -997.655, 38.178, -0.018, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2591, 1296.037, -990.111, 38.178, -0.018, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2591, 1296.206, -992.578, 38.178, -0.018, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2161, 1278.983, -983.051, 37.331, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2161, 1280.595, -983.039, 37.331, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2162, 1276.567, -983.073, 37.324, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2008, 1277.462, -979.687, 37.291, 0.000, 0.000, -62.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2571, 1283.968, -981.007, 37.351, 0.000, 0.000, -150.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1704, 1278.713, -974.291, 37.328, 0.000, 0.000, -108.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(640, 1285.624, -981.622, 37.985, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(640, 1285.621, -979.898, 37.965, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1726, 1292.550, -969.081, 37.291, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1726, 1288.506, -969.159, 37.291, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2257, 1307.053, -968.481, 40.048, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2614, 1311.587, -978.255, 40.208, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2010, 1305.421, -981.864, 38.125, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2010, 1305.524, -970.861, 38.125, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2007, 1275.401, -981.575, 37.375, 0.000, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2007, 1275.355, -978.794, 37.375, 0.000, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1276.869, -980.448, 37.340, 0.000, 0.000, 122.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2191, 1311.119, -980.276, 38.050, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2191, 1311.098, -971.843, 38.050, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2191, 1311.159, -976.031, 38.050, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1491, 1285.208, -976.674, 37.284, 0.000, 0.000, 90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19449, 1285.972, -988.104, 39.090, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19450, 1300.942, -984.247, 42.637, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19450, 1306.991, -984.252, 42.637, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19450, 1306.994, -968.330, 42.556, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19449, 1290.693, -968.181, 42.549, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19446, 1279.588, -973.159, 42.388, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2921, 1311.671, -983.877, 40.449, 0.000, 14.000, -36.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2921, 1295.189, -983.278, 40.208, 0.000, -12.000, -10.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2921, 1295.353, -999.893, 39.929, 0.000, 6.000, -30.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19447, 1313.193, -975.411, 39.106, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1315.417, -982.052, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1315.297, -978.010, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1315.401, -974.294, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1326.359, -974.247, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1318.977, -978.036, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1322.594, -978.156, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1319.103, -982.096, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1322.776, -974.276, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1326.453, -982.091, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2172, 1326.392, -978.114, 34.270, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1491, 1311.744, -969.091, 38.106, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1325.572, -974.802, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1314.442, -982.463, 34.276, 0.000, 0.000, 82.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1318.233, -982.642, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1321.751, -982.763, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1325.654, -982.786, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1325.540, -979.039, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1321.780, -979.148, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1318.078, -979.017, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1314.438, -978.911, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1314.646, -975.080, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1318.038, -975.051, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1714, 1321.827, -974.911, 34.276, 0.000, 0.000, 98.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2002, 1322.302, -968.468, 34.345, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(11319, 1288.218, -1005.789, 30.367, 0.000, 0.000, -85.198, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2200, 1325.754, -968.017, 34.278, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2200, 1323.521, -968.013, 34.308, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(2202, 1327.587, -970.416, 34.313, 0.000, 0.000, -90.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19377, 1313.358, -976.872, 39.109, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(19400, 1285.198, -978.260, 38.991, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(11319, 1288.057, -966.517, 33.994, 0.000, 0.000, -86.899, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(929, 1295.009, -986.085, 45.252, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(929, 1324.902, -971.327, 45.182, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1420, 1294.842, -969.354, 44.292, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1420, 1296.271, -969.356, 44.292, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1420, 1293.198, -969.293, 44.283, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(929, 1292.890, -986.081, 45.263, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(929, 1278.074, -981.283, 45.123, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1687, 1293.125, -1002.320, 45.022, 0.000, 0.000, 0.000, 300.000, 300.000);
tmpobjid = CreateDynamicObjectEx(1687, 1286.392, -1001.470, 44.913, -0.699, 0.599, -87.899, 300.000, 300.000);


SetObjectMaterialText(tmpobjid, "{00ff4a}In", 0, 10, "Calibri", 20, 0, 0x00000000, 0x00000000, 0);
SetObjectMaterialText(tmpobjid, "{0081ff}Driver", 0, 10, "Calibri", 15, 0, 0x00000000, 0x00000000, 0);
	//// Trailero By Gus
CreateDynamicObject(17019, -610.94702, -497.68088, 29.98340,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(18981, -562.73962, -505.53760, 24.02200,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(18981, -524.79285, -506.09305, 24.02200,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(17020, -611.14459, -537.80688, 28.11720,   360.00000, -1.00000, 0.00000);
CreateDynamicObject(3755, -557.28882, -542.00726, 30.21910,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(13489, -597.25629, -528.07172, 24.50659,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13489, -597.34222, -541.69543, 24.50659,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13489, -597.26099, -534.89252, 24.50659,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, -481.53119, -551.65363, 26.28000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19426, -481.54858, -560.21857, 26.28000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19399, -481.54257, -557.93170, 26.28000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19426, -481.55289, -561.75848, 26.28000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, -476.75348, -562.46649, 26.28000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, -470.75592, -562.46460, 26.28000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, -466.03998, -557.65869, 26.28000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, -466.02454, -548.30676, 26.28000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, -481.52219, -542.16144, 26.28000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, -473.69833, -537.26855, 26.28000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19383, -480.00647, -537.26544, 26.28000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, -470.79901, -537.26819, 26.28000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, -466.02347, -541.99457, 26.28000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, -480.77475, -537.27496, 24.52300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, -476.69919, -552.77588, 26.28000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19383, -467.66772, -552.76978, 26.28000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, -473.95218, -552.77454, 26.28000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -468.43851, -552.76941, 24.52300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19375, -476.32779, -542.05371, 24.44400,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19375, -476.33704, -551.59772, 24.44400,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19375, -476.32446, -557.61823, 24.44400,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19375, -471.30319, -557.64221, 24.44400,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19375, -471.27579, -547.89990, 24.44400,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19375, -471.43198, -542.07941, 24.44400,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -471.18469, -557.75739, 27.94770,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -471.18469, -548.13770, 27.94770,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -471.08118, -541.97205, 27.94770,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -476.35440, -541.96320, 27.94770,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -476.34521, -551.62280, 27.94770,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -476.34711, -557.74359, 27.94770,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1661, -475.59680, -544.50592, 27.61660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1738, -466.31039, -554.84882, 25.00130,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1808, -480.82239, -551.41937, 24.53120,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14532, -473.47610, -551.63672, 25.51130,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1737, -473.78839, -546.89252, 24.33220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1737, -473.78430, -545.93268, 24.33220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1760, -476.14777, -547.30389, 24.53260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1760, -474.27060, -543.78705, 24.53260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1760, -470.70029, -545.42987, 24.53260,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1808, -480.82001, -550.65857, 24.53120,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2257, -481.41260, -541.35718, 26.30800,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2256, -473.12140, -537.37799, 26.88600,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2025, -466.81378, -538.57416, 24.53090,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2025, -466.79211, -540.51422, 24.53090,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1759, -480.36148, -557.33917, 24.53220,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1763, -468.60254, -561.86096, 24.52990,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(2369, -480.69659, -556.22083, 25.79160,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2366, -480.87616, -556.21661, 24.53164,   0.00000, 0.00000, 0.00000);
//// /VERMAPA
CreateDynamicObject(1444, 1544.65027, -1681.00806, 13.35880,   0.00000, 0.00000, -46.74000);
CreateDynamicObject(1444, 1738.11914, -1862.80811, 13.38380,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1187.23975, -1308.52612, 13.36000,   0.00000, 0.00000, -94.92000);
CreateDynamicObject(1444, 981.88000, -1157.62000, 23.66000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1195.76160, -919.63928, 42.95440,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 562.78448, -1250.29272, 17.05990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 805.96558, -1387.75488, 13.36820,   0.00000, 0.00000, -33.24000);
CreateDynamicObject(1444, 159.12520, -1946.87500, 3.57340,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1309.53369, -912.69019, 38.48210,   0.00000, 7.00000, 0.00000);
CreateDynamicObject(1444, 1756.70984, -1147.42981, 23.74160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1829.06458, -1679.48926, 13.34690,   0.00000, 0.00000, -88.74000);
CreateDynamicObject(1444, 1934.27087, -1761.65796, 13.35490,   0.00000, 0.00000, -40.74000);
CreateDynamicObject(1444, 1205.83118, -1842.73230, 13.35120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 844.46057, -2059.82544, 12.66720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 1355.60242, -1739.53064, 13.35490,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1444, 2047.20032, -1920.91223, 13.34690,   0.00000, 0.00000, 90.78000);
CreateDynamicObject(1444, 1832.45776, -1845.49792, 13.37370,   0.00000, 0.00000, -85.56000);
CreateDynamicObject(1444, 1499.56177, -1740.60071, 13.34690,   0.00000, 0.00000, 0.00000); // Delate del Ayuntamiento.
CreateDynamicObject(1444, 1954.05957, -2178.77124, 13.36050,   0.00000, 0.00000, 0.00000); // Aeropuerto.
CreateDynamicObject(1444, 1711.08435, -1888.48169, 13.37470,   0.00000, 0.00000, 0.00000); // Unity.
CreateDynamicObject(1444, 1719.21936, -1888.48071, 13.37470,   0.00000, 0.00000, 0.00000);

/////HOSPITAL ///
///////// INTERIOR ////////////
CreateObject(2395, 839.32983, -1221.60046, 1194.04675,   0.00000, 0.00000, 180.73399);
CreateObject(2855, 814.99536, -1228.32422, 1194.59363,   0.00000, 0.00000, 0.00000);
CreateObject(18030, 827.90820, -1215.27246, 1196.41394,   0.00000, 0.00000, 0.00000);
CreateObject(3851, 830.80371, -1228.77637, 1196.59363,   0.00000, 0.00000, 270.00000);
CreateObject(3851, 814.59863, -1228.77539, 1196.04675,   0.00000, 0.00000, 270.00000);
CreateObject(3851, 803.34570, -1228.76758, 1196.04675,   0.00000, 0.00000, 270.00000);
CreateObject(3851, 844.50574, -1220.30408, 1196.46851,   0.00000, 0.00000, 0.00000);
CreateObject(1557, 823.64160, -1228.87891, 1194.06458,   0.00000, 0.00000, 179.99500);
CreateObject(1557, 842.10339, -1217.77026, 1194.26550,   0.00000, 0.00000, 359.99500);
CreateObject(1491, 843.61426, -1221.70898, 1194.27283,   0.00000, 0.00000, 179.99500);
CreateObject(1491, 823.00049, -1210.69629, 1194.04675,   0.00000, 0.00000, 0.99500);
CreateObject(9339, 813.24115, -1234.65063, 1194.74585,   0.00000, 0.00000, 0.00000);
CreateObject(9339, 813.24023, -1234.65039, 1196.14624,   0.00000, 0.00000, 0.00000);
CreateObject(9339, 813.24023, -1234.65039, 1197.54614,   0.00000, 0.00000, 0.00000);
CreateObject(9339, 813.24023, -1234.65039, 1198.94653,   0.00000, 0.00000, 0.00000);
CreateObject(9339, 813.17566, -1220.09583, 1209.57117,   90.00000, 180.04401, 179.95599);
CreateObject(14782, 843.59570, -1224.45801, 1195.28149,   0.00000, 0.00000, 179.99500);
CreateObject(2597, 841.17969, -1222.77539, 1195.11743,   0.00000, 0.00000, 0.00000);
CreateObject(9339, 813.17090, -1220.89648, 1209.57117,   90.00000, 180.04401, 179.95100);
CreateObject(9339, 799.85168, -1219.53528, 1194.74585,   0.00000, 0.00000, 90.00000);
CreateObject(9339, 799.85156, -1219.53516, 1196.14648,   0.00000, 0.00000, 90.00000);
CreateObject(9339, 799.85156, -1219.53516, 1197.54785,   0.00000, 0.00000, 90.00000);
CreateObject(1775, 813.96881, -1226.55847, 1195.14380,   0.00000, 0.00000, 90.00000);
CreateObject(1723, 818.18921, -1227.50293, 1194.04675,   0.00000, 0.00000, 179.99500);
CreateObject(1723, 813.90363, -1224.85999, 1194.04675,   0.00000, 0.00000, 89.99500);
CreateObject(2855, 814.61993, -1228.31067, 1194.59363,   0.00000, 0.00000, 0.00000);
CreateObject(9339, 813.31696, -1206.32800, 1194.74585,   0.00000, 0.00000, 180.00000);
CreateObject(9339, 813.31641, -1206.32715, 1196.14526,   0.00000, 0.00000, 179.99500);
CreateObject(9339, 813.31641, -1206.32715, 1197.54517,   0.00000, 0.00000, 179.99500);
CreateObject(9339, 813.31641, -1206.32715, 1198.89575,   0.00000, 0.00000, 179.99500);
CreateObject(9339, 825.04785, -1232.48145, 1196.14648,   0.00000, 0.00000, 0.73600);
CreateObject(9339, 825.04785, -1232.48145, 1197.49780,   0.00000, 0.00000, 0.73600);
CreateObject(9339, 825.04785, -1232.48145, 1198.89722,   0.00000, 0.00000, 0.73600);
CreateObject(9339, 832.67139, -1232.68628, 1194.74585,   0.00000, 0.00000, 0.73600);
CreateObject(9339, 832.67090, -1232.68555, 1196.12122,   0.00000, 0.00000, 0.73600);
CreateObject(9339, 832.67090, -1232.68555, 1197.52136,   0.00000, 0.00000, 0.73600);
CreateObject(9339, 832.67090, -1232.68555, 1198.92175,   0.00000, 0.00000, 0.73600);
CreateObject(1723, 837.17102, -1221.14429, 1194.04675,   0.00000, 0.00000, 179.99500);
CreateObject(2855, 814.08008, -1212.75781, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(1723, 834.00519, -1211.22266, 1194.04675,   0.00000, 0.00000, 0.99500);
CreateObject(1776, 819.21973, -1211.40552, 1195.14612,   0.00000, 0.00000, 0.00000);
CreateObject(2855, 814.45447, -1211.73303, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(949, 833.21002, -1211.20203, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateObject(949, 824.09088, -1228.51843, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateObject(9339, 809.95520, -1210.61401, 1194.74585,   0.00000, 0.00000, 89.99500);
CreateObject(1491, 813.25684, -1221.61523, 1194.02173,   0.00000, 0.00000, 89.99500);
CreateObject(9339, 809.95508, -1210.61328, 1196.14648,   0.00000, 0.00000, 89.99500);
CreateObject(9339, 809.95508, -1210.61328, 1197.54785,   0.00000, 0.00000, 89.99500);
CreateObject(9339, 823.45306, -1210.59790, 1209.59619,   90.00000, 180.04401, 270.95099);
CreateObject(9339, 823.97772, -1210.56042, 1209.59619,   90.00000, 180.03799, 270.95001);
CreateObject(9339, 825.04785, -1197.66455, 1194.74585,   0.00000, 0.00000, 179.99500);
CreateObject(9339, 825.04785, -1197.66406, 1196.14722,   0.00000, 0.00000, 179.99500);
CreateObject(9339, 825.04785, -1197.66406, 1197.54761,   0.00000, 0.00000, 179.99500);
CreateObject(9339, 825.04785, -1197.66406, 1198.94800,   0.00000, 0.00000, 179.99500);
CreateObject(9339, 839.73804, -1210.47375, 1194.74585,   0.00000, 0.00000, 270.49500);
CreateObject(1491, 825.17389, -1210.69031, 1194.04675,   0.00000, 0.00000, 0.99400);
CreateObject(9339, 839.73730, -1210.47363, 1196.14624,   0.00000, 0.00000, 270.49399);
CreateObject(9339, 839.73730, -1210.47363, 1197.54639,   0.00000, 0.00000, 270.49399);
CreateObject(9339, 826.10229, -1210.57349, 1209.59619,   90.00000, 180.03799, 270.95001);
CreateObject(9339, 825.20282, -1210.57190, 1209.59619,   90.00000, 180.03799, 270.95001);
CreateObject(9339, 831.97852, -1197.33716, 1194.74585,   0.00000, 0.00000, 0.49400);
CreateObject(9339, 831.97852, -1197.33691, 1196.14722,   0.00000, 0.00000, 0.49400);
CreateObject(9339, 831.97852, -1197.33691, 1197.54858,   0.00000, 0.00000, 0.49400);
CreateObject(9339, 831.97852, -1197.33691, 1198.94824,   0.00000, 0.00000, 0.49400);
CreateObject(2395, 835.65234, -1221.67188, 1194.06812,   0.00000, 0.00000, 180.73100);
CreateObject(2395, 835.92480, -1221.65820, 1196.79700,   0.00000, 0.00000, 180.73100);
CreateObject(2395, 839.32910, -1221.59961, 1196.77222,   0.00000, 0.00000, 180.73100);
CreateObject(18001, 831.84229, -1205.96338, 1195.89636,   0.00000, 0.00000, 270.50000);
CreateObject(2524, 831.40009, -1206.49231, 1194.04675,   0.00000, 0.00000, 270.00000);
CreateObject(2524, 831.40198, -1208.56860, 1194.04675,   0.00000, 0.00000, 270.00000);
CreateObject(2524, 831.37225, -1204.48572, 1194.04675,   0.00000, 0.00000, 270.00000);
CreateObject(9339, 826.16412, -1190.60828, 1194.74585,   0.00000, 0.00000, 180.74500);
CreateObject(9339, 827.46631, -1190.58276, 1194.74585,   0.00000, 0.00000, 180.74200);
CreateObject(9339, 828.74115, -1190.60693, 1194.74585,   0.00000, 0.00000, 180.74200);
CreateObject(9339, 829.94141, -1190.62988, 1194.74585,   0.00000, 0.00000, 180.74200);
CreateObject(2525, 829.43671, -1201.87720, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(2525, 828.21063, -1201.90125, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(2525, 826.98499, -1201.92578, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(2525, 825.63403, -1201.92896, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(1778, 831.56964, -1201.37024, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(9339, 826.16406, -1190.60742, 1196.12146,   0.00000, 0.00000, 180.74200);
CreateObject(9339, 827.46582, -1190.58203, 1196.12219,   0.00000, 0.00000, 180.74200);
CreateObject(9339, 828.74023, -1190.60645, 1196.14600,   0.00000, 0.00000, 180.74200);
CreateObject(9339, 829.94141, -1190.62988, 1196.14600,   0.00000, 0.00000, 180.74200);
CreateObject(1997, 809.57275, -1226.39648, 1194.04675,   0.00000, 0.00000, 180.00000);
CreateObject(9339, 845.65619, -1215.00403, 1194.74585,   0.00000, 0.00000, 270.49399);
CreateObject(9339, 832.60309, -1200.41577, 1194.74585,   0.00000, 0.00000, 0.49400);
CreateObject(1491, 832.63379, -1213.45117, 1194.04675,   0.00000, 0.00000, 270.99399);
CreateObject(9339, 845.65527, -1215.00391, 1196.14624,   0.00000, 0.00000, 270.49399);
CreateObject(9339, 845.65527, -1215.00391, 1197.54663,   0.00000, 0.00000, 270.49399);
CreateObject(9339, 845.65527, -1215.00391, 1198.94702,   0.00000, 0.00000, 270.49399);
CreateObject(9339, 832.60254, -1200.41504, 1196.14600,   0.00000, 0.00000, 0.49400);
CreateObject(9339, 832.60254, -1200.41504, 1197.54736,   0.00000, 0.00000, 0.49400);
CreateObject(9339, 832.60254, -1200.41504, 1198.94727,   0.00000, 0.00000, 0.49400);
CreateObject(9339, 832.74414, -1214.44141, 1209.59619,   90.00000, 180.03300, 0.95000);
CreateObject(9339, 832.71912, -1213.09021, 1209.59619,   90.00000, 180.03300, 0.95000);
CreateObject(1723, 813.98047, -1215.78516, 1194.04675,   0.00000, 0.00000, 89.99500);
CreateObject(2855, 834.15167, -1221.18262, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(2855, 834.15137, -1221.18262, 1194.22192,   0.00000, 0.00000, 0.00000);
CreateObject(1723, 835.42719, -1215.75769, 1194.04675,   0.00000, 0.00000, 359.99500);
CreateObject(2855, 838.28241, -1215.71375, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(1723, 815.27734, -1211.63477, 1194.04675,   0.00000, 0.00000, 1.99400);
CreateObject(2855, 831.37091, -1211.20496, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(2855, 831.37012, -1211.20410, 1194.19690,   0.00000, 0.00000, 0.00000);
CreateObject(949, 821.70313, -1228.52930, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateObject(949, 831.58691, -1210.03894, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateObject(949, 833.02075, -1221.31409, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateObject(2700, 813.44208, -1227.91565, 1197.60034,   0.00000, 0.00000, 10.00000);
CreateObject(2700, 832.73828, -1221.28516, 1197.03735,   0.00000, 0.00000, 29.99800);
CreateObject(2700, 813.56641, -1210.80859, 1196.84387,   0.00000, 0.00000, 309.99600);
CreateObject(3395, 812.52209, -1226.59814, 1194.04675,   0.00000, 0.00000, 1.24700);
CreateObject(3389, 831.79785, -1227.04102, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(3388, 825.60516, -1223.41394, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(3386, 825.60449, -1222.42969, 1194.04675,   0.00000, 0.00000, 179.99500);
CreateObject(2008, 837.79071, -1213.34558, 1194.04675,   0.00000, 0.00000, 90.00000);
CreateObject(949, 832.12207, -1211.13086, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateObject(1723, 828.59570, -1211.22266, 1194.04675,   0.00000, 0.00000, 0.98900);
CreateObject(1714, 839.05817, -1212.83289, 1194.04675,   0.00000, 0.00000, 268.75000);
CreateObject(949, 825.56500, -1221.56787, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateObject(949, 831.81628, -1222.37964, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateObject(1997, 828.83832, -1225.15332, 1194.05396,   0.00000, 0.00000, 179.99500);
CreateObject(3395, 831.82227, -1224.64258, 1194.04675,   0.00000, 0.00000, 1.24700);
CreateObject(3389, 806.55951, -1227.52234, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateObject(3386, 812.55432, -1224.03271, 1194.04675,   0.00000, 0.00000, 179.99500);
CreateObject(9339, 825.04785, -1232.48145, 1194.74585,   0.00000, 0.00000, 0.73100);
CreateObject(3386, 806.56641, -1226.50195, 1194.04675,   0.00000, 0.00000, 179.99500);
CreateObject(2163, 839.71283, -1212.45752, 1195.70715,   0.00000, 0.00000, 270.00000);
CreateObject(936, 809.48364, -1220.24988, 1194.52148,   0.00000, 0.00000, 0.00000);
CreateObject(3396, 806.69409, -1223.59546, 1194.04675,   0.00000, 0.00000, 180.00000);
CreateObject(3396, 825.73865, -1226.04114, 1194.05396,   0.00000, 0.00000, 179.99600);
CreateObject(14532, 819.76495, -1204.21277, 1195.02942,   0.00000, 0.00000, 0.75000);
CreateObject(14532, 817.18848, -1204.18848, 1195.02942,   0.00000, 0.00000, 0.74200);
CreateObject(14532, 814.58691, -1204.16406, 1195.02942,   0.00000, 0.00000, 0.54200);
CreateObject(14532, 819.76581, -1207.64319, 1195.02942,   0.00000, 0.00000, 180.74699);
CreateObject(14532, 817.31396, -1207.72949, 1195.02942,   0.00000, 0.00000, 180.74200);
CreateObject(14532, 814.81335, -1207.73987, 1195.02942,   0.00000, 0.00000, 180.74200);
CreateObject(2323, 823.37555, -1203.37170, 1194.04675,   0.00000, 0.00000, 270.00000);
CreateObject(2307, 823.33789, -1206.20435, 1194.04675,   0.00000, 0.00000, 270.00000);
CreateObject(949, 821.53107, -1210.17993, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateObject(2251, 824.40552, -1204.45520, 1195.89734,   0.00000, 0.00000, 0.00000);
CreateObject(2253, 824.43317, -1203.22620, 1195.33484,   0.00000, 0.00000, 0.00000);
CreateObject(2254, 824.87872, -1203.84888, 1196.40808,   0.00000, 0.00000, 270.00000);
CreateObject(2689, 824.65692, -1206.18762, 1195.71082,   0.00000, 0.00000, 270.00000);
CreateObject(2704, 824.63831, -1207.08093, 1195.70898,   0.00000, 0.00000, 270.00000);
CreateObject(1433, 815.88702, -1201.92249, 1194.22644,   0.00000, 0.00000, 0.00000);
CreateObject(1433, 815.88672, -1201.92188, 1194.22644,   0.00000, 0.00000, 0.00000);
CreateObject(1433, 818.45868, -1201.92542, 1194.23364,   0.00000, 0.00000, 0.00000);
CreateObject(1433, 818.52478, -1209.86072, 1194.22644,   0.00000, 0.00000, 0.00000);
CreateObject(1433, 816.04993, -1209.88123, 1194.22644,   0.00000, 0.00000, 0.00000);
CreateObject(2855, 816.10199, -1209.86182, 1194.73438,   0.00000, 0.00000, 0.00000);
CreateObject(2855, 818.48395, -1209.82996, 1194.73438,   0.00000, 0.00000, 0.00000);
CreateObject(2855, 818.43457, -1202.02502, 1194.74158,   0.00000, 0.00000, 0.00000);
CreateObject(2855, 815.87921, -1201.92188, 1194.73438,   0.00000, 0.00000, 0.00000);
CreateObject(949, 806.42969, -1220.07178, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateObject(2395, 844.51154, -1218.54639, 1194.42139,   0.00000, 0.00000, 269.73099);
CreateObject(1800, 814.44196, -1204.89624, 1194.04675,   0.00000, 0.00000, 359.39999);
CreateObject(1800, 816.98975, -1204.86792, 1194.04675,   0.00000, 0.00000, 359.39600);
CreateObject(1800, 819.63751, -1204.88367, 1194.04675,   0.00000, 0.00000, 359.39600);
CreateObject(1800, 819.61090, -1211.47046, 1194.04675,   0.00000, 0.00000, 359.39600);
CreateObject(1800, 817.14044, -1211.50903, 1194.04675,   0.00000, 0.00000, 359.39600);
CreateObject(1800, 814.56702, -1211.50610, 1194.04675,   0.00000, 0.00000, 359.39600);
CreateObject(9339, 831.68567, -1219.53296, 1206.87415,   90.00000, 180.03300, 89.20400);
CreateObject(9339, 830.29846, -1219.52380, 1206.87415,   90.00000, 180.02699, 89.20300);
CreateObject(1491, 829.61041, -1219.44678, 1194.04675,   0.00000, 0.00000, 179.63499);
CreateObject(1491, 826.58917, -1219.45837, 1194.04675,   0.00000, 0.00000, 0.01000);
CreateObject(9339, 825.90076, -1219.54248, 1206.87415,   90.00000, 180.03300, 269.86600);
CreateObject(9339, 828.90533, -1219.53137, 1209.59753,   90.00000, 180.02699, 89.60400);
CreateObject(9339, 827.26331, -1219.53333, 1209.59753,   90.00000, 180.02699, 90.00400);
CreateObject(9339, 827.73401, -1219.54126, 1209.59753,   90.00000, 180.02699, 90.00000);
CreateObject(2886, 843.96527, -1217.77722, 1195.75793,   0.00000, 0.00000, 0.00000);
// --------------------CNN2-------------------
CreateDynamicObject(6863, 1523.18945, -1537.50842, 57.71170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3749, 1451.47241, -1528.31091, 18.40870,   0.00000, 0.00000, -105.00000);
CreateDynamicObject(987, 1439.63464, -1582.09595, 12.52750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1451.63965, -1582.07654, 12.52750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1463.60120, -1582.10303, 12.52750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1475.47473, -1582.09424, 12.52750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1487.52441, -1582.09143, 12.52750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1439.83289, -1570.09839, 12.52750,   0.00000, 0.00000, -91.00000);
CreateDynamicObject(987, 1441.51025, -1558.27979, 12.52750,   0.00000, 0.00000, -98.00000);
CreateDynamicObject(987, 1444.41565, -1547.13599, 12.52750,   0.00000, 0.00000, -105.00000);
CreateDynamicObject(987, 1447.64124, -1535.77222, 12.52750,   0.00000, 0.00000, -105.00000);
CreateDynamicObject(987, 1455.22815, -1507.04871, 12.52750,   0.00000, 0.00000, -105.00000);
CreateDynamicObject(987, 1458.31445, -1495.37048, 12.52750,   0.00000, 0.00000, -105.00000);
CreateDynamicObject(987, 1460.08252, -1489.41492, 12.52750,   0.00000, 0.00000, -105.00000);
CreateDynamicObject(987, 1472.14355, -1488.65247, 12.52750,   0.00000, 0.00000, -174.00000);
CreateDynamicObject(980, 1451.10046, -1528.16406, 15.28940,   0.00000, 0.00000, 74.00000);

/// Deposito By Gus
CreateObject(18762, 801.26666, -618.21222, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 801.26178, -619.19958, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 802.24878, -619.20959, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 801.33960, -625.11090, 17.84233,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 801.26160, -619.20648, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(19377, 831.88733, -639.89337, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 821.38733, -639.91339, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 810.88733, -639.93341, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 800.38733, -639.93341, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 784.19623, -620.67218, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 789.88892, -639.91888, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 784.16882, -639.93640, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 784.14587, -630.29498, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 794.59460, -630.30328, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 805.06958, -630.30737, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 815.54181, -630.33588, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 825.99207, -630.36371, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 832.19843, -630.38013, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 832.44299, -620.75629, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 821.95459, -620.72986, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 811.46649, -620.69672, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 800.98352, -620.68402, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 790.49078, -620.67651, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 784.19922, -610.99371, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 794.57922, -611.05371, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 815.19141, -611.10016, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 784.24182, -597.23077, 15.21640,   0.00000, 92.00000, 0.00000);
CreateObject(19377, 784.19922, -611.03369, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 784.21222, -606.64740, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 794.34351, -605.37469, 15.25640,   -1.00000, 90.00000, 0.00000);
CreateObject(19377, 804.88477, -609.78418, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 805.01923, -611.09369, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 815.28674, -609.87445, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 825.69751, -611.21869, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 825.69507, -609.91852, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 832.36548, -611.16266, 15.25640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 832.37592, -604.02289, 15.21640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 827.60889, -605.32715, 15.21640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 867.78058, -580.21448, 16.85640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 846.92322, -587.29327, 15.57640,   0.00000, 86.00000, 0.00000);
CreateObject(19377, 857.27100, -587.29810, 16.27640,   0.00000, 86.00000, 0.00000);
CreateObject(19377, 864.50647, -580.22308, 16.85640,   0.00000, 86.00000, 0.00000);
CreateObject(19377, 864.47809, -587.31207, 16.65640,   3.00000, 86.00000, 0.00000);
CreateObject(19377, 857.29321, -580.20313, 16.39640,   0.00000, 85.00000, 0.00000);
CreateObject(19377, 846.81708, -580.22290, 15.57640,   0.00000, 86.00000, 0.00000);
CreateObject(19377, 837.91583, -589.98828, 14.97640,   0.00000, 86.00000, 0.00000);
CreateObject(19377, 867.78162, -592.49866, 16.79640,   -6.00000, 90.00000, 0.00000);
CreateObject(19377, 874.26917, -592.48749, 16.79640,   -6.00000, 90.00000, 0.00000);
CreateObject(19377, 857.32349, -592.67999, 16.41640,   -6.00000, 86.00000, 0.00000);
CreateObject(19377, 846.91382, -592.76257, 15.63640,   -6.00000, 86.00000, 0.00000);
CreateObject(19377, 840.95319, -596.59039, 15.33640,   -3.00000, 85.00000, 0.00000);
CreateObject(19377, 873.56689, -613.14917, 17.29640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 873.43079, -602.06891, 17.19640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 873.43597, -604.11041, 17.25640,   0.00000, 89.00000, 0.00000);
CreateObject(19377, 863.10498, -613.17859, 17.25640,   -1.00000, 90.00000, 0.00000);
CreateObject(19377, 862.94318, -603.92188, 17.19640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 862.90948, -602.06097, 17.19640,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 852.65179, -613.16058, 16.85640,   -1.00000, 85.00000, 0.00000);
CreateObject(19377, 852.51147, -603.55450, 16.69640,   -1.00000, 85.00000, 0.00000);
CreateObject(19377, 852.63623, -602.08392, 16.59640,   -1.00000, 84.00000, 0.00000);
CreateObject(19377, 851.23102, -602.32281, 16.51640,   -1.00000, 84.00000, 0.00000);
CreateObject(19377, 842.57190, -605.79230, 15.79640,   0.00000, 85.00000, 0.00000);
CreateObject(19377, 842.50848, -613.17859, 15.85640,   -1.00000, 84.00000, 0.00000);
CreateObject(18762, 802.24908, -618.21527, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(19377, 797.70502, -609.18225, 15.25640,   0.00000, 90.00000, -12.00000);
CreateObject(18762, 802.32153, -625.11163, 17.84233,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 801.26672, -618.21222, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 802.24908, -618.21527, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 802.24878, -619.20959, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 801.33960, -625.11090, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 802.32147, -625.11157, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 802.24908, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 801.26672, -618.21222, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 801.26160, -619.20648, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 802.24878, -619.20959, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 802.32147, -625.11157, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 801.34149, -625.11157, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 803.22913, -618.20923, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 803.24908, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 804.18958, -618.20868, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 805.16803, -618.20209, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 806.38910, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 807.36908, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 808.34912, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 809.30908, -618.21552, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 810.30908, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 811.30908, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 812.28912, -618.21527, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 812.28912, -618.21527, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 805.80908, -618.20380, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 812.28912, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 813.28912, -618.21527, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 813.29187, -618.21539, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 813.28912, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 813.28912, -619.21527, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 813.29187, -619.21539, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 813.28912, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 812.28912, -619.21527, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 812.31189, -619.21539, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 812.30908, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 811.30908, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 811.30908, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 810.30908, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 809.30908, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 808.30908, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 807.30908, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 806.30908, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 805.30908, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 804.30927, -619.19513, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 803.74896, -619.21191, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 814.28912, -618.21527, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 814.28009, -619.21527, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 814.29187, -619.21539, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 814.29187, -618.21539, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 814.28912, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 814.28912, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 815.28912, -618.21527, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 815.28009, -619.21527, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 815.29187, -619.21539, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 815.29187, -618.21539, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 815.28912, -618.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 815.28912, -619.21527, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 812.28912, -625.11157, 17.86230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 813.28912, -625.11157, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 814.28009, -625.11157, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 815.28009, -625.11060, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 812.28912, -625.11157, 22.86230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 812.28912, -625.11157, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 813.28912, -625.11157, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 813.28912, -625.11157, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 814.28009, -625.11157, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 814.28009, -625.11157, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 815.28009, -625.11060, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 815.28009, -625.11060, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 817.90668, 16.99620, 16.99620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 817.90668, -624.70422, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 818.10687, -624.72211, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 820.59729, -624.78571, 26.96660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 820.59729, -624.78571, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(19430, 820.91321, -624.69153, 17.09540,   0.00000, 0.00000, 90.00000);
CreateObject(19430, 820.91321, -624.69153, 20.17540,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 822.28668, -624.70422, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(19430, 823.46741, -624.68921, 21.13540,   90.00000, 0.00000, 90.00000);
CreateObject(1649, 826.56653, -624.74432, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(19430, 825.30737, -624.68921, 21.13540,   90.00000, 0.00000, 90.00000);
CreateObject(1649, 830.86670, -624.70422, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 830.86670, -624.70422, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 833.56842, -625.11060, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 834.56842, -625.11060, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 834.56842, -625.11060, 22.82230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 834.56842, -625.11060, 27.82230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 833.56842, -625.11060, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 833.56842, -625.11060, 27.82230,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 828.25122, -624.78571, 26.96660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 828.25732, -624.78571, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 830.86670, -624.70422, 17.01620,   0.00000, 0.00000, 0.00000);
CreateObject(19430, 827.85321, -624.69153, 17.09540,   0.00000, 0.00000, 90.00000);
CreateObject(19430, 827.85321, -624.69153, 20.19540,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 830.86670, -624.70422, 17.01620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 830.86670, -624.70422, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 830.86670, -624.70422, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 826.56653, -624.74432, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 822.28668, -624.70422, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 817.90668, -624.70422, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 817.90668, -624.70422, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 817.90668, -624.70422, 16.99620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 798.62640, -624.70422, 16.99620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 798.62640, -624.70422, 16.99620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 794.28760, -624.69745, 16.99620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 794.30640, -624.70422, 16.99620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 789.96637, -624.70422, 16.99620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 789.96637, -624.70422, 16.99620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 785.66638, -624.70422, 16.99620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 785.66638, -624.70422, 16.99620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 798.62640, -624.70422, 20.23620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 798.62640, -624.70422, 20.23620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 794.30640, -624.68420, 20.23620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 794.30640, -624.70422, 20.23620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 789.98639, -624.70422, 20.23620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 789.98639, -624.70422, 20.23620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 785.66638, -624.70422, 20.23620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 785.66638, -624.70422, 20.23620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 785.66638, -624.70422, 23.53620,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 788.26477, -624.76569, 26.96660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 796.02478, -624.78571, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 788.26477, -624.78571, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(18762, 782.96008, -625.13062, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 782.96008, -625.13062, 22.82230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 782.96008, -625.13062, 27.84230,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 789.96637, -624.70422, 23.53620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 789.96637, -624.70422, 23.53620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 794.30640, -624.68420, 23.53620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 794.30640, -624.68420, 23.53620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 798.62640, -624.68420, 23.53620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 798.62640, -624.68420, 23.53620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 785.66638, -624.70422, 23.53620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 794.30640, -624.70422, 20.23620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 794.30640, -624.68420, 23.53620,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 796.02478, -624.76569, 26.96660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 807.34479, -624.78571, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 782.74628, -630.25232, 28.58660,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 782.73938, -639.23859, 28.58660,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 782.74628, -627.85480, 16.97620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 782.74628, -627.85480, 20.23620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 782.74628, -627.85480, 23.53620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 782.76520, -632.21429, 16.97620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 782.74518, -636.55432, 16.97620,   0.00000, 0.00000, 90.00000);
CreateObject(18762, 782.96008, -643.67059, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 782.96008, -625.13062, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 782.96008, -643.67059, 22.82230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 782.96008, -643.67059, 27.82230,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 782.74628, -632.21429, 20.23620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 782.74628, -632.21429, 23.53620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 782.74628, -636.55432, 20.23620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 782.76630, -636.56824, 23.53620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 782.74518, -640.95392, 16.97620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 782.74628, -640.95428, 20.23620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 782.74628, -640.93433, 23.53620,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 782.73938, -639.23859, 26.94660,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 782.74628, -630.25232, 26.94660,   0.00000, 0.00000, 0.00000);
CreateObject(19377, 805.99579, -622.51678, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 810.55579, -622.51678, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 787.73157, -629.43201, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 798.19897, -629.43829, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 808.65399, -629.27930, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 819.16339, -629.45099, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 829.38348, -629.45660, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 829.84351, -629.45660, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 787.75092, -639.07184, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 798.19153, -639.05688, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 787.75092, -639.35181, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 798.19153, -639.35687, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 808.60864, -638.81836, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 819.09998, -638.96979, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 829.38135, -638.96948, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 829.84131, -638.96948, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 808.59998, -639.33929, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 819.09998, -639.32977, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 829.38129, -639.32953, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19377, 829.84131, -639.32953, 30.26230,   0.00000, 90.00000, 0.00000);
CreateObject(19447, 807.34479, -624.78571, 26.96660,   0.00000, 0.00000, 90.00000);
CreateObject(3928, 789.65222, -630.46179, 30.34910,   0.00000, 0.00000, 90.00000);
CreateObject(3928, 807.95532, -627.73993, 30.34640,   0.00000, 0.00000, 90.00000);
CreateObject(3928, 827.63159, -630.45349, 30.35590,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 785.63696, -644.01581, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 789.97778, -644.01202, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 794.34430, -644.01367, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 798.68433, -644.01367, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 803.00427, -644.01367, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 807.30432, -644.01367, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 811.62433, -644.01367, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 815.96429, -644.01367, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 834.95929, -627.83337, 16.97620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 798.68433, -644.01367, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 834.95929, -632.15338, 16.97620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 834.95929, -636.49341, 16.97620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 834.95929, -640.83337, 16.97620,   0.00000, 0.00000, 90.00000);
CreateObject(18762, 834.57721, -643.54523, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 834.57721, -643.54523, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 834.57721, -643.54523, 27.82200,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 833.57721, -643.54523, 17.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 833.57648, -643.58521, 22.84230,   0.00000, 0.00000, 0.00000);
CreateObject(18762, 833.57648, -643.58521, 27.82200,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 834.95929, -627.83337, 20.29620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 834.95929, -632.15338, 20.29620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 834.95929, -636.49341, 20.29620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 834.95929, -640.83337, 20.29620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 834.95929, -627.83337, 23.57620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 834.95929, -632.15338, 23.57620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 834.95929, -636.49341, 23.57620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 834.96533, -640.85242, 23.57620,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 785.63702, -644.01581, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 785.63702, -644.01581, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 789.97778, -644.01202, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 794.34430, -644.01367, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 803.00427, -644.01367, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 807.30432, -644.01367, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 811.62433, -644.01367, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 815.96429, -644.01367, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 820.30432, -644.01367, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 824.64429, -644.01367, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 828.96429, -644.01367, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 830.86432, -644.01367, 16.97620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 830.86432, -644.01367, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 828.90985, -643.99841, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 824.64429, -644.01367, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 820.30432, -644.01367, 20.29620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 830.76178, -643.98975, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 828.90991, -643.99841, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 824.64429, -644.01367, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 820.30432, -644.01367, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 815.96429, -644.01367, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 811.62433, -644.01367, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 807.30432, -644.01367, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 803.00427, -644.01367, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 798.68433, -644.01367, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 794.34430, -644.01367, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 789.99780, -644.01202, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 785.63702, -644.01581, 23.57620,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 834.88049, -630.41589, 26.96660,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 834.88049, -630.41589, 28.58660,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 834.87299, -638.75763, 26.96660,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 834.87299, -638.75763, 28.56660,   0.00000, 0.00000, 0.00000);
CreateObject(19447, 787.98254, -643.91144, 26.94660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 787.98248, -643.91138, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 797.62250, -643.91138, 26.94660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 797.62250, -643.91138, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 807.24249, -643.91138, 26.94660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 807.24249, -643.91138, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 816.86249, -643.91138, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 816.86249, -643.91138, 26.94660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 828.26251, -643.91138, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 828.26251, -643.91138, 26.94660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 819.60303, -643.93140, 28.58660,   0.00000, 0.00000, 90.00000);
CreateObject(19447, 819.60303, -643.93140, 26.94660,   0.00000, 0.00000, 90.00000);
CreateObject(1649, 830.86432, -644.01367, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 830.86432, -644.01367, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 830.86432, -644.01367, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 828.90991, -643.99841, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 828.90991, -643.99841, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 828.96429, -644.01367, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 824.64429, -644.01367, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 824.64429, -644.01367, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 824.64429, -644.01367, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 820.30432, -644.01367, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 820.30432, -644.01367, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 820.30432, -644.01367, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 815.96429, -644.01367, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 815.96429, -644.01367, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 815.96429, -644.01367, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 811.62433, -644.01367, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 811.62433, -644.01367, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 811.62433, -644.01367, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 807.30432, -644.01367, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 807.30432, -644.01367, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 807.30432, -644.01367, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 803.00427, -644.01367, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 803.00427, -644.01367, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 803.00427, -644.01367, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 798.68433, -644.01367, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 798.68433, -644.01367, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 798.68433, -644.01367, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 794.34430, -644.01367, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 794.34430, -644.01367, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 794.34430, -644.01367, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 789.97778, -644.01202, 16.97620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 789.97778, -644.01202, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 789.99780, -644.01202, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 785.63702, -644.01581, 20.29620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 785.63702, -644.01581, 23.57620,   0.00000, 0.00000, 180.00000);
CreateObject(1649, 782.74518, -640.95392, 16.97620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -640.95428, 20.23620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -640.93433, 23.53620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74518, -636.55432, 16.97620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -636.55432, 20.23620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -636.55432, 23.53620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -636.55432, 20.23620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74518, -636.55432, 16.97620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -636.55432, 20.23620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -632.21429, 23.53620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -632.21429, 20.23620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.76520, -632.21429, 16.97620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -627.85480, 23.53620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -627.85480, 20.23620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 782.74628, -627.85480, 16.97620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 817.90668, -624.70422, 16.99620,   0.00000, 0.00000, 0.00000);
CreateObject(1649, 834.96527, -640.85242, 23.57620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -636.49341, 23.57620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -640.83337, 20.29620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -636.49341, 20.29620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -640.83337, 16.97620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -636.49341, 16.97620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -632.15338, 16.97620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -632.15338, 20.29620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -632.15338, 23.57620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -627.83337, 16.97620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -627.83337, 20.29620,   0.00000, 0.00000, 270.00000);
CreateObject(1649, 834.95929, -627.83337, 23.57620,   0.00000, 0.00000, 270.00000);
CreateObject(1411, 798.47150, -604.17511, 16.93840,   0.00000, 0.00000, -12.00000);
CreateObject(1411, 796.34656, -603.71912, 16.93840,   0.00000, 0.00000, -12.00000);
CreateObject(1411, 791.73737, -601.76794, 16.93840,   0.00000, 0.00000, -34.00000);
CreateObject(1411, 789.83325, -600.47797, 16.93840,   0.00000, 0.00000, -34.00000);
CreateObject(1411, 786.26178, -596.90271, 16.93840,   0.00000, 0.00000, -56.00000);
CreateObject(1411, 785.74854, -596.11652, 16.93840,   0.00000, 0.00000, -56.00000);
CreateObject(1411, 781.56366, -593.88531, 16.93840,   0.00000, 0.00000, 0.00000);
CreateObject(1411, 778.77319, -596.75531, 16.93840,   0.00000, 0.00000, 90.00000);
CreateObject(1411, 778.75317, -602.01532, 16.93840,   0.00000, 0.00000, 90.00000);
CreateObject(1411, 778.75317, -607.27533, 16.93840,   0.00000, 0.00000, 90.00000);
CreateObject(1411, 778.75317, -612.53528, 16.93840,   0.00000, 0.00000, 90.00000);
CreateObject(1411, 778.75317, -617.77533, 16.93840,   0.00000, 0.00000, 90.00000);
CreateObject(1411, 778.75317, -623.03528, 16.93840,   0.00000, 0.00000, 90.00000);
CreateObject(1411, 778.75317, -628.29529, 16.93840,   0.00000, 0.00000, 90.00000);
CreateObject(1411, 778.75317, -633.55530, 16.93840,   0.00000, 0.00000, 90.00000);
CreateObject(1411, 778.75317, -638.81531, 16.93840,   0.00000, 0.00000, 90.00000);
CreateObject(1411, 778.75317, -642.13531, 16.93840,   0.00000, 0.00000, 90.00000);
CreateObject(1411, 781.61652, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 786.87653, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 792.13647, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 797.39648, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 802.65649, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 807.91650, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 813.17651, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 818.43652, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 823.67651, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 828.93652, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 834.19647, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 834.57642, -644.94592, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 781.61652, -644.94537, 16.93840,   0.00000, 0.00000, 180.00000);
CreateObject(1411, 837.36609, -642.26862, 16.93840,   0.00000, 0.00000, 270.00000);
CreateObject(1411, 837.36853, -636.80762, 16.93840,   0.00000, 0.00000, 270.00000);
CreateObject(1411, 837.36853, -631.54761, 16.93840,   0.00000, 0.00000, 270.00000);
CreateObject(1411, 837.36853, -626.28760, 16.93840,   0.00000, 0.00000, 270.00000);
CreateObject(1411, 837.36853, -621.00763, 16.93840,   0.00000, 0.00000, 270.00000);
CreateObject(1411, 837.36853, -615.74762, 16.93840,   0.00000, 0.00000, 270.00000);
CreateObject(1411, 837.36853, -610.48761, 16.93840,   0.00000, 0.00000, 270.00000);
CreateObject(1411, 837.36853, -605.22760, 16.93840,   0.00000, 0.00000, 270.00000);
CreateObject(1411, 837.36853, -600.00763, 16.93840,   0.00000, 0.00000, 270.00000);
CreateObject(1411, 835.06287, -599.09222, 16.93840,   0.00000, 0.00000, 43.00000);
CreateObject(1411, 815.45306, -604.80646, 16.93840,   0.00000, 0.00000, 0.00000);
CreateObject(1411, 810.19312, -604.80652, 16.93840,   0.00000, 0.00000, 0.00000);
CreateObject(1411, 804.93311, -604.80652, 16.93840,   0.00000, 0.00000, 0.00000);
CreateObject(1411, 803.59015, -604.81256, 16.93840,   0.00000, 0.00000, -2.00000);

// ================= Parking Frente a LSMD ======================//
	Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 1000 ) ;
	new texture_object;
	texture_object = CreateObject(19545, 1223.017333, -1354.441406, 12.335393, 0.000000, 0.000000, 0.000000, 600.000);
	SetObjectMaterial(texture_object, 0, 9514, "711_sfw", "ws_carpark2", 0xFFF0FFFF);
	texture_object = CreateObject(19545, 1237.987548, -1354.441406, 12.335393, 0.000000, 0.000000, 0.000000, 600.000);
	SetObjectMaterial(texture_object, 0, 9514, "711_sfw", "ws_carpark2", 0xFFF0FFFF);
	texture_object = CreateObject(19545, 1237.987548, -1321.910766, 12.320393, 0.000000, 0.000000, 0.000000, 600.000);
	SetObjectMaterial(texture_object, 0, 9514, "711_sfw", "ws_carpark2", 0xFFF0FFFF);
	texture_object = CreateObject(19545, 1223.024414, -1321.910766, 12.320393, 0.000000, 0.000000, 0.000000, 600.000);
	SetObjectMaterial(texture_object, 0, 9514, "711_sfw", "ws_carpark2", 0xFFF0FFFF);

	texture_object = CreateDynamicObjectEx(18980, 1216.326538, -1368.044677, 12.807463, 90.000007, 180.000000, 179.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1228.346191, -1384.657104, 12.807463, 90.000007, 180.000000, 269.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1216.331542, -1372.626342, 12.812463, 90.000007, 180.000000, 179.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1216.331542, -1303.103149, 12.812463, 90.000007, 180.000000, 179.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1216.326538, -1307.606933, 12.807463, 90.000007, 180.000000, 179.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1228.346191, -1291.087402, 12.807463, 90.000007, 180.000000, 269.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1233.398681, -1291.082397, 12.817463, 90.000007, 180.000000, 269.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1245.411621, -1303.103149, 12.812463, 90.000007, 180.000000, 179.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1245.411621, -1328.093872, 12.812463, 90.000007, 180.000000, 179.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1245.411621, -1353.082397, 12.812463, 90.000007, 180.000000, 179.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1245.416625, -1372.633178, 12.817463, 90.000007, 180.000000, 179.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1233.408447, -1384.652099, 12.812463, 90.000007, 180.000000, 269.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1216.343383, -1319.610351, 2.168638, 0.000014, 180.000000, 89.999923, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1216.343383, -1356.022583, 2.168638, 0.000014, 180.000000, 89.999923, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1216.343383, -1384.622680, 2.168638, 0.000014, 180.000000, 89.999923, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1245.406005, -1384.622680, 2.168636, 0.000014, 180.000000, 89.999923, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1245.406005, -1291.100952, 2.168632, 0.000014, 180.000000, 89.999923, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1216.344116, -1291.100952, 2.168634, 0.000014, 180.000000, 89.999923, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1216.343383, -1342.881591, 2.168638, 0.000014, 180.000000, 89.999923, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18980, 1216.343383, -1331.911743, 2.168638, 0.000014, 180.000000, 89.999923, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1245.400390, -1359.500366, 8.861196, 0.000007, 0.000000, 89.999977, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1239.590820, -1384.641113, -10.663814, -0.000000, 89.999992, 179.999954, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1228.779541, -1384.641113, -10.663814, -0.000000, 89.999992, 179.999954, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1222.012207, -1384.641113, -10.663814, -0.000000, 89.999992, 179.999954, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1216.334350, -1367.943969, -10.663814, -0.000014, 89.999992, -89.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1216.334350, -1378.755249, -10.663814, -0.000014, 89.999992, -89.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1216.334350, -1361.602783, -10.663814, -0.000014, 89.999992, -89.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1216.334350, -1303.302734, -10.663814, -0.000022, 89.999992, -89.999916, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1216.334350, -1314.114013, -10.663814, -0.000022, 89.999992, -89.999916, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1216.334350, -1296.961547, -10.663814, -0.000022, 89.999992, -89.999916, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1245.400390, -1316.359375, 8.861196, 0.000007, 0.000000, 89.999977, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1239.590820, -1291.099243, -10.663814, 0.000000, 89.999977, 179.999862, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1228.779541, -1291.099243, -10.663814, 0.000000, 89.999977, 179.999862, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1222.012207, -1291.099243, -10.663814, 0.000000, 89.999977, 179.999862, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19913, 1216.334350, -1337.452880, -10.663814, -0.000014, 89.999992, -89.999938, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(texture_object, 1, 10806, "airfence_sfse", "ws_griddyfence", 0xFFF0FFFF);

	texture_object = CreateDynamicObjectEx(618, 1219.088256, -1293.834594, 12.480570, 0.000000, 0.000007, -0.000075, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(618, 1219.088256, -1382.565917, 12.480570, 0.000000, 0.000014, -0.000074, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(618, 1242.910766, -1317.884277, 12.480570, 0.000000, 0.000014, -0.000074, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(618, 1242.910766, -1293.834594, 12.480570, 0.000000, 0.000014, -0.000074, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(618, 1242.910766, -1382.565917, 12.480570, 0.000000, 0.000022, -0.000074, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(618, 1242.910766, -1358.516235, 12.480570, 0.000000, 0.000022, -0.000074, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(618, 1242.910766, -1337.814331, 12.480570, 0.000000, 0.000014, -0.000074, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(618, 1219.088256, -1338.284545, 12.480570, 0.000000, 0.000007, -0.000075, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(618, 1219.088256, -1317.884277, 12.480570, 0.000000, 0.000007, -0.000075, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(618, 1219.088256, -1358.516235, 12.480570, 0.000000, 0.000014, -0.000074, 300.00, 300.00 ) ;
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);

	texture_object = CreateDynamicObjectEx(647, 1218.600585, -1305.650390, 12.355672, 0.000007, 0.000007, 179.999938, 300.00, 300.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(647, 1218.600585, -1370.332031, 12.355672, 0.000007, 0.000000, 179.999893, 300.00, 300.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(647, 1243.141479, -1304.709838, 12.355672, 0.000007, 0.000007, 359.999938, 300.00, 300.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(647, 1243.141479, -1326.560546, 12.355672, 0.000007, 0.000007, 359.999938, 300.00, 300.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(647, 1243.141479, -1347.120483, 12.355672, 0.000007, 0.000007, 359.999938, 300.00, 300.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(647, 1243.141479, -1369.180541, 12.355672, 0.000007, 0.000007, 359.999938, 300.00, 300.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(647, 1231.581054, -1382.180908, 12.355672, 0.000007, 0.000007, 629.999938, 300.00, 300.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(647, 1231.581054, -1293.459594, 12.355672, 0.000007, 0.000007, 809.999938, 300.00, 300.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(647, 1218.600585, -1337.739379, 12.355672, 0.000007, 0.000007, 179.999938, 300.00, 300.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);

	texture_object = CreateDynamicObjectEx(18762, 1216.340698, -1334.893798, 12.798948, 90.000000, 0.000000, 0.000000, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1218.873291, -1296.661376, 12.378133, 0.000000, 90.000000, 180.000000, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1218.873291, -1306.290649, 12.378133, 0.000000, 90.000000, 180.000000, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1218.878295, -1314.339477, 12.383133, 0.000000, 90.000000, 180.000000, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1218.873291, -1361.343017, 12.378133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1218.873291, -1370.972290, 12.378133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1218.878295, -1379.021118, 12.383133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1242.889648, -1379.021118, 12.383133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1242.889648, -1369.391113, 12.383133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1242.889648, -1359.761108, 12.383133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1242.889648, -1350.131103, 12.383133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1242.889648, -1340.501098, 12.383133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1242.889648, -1330.871093, 12.383133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1242.889648, -1321.241088, 12.383133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1242.889648, -1311.611083, 12.383133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1242.889648, -1301.981079, 12.383133, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1242.894653, -1296.629760, 12.388134, 0.000000, 89.999992, 179.999954, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1236.329711, -1293.568115, 12.383133, 0.000000, 89.999992, 269.999938, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1226.699707, -1293.568115, 12.383133, 0.000000, 89.999992, 269.999938, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1225.418457, -1293.563110, 12.388134, 0.000000, 89.999992, 269.999938, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1236.329711, -1382.089355, 12.383133, -0.000007, 89.999992, -90.000038, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1226.699707, -1382.089355, 12.383133, -0.000007, 89.999992, -90.000038, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1225.418457, -1382.084350, 12.388134, -0.000007, 89.999992, -90.000038, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1218.878295, -1337.459350, 12.383133, 0.000000, 90.000000, 180.000000, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 4829, "airport_las", "Grass_128HV", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(18762, 1216.340698, -1339.884155, 12.798948, 90.000000, 0.000000, 0.000000, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 14738, "whorebar", "AH_wdblinds", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1240.763549, -1305.257690, 10.625020, -0.000046, 0.000012, 179.999633, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1314.552856, 11.626332, -0.000034, 0.000045, -89.999504, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1318.053588, 11.626332, -0.000035, 0.000045, -89.999488, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1321.543823, 11.626332, -0.000035, 0.000045, -89.999488, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1325.044311, 11.626332, -0.000035, 0.000045, -89.999488, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1328.545288, 11.626332, -0.000035, 0.000045, -89.999488, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1240.763549, -1323.786987, 10.625020, -0.000046, 0.000012, 179.999633, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1240.763549, -1314.787719, 10.625020, -0.000046, 0.000012, 179.999633, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1240.763549, -1332.059326, 10.625020, -0.000046, 0.000012, 179.999633, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1331.996704, 11.626332, -0.000035, 0.000051, -89.999488, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1221.247192, -1313.326293, 10.625020, -0.000046, 0.000012, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1300.530395, 11.626332, -0.000034, 0.000037, -89.999443, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1304.041381, 11.626332, -0.000037, 0.000037, -89.999450, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1307.542114, 11.626332, -0.000034, 0.000037, -89.999443, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1311.032348, 11.626332, -0.000034, 0.000037, -89.999443, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(792, 1238.462280, -1297.595336, 12.474086, -0.000014, 0.000087, -89.999923, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1240.763549, -1341.661865, 10.625020, -0.000046, 0.000003, 179.999588, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1350.226684, 11.626332, -0.000039, 0.000045, -89.999481, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1353.947387, 11.626332, -0.000040, 0.000045, -89.999465, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1357.567749, 11.626332, -0.000048, 0.000045, -89.999443, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1361.068237, 11.626332, -0.000048, 0.000045, -89.999443, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1364.569213, 11.626332, -0.000048, 0.000045, -89.999443, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1240.763549, -1360.890747, 10.625020, -0.000046, 0.000003, 179.999588, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1240.763549, -1351.272094, 10.625020, -0.000046, 0.000003, 179.999588, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1240.763549, -1370.503295, 10.625020, -0.000045, -0.000001, 179.999542, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1368.020629, 11.626332, -0.000048, 0.000051, -89.999443, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1371.610961, 11.626332, -0.000048, 0.000066, -89.999443, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1335.643432, 11.626332, -0.000040, 0.000037, -89.999420, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1339.154418, 11.626332, -0.000044, 0.000037, -89.999427, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1342.655151, 11.626332, -0.000040, 0.000037, -89.999420, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.340454, -1346.435668, 11.626332, -0.000039, 0.000037, -89.999420, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(792, 1238.210327, -1377.755126, 12.474085, -0.000007, 0.000087, 89.999992, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1304.031127, 11.626332, -0.000034, 0.000045, 90.000434, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1300.530395, 11.626332, -0.000035, 0.000045, 90.000450, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1221.247192, -1305.256347, 10.625020, -0.000046, 0.000012, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1318.053588, 11.626332, -0.000034, 0.000037, 90.000495, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1314.542602, 11.626332, -0.000037, 0.000037, 90.000488, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1311.041870, 11.626332, -0.000034, 0.000037, 90.000495, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1307.551635, 11.626332, -0.000034, 0.000037, 90.000495, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(792, 1223.652221, -1297.595336, 12.474086, -0.000014, 0.000087, -89.999923, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(1280, 1230.935913, -1296.387329, 12.684676, 0.000000, 0.000000, 90.000000, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(792, 1223.808959, -1377.755126, 12.474085, -0.000007, 0.000087, 89.999992, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1221.247192, -1370.538452, 10.625020, -0.000046, 0.000027, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1361.243286, 11.626332, -0.000018, 0.000044, 90.000389, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1357.742553, 11.626332, -0.000018, 0.000044, 90.000404, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1221.247192, -1362.468505, 10.625020, -0.000046, 0.000027, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1375.265747, 11.626332, -0.000018, 0.000037, 90.000450, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1371.754760, 11.626332, -0.000020, 0.000037, 90.000442, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1368.254028, 11.626332, -0.000018, 0.000037, 90.000450, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1223.670288, -1364.763793, 11.626332, -0.000018, 0.000037, 90.000450, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(1280, 1230.935913, -1379.629394, 12.684676, 0.000000, 0.000000, 270.000000, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, -1, "none", "none", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1217.603637, -1350.898559, 12.033408, -0.000046, -74.999969, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 9514, "711_sfw", "ws_carpark2", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1217.603637, -1341.279174, 12.033400, -0.000046, -74.999969, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 9514, "711_sfw", "ws_carpark2", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1217.707763, -1326.609375, 12.036494, -0.000046, -74.999969, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 9514, "711_sfw", "ws_carpark2", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1217.707763, -1316.998657, 12.036487, -0.000046, -74.999969, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 9514, "711_sfw", "ws_carpark2", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1216.026977, -1324.776977, 10.835037, -0.000046, 0.000012, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1216.026977, -1334.395263, 10.835047, -0.000046, 0.000012, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1216.026977, -1348.094726, 10.835061, -0.000046, 0.000012, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19445, 1216.026977, -1357.724609, 10.835065, -0.000046, 0.000012, -0.000380, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
	texture_object = CreateDynamicObjectEx(19866, 1238.341674, -1375.265747, 11.626332, -0.000018, 0.000037, 90.000450, 150.00, 150.00);
	SetDynamicObjectMaterial(texture_object, 0, 6102, "gazlaw1", "law_gazwhite1", 0xFFF0FFFF);
// ================= Hospital Exterior (By Esparza) =====================//
CreateDynamicObject(3851, 1172.88, -1336.80, 20.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1172.90, -1325.53, 20.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.91, -1314.26, 20.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.95, -1303.04, 20.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.88, -1336.80, 24.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1172.90, -1325.53, 24.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.91, -1314.26, 24.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.95, -1303.04, 24.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.88, -1336.80, 28.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1172.90, -1325.53, 28.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.91, -1314.26, 28.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.94, -1310.91, 28.40,   0.00, 0.00, -0.06);
CreateDynamicObject(970, 1173.95, -1335.64, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1178.13, -1335.62, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1178.11, -1329.33, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1180.18, -1333.54, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1180.18, -1331.42, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1173.99, -1329.35, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1175.22, -1333.57, 13.46,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1178.34, -1331.76, 13.46,   0.00, 0.00, -108.60);
CreateDynamicObject(869, 1174.41, -1331.65, 13.46,   0.00, 0.00, -78.18);
CreateDynamicObject(869, 1176.07, -1331.63, 13.46,   0.00, 0.00, -126.42);
CreateDynamicObject(869, 1177.23, -1333.51, 13.46,   0.00, 0.00, -248.88);
CreateDynamicObject(869, 1177.85, -1333.52, 13.46,   0.00, 0.00, -230.58);
CreateDynamicObject(869, 1174.98, -1333.50, 13.46,   0.00, 0.00, 77.28);
CreateDynamicObject(869, 1178.34, -1331.76, 13.46,   0.00, 0.00, -108.60);
CreateDynamicObject(869, 1177.78, -1331.32, 13.46,   0.00, 0.00, -189.48);
CreateDynamicObject(717, 1177.09, -1332.57, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1176.82, -1314.72, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1180.18, -1331.42, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1180.14, -1316.09, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1180.14, -1313.98, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1178.05, -1311.88, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1173.90, -1311.89, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1178.09, -1318.15, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1174.95, -1316.24, 13.46,   0.00, 0.00, -8.28);
CreateDynamicObject(869, 1177.24, -1315.55, 13.46,   0.00, 0.00, -278.88);
CreateDynamicObject(869, 1178.32, -1315.89, 13.46,   0.00, 0.00, -98.94);
CreateDynamicObject(869, 1174.71, -1314.15, 13.46,   0.00, 0.00, -48.66);
CreateDynamicObject(869, 1176.67, -1314.09, 13.46,   0.00, 0.00, -119.64);
CreateDynamicObject(869, 1178.20, -1313.67, 13.46,   0.00, 0.00, -192.54);
CreateDynamicObject(3920, 1175.83, -1335.98, 17.47,   0.00, 0.00, -90.00);
CreateDynamicObject(3920, 1175.74, -1308.99, 17.47,   0.00, 0.00, -90.00);
CreateDynamicObject(3920, 1172.67, -1336.10, 29.47,   0.00, 0.00, -90.00);
CreateDynamicObject(3920, 1172.71, -1323.46, 29.47,   0.00, 0.00, -90.00);
CreateDynamicObject(3920, 1172.69, -1311.58, 29.47,   0.00, 0.00, -90.00);
CreateDynamicObject(970, 1185.47, -1333.38, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1185.47, -1329.28, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1185.39, -1313.89, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1185.40, -1318.03, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(1280, 1180.90, -1332.18, 12.94,   0.00, 0.00, 180.00);
CreateDynamicObject(1280, 1180.90, -1315.35, 12.94,   0.00, 0.00, 180.00);
CreateDynamicObject(2010, 1172.11, -1327.64, 14.38,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1172.13, -1319.62, 14.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1185.43, -1327.07, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1185.40, -1320.29, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1185.41, -1306.69, 11.82,   0.00, 0.00, 90.00);
CreateDynamicObject(3578, 1185.48, -1340.64, 11.82,   0.00, 0.00, 90.48);
CreateDynamicObject(1566, 1145.38, -1331.08, 13.88,   0.00, 0.00, 90.00);
CreateDynamicObject(1566, 1145.37, -1328.00, 13.88,   0.00, 0.00, -90.00);
CreateDynamicObject(8843, 1141.35, -1307.24, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.12, -1326.70, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.13, -1324.07, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.15, -1321.41, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.14, -1319.62, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.17, -1332.35, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.19, -1335.02, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.19, -1337.66, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.19, -1340.34, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.20, -1340.96, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(3920, 1145.61, -1324.76, 17.22,   0.00, 0.00, 90.00);
CreateDynamicObject(3920, 1145.69, -1335.93, 17.22,   0.00, 0.00, 90.00);
CreateDynamicObject(1215, 1128.54, -1322.44, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1119.46, -1322.42, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1115.44, -1322.46, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1106.34, -1322.48, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1102.34, -1322.46, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1093.20, -1322.47, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1145.76, -1318.66, 18.66,   0.00, 0.00, 90.00);
CreateDynamicObject(1231, 1145.72, -1341.65, 18.66,   0.00, 0.00, 90.00);
CreateDynamicObject(3934, 1161.56, -1308.93, 30.51,   0.00, 0.00, 0.00);
CreateDynamicObject(1566, 1160.69, -1330.51, 31.99,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.74, -1339.15, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.75, -1332.75, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.74, -1326.35, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.73, -1319.95, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.72, -1313.56, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.74, -1307.15, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.73, -1300.76, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.74, -1294.38, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1169.54, -1291.15, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1163.14, -1291.16, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1156.73, -1291.17, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1153.55, -1291.19, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1150.37, -1294.41, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.37, -1300.82, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.37, -1307.22, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.40, -1313.65, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.41, -1320.03, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.42, -1326.44, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.42, -1332.86, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.44, -1337.68, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1169.56, -1342.34, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1163.17, -1342.31, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1156.78, -1342.32, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1153.58, -1342.30, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1150.44, -1339.30, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1162.52, -1330.22, 31.07,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1160.43, -1330.30, 31.07,   0.00, 0.00, 0.00);
CreateDynamicObject(2942, 1186.35, -1372.00, 13.18,   0.00, 0.00, 90.00);
CreateDynamicObject(3749, 1140.52, -1292.96, 18.40,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 1149.60, -1346.86, 13.00,   0.00, 0.00, 181.63);
CreateDynamicObject(987, 1089.36, -1325.25, 12.50,   0.00, 0.00, 270.88);
hospitalgate = CreateDynamicObject(980, 1140.54, -1291.09, 15.40,   0.00, 0.00, 359.30);
// Farmacia LS by Swash
CreateDynamicObject(12844, 2418.00, 2468.00, 70.46,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 2412.80, 2464.10, 70.40,   0.00, 0.00, 270.00);
CreateDynamicObject(7191, 2411.50, 2467.80, 70.40,   0.00, 0.00, 180.00);
CreateDynamicObject(7191, 2415.00, 2472.00, 70.40,   0.00, 0.00, 89.99);
CreateDynamicObject(7191, 2424.40, 2468.30, 70.40,   0.00, 0.00, 359.99);
CreateDynamicObject(14687, 2417.00, 2465.30, 71.00,   0.00, 0.00, 0.00);
CreateDynamicObject(14687, 2421.30, 2465.40, 71.00,   0.00, 0.00, 0.00);
CreateDynamicObject(14775, 2423.20, 2471.80, 72.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1997, 2412.30, 2470.90, 68.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1997, 2413.30, 2470.80, 68.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2961, 2421.80, 2464.20, 70.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2184, 2420.60, 2471.50, 68.50,   0.00, 0.00, 286.00);
CreateDynamicObject(2184, 2421.80, 2468.80, 68.50,   0.00, 0.00, 330.00);
CreateDynamicObject(2894, 2421.60, 2469.70, 69.30,   0.00, 0.00, 328.00);
CreateDynamicObject(2190, 2422.30, 2468.60, 69.30,   0.00, 0.00, 146.00);
CreateDynamicObject(2146, 2412.20, 2465.50, 69.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2146, 2412.20, 2465.50, 69.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1808, 2424.10, 2466.10, 68.50,   0.00, 0.00, 270.00);
CreateDynamicObject(1808, 2420.70, 2464.40, 68.50,   0.00, 0.00, 181.59);
CreateDynamicObject(1778, 2423.90, 2471.90, 68.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2412, 2422.40, 2464.70, 68.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2412, 2424.20, 2464.70, 68.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2369, 2421.50, 2470.60, 69.30,   0.00, 0.00, 268.00);
CreateDynamicObject(2365, 2419.80, 2464.70, 68.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2365, 2419.80, 2464.70, 68.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1886, 2424.20, 2464.50, 72.60,   0.00, 0.00, 232.00);
CreateDynamicObject(2593, 2415.10, 2464.40, 69.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2593, 2416.80, 2464.40, 69.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2543, 2418.10, 2471.70, 68.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2543, 2417.10, 2471.70, 68.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2543, 2416.10, 2471.70, 68.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2543, 2419.10, 2471.70, 68.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2496, 2421.90, 2471.90, 70.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1988, 2416.70, 2469.30, 68.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1988, 2417.40, 2469.30, 68.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1988, 2418.00, 2469.30, 68.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1988, 2418.60, 2469.30, 68.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2585, 2420.60, 2471.90, 71.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2551, 2418.40, 2464.62, 68.50,   0.00, 0.00, 180.47);
CreateDynamicObject(2543, 2416.50, 2467.20, 68.30,   0.00, 0.00, 180.00);
CreateDynamicObject(2543, 2417.50, 2467.20, 68.30,   0.00, 0.00, 179.99);
CreateDynamicObject(2543, 2418.50, 2467.20, 68.30,   0.00, 0.00, 179.99);
CreateDynamicObject(1535, 2422.20, 2464.15, 68.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1671, 2422.60, 2471.30, 68.90,   0.00, 0.00, 296.00);
CreateDynamicObject(1671, 2423.80, 2469.60, 68.90,   0.00, 0.00, 330.00);
CreateDynamicObject(1567, 2411.58, 2468.39, 68.30,   0.00, 0.00, 88.00);
// Lavanderia by Bastian
CreateDynamicObject(18082, -2367.78, 433.88, 74.55,   0.00, 0.00, 90.00);
CreateDynamicObject(2775, -2368.13, 439.44, 76.17,   0.00, 0.00, 0.00);
CreateDynamicObject(1702, -2365.38, 431.39, 72.30,   0.00, 0.00, 181.00);
CreateDynamicObject(1702, -2369.82, 431.39, 72.30,   0.00, 0.00, 181.00);
CreateDynamicObject(2126, -2369.11, 430.88, 72.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2401, -2373.35, 431.75, 73.81,   0.00, 0.00, 90.00);
CreateDynamicObject(2399, -2373.35, 432.64, 73.85,   0.00, 0.00, 90.00);
CreateDynamicObject(2398, -2373.35, 433.46, 73.84,   0.00, 0.00, 90.00);
CreateDynamicObject(2397, -2373.35, 434.32, 73.85,   0.00, 0.00, 90.00);
CreateDynamicObject(2396, -2373.35, 435.04, 73.88,   0.00, 0.00, 90.00);
CreateDynamicObject(2390, -2373.35, 435.80, 73.86,   0.00, 0.00, 90.00);
CreateDynamicObject(2401, -2373.35, 431.75, 74.96,   0.00, 0.00, 90.00);
CreateDynamicObject(2399, -2373.35, 432.64, 74.98,   0.00, 0.00, 90.00);
CreateDynamicObject(2398, -2373.35, 433.45, 74.98,   0.00, 0.00, 90.00);
CreateDynamicObject(2397, -2373.35, 434.33, 74.95,   0.00, 0.00, 90.00);
CreateDynamicObject(2396, -2373.35, 435.05, 74.97,   0.00, 0.00, 90.00);
CreateDynamicObject(2390, -2373.35, 435.81, 74.94,   0.00, 0.00, 90.00);
CreateDynamicObject(2386, -2370.44, 437.31, 73.39,   0.00, 0.00, 0.00);
CreateDynamicObject(2386, -2369.93, 437.33, 73.39,   0.00, 0.00, 0.00);
CreateDynamicObject(2384, -2368.30, 437.34, 73.39,   0.00, 0.00, 0.00);
CreateDynamicObject(2384, -2367.74, 437.34, 73.39,   0.00, 0.00, 0.00);
CreateDynamicObject(2844, -2363.31, 436.30, 72.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1778, -2372.55, 437.07, 72.37,   0.00, 0.00, 0.00);
CreateDynamicObject(1738, -2363.06, 430.95, 72.96,   0.00, 0.00, 0.00);
CreateDynamicObject(2852, -2368.61, 431.32, 72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2841, -2369.33, 432.01, 72.15,   0.00, 0.00, 0.00);
CreateDynamicObject(2833, -2368.19, 433.72, 72.15,   0.00, 0.00, 0.00);
CreateDynamicObject(2002, -2362.79, 434.33, 72.30,   0.00, 0.00, 270.00);
CreateDynamicObject(1208, -2366.78, 437.66, 73.38,   0.00, 0.00, 181.00);
CreateDynamicObject(1208, -2369.10, 437.66, 73.38,   0.00, 0.00, 181.00);
CreateDynamicObject(1208, -2371.30, 437.67, 73.38,   0.00, 0.00, 181.00);
CreateDynamicObject(8324, -2365.85, 438.10, 74.67,   0.00, 0.00, 0.00);
CreateDynamicObject(2648, -2364.32, 437.33, 73.56,   0.00, 0.00, 336.18);
CreateDynamicObject(1566, -2362.09, 433.81, 73.82,   0.00, 0.00, 268.69);
// Bowling Exterior by Venedetto
CreateDynamicObject(16475, 1722.89, -1782.81, 12.63,   0.00, 0.00, 87.76);
CreateDynamicObject(3472, 1740.07, -1763.87, 12.43,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1718.24, -1762.82, 12.43,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1728.30, -1764.29, 12.43,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1728.61, -1762.87, 13.12,   0.00, 0.00, 87.00);
CreateDynamicObject(984, 1718.62, -1762.33, 13.12,   0.00, 0.00, 87.00);
CreateDynamicObject(983, 1734.93, -1759.99, 13.19,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1728.74, -1759.56, 13.19,   0.00, 0.00, -2.00);
CreateDynamicObject(983, 1723.98, -1759.34, 13.19,   0.00, 0.00, -4.00);
CreateDynamicObject(983, 1718.49, -1759.10, 13.19,   0.00, 0.00, -4.00);
CreateDynamicObject(4172, 1733.22, -1765.01, 14.63,   0.00, 0.00, 269.56);
CreateDynamicObject(2345, 1739.15, -1766.61, 16.04,   0.00, 0.00, -180.00);
CreateDynamicObject(2345, 1737.13, -1766.53, 16.04,   0.00, 0.00, -180.00);
CreateDynamicObject(2345, 1735.29, -1766.37, 16.04,   0.00, 0.00, -180.00);
CreateDynamicObject(2345, 1733.74, -1766.29, 16.04,   0.00, 0.00, -180.00);
CreateDynamicObject(2345, 1731.93, -1766.18, 16.04,   0.00, 0.00, -184.00);
CreateDynamicObject(2345, 1730.27, -1766.07, 16.04,   0.00, 0.00, -189.00);
CreateDynamicObject(2345, 1728.34, -1765.79, 16.04,   0.00, 0.00, -189.00);
CreateDynamicObject(2345, 1726.59, -1765.65, 16.04,   0.00, 0.00, -189.00);
CreateDynamicObject(2345, 1724.55, -1765.52, 16.04,   0.00, 0.00, -189.00);
CreateDynamicObject(2345, 1722.57, -1765.32, 16.04,   0.00, 0.00, -189.00);
CreateDynamicObject(2345, 1720.68, -1765.14, 16.04,   0.00, 0.00, -189.00);
CreateDynamicObject(2345, 1719.91, -1765.21, 16.04,   0.00, 0.00, -189.00);
CreateDynamicObject(1568, 1714.88, -1779.96, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1715.55, -1771.96, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1714.10, -1788.18, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1714.72, -1784.48, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(1568, 1716.29, -1765.89, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(669, 1712.82, -1757.61, 12.74,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1744.86, -1770.65, 15.06,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1744.98, -1793.86, 15.06,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1745.11, -1753.02, 15.06,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1744.97, -1804.35, 15.06,   0.00, 0.00, 0.00);
// Exterior Joyeria by Alejandro Venedetto
CreateDynamicObject(11435, 1155.51, -1846.77, 17.04,   0.00, 0.00, -90.00);
CreateDynamicObject(2714, 1156.57, -1863.70, 14.30,   0.00, 0.00, 900.00);
CreateDynamicObject(2773, 1158.15, -1862.68, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1154.82, -1862.64, 13.26,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 1158.29, -1861.18, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 1154.86, -1861.33, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1162.70, -1858.56, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1148.51, -1858.69, 12.54,   0.00, 0.00, 0.00);
// Interior Joyeria by Emi Venedetto
CreateDynamicObject(8231, 1137.20, -1875.30, 851.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, 1138.50, -1866.80, 850.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1143.30, -1866.60, 851.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1620, 1146.40, -1882.60, 852.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2439, 1142.90, -1882.00, 850.10,   0.00, 0.00, 180.00);
CreateDynamicObject(2439, 1143.89, -1882.02, 850.10,   0.00, 0.00, 177.99);
CreateDynamicObject(2440, 1144.89, -1882.07, 850.10,   0.00, 0.00, 88.00);
CreateDynamicObject(2440, 1141.90, -1882.00, 850.10,   0.00, 0.00, 180.00);
CreateDynamicObject(2436, 1142.00, -1867.20, 850.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2436, 1144.40, -1867.20, 850.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2433, 1138.10, -1874.10, 850.10,   0.00, 0.00, 90.00);
CreateDynamicObject(2433, 1138.10, -1871.90, 850.10,   0.00, 0.00, 90.00);
CreateDynamicObject(2433, 1145.80, -1871.00, 850.10,   0.00, 0.00, 270.00);
CreateDynamicObject(2433, 1145.80, -1873.20, 850.10,   0.00, 0.00, 270.00);
CreateDynamicObject(2433, 1145.80, -1875.40, 850.10,   0.00, 0.00, 270.00);
CreateDynamicObject(2433, 1145.80, -1877.60, 850.10,   0.00, 0.00, 270.00);
CreateDynamicObject(2412, 1138.70, -1866.90, 850.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2412, 1140.50, -1866.90, 850.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2422, 1142.60, -1882.20, 851.15,   0.00, 0.00, 180.00);
CreateDynamicObject(2966, 1143.20, -1882.20, 851.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1514, 1143.90, -1882.00, 851.40,   0.00, 0.00, 180.00);
CreateDynamicObject(630, 1145.90, -1867.40, 851.10,   0.00, 0.00, 266.00);
CreateDynamicObject(630, 1143.50, -1867.30, 851.10,   0.00, 0.00, 262.00);
CreateDynamicObject(630, 1140.90, -1867.40, 851.10,   0.00, 0.00, 262.00);
CreateDynamicObject(630, 1138.40, -1870.00, 851.10,   0.00, 0.00, 0.00);
CreateDynamicObject(630, 1145.70, -1879.50, 851.10,   0.00, 0.00, 174.00);
CreateDynamicObject(630, 1140.20, -1883.10, 851.10,   0.00, 0.00, 46.00);
CreateDynamicObject(1665, 1144.70, -1882.10, 851.20,   0.00, 0.00, 0.00);
CreateDynamicObject(5066, 1136.30, -1878.90, 851.70,   0.00, 0.00, 90.00);
// Mafia Rusa Exterior by Manuel Lopez
CreateDynamicObject(3749, 905.32, -1655.38, 18.38,   0.00, 0.00, 90.07);
CreateDynamicObject(3475, 907.01, -1642.80, 14.89,   0.00, 0.00, 179.97);
CreateDynamicObject(3475, 906.99, -1636.90, 14.89,   0.00, 0.00, 179.97);
CreateDynamicObject(3475, 907.01, -1642.80, 17.90,   0.00, 0.00, 179.97);
CreateDynamicObject(3475, 906.99, -1636.90, 17.87,   0.00, 0.00, 179.97);
CreateDynamicObject(987, 907.23, -1677.00, 12.54,   0.00, 0.00, 90.07);
CreateDynamicObject(987, 907.23, -1684.40, 12.54,   0.00, 0.00, 90.07);
CreateDynamicObject(987, 895.51, -1684.34, 12.54,   0.00, 0.00, 0.01);
CreateDynamicObject(987, 883.60, -1684.33, 12.54,   0.00, 0.00, 0.01);
CreateDynamicObject(987, 871.65, -1684.33, 12.54,   0.00, 0.00, 0.01);
CreateDynamicObject(987, 859.73, -1684.32, 12.54,   0.00, 0.00, 0.01);
CreateDynamicObject(987, 853.26, -1684.32, 12.54,   0.00, 0.00, 0.01);
CreateDynamicObject(3475, 850.20, -1684.49, 14.83,   0.00, 0.00, 270.96);
CreateDynamicObject(3475, 850.20, -1684.49, 15.81,   0.00, 0.00, 270.96);
CreateDynamicObject(1215, 907.27, -1649.66, 13.15,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 907.28, -1661.11, 13.06,   0.00, 0.00, 359.80);
CreateDynamicObject(1616, 905.60, -1660.78, 17.92,   0.00, 0.00, 259.17);
CreateDynamicObject(19273, 906.28, -1661.26, 14.91,   0.00, 0.00, 179.60);
CreateDynamicObject(3934, 866.26, -1619.57, 26.99,   0.00, 0.00, 90.04);
CreateDynamicObject(16001, 878.95, -1622.51, 27.13,   0.00, 0.00, 269.91);
CreateDynamicObject(3109, 880.97, -1611.31, 13.73,   0.00, 0.00, 269.58);
CreateDynamicObject(703, 878.08, -1601.39, 12.54,   0.00, 0.00, 0.00);
CreateDynamicObject(712, 862.47, -1604.69, 21.81,   356.86, 0.00, -2.64);
CreateDynamicObject(620, 870.00, -1597.16, 11.12,   356.86, 0.00, -2.62);
CreateDynamicObject(746, 877.24, -1607.69, 12.65,   0.00, 0.00, 0.00);
CreateDynamicObject(747, 875.50, -1605.03, 12.53,   0.00, 0.00, 0.00);
CreateDynamicObject(762, 877.26, -1601.50, 14.87,   0.00, 0.00, 0.00);
rusos = CreateDynamicObject(980, 905.82, -1655.38, 15.37,   0.00, 0.00, 270.88);
// Mapeo Interior Rusos by Falcone
CreateDynamicObject(14707, 1433.50, 2770.30, 1.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2948, 1419.20, 2767.80, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2948, 1419.20, 2765.90, -3.60,   0.00, 0.00, 180.00);
CreateDynamicObject(1491, 1425.15, 2774.90, -3.80,   0.00, 0.00, 0.00);
CreateDynamicObject(16151, 1434.00, 2752.50, -3.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1669, 1431.80, 2753.50, -2.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1668, 1435.80, 2753.30, -2.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1668, 1436.10, 2753.50, -2.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1667, 1434.50, 2753.60, -2.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1666, 1436.00, 2753.50, -2.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1551, 1435.30, 2753.40, -2.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2516, 1448.10, 2766.80, -2.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2514, 1448.90, 2771.00, -2.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2518, 1447.30, 2771.00, -2.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2520, 1450.00, 2769.70, -2.90,   0.00, 0.00, 0.00);
CreateDynamicObject(15036, 1432.40, 2783.50, -2.50,   0.00, 0.00, 270.00);
CreateDynamicObject(2019, 1439.30, 2785.20, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2019, 1438.40, 2785.20, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2016, 1437.40, 2785.20, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2140, 1437.80, 2780.10, -3.60,   0.00, 0.00, 180.00);
CreateDynamicObject(2205, 1431.40, 2763.60, 0.70,   0.00, 0.00, 270.00);
CreateDynamicObject(1714, 1430.00, 2762.90, 0.70,   0.00, 0.00, 90.00);
CreateDynamicObject(1715, 1432.90, 2763.70, 0.70,   0.00, 0.00, 300.00);
CreateDynamicObject(1715, 1433.00, 2762.10, 0.70,   0.00, 0.00, 240.00);
CreateDynamicObject(2105, 1431.50, 2763.70, 2.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2105, 1431.50, 2762.10, 2.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1210, 1431.30, 2762.70, 1.80,   90.00, 20.00, 90.00);
CreateDynamicObject(2025, 1437.20, 2761.70, 0.70,   0.00, 0.00, 270.00);
CreateDynamicObject(2571, 1434.40, 2763.50, 0.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2108, 1430.10, 2760.40, 0.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1742, 1430.30, 2765.30, 0.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1742, 1433.00, 2760.01, 0.70,   0.00, 0.00, 180.00);
CreateDynamicObject(2000, 1430.20, 2761.00, 0.70,   0.00, 0.00, 90.00);
CreateDynamicObject(2021, 1432.50, 2763.75, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2044, 1432.40, 2765.00, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2057, 1431.60, 2765.00, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2709, 1432.80, 2765.10, 1.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2606, 1420.90, 2781.80, -2.10,   0.00, 0.00, 90.00);
CreateDynamicObject(2606, 1420.90, 2783.80, -2.10,   0.00, 0.00, 90.00);
CreateDynamicObject(2606, 1420.90, 2783.80, -1.70,   0.00, 0.00, 90.00);
CreateDynamicObject(2606, 1420.90, 2781.80, -1.70,   0.00, 0.00, 90.00);
CreateDynamicObject(2200, 1422.50, 2785.70, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2308, 1429.70, 2781.20, -3.60,   0.00, 0.00, 180.00);
CreateDynamicObject(1806, 1427.70, 2783.70, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1806, 1424.30, 2781.90, -3.60,   0.00, 0.00, 60.00);
CreateDynamicObject(1806, 1424.20, 2783.50, -3.60,   0.00, 0.00, 100.00);
CreateDynamicObject(11631, 1423.70, 2780.40, -2.30,   0.00, 0.00, 180.00);
CreateDynamicObject(2180, 1422.60, 2783.20, -3.60,   0.00, 0.00, 270.00);
CreateDynamicObject(2185, 1428.70, 2785.10, -3.60,   0.00, 0.00, 180.00);
CreateDynamicObject(1432, 1434.70, 2782.50, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2637, 1436.30, 2762.30, -3.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2637, 1434.40, 2762.30, -3.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2637, 1432.50, 2762.30, -3.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2637, 1432.50, 2761.20, -3.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2637, 1434.40, 2761.20, -3.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2637, 1436.30, 2761.20, -3.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2636, 1438.20, 2761.80, -3.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2636, 1436.30, 2763.70, -3.00,   0.00, 0.00, 90.00);
CreateDynamicObject(2636, 1435.10, 2763.70, -3.00,   0.00, 0.00, 90.00);
CreateDynamicObject(2636, 1433.90, 2763.70, -3.00,   0.00, 0.00, 90.00);
CreateDynamicObject(2636, 1432.70, 2763.70, -3.00,   0.00, 0.00, 90.00);
CreateDynamicObject(2636, 1430.80, 2761.80, -3.00,   0.00, 0.00, 179.99);
CreateDynamicObject(2636, 1432.80, 2759.90, -2.90,   0.00, 0.00, 270.00);
CreateDynamicObject(2636, 1435.10, 2759.90, -3.00,   0.00, 0.00, 269.99);
CreateDynamicObject(2636, 1433.90, 2759.90, -3.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2636, 1436.30, 2759.90, -3.00,   0.00, 0.00, 269.99);
CreateDynamicObject(1667, 1437.10, 2761.50, -2.70,   0.00, 0.00, 0.00);
CreateDynamicObject(14651, 1435.70, 2768.30, 3.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2188, 1431.60, 2767.50, 1.70,   0.00, 0.00, 179.99);
CreateDynamicObject(1838, 1430.80, 2771.00, 0.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1902, 1432.00, 2768.30, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1904, 1432.50, 2767.80, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1905, 1432.70, 2767.80, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1906, 1431.90, 2768.00, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1908, 1432.10, 2768.10, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1911, 1431.10, 2767.80, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1924, 1432.20, 2768.10, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2325, 1431.50, 2771.10, 1.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1832, 1432.30, 2771.00, 0.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 1433.30, 2776.10, 1.10,   0.00, 90.00, 320.00);
CreateDynamicObject(1550, 1433.00, 2776.80, 1.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 1433.40, 2776.50, 1.10,   50.00, 0.00, 0.00);
CreateDynamicObject(1550, 1433.80, 2776.10, 1.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 1433.80, 2776.60, 1.10,   0.00, 340.00, 30.00);
CreateDynamicObject(1550, 1433.60, 2777.20, 1.10,   0.00, 0.00, 70.00);
CreateDynamicObject(2180, 1436.70, 2776.80, 0.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1575, 1436.60, 2776.80, 1.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1575, 1437.60, 2776.50, 1.50,   0.00, 0.00, 39.00);
CreateDynamicObject(1575, 1436.80, 2776.60, 1.50,   0.00, 20.00, 320.00);
CreateDynamicObject(1575, 1437.30, 2776.90, 1.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1654, 1437.30, 2776.50, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1672, 1438.00, 2776.30, 0.90,   0.00, 90.00, 20.00);
CreateDynamicObject(2237, 1435.40, 2777.10, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2358, 1433.30, 2771.70, 0.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2358, 1433.30, 2772.20, 0.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2358, 1433.30, 2772.00, 1.00,   0.00, 0.00, 0.00);
CreateDynamicObject(930, 1434.60, 2777.00, 1.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2332, 1433.50, 2773.50, 1.20,   0.00, 0.00, 90.00);
CreateDynamicObject(2332, 1433.50, 2774.40, 1.20,   0.00, 0.00, 90.00);
CreateDynamicObject(2005, 1433.40, 2775.80, 1.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1829, 1437.80, 2773.20, 1.20,   0.00, 0.00, 270.00);
CreateDynamicObject(2725, 1431.00, 2760.50, 1.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2726, 1431.00, 2760.40, 1.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2958, 1431.20, 2760.40, 1.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2966, 1430.90, 2760.60, 1.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1755, 1424.10, 2772.80, -3.60,   0.00, 0.00, 240.00);
CreateDynamicObject(1755, 1420.90, 2770.20, -3.60,   0.00, 0.00, 180.00);
CreateDynamicObject(1760, 1424.60, 2761.50, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1760, 1427.70, 2760.70, -3.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1731, 1423.60, 2757.10, -0.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1815, 1424.90, 2759.10, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2078, 1446.40, 2767.40, -2.90,   0.00, 0.00, 270.00);
CreateDynamicObject(14455, 1426.20, 2758.10, -1.90,   0.00, 0.00, 0.00);
CreateDynamicObject(14805, 1436.10, 2769.90, -2.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2562, 1419.80, 2760.50, -3.60,   0.00, 0.00, 90.00);
CreateDynamicObject(2297, 1419.70, 2772.90, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1755, 1422.90, 2770.90, -3.60,   0.00, 0.00, 200.00);
CreateDynamicObject(2830, 1434.40, 2782.60, -3.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2820, 1435.00, 2782.30, -3.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2812, 1438.50, 2785.20, -2.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2100, 1427.30, 2765.50, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2192, 1422.60, 2782.40, -2.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2229, 1427.90, 2770.80, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2229, 1427.40, 2770.70, -3.60,   0.00, 0.00, 270.00);
CreateDynamicObject(2289, 1422.60, 2779.50, -1.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1742, 1430.20, 2779.60, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1743, 1434.10, 2777.10, -3.60,   0.00, 0.00, 180.00);
CreateDynamicObject(1819, 1445.10, 2771.30, -2.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2251, 1445.50, 2771.90, -1.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2250, 1445.60, 2771.60, -1.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1491, 1433.90, 2760.00, 0.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1337, 1431.20, 2760.80, 1.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1497, 1440.10, 2776.10, -3.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1497, 1440.10, 2779.10, -3.50,   0.00, 0.00, 270.00);
CreateDynamicObject(1738, 1424.50, 2758.20, -2.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1828, 1431.20, 2766.50, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2700, 1429.10, 2753.60, -1.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2813, 1431.30, 2763.50, 1.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2818, 1435.80, 2771.50, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2822, 1433.40, 2785.00, -2.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2827, 1428.20, 2785.00, -2.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2833, 1425.70, 2780.30, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2850, 1437.60, 2785.10, -2.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1706, 1441.10, 2756.20, 0.70,   0.00, 0.00, 180.00);
CreateDynamicObject(1706, 1431.80, 2756.10, 0.70,   0.00, 0.00, 180.00);
CreateDynamicObject(1497, 722.20, -1173.20, 14.60,   0.00, 0.00, 60.00);
CreateDynamicObject(1497, 723.60, -1170.70, 14.60,   0.00, 0.00, 240.00);
CreateDynamicObject(818, 723.40, -1168.70, 18.60,   0.00, 0.00, 0.00);
CreateDynamicObject(818, 720.70, -1173.60, 18.40,   0.00, 0.00, 0.00);
// -================= Decorado 24/7 Ayunta (By Rocio) ================-//
CreateDynamicObject(1360, 1340.80, -1755.00, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1340.80, -1750.90, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1340.80, -1747.00, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1340.80, -1743.20, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1361.60, -1754.90, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1361.60, -1751.60, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1361.60, -1748.20, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1341.40, -1750.00, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1361.00, -1753.40, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1361.00, -1750.20, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1357.70, -1756.30, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1344.70, -1756.30, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1347.90, -1756.30, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1349.30, -1752.60, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1345.10, -1752.50, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1342, 1358.98, -1754.00, 13.40,   0.00, 0.00, 180.00);
CreateDynamicObject(1319, 1353.70, -1722.40, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1319, 1365.00, -1722.30, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1340, 1358.90, -1749.81, 13.50,   0.00, 0.00, 180.00);
CreateDynamicObject(1319, 1354.70, -1754.60, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1319, 1354.60, -1750.80, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1319, 1354.60, -1747.30, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(978, 1359.50, -1721.80, 13.70,   0.00, 0.00, 180.00);
// Al Qaeda (By Ricardo && Texter)
CreateDynamicObject(3749, 1023.63, -375.23, 77.66,   4.25, 0.00, 358.09);
CreateDynamicObject(3605, 1069.20, -358.20, 78.50,   0.00, 0.00, 358.59);
CreateDynamicObject(8947, 996.80, -338.50, 70.00,   0.00, 0.00, 90.49);
CreateDynamicObject(8656, 1073.10, -281.60, 73.50,   0.00, 0.25, 88.49);
CreateDynamicObject(8947, 1019.40, -303.20, 70.00,   0.00, 0.00, 0.24);
CreateDynamicObject(9361, 995.20, -339.10, 77.80,   0.00, 0.00, 224.99);
CreateDynamicObject(1714, 1115.90, -317.50, 73.10,   0.00, 0.00, 179.99);
CreateDynamicObject(2008, 1115.40, -316.30, 73.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 1117.10, -312.90, 73.00,   0.00, 0.00, 267.75);
CreateDynamicObject(1723, 1114.10, -310.70, 73.00,   0.00, 0.00, 356.74);
CreateDynamicObject(3111, 1002.40, -340.00, 76.23,   0.00, 0.00, 359.99);
CreateDynamicObject(2606, 999.00, -340.00, 77.30,   10.00, 0.25, 92.20);
CreateDynamicObject(1586, 1129.70, -269.60, 71.50,   0.00, 0.00, 76.00);
CreateDynamicObject(1586, 1130.00, -269.80, 78.30,   0.00, 0.00, 76.00);
CreateDynamicObject(16377, 1113.60, -313.00, 74.00,   0.00, 0.00, 266.00);
CreateDynamicObject(2607, 1002.90, -340.00, 75.80,   0.00, 0.00, 88.49);
CreateDynamicObject(11631, 995.30, -335.70, 76.70,   0.00, 0.00, 358.99);
CreateDynamicObject(3517, 925.20, -389.40, 65.30,   0.00, 0.00, 0.00);
CreateDynamicObject(3517, 886.40, -372.90, 53.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3517, 858.60, -357.00, 44.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3517, 824.60, -328.10, 37.10,   0.00, 0.00, 0.00);
CreateDynamicObject(3398, 1009.40, -331.50, 87.20,   0.00, 0.00, 0.00);
CreateDynamicObject(3398, 1124.40, -290.80, 82.90,   0.00, 0.00, 243.98);
CreateDynamicObject(11479, 1007.90, -334.80, 72.60,   0.00, 0.00, 90.00);
CreateDynamicObject(16782, 998.10, -338.20, 77.20,   0.00, 0.00, 180.49);
CreateDynamicObject(3113, 984.50, -341.10, 71.20,   359.75, 14.25, 0.05);
CreateDynamicObject(16093, 1002.50, -339.90, 75.30,   0.00, 0.00, 90.25);
CreateDynamicObject(3066, 1039.90, -303.50, 73.90,   0.00, 0.00, 358.25);
CreateDynamicObject(9361, 1114.60, -314.40, 75.40,   0.00, 0.00, 222.99);
CreateDynamicObject(2607, 995.90, -341.80, 75.80,   0.00, 0.00, 180.99);
CreateDynamicObject(2607, 1002.10, -339.97, 75.80,   0.00, 0.00, 269.74);
CreateDynamicObject(9241, 1021.08, -300.06, 74.80,   0.00, 0.00, 89.99);
CreateDynamicObject(8253, 1108.05, -358.24, 76.60,   0.00, 0.00, 90.74);
CreateDynamicObject(17324, 1111.70, -298.10, 73.00,   0.00, 0.00, 268.99);
CreateDynamicObject(8947, 996.90, -353.20, 70.00,   0.00, 0.00, 90.49);
CreateDynamicObject(3884, 1043.11, -359.52, 73.48,   7.25, 0.00, 9.21);
CreateDynamicObject(3277, 1043.29, -359.91, 73.42,   0.00, 0.00, 172.37);
CreateDynamicObject(3066, 992.70, -340.50, 73.70,   0.00, 0.00, 358.25);
CreateDynamicObject(3066, 997.90, -334.10, 73.80,   0.00, 0.00, 272.25);
CreateDynamicObject(3115, 998.30, -320.70, 72.80,   0.00, 0.00, 90.99);
CreateDynamicObject(8947, 997.03, -367.90, 70.00,   0.00, 0.00, 90.49);
CreateDynamicObject(11472, 1000.10, -345.00, 72.43,   0.00, 0.00, 269.49);
CreateDynamicObject(3113, 984.50, -363.70, 71.30,   359.75, 14.25, 0.05);
CreateDynamicObject(3115, 997.90, -299.70, 72.80,   0.00, 0.00, 90.99);
CreateDynamicObject(13011, 1050.40, -316.20, 73.20,   0.00, 0.00, 89.75);
CreateDynamicObject(8656, 1103.60, -282.40, 73.50,   0.00, 0.25, 88.49);
CreateDynamicObject(13206, 1066.60, -285.30, 73.00,   0.00, 0.00, 179.99);
CreateDynamicObject(3066, 1049.80, -291.40, 73.90,   0.00, 0.00, 358.25);
CreateDynamicObject(3666, 1005.60, -310.40, 73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 989.40, -310.40, 73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 989.00, -289.70, 73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 1006.70, -289.40, 73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 1006.90, -331.00, 73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 989.80, -331.00, 73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(8210, 1059.54, -375.53, 72.67,   2.00, 0.00, 359.05);
CreateDynamicObject(8210, 1101.76, -376.33, 72.65,   2.00, 0.00, 358.88);
CreateDynamicObject(8210, 1129.70, -349.50, 73.61,   360.00, 358.00, 89.00);
CreateDynamicObject(8210, 1130.82, -304.15, 74.12,   0.00, 1.74, 87.92);
CreateDynamicObject(8315, 1103.88, -275.37, 73.86,   0.00, 0.00, 89.49);
CreateDynamicObject(8369, 1025.06, -292.28, 67.68,   0.00, 0.00, 273.00);
CreateDynamicObject(8369, 1025.02, -292.09, 74.40,   0.00, 359.99, 273.25);
CreateDynamicObject(987, 1002.75, -374.88, 72.68,   1.00, 0.00, 1.00);
CreateDynamicObject(987, 984.87, -374.88, 72.40,   1.00, -1.00, 359.70);
CreateDynamicObject(2356, 1000.80, -340.10, 75.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2356, 995.50, -336.80, 75.40,   0.00, 0.00, 0.00);
CreateDynamicObject(14869, 994.20, -338.00, 76.10,   0.00, 0.00, 178.75);
CreateDynamicObject(3398, 1070.80, -321.50, 87.20,   0.00, 0.00, 190.00);
CreateDynamicObject(1886, 994.30, -338.00, 76.20,   355.75, 179.50, 87.21);
CreateDynamicObject(656, 1098.57, -291.81, 72.94,   3.14, 0.00, 0.92);
CreateDynamicObject(987, 985.48, -318.87, 67.56,   0.00, 0.00, 265.83);
CreateDynamicObject(987, 985.91, -309.00, 67.69,   0.00, 0.00, 267.13);
CreateDynamicObject(987, 1074.71, -274.07, 72.58,   0.00, 0.00, 184.84);
CreateDynamicObject(987, 996.74, -375.01, 72.68,   1.00, 0.00, 1.00);
CreateDynamicObject(16501, 998.96, -289.18, 70.28,   0.00, 0.00, 271.31);
CreateDynamicObject(16501, 989.27, -327.69, 70.28,   0.00, 0.00, 1.01);
CreateDynamicObject(16501, 989.16, -320.73, 70.28,   0.00, 0.00, 1.01);
CreateDynamicObject(16501, 989.04, -313.75, 70.28,   0.00, 0.00, 1.01);
CreateDynamicObject(16501, 988.88, -306.70, 70.28,   0.00, 0.00, 1.01);
CreateDynamicObject(16501, 988.62, -299.77, 70.28,   0.00, 0.00, 2.09);
CreateDynamicObject(16501, 988.43, -292.85, 70.28,   0.00, 0.00, 0.79);
CreateDynamicObject(16501, 991.99, -289.26, 70.28,   0.00, 0.00, 271.02);
CreateDynamicObject(987, 985.48, -318.87, 72.49,   0.00, 0.00, 265.83);
CreateDynamicObject(987, 985.91, -309.00, 72.59,   0.00, 0.00, 267.13);
CreateDynamicObject(987, 1132.79, -276.50, 59.79,   0.00, -90.00, 317.77);
terroristas = CreateDynamicObject(980, 1023.69, -374.61, 74.56,   0.00, 0.00, 177.31);
// LCN
CreateDynamicObject(8209, 1262.90, -2070.46, 60.78,   0.00, 5.00, 0.00);
CreateDynamicObject(8209, 1177.01, -2074.67, 71.11,   0.00, 359.75, 5.95);
CreateDynamicObject(8209, 1474.77, -2033.46, 36.17,   0.00, 19.99, 13.89);
CreateDynamicObject(1337, 1293.92, -2079.89, 56.13,   0.00, 0.00, 0.00);
CreateDynamicObject(8209, 1356.09, -2061.30, 54.81,   0.00, 2.00, 11.91);
CreateDynamicObject(8210, 1414.75, -2048.24, 52.77,   0.00, 5.00, 13.89);
CreateDynamicObject(8210, 1130.95, -2078.71, 71.01,   0.00, 0.00, 3.97);
CreateDynamicObject(8209, 1518.45, -1988.22, 26.53,   0.00, 357.00, 272.66);
CreateDynamicObject(8210, 1517.17, -1918.27, 24.31,   0.00, 0.00, 266.71);
CreateDynamicObject(8210, 1493.32, -2029.03, 33.34,   0.00, 5.00, 13.89);
CreateDynamicObject(987, 1069.51, -2037.04, 52.51,   0.00, 0.00, 0.00);
CreateDynamicObject(8150, 1073.84, -1953.78, 20.76,   0.00, 357.00, 270.68);
CreateDynamicObject(8149, 1145.11, -1891.59, 20.18,   0.00, 0.00, 270.68);
CreateDynamicObject(987, 1223.95, -1890.82, 17.54,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 1228.51, -1880.91, 16.66,   0.00, 0.00, 272.25);
CreateDynamicObject(8210, 1255.94, -1880.84, 19.66,   0.00, 0.00, 0.22);
CreateDynamicObject(8210, 1283.90, -1880.72, 19.94,   0.00, 0.00, 0.21);
CreateDynamicObject(8210, 1382.28, -1902.54, 19.60,   0.00, 0.00, 359.46);
CreateDynamicObject(2921, 1416.62, -1882.13, 17.57,   0.00, 0.00, 257.74);
CreateDynamicObject(2921, 1248.03, -2060.99, 63.76,   0.00, 0.00, 234.25);
CreateDynamicObject(2921, 1247.39, -2012.00, 63.49,   0.00, 0.00, 170.00);
CreateDynamicObject(2921, 1125.40, -2041.32, 73.86,   0.00, 0.00, 241.25);
CreateDynamicObject(5170, 1249.37, -2037.38, 61.95,   0.00, 0.00, 270.75);
CreateDynamicObject(5170, 1275.13, -2037.98, 61.85,   0.00, 0.00, 270.75);
CreateDynamicObject(1360, 1264.06, -2044.83, 59.06,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.99, -2042.41, 59.07,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.94, -2040.27, 59.07,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.89, -2038.21, 59.07,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.80, -2035.88, 59.08,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.79, -2033.25, 59.08,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.75, -2031.17, 59.08,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.73, -2029.01, 59.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.73, -2027.04, 59.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.70, -2024.60, 59.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.67, -2022.05, 59.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.64, -2019.42, 59.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.62, -2017.59, 59.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.59, -2015.01, 59.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.58, -2012.55, 59.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1263.68, -2009.77, 59.09,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1264.77, -2013.92, 58.92,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1264.79, -2026.26, 58.92,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1264.79, -2039.03, 58.91,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1262.78, -2015.65, 58.98,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1262.80, -2027.41, 58.98,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1262.76, -2039.45, 58.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1282, 1263.96, -2046.55, 59.00,   0.00, 0.00, 270.68);
CreateDynamicObject(870, 1263.85, -2045.03, 59.87,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1263.84, -2040.97, 59.88,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1263.64, -2009.74, 59.90,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1263.65, -2014.28, 59.90,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1263.62, -2020.04, 59.90,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1263.56, -2024.34, 59.90,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1263.75, -2037.17, 59.89,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1263.37, -2032.92, 59.89,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1263.53, -2029.03, 59.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3512, 1263.60, -2027.08, 59.65,   0.00, 0.00, 0.00);
CreateDynamicObject(3512, 1263.59, -2011.45, 59.66,   0.00, 0.00, 0.00);
CreateDynamicObject(792, 1263.57, -2019.71, 59.66,   0.00, 0.00, 0.00);
CreateDynamicObject(3512, 1263.88, -2042.40, 59.63,   0.00, 0.00, 0.00);
CreateDynamicObject(792, 1263.74, -2035.03, 59.63,   0.00, 0.00, 0.00);
CreateDynamicObject(3515, 1174.98, -2037.18, 76.13,   0.00, 0.00, 0.00);
CreateDynamicObject(2921, 1577.20, -1633.09, 16.43,   0.00, 0.00, 24.78);
CreateDynamicObject(2921, 1593.10, -1641.71, 15.90,   0.00, 0.00, 108.15);
CreateDynamicObject(2921, 1555.05, -1678.88, 19.58,   0.00, 0.00, 337.14);
CreateDynamicObject(8879, 1909.55, -1882.16, 18.59,   0.00, 0.00, 19.31);
CreateDynamicObject(3749, 1426.71, -1884.21, 18.30,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 1092.13, -2049.55, 67.64,   0.00, 0.00, 359.63);
CreateDynamicObject(987, 1103.88, -2069.04, 67.94,   0.00, 0.00, 269.40);
CreateDynamicObject(987, 1103.99, -2057.15, 67.94,   0.00, 0.00, 269.40);
CreateDynamicObject(987, 1103.77, -2024.71, 67.84,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 1104.03, -2049.83, 67.74,   0.00, 0.00, 269.82);
CreateDynamicObject(987, 1103.88, -1993.22, 67.74,   0.00, 0.00, 270.21);
CreateDynamicObject(987, 1103.89, -2005.18, 67.74,   0.00, 0.00, 270.21);
CreateDynamicObject(987, 1103.86, -2012.61, 67.74,   0.00, 0.00, 270.21);
CreateDynamicObject(2924, 1107.14, -2027.96, 69.18,   0.00, 0.00, 0.00);
CreateDynamicObject(11544, 1007.10, -2146.08, 13.75,   0.00, 0.00, -98.00);
CreateDynamicObject(1498, 1005.67, -2144.97, 14.74,   0.00, 0.00, -97.00);
CreateDynamicObject(762, 1000.91, -2145.41, 12.08,   0.00, 0.00, 0.00);
CreateDynamicObject(762, 1002.75, -2144.48, 12.08,   0.00, 0.00, 0.00);
CreateDynamicObject(762, 1005.91, -2144.96, 12.08,   0.00, 0.00, 0.00);
CreateDynamicObject(762, 1006.78, -2146.21, 12.08,   0.00, 0.00, -11.00);
CreateDynamicObject(762, 1006.78, -2146.21, 12.08,   0.00, 0.00, -11.00);
// Interior LCN by Bastian
CreateDynamicObject(3919, 1087.07, -2032.39, 2483.52,   0.00, 0.00, 0.00);
CreateDynamicObject(632, 1084.09, -2036.52, 2484.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2257, 1086.17, -2038.93, 2485.65,   0.00, 0.00, 179.57);
CreateDynamicObject(638, 1091.56, -2041.79, 2485.31,   0.00, 0.00, 87.14);
CreateDynamicObject(2127, 1095.56, -2032.28, 2483.67,   0.00, 0.00, 269.02);
CreateDynamicObject(2135, 1095.72, -2035.12, 2483.60,   0.00, 0.00, 271.74);
CreateDynamicObject(1432, 1088.12, -2031.84, 2483.78,   0.00, 0.00, 359.79);
CreateDynamicObject(1360, 1088.41, -2037.70, 2484.48,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1083.95, -2037.52, 2484.45,   0.00, 0.00, 0.61);
CreateDynamicObject(1670, 1088.11, -2031.67, 2484.42,   0.00, 0.00, 0.00);
CreateDynamicObject(1731, 1093.72, -2041.18, 2486.01,   0.00, 0.00, 279.86);
CreateDynamicObject(1731, 1094.62, -2039.95, 2486.01,   0.00, 0.00, 1.13);
CreateDynamicObject(1731, 1094.64, -2030.80, 2486.09,   0.00, 0.00, 0.00);
CreateDynamicObject(19459, 1090.08, -2030.04, 2485.32,   0.00, 0.00, 269.68);
CreateDynamicObject(19459, 1080.63, -2029.98, 2485.33,   0.00, 0.00, 89.89);
CreateDynamicObject(2268, 1092.91, -2030.74, 2485.85,   0.00, 0.00, 0.00);
CreateDynamicObject(2266, 1091.34, -2030.64, 2485.03,   0.00, 0.00, 0.00);
CreateDynamicObject(2270, 1089.42, -2030.73, 2485.68,   0.00, 0.00, 0.00);
CreateDynamicObject(2262, 1087.26, -2030.65, 2485.03,   0.00, 0.00, 0.00);
CreateDynamicObject(2029, 1082.09, -2035.94, 2483.67,   0.00, 0.00, 89.19);
CreateDynamicObject(1742, 1082.89, -2030.20, 2483.68,   0.00, 0.00, 0.81);
CreateDynamicObject(927, 1089.68, -2038.14, 2485.51,   0.00, 0.00, 90.51);
CreateDynamicObject(914, 1088.40, -2041.28, 2485.46,   0.00, 0.00, 0.00);
CreateDynamicObject(1557, 1086.71, -2041.00, 2483.70,   0.00, 0.00, 89.89);
CreateDynamicObject(19173, 1085.05, -2030.28, 2486.22,   0.00, 0.00, 358.37);
CreateDynamicObject(2233, 1084.35, -2029.96, 2483.67,   0.00, 0.00, 26.55);
CreateDynamicObject(2130, 1095.57, -2036.71, 2483.65,   0.00, 0.00, 269.50);
CreateDynamicObject(2041, 1082.05, -2035.90, 2484.68,   0.00, 0.00, 146.71);
CreateDynamicObject(2035, 1082.25, -2035.08, 2484.47,   0.00, 0.00, 110.32);
CreateDynamicObject(1723, 1087.23, -2038.44, 2483.67,   0.00, 0.00, 179.45);
CreateDynamicObject(1731, 1091.28, -2030.23, 2486.12,   0.00, 0.00, 84.23);
CreateDynamicObject(1731, 1087.12, -2030.20, 2486.09,   0.00, 0.00, 86.67);
CreateDynamicObject(1731, 1081.68, -2035.39, 2485.94,   0.00, 0.00, 176.25);
CreateDynamicObject(19395, 1081.68, -2032.19, 2485.36,   0.00, 0.00, 0.00);
CreateDynamicObject(19512, 1075.67, -2028.87, 2485.61,   0.00, 0.00, 271.43);
CreateDynamicObject(19440, 1081.67, -2030.27, 2485.33,   0.00, 0.00, 0.00);
CreateDynamicObject(1502, 1081.60, -2032.91, 2483.57,   0.00, 0.00, 87.78);
CreateDynamicObject(19459, 1071.09, -2030.21, 2485.40,   0.00, 0.00, 272.84);
CreateDynamicObject(19459, 1077.12, -2034.05, 2485.38,   0.00, 0.00, 91.76);
CreateDynamicObject(19459, 1072.50, -2032.50, 2485.44,   0.00, 0.00, 0.00);
CreateDynamicObject(1998, 1074.51, -2032.25, 2483.65,   0.00, 0.00, 272.04);
CreateDynamicObject(1702, 1080.03, -2033.34, 2483.65,   0.00, 0.00, 181.34);
CreateDynamicObject(1811, 1074.41, -2033.33, 2484.26,   0.00, 0.00, 197.23);
CreateDynamicObject(1811, 1076.57, -2032.14, 2484.37,   0.00, 0.00, 8.16);
CreateDynamicObject(1808, 1080.38, -2033.59, 2483.65,   0.00, 0.00, 181.38);
CreateDynamicObject(2240, 1077.56, -2033.62, 2484.06,   0.00, 0.00, 0.00);
CreateDynamicObject(2240, 1072.79, -2030.63, 2484.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2257, 1072.69, -2031.94, 2485.38,   0.00, 0.00, 90.16);
CreateDynamicObject(19173, 1076.51, -2030.06, 2485.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1826, 1079.71, -2030.58, 2483.45,   0.00, 0.00, 0.00);
CreateDynamicObject(14705, 1080.51, -2030.62, 2484.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2239, 1078.66, -2030.34, 2483.65,   0.00, 0.00, 0.00);
// LCN - Fabrica y Sotano by Bastian y Alejandro
CreateDynamicObject(3942, 1119.31, -2036.69, -94.63,   0.00, 0.00, 0.00);
CreateDynamicObject(19459, 1128.36, -2040.16, -90.20,   0.00, 0.00, 0.00);
CreateDynamicObject(19459, 1128.36, -2040.31, -93.60,   0.00, 0.00, 0.00);
CreateDynamicObject(19459, 1115.45, -2041.11, -96.98,   0.00, 0.00, 90.25);
CreateDynamicObject(19459, 1118.39, -2041.02, -90.84,   0.00, 0.00, 89.67);
CreateDynamicObject(19459, 1127.38, -2041.06, -93.61,   0.00, 0.00, 89.58);
CreateDynamicObject(19459, 1118.29, -2041.11, -93.55,   0.00, 0.00, 90.12);
CreateDynamicObject(19459, 1127.15, -2040.99, -90.37,   0.00, 0.00, 89.70);
CreateDynamicObject(19459, 1127.64, -2032.10, -90.95,   0.00, 90.00, 0.00);
CreateDynamicObject(19459, 1124.41, -2032.26, -90.91,   0.00, 91.00, 0.00);
CreateDynamicObject(19459, 1121.07, -2032.30, -90.92,   0.00, 89.00, 0.20);
CreateDynamicObject(19459, 1117.86, -2032.31, -90.88,   0.00, 90.00, 0.40);
CreateDynamicObject(19459, 1114.66, -2032.21, -90.87,   0.00, 90.00, 0.11);
CreateDynamicObject(19459, 1111.69, -2032.31, -90.81,   0.00, 89.00, 359.90);
CreateDynamicObject(19459, 1127.67, -2038.36, -90.93,   0.00, 91.00, 0.00);
CreateDynamicObject(19459, 1124.45, -2038.11, -90.85,   0.00, 91.00, 0.11);
CreateDynamicObject(19459, 1121.17, -2038.97, -90.86,   0.00, 90.00, 0.22);
CreateDynamicObject(19459, 1117.82, -2040.02, -90.86,   0.00, 90.00, 0.41);
CreateDynamicObject(19459, 1115.31, -2040.56, -90.82,   0.00, 90.00, 0.00);
CreateDynamicObject(19459, 1111.92, -2035.93, -90.77,   0.00, 90.00, 0.00);
CreateDynamicObject(2046, 1114.12, -2036.94, -96.22,   0.00, 0.00, 92.05);
CreateDynamicObject(1723, 1114.61, -2026.99, -98.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 1117.84, -2026.91, -98.63,   0.00, 0.00, 0.00);
CreateDynamicObject(2403, 1122.41, -2031.27, -98.67,   0.00, 0.00, 8.28);
CreateDynamicObject(2385, 1128.12, -2033.99, -98.60,   0.00, 0.00, 270.20);
CreateDynamicObject(1825, 1115.52, -2033.20, -98.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2035, 1127.11, -2029.99, -96.90,   0.00, 0.00, 289.89);
CreateDynamicObject(2035, 1126.46, -2028.68, -96.64,   0.00, 0.00, 305.72);
CreateDynamicObject(2035, 1122.28, -2026.46, -96.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2035, 1125.54, -2026.89, 763.20,   0.00, 0.00, 329.40);
CreateDynamicObject(2041, 1127.90, -2033.94, -97.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2041, 1127.99, -2035.34, -97.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2041, 1127.86, -2034.63, -97.97,   0.00, 0.00, 357.30);
CreateDynamicObject(964, 1125.23, -2039.41, -98.63,   0.00, 0.00, 269.15);
CreateDynamicObject(1221, 1116.54, -2040.56, -97.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1221, 1118.84, -2040.60, -96.94,   0.00, 0.00, 0.00);
CreateDynamicObject(1299, 1126.42, -2039.57, -98.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1429, 1117.56, -2037.12, -97.17,   0.00, 0.00, 187.93);
CreateDynamicObject(1550, 1119.63, -2037.19, -97.23,   0.00, 89.00, 0.00);
CreateDynamicObject(1550, 1120.16, -2037.17, -97.11,   0.00, -39.00, 0.00);
CreateDynamicObject(1550, 1120.78, -2037.07, -97.32,   0.00, 89.00, 75.00);
CreateDynamicObject(1672, 1127.89, -2033.73, -98.45,   0.00, 31.00, -1.00);
CreateDynamicObject(1672, 1127.95, -2033.97, -98.45,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 1120.48, -2036.00, -98.65,   0.00, 0.00, 0.00);
CreateDynamicObject(1829, 1127.56, -2032.60, -98.14,   0.00, 0.00, 270.38);
CreateDynamicObject(2034, 1126.94, -2029.65, -97.48,   0.00, 0.00, 309.97);
CreateDynamicObject(2034, 1127.18, -2030.33, -97.45,   0.00, 0.00, 274.42);
CreateDynamicObject(2034, 1124.96, -2027.17, -96.89,   0.00, 0.00, 348.05);
CreateDynamicObject(2034, 1125.58, -2027.65, -96.89,   0.00, 0.00, 296.11);
CreateDynamicObject(2036, 1122.34, -2026.50, -97.46,   0.00, 0.00, 358.55);
CreateDynamicObject(2036, 1123.87, -2026.70, -97.71,   0.00, 0.00, 339.88);
CreateDynamicObject(2036, 1127.08, -2030.05, -96.36,   0.00, 0.00, 291.12);
CreateDynamicObject(2037, 1127.84, -2035.35, -98.51,   0.00, 0.00, 235.42);
CreateDynamicObject(2037, 1127.75, -2035.16, -98.49,   0.00, 0.00, 273.03);
CreateDynamicObject(2038, 1127.88, -2034.57, -97.63,   0.00, 0.00, 289.99);
CreateDynamicObject(2038, 1127.83, -2035.27, -98.02,   0.00, 0.00, 231.47);
CreateDynamicObject(2040, 1127.90, -2034.67, -98.47,   0.00, 0.00, 9.28);
CreateDynamicObject(2040, 1127.94, -2033.86, -98.05,   0.00, 0.00, 345.02);
CreateDynamicObject(2044, 1126.44, -2028.66, -97.72,   0.00, 0.00, 336.00);
CreateDynamicObject(2044, 1121.99, -2026.44, -96.35,   0.00, 0.00, 12.84);
CreateDynamicObject(2044, 1123.73, -2026.80, -96.58,   0.00, 0.00, 349.93);
CreateDynamicObject(2045, 1114.23, -2036.62, -96.39,   91.00, -37.00, 7.00);
CreateDynamicObject(2045, 1114.24, -2036.83, -96.35,   90.00, 0.00, 0.00);
CreateDynamicObject(2045, 1114.25, -2037.12, -96.37,   90.00, 0.00, 0.00);
CreateDynamicObject(2047, 1112.14, -2027.60, -95.18,   0.00, 0.00, 0.00);
CreateDynamicObject(2051, 1124.47, -2040.03, -95.54,   0.00, 0.00, 184.01);
CreateDynamicObject(2051, 1122.65, -2040.03, -95.56,   0.00, 0.00, 179.04);
CreateDynamicObject(2069, 1114.49, -2035.27, -98.59,   0.00, 0.00, 0.00);
CreateDynamicObject(2257, 1128.19, -2033.93, -94.51,   0.00, 0.00, 272.03);
CreateDynamicObject(2103, 1123.37, -2037.13, -97.43,   0.00, 0.00, 206.20);
CreateDynamicObject(1670, 1115.30, -2033.17, -97.58,   0.00, 0.00, 0.00);
CreateDynamicObject(2240, 1127.96, -2036.30, -98.07,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1111.72, -2028.03, -97.97,   0.00, 0.00, 271.53);
CreateDynamicObject(1498, 1114.10, -2041.08, -98.68,   0.00, 0.00, 0.00);
// Puerto Exterior (ZenonCity)
CreateDynamicObject(11469, 2947.10, -1471.20, 9.70,   0.00, 0.00, 171.24);
CreateDynamicObject(1536, 2941.80, -1479.30, 9.80,   0.00, 0.00, 313.25);
CreateDynamicObject(970, 2936.70, -1465.30, 10.40,   0.00, 0.00, 83.25);
CreateDynamicObject(970, 2936.20, -1469.40, 10.40,   0.00, 0.00, 82.74);
CreateDynamicObject(970, 2935.70, -1473.50, 10.40,   0.00, 0.00, 83.24);
CreateDynamicObject(970, 2935.20, -1477.60, 10.40,   0.00, 0.00, 82.99);
CreateDynamicObject(970, 2934.70, -1481.70, 10.40,   0.00, 0.00, 82.99);
CreateDynamicObject(970, 2934.20, -1485.80, 10.40,   0.00, 0.00, 82.99);
CreateDynamicObject(970, 2937.40, -1459.40, 10.40,   0.00, 0.00, 83.25);
CreateDynamicObject(970, 2938.10, -1453.50, 10.40,   0.00, 0.00, 83.25);
CreateDynamicObject(970, 2938.60, -1449.40, 10.40,   0.00, 0.00, 82.75);
CreateDynamicObject(970, 2938.90, -1445.30, 10.40,   0.00, 0.00, 88.99);
CreateDynamicObject(970, 2938.80, -1441.20, 10.40,   0.00, 0.00, 93.74);
CreateDynamicObject(970, 2938.50, -1437.10, 10.40,   0.00, 0.00, 94.74);
CreateDynamicObject(970, 2931.20, -1464.40, 10.40,   0.00, 0.00, 85.00);
CreateDynamicObject(970, 2932.00, -1452.70, 10.40,   0.00, 0.00, 85.50);
CreateDynamicObject(970, 2932.30, -1448.60, 10.40,   0.00, 0.00, 86.25);
CreateDynamicObject(970, 2930.90, -1468.50, 10.40,   0.00, 0.00, 86.75);
CreateDynamicObject(970, 2952.60, -1457.40, 10.40,   0.00, 0.00, 173.25);
CreateDynamicObject(970, 2948.50, -1456.90, 10.40,   0.00, 0.00, 173.00);
CreateDynamicObject(970, 2952.30, -1460.60, 10.40,   0.00, 0.00, 173.25);
CreateDynamicObject(970, 2948.20, -1460.10, 10.40,   0.00, 0.00, 172.99);
CreateDynamicObject(1215, 2937.90, -1455.70, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2937.90, -1455.70, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2937.70, -1457.23, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2937.70, -1457.23, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2937.20, -1461.60, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2937.20, -1461.60, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2937.00, -1463.20, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2937.00, -1463.20, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2931.90, -1454.90, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2931.90, -1454.90, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2932.50, -1446.50, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2932.50, -1446.50, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2931.40, -1462.20, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2931.40, -1462.20, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2930.80, -1470.70, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2930.80, -1470.70, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2946.30, -1456.70, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2946.30, -1456.70, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2946.00, -1459.80, 10.40,   0.00, 0.00, 284.00);
CreateDynamicObject(1215, 2946.00, -1459.80, 10.40,   0.00, 0.00, 284.00);
CreateDynamicObject(1215, 2959.70, -1458.40, 10.40,   0.00, 0.00, 284.00);
CreateDynamicObject(1215, 2959.70, -1458.40, 10.40,   0.00, 0.00, 284.00);
CreateDynamicObject(3498, 2939.30, -1481.80, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1608, 2941.30, -1480.90, 18.40,   346.08, 353.82, 115.26);
CreateDynamicObject(1215, 2938.30, -1435.00, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2938.30, -1435.00, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(11469, 2947.10, -1471.20, 9.70,   0.00, 0.00, 171.24);
CreateDynamicObject(1536, 2941.80, -1479.30, 9.80,   0.00, 0.00, 313.25);
CreateDynamicObject(1215, 2959.70, -1458.40, 10.40,   0.00, 0.00, 284.00);
CreateDynamicObject(1215, 2959.70, -1458.40, 10.40,   0.00, 0.00, 284.00);
CreateDynamicObject(3498, 2939.30, -1481.80, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1608, 2941.30, -1480.90, 18.40,   346.08, 353.82, 115.26);
CreateDynamicObject(11496, 2953.80, -1497.40, 1.32,   0.00, 0.00, 168.50);
CreateDynamicObject(11496, 2950.60, -1513.00, 1.32,   0.00, 0.00, 168.49);
CreateDynamicObject(11496, 2947.40, -1528.70, 1.32,   0.00, 0.00, 168.49);
CreateDynamicObject(11496, 2964.77, -1496.07, 1.32,   0.00, 0.00, 78.49);
CreateDynamicObject(11496, 2980.44, -1499.25, 1.32,   0.00, 0.00, 78.49);
CreateDynamicObject(11496, 2960.49, -1516.38, 1.32,   0.00, 0.00, 78.49);
CreateDynamicObject(11496, 2954.47, -1546.34, 1.32,   0.00, 0.00, 258.49);
CreateDynamicObject(11496, 2970.17, -1549.57, 1.32,   0.00, 0.00, 258.49);
CreateDynamicObject(11496, 2976.14, -1519.58, 1.32,   0.00, 0.00, 78.49);
CreateDynamicObject(11496, 2944.20, -1544.30, 1.32,   0.00, 0.00, 168.49);
CreateDynamicObject(11496, 2941.00, -1559.90, 1.32,   0.00, 0.00, 168.49);
CreateDynamicObject(11496, 2950.44, -1565.37, 1.32,   0.00, 0.00, 258.49);
CreateDynamicObject(11496, 2966.13, -1568.59, 1.32,   0.00, 0.00, 258.49);
CreateDynamicObject(11472, 2957.82, -1491.06, -1.52,   0.00, 0.00, 258.25);
CreateDynamicObject(11472, 2959.32, -1491.36, -1.52,   0.00, 0.00, 258.24);
CreateDynamicObject(11472, 2960.85, -1491.66, -1.52,   0.00, 0.00, 258.24);
CreateDynamicObject(11472, 2962.36, -1491.98, -1.52,   0.00, 0.00, 258.24);
CreateDynamicObject(646, 2942.56, -1481.36, 11.08,   0.00, 0.00, 270.00);
CreateDynamicObject(646, 2940.80, -1479.30, 11.10,   0.00, 0.00, 269.99);
CreateDynamicObject(640, 2942.96, -1463.12, 10.59,   0.00, 0.00, 170.50);
CreateDynamicObject(640, 2942.09, -1468.33, 10.59,   0.00, 0.00, 170.50);
CreateDynamicObject(640, 2941.19, -1473.55, 10.59,   0.00, 0.00, 170.50);
CreateDynamicObject(640, 2940.87, -1475.62, 10.59,   0.00, 0.00, 170.50);
CreateDynamicObject(3499, 2934.10, -1492.25, 9.60,   0.00, 270.00, 348.75);
CreateDynamicObject(3499, 2941.20, -1499.70, 9.60,   0.00, 270.00, 348.74);
CreateDynamicObject(3499, 2940.00, -1505.70, 9.60,   0.00, 270.00, 348.74);
CreateDynamicObject(3499, 2938.90, -1511.30, 9.60,   0.00, 270.00, 348.74);
CreateDynamicObject(3499, 2937.80, -1517.00, 9.60,   0.00, 270.00, 348.74);
CreateDynamicObject(3499, 2936.70, -1522.90, 9.60,   0.00, 270.00, 348.74);
CreateDynamicObject(3499, 2935.60, -1528.60, 9.60,   0.00, 270.00, 348.74);
CreateDynamicObject(8661, 2934.90, -1512.50, 10.10,   0.00, 0.00, 78.75);
CreateDynamicObject(3499, 2934.60, -1532.60, 9.60,   0.00, 270.00, 348.74);
CreateDynamicObject(3499, 2926.40, -1530.97, 9.60,   0.00, 270.00, 348.74);
CreateDynamicObject(3499, 2942.40, -1493.90, 9.60,   0.00, 270.00, 348.74);
CreateDynamicObject(970, 2945.70, -1494.40, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(970, 2941.70, -1493.60, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(970, 2933.70, -1492.00, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(970, 2930.84, -1491.43, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(970, 2937.90, -1533.30, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(970, 2933.90, -1532.50, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(970, 2929.90, -1531.70, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(970, 2925.90, -1530.90, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(970, 2923.20, -1530.37, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(970, 2933.70, -1489.90, 10.40,   0.00, 0.00, 82.99);
CreateDynamicObject(1215, 2935.80, -1492.40, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2935.80, -1492.40, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2939.50, -1493.20, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2939.50, -1493.20, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2928.70, -1491.00, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2928.70, -1491.00, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2921.00, -1530.00, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2921.00, -1530.00, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(640, 2945.10, -1493.80, 10.60,   0.00, 0.00, 258.50);
CreateDynamicObject(640, 2942.20, -1493.20, 10.60,   0.00, 0.00, 258.49);
CreateDynamicObject(970, 2945.90, -1493.50, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(970, 2941.90, -1492.70, 10.40,   0.00, 0.00, 168.73);
CreateDynamicObject(1215, 2939.70, -1492.30, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2939.70, -1492.30, 10.40,   0.00, 0.00, 0.00);
// Puerto Interior (ZenonCity)
CreateDynamicObject(16150, 984.70, -1941.40, 2834.00,   0.00, 0.00, 0.00);
CreateDynamicObject(10444, 977.90, -1924.40, 2835.10,   0.00, 0.00, 0.75);
CreateDynamicObject(1649, 982.60, -1937.90, 2835.40,   270.00, 180.00, 180.00);
CreateDynamicObject(1649, 985.30, -1937.40, 2833.80,   0.00, 0.00, 91.25);
CreateDynamicObject(1649, 983.10, -1939.60, 2833.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 985.30, -1937.40, 2833.80,   0.00, 0.00, 91.25);
CreateDynamicObject(1649, 983.10, -1939.60, 2833.80,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, 983.10, -1939.60, 2833.80,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 985.30, -1937.40, 2833.80,   0.00, 0.00, 271.25);
CreateDynamicObject(1649, 985.30, -1937.40, 2833.80,   0.00, 0.00, 271.24);
CreateDynamicObject(10444, 977.90, -1924.40, 2835.10,   0.00, 0.00, 0.75);
CreateDynamicObject(10444, 977.90, -1924.40, 2835.30,   359.25, 180.00, 180.75);
CreateDynamicObject(10444, 977.90, -1924.40, 2835.30,   359.25, 179.99, 180.74);
CreateDynamicObject(1649, 983.10, -1939.60, 2833.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 983.10, -1934.70, 2835.40,   270.00, 179.99, 179.99);
CreateDynamicObject(1649, 982.60, -1937.90, 2835.40,   270.00, 179.99, 179.99);
CreateDynamicObject(1649, 982.60, -1937.90, 2835.40,   90.00, 184.73, 175.27);
CreateDynamicObject(1649, 982.60, -1937.90, 2835.40,   90.00, 184.72, 175.27);
CreateDynamicObject(1649, 983.10, -1934.70, 2835.40,   270.00, 179.99, 179.99);
CreateDynamicObject(1649, 983.10, -1934.70, 2835.40,   90.00, 173.64, 186.36);
CreateDynamicObject(1649, 983.10, -1934.70, 2835.40,   90.00, 173.64, 186.35);
CreateDynamicObject(902, 982.30, -1937.00, 2834.00,   0.00, 0.00, 0.00);
CreateDynamicObject(953, 983.60, -1936.10, 2834.30,   0.00, 0.00, 0.00);
CreateDynamicObject(953, 984.70, -1936.10, 2834.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1461, 986.00, -1935.70, 2834.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1461, 986.60, -1935.70, 2834.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1461, 987.20, -1935.70, 2834.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1461, 987.80, -1935.70, 2834.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1599, 981.80, -1938.90, 2834.60,   0.00, 0.00, 334.00);
CreateDynamicObject(1599, 983.60, -1938.00, 2834.40,   0.00, 0.00, 250.00);
CreateDynamicObject(1600, 984.40, -1937.30, 2834.40,   0.00, 0.00, 110.00);
CreateDynamicObject(2782, 984.80, -1938.90, 2834.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2406, 981.00, -1944.00, 2835.30,   0.00, 0.00, 89.50);
CreateDynamicObject(2406, 981.00, -1940.10, 2835.30,   0.00, 0.00, 89.49);
CreateDynamicObject(2405, 981.00, -1943.40, 2835.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2405, 981.00, -1940.70, 2835.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2404, 981.10, -1942.80, 2835.30,   0.00, 0.00, 80.00);
CreateDynamicObject(2404, 981.10, -1941.30, 2835.30,   0.00, 0.00, 80.00);
CreateDynamicObject(2410, 981.00, -1942.10, 2835.30,   0.01, 88.00, 359.75);
CreateDynamicObject(1649, 983.20, -1950.50, 2834.30,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 985.30, -1952.70, 2834.30,   0.00, 0.00, 87.99);
CreateDynamicObject(1649, 985.30, -1952.70, 2834.30,   0.00, 0.00, 87.99);
CreateDynamicObject(1649, 983.20, -1950.50, 2834.30,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 983.20, -1950.50, 2834.30,   0.00, 0.00, 359.99);
CreateDynamicObject(1649, 983.20, -1950.50, 2834.30,   0.00, 0.00, 359.99);
CreateDynamicObject(1649, 985.30, -1952.70, 2834.30,   0.00, 0.00, 267.99);
CreateDynamicObject(1649, 985.30, -1952.70, 2834.30,   0.00, 0.00, 267.98);
CreateDynamicObject(10444, 977.90, -1965.60, 2835.80,   0.00, 0.00, 359.25);
CreateDynamicObject(10444, 977.90, -1965.60, 2835.80,   0.00, 180.00, 179.24);
CreateDynamicObject(10444, 977.90, -1965.60, 2835.80,   0.00, 179.99, 179.24);
CreateDynamicObject(1604, 983.20, -1938.80, 2834.60,   0.00, 0.00, 70.00);
CreateDynamicObject(1603, 985.00, -1936.40, 2835.20,   0.00, 0.00, 14.00);
CreateDynamicObject(1604, 983.90, -1937.10, 2834.70,   0.00, 0.00, 166.00);
CreateDynamicObject(1649, 982.60, -1952.70, 2835.90,   270.25, 360.00, 90.24);
CreateDynamicObject(1610, 981.60, -1954.00, 2834.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1610, 984.90, -1954.00, 2834.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1610, 981.90, -1951.00, 2834.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1610, 984.50, -1952.10, 2834.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1601, 984.40, -1953.20, 2835.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1602, 984.90, -1953.70, 2835.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1605, 983.30, -1953.50, 2835.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1606, 982.30, -1953.90, 2835.20,   0.00, 0.00, 0.00);
CreateDynamicObject(902, 982.60, -1953.60, 2834.60,   0.00, 0.00, 0.00);
CreateDynamicObject(14699, 987.10, -1942.00, 2835.30,   0.00, 0.00, 0.00);
CreateDynamicObject(14699, 987.20, -1946.00, 2835.30,   0.00, 0.00, 0.00);
CreateDynamicObject(14699, 987.10, -1950.60, 2835.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1885, 981.30, -1945.50, 2834.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1885, 981.50, -1948.20, 2834.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2433, 991.80, -1942.10, 2834.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2433, 989.90, -1942.10, 2834.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2484, 992.50, -1942.30, 2835.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2459, 988.00, -1954.10, 2834.60,   0.00, 0.00, 90.25);
CreateDynamicObject(3004, 987.10, -1954.60, 2835.90,   284.00, 0.00, 0.00);
CreateDynamicObject(2712, 993.00, -1940.40, 2834.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2712, 993.00, -1940.70, 2834.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2712, 993.00, -1941.00, 2834.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2712, 993.00, -1941.30, 2834.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2712, 993.00, -1941.60, 2834.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1514, 989.90, -1942.30, 2835.30,   0.00, 0.00, 0.00);
CreateDynamicObject(3004, 986.80, -1954.60, 2835.90,   284.00, 0.00, 0.00);
CreateDynamicObject(3004, 986.50, -1954.60, 2835.90,   284.00, 0.00, 0.00);
CreateDynamicObject(3004, 986.20, -1954.60, 2835.90,   284.00, 0.00, 0.00);
CreateDynamicObject(3004, 985.90, -1954.60, 2835.90,   284.00, 0.00, 0.00);
CreateDynamicObject(3004, 985.60, -1954.60, 2835.90,   284.00, 0.00, 0.00);
CreateDynamicObject(3004, 988.40, -1951.80, 2836.10,   274.00, 0.00, 100.00);
CreateDynamicObject(3004, 988.40, -1951.30, 2836.10,   273.99, 0.00, 100.00);
CreateDynamicObject(3004, 988.40, -1950.90, 2836.10,   273.99, 0.00, 100.00);
CreateDynamicObject(3004, 988.40, -1950.60, 2836.10,   273.99, 0.00, 100.00);
CreateDynamicObject(3004, 988.40, -1950.40, 2836.10,   273.99, 0.00, 100.00);
CreateDynamicObject(3004, 988.40, -1951.50, 2836.10,   273.99, 0.00, 100.00);
CreateDynamicObject(1643, 987.80, -1953.40, 2836.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1642, 987.90, -1953.40, 2835.20,   0.00, 0.00, 2.25);
CreateDynamicObject(1643, 987.90, -1953.50, 2835.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1641, 987.90, -1953.30, 2835.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1640, 987.80, -1953.20, 2835.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2894, 990.80, -1942.40, 2835.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2118, 983.90, -1943.80, 2834.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1892, 981.10, -1946.40, 2834.00,   0.00, 0.00, 270.00);
CreateDynamicObject(1703, 990.90, -1947.50, 2834.00,   0.00, 0.00, 180.00);
CreateDynamicObject(1704, 992.80, -1947.50, 2834.00,   0.00, 0.00, 180.00);
CreateDynamicObject(1504, 980.80, -1947.70, 2834.00,   0.00, 0.00, 90.00);
CreateDynamicObject(2954, 988.40, -1937.20, 2834.00,   0.00, 0.00, 180.00);
CreateDynamicObject(2954, 988.40, -1938.30, 2834.00,   0.00, 0.00, 179.99);
CreateDynamicObject(2954, 993.40, -1945.80, 2834.00,   0.00, 0.00, 180.49);
CreateDynamicObject(14705, 983.90, -1943.80, 2835.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2852, 983.90, -1943.10, 2834.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2700, 988.90, -1945.50, 2836.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2700, 985.60, -1935.90, 2836.30,   0.00, 0.00, 270.00);
// Lavanderia Objetos Johan Luis
CreateDynamicObject(4100, 2019.41, -1277.49, 24.70,   0.00, 0.00, 50.27);
CreateDynamicObject(4100, 1969.70, -1277.20, 24.70,   0.00, 0.00, 50.00);
CreateDynamicObject(983, 1980.60, -1271.90, 23.70,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1986.70, -1271.90, 23.70,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1993.00, -1271.90, 23.70,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1999.50, -1271.90, 23.70,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 2005.80, -1271.90, 23.70,   0.00, 0.00, 90.00);
// Restaurant LS - El Paisaje by Enzo Falcone
CreateDynamicObject(18009, 1011.10, -1361.10, 16.80,   0.00, 0.00, 179.99);
CreateDynamicObject(1419, 1001.30, -1351.70, 14.50,   0.00, 0.00, 180.00);
CreateDynamicObject(1419, 999.40, -1353.60, 14.50,   0.00, 0.00, 270.00);
CreateDynamicObject(1419, 999.40, -1357.70, 14.50,   0.00, 0.00, 269.99);
CreateDynamicObject(7191, 999.10, -1354.70, 14.30,   0.00, 0.00, 180.00);
CreateDynamicObject(3095, 1017.60, -1359.30, 17.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 1011.20, -1355.60, 17.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 1009.00, -1362.10, 17.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3095, 1017.60, -1355.70, 17.60,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 1022.80, -1364.50, 14.50,   0.00, 0.00, 179.99);
CreateDynamicObject(7191, 1022.80, -1364.50, 17.00,   0.00, 0.00, 179.99);
CreateDynamicObject(974, 1004.00, -1363.00, 14.00,   0.00, 0.00, 90.00);
CreateDynamicObject(974, 1004.00, -1369.60, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(991, 1002.90, -1359.70, 14.50,   0.00, 90.00, 0.00);
CreateDynamicObject(991, 1000.50, -1359.70, 14.50,   0.00, 90.00, 0.00);
CreateDynamicObject(1419, 1003.30, -1353.80, 14.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2010, 1003.70, -1352.60, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1003.70, -1353.60, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1003.70, -1354.60, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1281, 1001.80, -1349.20, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1281, 1015.00, -1349.10, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1281, 1009.90, -1349.10, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1825, 1001.00, -1357.40, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1825, 1001.50, -1353.90, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1015.90, -1351.50, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1013.30, -1351.50, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2802, 1020.20, -1352.70, 14.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1825, 1012.60, -1356.80, 14.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1825, 1016.30, -1356.70, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1825, 1012.80, -1359.70, 13.60,   0.00, 0.00, 50.00);
CreateDynamicObject(1825, 1015.90, -1359.80, 13.60,   0.00, 0.00, 100.00);
CreateDynamicObject(2799, 1005.90, -1362.30, 14.10,   0.00, 0.00, 30.00);
CreateDynamicObject(3921, 1014.60, -1352.10, 14.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1704, 1006.10, -1359.20, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1704, 1005.60, -1360.80, 13.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3802, 1005.50, -1357.50, 17.10,   0.00, 0.00, 90.00);
CreateDynamicObject(3806, 1002.60, -1359.30, 14.80,   0.00, 0.00, 90.00);
CreateDynamicObject(14651, 1021.30, -1361.90, 15.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2441, 1008.10, -1354.50, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2442, 1010.10, -1354.50, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2441, 1009.10, -1354.50, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1514, 1009.30, -1354.60, 15.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1811, 1008.70, -1352.60, 14.60,   0.00, 0.00, 90.00);
CreateDynamicObject(2448, 1021.80, -1355.40, 14.00,   0.00, 0.00, 270.00);
CreateDynamicObject(1825, 1018.70, -1367.90, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1825, 1013.20, -1368.00, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1825, 1007.30, -1368.10, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1021.60, -1366.40, 14.30,   0.00, 0.00, 0.00);
CreateDynamicObject(639, 1022.50, -1368.40, 17.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3920, 1015.50, -1370.90, 16.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3920, 1010.40, -1370.90, 16.30,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1004.60, -1366.30, 14.30,   0.00, 0.00, 180.00);
CreateDynamicObject(3660, 1012.70, -1369.90, 16.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1006.80, -1365.90, 19.80,   330.00, 0.00, 0.00);
CreateDynamicObject(1649, 1011.10, -1365.90, 19.80,   330.00, 0.00, 0.00);
CreateDynamicObject(1664, 1008.10, -1354.60, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1551, 1007.90, -1354.60, 15.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1668, 1008.30, -1354.60, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1669, 1008.40, -1354.60, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1951, 1008.60, -1354.60, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2800, 1019.90, -1352.90, 14.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1720, 1011.60, -1363.60, 13.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1720, 1017.80, -1363.50, 13.60,   0.00, 0.00, 180.00);
CreateDynamicObject(1808, 1010.50, -1358.30, 13.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1281, 1002.30, -1343.00, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1021.00, -1348.20, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1021.10, -1344.80, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2802, 1009.00, -1362.90, 13.90,   0.00, 0.00, 90.00);
CreateDynamicObject(1280, 1020.00, -1340.90, 13.00,   0.00, 0.00, 0.00);
// Centro de Conferencias by Enzo Falcone
CreateDynamicObject(3850, 1303.20, -1862.20, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(3850, 1299.80, -1862.20, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(3850, 1289.20, -1862.10, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(3850, 1292.60, -1862.10, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1303.50, -1865.50, 14.50,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1289.00, -1865.50, 14.50,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1293.10, -1876.90, 14.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1304.40, -1876.90, 14.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1289.30, -1871.17, 20.50,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1293.10, -1871.17, 20.50,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1297.00, -1871.20, 20.50,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1300.90, -1871.17, 20.50,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1304.80, -1871.17, 20.50,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1303.50, -1865.50, 18.50,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1292.50, -1865.50, 18.50,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1293.10, -1876.90, 18.50,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1304.40, -1876.90, 18.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1566, 1294.60, -1865.50, 14.10,   0.00, 0.00, 120.00);
CreateDynamicObject(1566, 1297.80, -1865.50, 14.10,   0.00, 0.00, 50.00);
CreateDynamicObject(2121, 1290.30, -1868.40, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1291.10, -1868.40, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1291.90, -1868.40, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1292.70, -1868.40, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1293.50, -1868.40, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1294.30, -1868.40, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1294.30, -1870.00, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1293.50, -1870.00, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1292.70, -1870.00, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1291.90, -1870.00, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1291.10, -1870.00, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1290.30, -1870.00, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1298.00, -1868.50, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1298.80, -1868.50, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1299.60, -1868.50, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1300.40, -1868.50, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1301.20, -1868.50, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1302.00, -1868.50, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1298.00, -1869.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1298.80, -1869.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1299.60, -1869.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1300.40, -1869.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1301.20, -1869.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2121, 1302.00, -1869.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 1301.90, -1876.50, 13.70,   270.00, 0.00, 90.00);
CreateDynamicObject(2424, 1298.50, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1301.20, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1300.30, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1299.40, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1302.10, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1297.60, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1296.70, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1295.80, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1294.90, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1294.00, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1293.10, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1292.20, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1291.30, -1872.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2424, 1302.20, -1873.80, 12.60,   0.00, 0.00, 270.00);
CreateDynamicObject(2424, 1302.20, -1874.70, 12.60,   0.00, 0.00, 270.00);
CreateDynamicObject(2424, 1302.20, -1875.50, 12.60,   0.00, 0.00, 269.99);
CreateDynamicObject(2424, 1302.20, -1876.40, 12.60,   0.00, 0.00, 269.99);
CreateDynamicObject(2424, 1291.20, -1873.70, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(2424, 1291.20, -1874.60, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(2424, 1291.20, -1875.50, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(2424, 1291.20, -1876.40, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(2395, 1299.20, -1876.50, 13.70,   269.99, 0.00, 90.00);
CreateDynamicObject(2395, 1296.50, -1876.50, 13.70,   269.99, 0.00, 90.00);
CreateDynamicObject(2395, 1294.00, -1876.50, 13.70,   269.99, 0.00, 90.00);
CreateDynamicObject(2491, 1296.40, -1873.40, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1671, 1301.40, -1876.40, 14.10,   0.00, 0.00, 180.00);
CreateDynamicObject(1671, 1300.00, -1876.40, 14.10,   0.00, 0.00, 179.99);
CreateDynamicObject(1671, 1298.50, -1876.40, 14.10,   0.00, 0.00, 180.00);
CreateDynamicObject(1671, 1294.20, -1876.40, 14.10,   0.00, 0.00, 179.99);
CreateDynamicObject(1671, 1292.90, -1876.40, 14.10,   0.00, 0.00, 179.99);
CreateDynamicObject(1671, 1291.60, -1876.40, 14.10,   0.00, 0.00, 179.99);
CreateDynamicObject(2310, 1288.00, -1873.90, 13.00,   0.00, 0.00, 180.00);
CreateDynamicObject(2773, 1298.10, -1863.60, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1294.30, -1863.40, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2921, 1305.00, -1874.80, 18.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1298.20, -1861.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1294.20, -1861.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1287.80, -1865.10, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1304.40, -1865.00, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2195, 1294.30, -1865.90, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2195, 1298.10, -1865.80, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2811, 1304.50, -1866.10, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2253, 1291.10, -1872.90, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2253, 1302.10, -1872.90, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2811, 1287.90, -1866.10, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2614, 1296.10, -1865.60, 17.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2894, 1296.20, -1873.70, 14.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1417, 1300.90, -1865.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1416, 1287.80, -1870.90, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(3802, 1287.50, -1873.10, 18.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3802, 1287.50, -1869.50, 18.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1721, 1304.70, -1868.10, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1721, 1304.70, -1868.90, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1721, 1304.70, -1869.70, 12.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1721, 1304.70, -1873.60, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1721, 1304.70, -1874.40, 12.60,   0.00, 0.00, 90.00);
// -================ Unity Gasolinera & Bar (By Manuel) ===============- //
CreateDynamicObject(7971, 1760.02, -1758.75, 17.38,   0.00, 0.00, 180.02);
CreateDynamicObject(1676, 1764.87, -1764.08, 14.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1676, 1767.77, -1764.07, 14.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1676, 1767.72, -1753.27, 14.34,   0.00, 0.00, 0.00);
CreateDynamicObject(1676, 1765.10, -1753.26, 14.34,   0.00, 0.00, 0.00);
CreateDynamicObject(13681, 1792.78, -1787.43, 17.18,   0.00, 0.00, 90.46);
CreateDynamicObject(717, 1758.36, -1809.16, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1769.44, -1809.20, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1780.18, -1809.47, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1790.56, -1809.65, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1801.17, -1809.99, 12.61,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1791.49, -1742.27, 13.25,   0.00, 0.00, 270.06);
CreateDynamicObject(984, 1804.28, -1742.28, 13.25,   0.00, 0.00, 270.06);
CreateDynamicObject(984, 1805.28, -1742.29, 13.25,   0.00, 0.00, 270.06);
CreateDynamicObject(1344, 1737.84, -1781.61, 13.30,   0.00, 0.00, 91.43);
CreateDynamicObject(1344, 1737.85, -1774.06, 13.30,   0.00, 0.00, 91.43);
CreateDynamicObject(1415, 1737.68, -1766.81, 12.68,   0.00, 0.00, 88.72);
CreateDynamicObject(984, 1805.22, -1772.77, 13.25,   0.00, 0.00, 269.51);
CreateDynamicObject(984, 1811.61, -1766.45, 13.25,   0.00, 0.00, 180.13);
CreateDynamicObject(13132, 1923.12, -1772.79, 15.78,   0.00, 0.00, 270.17);
CreateDynamicObject(1500, 1920.51, -1767.32, 12.65,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1913.92, -1766.52, 11.67,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1939.32, -1762.51, 11.67,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1941.80, -1762.51, 11.67,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1951.37, -1787.26, 11.67,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1931.70, -1795.35, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1927.68, -1795.26, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1924.28, -1795.24, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1920.92, -1795.26, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1917.22, -1795.30, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1913.80, -1795.28, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1933.66, -1767.36, 12.38,   0.00, 0.00, 90.29);
CreateDynamicObject(1251, 1933.71, -1771.07, 12.38,   0.00, 0.00, 90.29);
CreateDynamicObject(1251, 1933.75, -1774.95, 12.38,   0.00, 0.00, 90.29);
CreateDynamicObject(1251, 1933.75, -1778.77, 12.38,   0.00, 0.00, 90.29);
CreateDynamicObject(1251, 1933.68, -1782.39, 12.38,   0.00, 0.00, 90.29);
CreateDynamicObject(1290, 1922.23, -1786.92, 18.41,   0.00, 0.00, 0.00);
CreateDynamicObject(1290, 1931.08, -1774.92, 18.41,   0.00, 0.00, 89.55);
CreateDynamicObject(1215, 1908.64, -1766.52, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1914.54, -1766.52, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1936.43, -1762.48, 12.96,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1946.82, -1762.55, 12.96,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1951.48, -1782.13, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1951.33, -1792.50, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1344, 1901.49, -1785.24, 13.35,   0.00, 0.00, 89.91);
CreateDynamicObject(1344, 1901.50, -1782.87, 13.35,   0.00, 0.00, 89.91);
CreateDynamicObject(1439, 1901.45, -1780.75, 12.59,   0.00, 0.00, 89.75);
CreateDynamicObject(638, 1951.32, -1775.41, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1951.30, -1772.75, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1951.29, -1770.07, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1951.28, -1767.39, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1952.02, -1767.41, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1952.04, -1770.08, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1952.03, -1772.75, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1952.05, -1775.41, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1951.26, -1764.71, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1952.02, -1764.73, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1952.64, -1770.75, 13.18,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1950.59, -1770.61, 13.18,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1950.61, -1764.22, 13.23,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1952.65, -1764.33, 13.23,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1950.96, -1777.19, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1952.31, -1777.20, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1951.60, -1777.97, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1952.39, -1761.13, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1950.56, -1761.10, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1951.59, -1760.66, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1951.54, -1762.75, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1931.43, -1779.62, 13.18,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1928.26, -1786.14, 13.23,   0.00, 0.00, 270.00);
CreateDynamicObject(1216, 1928.60, -1770.36, 13.24,   0.00, 0.00, 92.00);
CreateDynamicObject(1231, 1930.81, -1763.07, 15.27,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1931.64, -1765.58, 13.23,   0.00, 0.00, 180.00);
CreateDynamicObject(983, 1928.42, -1762.36, 13.22,   0.00, 0.00, 270.00);
CreateDynamicObject(983, 1918.80, -1765.54, 13.23,   0.00, 0.00, 179.99);
CreateDynamicObject(1215, 1931.22, -1773.35, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1931.36, -1768.64, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1919.00, -1762.68, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1286, 1919.12, -1765.61, 13.13,   0.00, 0.00, 272.00);
CreateDynamicObject(1286, 1919.11, -1765.08, 13.13,   0.00, 0.00, 272.00);
CreateDynamicObject(1286, 1919.10, -1764.54, 13.13,   0.00, 0.00, 272.00);
CreateDynamicObject(1288, 1919.18, -1763.91, 13.13,   0.00, 0.00, 270.00);
CreateDynamicObject(3657, 1924.20, -1765.67, 13.07,   0.00, 0.00, 180.00);
CreateDynamicObject(1215, 1926.29, -1765.98, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(17969, 1908.02, -1776.29, 14.37,   0.00, 0.00, 0.00);
CreateDynamicObject(646, 1921.84, -1765.75, 13.96,   0.00, 0.00, 0.00);
// Mercado Negro by Alejandro Venedetto
CreateDynamicObject(1499, 1286.40, -1006.12, 29.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1499, 1289.38, -1006.09, 29.80,   0.00, 0.00, -181.00);
CreateDynamicObject(19457, 1281.56, -1006.14, 31.06,   0.00, 0.00, 91.00);
CreateDynamicObject(19457, 1294.16, -1005.99, 31.24,   0.00, 0.00, 91.00);
CreateDynamicObject(19457, 1290.10, -1005.97, 34.04,   0.00, 0.00, 91.00);
CreateDynamicObject(2762, 1296.10, -983.68, 32.07,   0.00, 0.00, -91.00);
CreateDynamicObject(2762, 1296.06, -985.75, 32.07,   0.00, 0.00, -91.00);
CreateDynamicObject(3524, 1296.92, -979.23, 33.59,   0.00, 0.00, -55.00);
CreateDynamicObject(3524, 1296.59, -991.86, 33.59,   0.00, 0.00, -127.00);
CreateDynamicObject(335, 1296.17, -985.82, 32.54,   -91.00, 0.00, 0.00);
CreateDynamicObject(335, 1296.29, -985.33, 32.54,   -91.00, 0.00, 0.00);
CreateDynamicObject(335, 1295.98, -985.43, 32.54,   -91.00, 0.00, -84.00);
CreateDynamicObject(335, 1296.05, -984.85, 32.54,   -91.00, 0.00, -185.00);
CreateDynamicObject(1310, 1296.08, -983.69, 32.57,   -91.00, 0.00, 11.00);
CreateDynamicObject(1310, 1296.14, -984.18, 32.57,   -91.00, 0.00, -120.00);
CreateDynamicObject(1574, 1295.92, -978.38, 31.67,   0.00, 0.00, 0.00);
CreateDynamicObject(1574, 1293.36, -978.41, 31.67,   0.00, 0.00, 0.00);
CreateDynamicObject(1574, 1298.00, -981.07, 31.67,   0.00, 0.00, 0.00);
CreateDynamicObject(926, 1297.42, -990.69, 31.93,   0.00, 0.00, 0.00);
CreateDynamicObject(926, 1297.56, -988.96, 31.93,   0.00, 0.00, 0.00);
CreateDynamicObject(926, 1294.66, -991.21, 31.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1220, 1297.34, -991.55, 32.01,   0.00, 0.00, 0.00);
CreateDynamicObject(1220, 1297.59, -987.82, 32.01,   0.00, 0.00, 0.00);
CreateDynamicObject(1220, 1294.31, -989.05, 32.01,   0.00, 0.00, 0.00);
CreateDynamicObject(1220, 1291.55, -978.81, 32.01,   0.00, 0.00, 0.00);
CreateDynamicObject(1220, 1294.20, -979.37, 32.01,   0.00, 0.00, 0.00);
CreateDynamicObject(1220, 1296.73, -980.67, 32.01,   0.00, 0.00, 0.00);
CreateDynamicObject(926, 1296.02, -989.62, 31.93,   0.00, 0.00, 0.00);
CreateDynamicObject(1442, 1295.14, -980.40, 32.25,   0.00, 0.00, 0.00);
CreateDynamicObject(1442, 1292.52, -980.16, 32.25,   0.00, 0.00, 0.00);
CreateDynamicObject(1442, 1297.15, -989.76, 32.25,   0.00, 0.00, 0.00);
CreateDynamicObject(1442, 1293.71, -991.91, 32.25,   0.00, 0.00, 0.00);
CreateDynamicObject(1442, 1291.77, -994.42, 32.25,   0.00, 0.00, 0.00);
CreateDynamicObject(1499, 1286.35, -978.02, 31.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1499, 1289.35, -977.96, 31.70,   0.00, 0.00, -178.00);
CreateDynamicObject(19457, 1281.51, -978.46, 33.26,   0.00, 0.00, -84.00);
CreateDynamicObject(19457, 1286.97, -977.92, 35.92,   0.00, 0.00, -88.00);
// -============== Construccion Hospital (By Manuel) =================- //
CreateDynamicObject(5737, 1269.51, -1244.61, 18.39,   0.00, 0.00, 359.93);
CreateDynamicObject(13681, 1241.61, -1250.94, 17.14,   0.00, 0.00, 0.66);
CreateDynamicObject(7191, 1226.19, -1248.75, 13.04,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1273.58, -1270.16, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(10395, 1272.96, -1226.12, 12.47,   -0.06, 0.00, 270.59);
CreateDynamicObject(1215, 1282.79, -1270.12, 13.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1264.00, -1270.33, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1254.48, -1270.50, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1245.17, -1270.50, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1235.84, -1270.59, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1226.54, -1270.73, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1226.95, -1260.42, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1231.59, -1260.40, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1273.29, -1268.52, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1244.94, -1265.05, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 1257.54, -1268.37, 12.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, 1261.57, -1256.24, 12.51,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, 1264.56, -1256.26, 12.51,   0.00, 0.00, -181.00);
CreateDynamicObject(3578, 1277.96, -1270.12, 11.80,   0.00, 0.00, 0.20);
CreateDynamicObject(3578, 1267.76, -1270.26, 11.80,   0.00, 0.00, 1.21);
CreateDynamicObject(3578, 1247.50, -1270.60, 11.80,   0.00, 0.00, 0.70);
CreateDynamicObject(3578, 1231.31, -1270.74, 11.80,   0.00, 0.00, 0.31);
CreateDynamicObject(3578, 1257.55, -1270.46, 11.80,   0.00, 0.00, 1.32);
CreateDynamicObject(3578, 1237.33, -1270.70, 11.80,   0.00, 0.00, 0.38);
// -=============== Hitman Interior (By Manuel) ===================- //
CreateDynamicObject(14577, 1459.30, 2856.10, 16.80,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(11314, 1481.30, 2875.70, 14.10,   0.00, 0.00, 87.99,-1,1);
CreateDynamicObject(10558, 1468.00, 2871.80, 11.80,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(10558, 1467.90, 2839.40, 11.80,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(3051, 1514.19, 2854.00, 13.30,   0.00, 0.00, 48.00,-1,1);
CreateDynamicObject(11314, 1486.30, 2875.60, 14.10,   0.00, 0.00, 87.99,-1,1);
CreateDynamicObject(11314, 1491.90, 2875.60, 14.10,   0.00, 0.00, 87.99,-1,1);
CreateDynamicObject(14493, 1494.70, 2861.10, 12.20,   0.00, 0.00, 0.91,-1,1);
CreateDynamicObject(2295, 1492.00, 2860.40, 9.90,   0.00, 0.00, 66.00,-1,1);
CreateDynamicObject(1815, 1493.30, 2858.20, 9.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1742, 1496.60, 2860.90, 9.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(16151, 1495.20, 2849.00, 10.10,   0.00, 0.00, 270.00,-1,1);
CreateDynamicObject(1670, 1493.90, 2858.70, 10.40,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1998, 1502.00, 2860.40, 9.90,   0.00, 0.00, 272.00,-1,1);
CreateDynamicObject(2008, 1503.04, 2858.50, 9.90,   0.00, 0.00, 271.15,-1,1);
CreateDynamicObject(1715, 1501.79, 2859.62, 9.90,   0.00, 0.00, 90.96,-1,1);
CreateDynamicObject(1715, 1501.84, 2857.72, 9.90,   0.00, 0.00, 86.00,-1,1);
CreateDynamicObject(1723, 1502.20, 2848.50, 9.90,   0.00, 0.00, 180.00,-1,1);
CreateDynamicObject(1724, 1503.00, 2850.83, 9.90,   0.00, 0.00, 269.93,-1,1);
CreateDynamicObject(1827, 1501.00, 2850.20, 9.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1670, 1501.10, 2849.90, 10.40,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1998, 1480.38, 2840.20, 9.90,   0.00, 0.00, 89.66,-1,1);
CreateDynamicObject(7191, 1478.70, 2840.20, 11.80,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(7191, 1478.70, 2840.20, 13.30,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(7191, 1478.80, 2859.40, 11.80,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(7191, 1478.80, 2859.40, 13.30,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2008, 1479.41, 2842.17, 9.90,   0.00, 0.00, 89.51,-1,1);
CreateDynamicObject(1998, 1479.39, 2844.16, 9.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1715, 1480.88, 2840.97, 9.90,   0.00, 0.00, 260.00,-1,1);
CreateDynamicObject(1715, 1480.54, 2843.02, 9.90,   0.00, 0.00, 260.00,-1,1);
CreateDynamicObject(1715, 1481.16, 2843.87, 9.90,   0.00, 0.00, 206.00,-1,1);
CreateDynamicObject(2609, 1481.10, 2840.20, 10.60,   0.00, 0.00, 179.89,-1,1);
CreateDynamicObject(16155, 1479.23, 2844.67, 11.63,   0.00, 0.00, 13.72,-1,1);
CreateDynamicObject(3397, 1479.20, 2831.20, 9.90,   0.00, 0.00, 180.00,-1,1);
CreateDynamicObject(3396, 1479.20, 2833.70, 9.90,   0.00, 0.00, 180.00,-1,1);
CreateDynamicObject(1715, 1480.77, 2830.95, 9.90,   0.00, 0.00, 260.00,-1,1);
CreateDynamicObject(1715, 1480.82, 2833.57, 9.90,   0.00, 0.00, 260.00,-1,1);
CreateDynamicObject(16782, 1484.00, 2834.90, 11.40,   0.00, 0.00, 270.00,-1,1);
CreateDynamicObject(2611, 1483.70, 2845.70, 12.80,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2612, 1479.10, 2843.00, 12.10,   0.00, 0.00, 88.00,-1,1);
CreateDynamicObject(11631, 1484.45, 2840.63, 11.10,   0.00, 0.00, 180.00,-1,1);
CreateDynamicObject(1715, 1484.40, 2841.86, 9.90,   0.00, 0.00, 332.00,-1,1);
CreateDynamicObject(3383, 1480.10, 2873.60, 9.90,   0.00, 0.00, 267.99,-1,1);
CreateDynamicObject(941, 1495.20, 2876.00, 10.40,   0.00, 0.00, 270.00,-1,1);
CreateDynamicObject(941, 1495.20, 2873.80, 10.40,   0.00, 0.00, 270.00,-1,1);
CreateDynamicObject(1242, 1495.40, 2876.40, 11.10,   352.02, 4.04, 268.56,-1,1);
CreateDynamicObject(1242, 1495.40, 2875.90, 11.10,   352.02, 4.04, 268.56,-1,1);
CreateDynamicObject(1242, 1495.40, 2875.40, 11.10,   352.02, 4.04, 268.56,-1,1);
CreateDynamicObject(1242, 1495.40, 2874.90, 11.10,   352.02, 4.04, 268.56,-1,1);
CreateDynamicObject(1210, 1495.50, 2874.40, 11.00,   86.00, 0.00, 110.00,-1,1);
CreateDynamicObject(2059, 1495.20, 2873.10, 10.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2058, 1495.10, 2873.70, 10.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2037, 1495.00, 2876.40, 10.90,   0.00, 0.00, 322.00,-1,1);
CreateDynamicObject(2037, 1495.00, 2876.10, 10.90,   0.00, 0.00, 272.00,-1,1);
CreateDynamicObject(2036, 1495.00, 2875.40, 10.90,   0.00, 0.00, 248.00,-1,1);
CreateDynamicObject(1650, 1495.30, 2876.20, 10.20,   0.00, 0.00, 270.00,-1,1);
CreateDynamicObject(1650, 1495.30, 2875.90, 10.20,   0.00, 0.00, 269.99,-1,1);
CreateDynamicObject(1650, 1495.30, 2875.60, 10.20,   0.00, 0.00, 269.99,-1,1);
CreateDynamicObject(1550, 1495.50, 2877.10, 10.30,   0.00, 0.00, 168.00,-1,1);
CreateDynamicObject(14600, 1479.62, 2866.19, 11.30,   0.00, 0.00, 176.45,-1,1);
CreateDynamicObject(2372, 1483.70, 2862.80, 9.90,   0.00, 0.00, 272.00,-1,1);
CreateDynamicObject(2372, 1481.20, 2862.70, 9.90,   0.00, 0.00, 272.00,-1,1);
CreateDynamicObject(2381, 1484.20, 2863.10, 10.60,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2394, 1481.80, 2863.00, 10.60,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2371, 1480.80, 2864.60, 9.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2392, 1480.50, 2864.90, 10.60,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2392, 1480.50, 2865.60, 10.60,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1502, 1486.90, 2862.10, 9.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1502, 1486.90, 2847.40, 9.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1502, 1495.50, 2837.10, 9.90,   0.00, 0.00, 90.00,-1,1);
CreateDynamicObject(1502, 1503.70, 2853.20, 9.90,   0.00, 0.00, 90.00,-1,1);
CreateDynamicObject(2192, 1480.30, 2873.70, 11.00,   0.00, 0.00, 302.00,-1,1);
CreateDynamicObject(2190, 1480.22, 2873.88, 11.00,   0.00, 0.00, 90.00,-1,1);
CreateDynamicObject(2186, 1482.34, 2878.60, 9.90,   0.00, 0.00, -4.00,-1,1);
CreateDynamicObject(2953, 1480.60, 2873.20, 11.00,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1964, 1480.30, 2872.10, 11.10,   0.00, 0.00, 266.00,-1,1);
CreateDynamicObject(3391, 1480.10, 2876.50, 10.10,   0.00, 0.00, 178.00,-1,1);
CreateDynamicObject(3383, 1480.20, 2876.30, 9.90,   0.00, 0.00, 268.00-1,1);
CreateDynamicObject(1714, 1481.84, 2874.14, 9.90,   0.00, 0.00, 292.00,-1,1);
CreateDynamicObject(1714, 1481.99, 2875.95, 9.90,   0.00, 0.00, 245.99,-1,1);
CreateDynamicObject(1215, 1511.71, 2855.96, 11.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(3051, 1514.19, 2853.50, 13.30,   0.00, 0.00, 48.00,-1,1);
CreateDynamicObject(1500, 1514.14, 2852.92, 11.88,   0.00, 0.00, 90.18,-1,1);
CreateDynamicObject(1215, 1511.72, 2852.20, 11.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1417, 1495.35, 2871.62, 10.10,   0.00, 0.00, 270.56,-1,1);
// Interior Electronicos by Bastian
CreateDynamicObject(18025, 1397.55, -1464.58, 3517.79,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1395.72, -1471.50, 3516.62,   0.00, 0.00, 90.03);
CreateDynamicObject(914, 1386.89, -1464.13, 3519.54,   0.00, 0.00, 90.12);
CreateDynamicObject(1557, 1397.15, -1472.17, 3515.91,   0.00, 0.00, 0.00);
CreateDynamicObject(2099, 1387.22, -1462.82, 3515.91,   0.00, 0.00, 49.24);
CreateDynamicObject(2099, 1387.25, -1465.10, 3515.91,   0.00, 0.00, 128.81);
CreateDynamicObject(2257, 1407.60, -1469.04, 3517.63,   0.00, 0.00, 270.08);
CreateDynamicObject(19173, 1403.66, -1457.45, 3517.71,   0.00, 0.00, 0.00);
CreateDynamicObject(1814, 1408.37, -1466.02, 3515.91,   0.00, 0.00, 91.33);
CreateDynamicObject(1814, 1408.33, -1463.48, 3515.91,   0.00, 0.00, 89.97);
CreateDynamicObject(1718, 1407.81, -1464.98, 3516.09,   0.00, 0.00, 269.87);
CreateDynamicObject(1718, 1407.75, -1466.03, 3516.12,   0.00, 0.00, 269.05);
CreateDynamicObject(1719, 1407.82, -1462.45, 3516.08,   0.00, 0.00, 0.00);
CreateDynamicObject(1719, 1407.75, -1463.55, 3516.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1782, 1407.84, -1465.06, 3516.51,   0.00, 0.00, 108.86);
CreateDynamicObject(1782, 1407.88, -1466.00, 3516.51,   0.00, 0.00, 41.13);
CreateDynamicObject(1809, 1407.79, -1462.51, 3516.42,   0.00, 0.00, 269.75);
CreateDynamicObject(1809, 1407.83, -1463.35, 3516.42,   0.00, 0.00, 269.57);
CreateDynamicObject(2366, 1392.95, -1466.59, 3515.27,   0.00, 0.00, 0.00);
CreateDynamicObject(2366, 1401.11, -1466.69, 3515.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1892, 1397.48, -1471.43, 3515.71,   0.00, 0.00, 0.00);
CreateDynamicObject(2226, 1401.10, -1466.44, 3516.53,   0.00, 0.00, 302.44);
CreateDynamicObject(2226, 1401.53, -1466.23, 3516.53,   0.00, 0.00, 116.76);
CreateDynamicObject(1788, 1393.30, -1466.25, 3516.56,   0.00, 0.00, 214.25);
CreateDynamicObject(2209, 1387.23, -1468.04, 3515.91,   0.00, 0.00, 89.13);
CreateDynamicObject(1957, 1387.23, -1467.11, 3516.81,   0.00, 0.00, 250.47);
CreateDynamicObject(2229, 1387.61, -1468.50, 3515.91,   0.00, 0.00, 114.10);
CreateDynamicObject(2229, 1388.05, -1465.76, 3515.91,   0.00, 0.00, 55.84);
CreateDynamicObject(1958, 1387.13, -1468.00, 3516.72,   0.00, 0.00, 302.44);
CreateDynamicObject(2606, 1396.62, -1457.71, 3518.19,   0.00, 0.00, 0.00);
CreateDynamicObject(2698, 1397.05, -1466.53, 3516.07,   0.00, 0.00, 0.00);
CreateDynamicObject(18070, 1406.77, -1459.45, 3516.41,   0.00, 0.00, 0.00);
CreateDynamicObject(1514, 1406.47, -1461.21, 3517.12,   0.00, 0.00, 0.00);
CreateDynamicObject(1702, 1399.04, -1458.02, 3515.91,   0.00, 0.00, 0.00);
CreateDynamicObject(1702, 1395.47, -1458.03, 3515.91,   0.00, 0.00, 0.00);
CreateDynamicObject(19459, 1389.42, -1461.77, 3517.44,   0.00, 0.00, 270.06);
CreateDynamicObject(19459, 1394.23, -1457.03, 3517.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1815, 1397.56, -1460.37, 3515.91,   0.00, 0.00, 0.00);
CreateDynamicObject(2240, 1398.37, -1458.02, 3516.41,   0.00, 0.00, 0.00);
CreateDynamicObject(2239, 1407.67, -1464.20, 3515.91,   0.00, 0.00, 259.99);
CreateDynamicObject(1705, 1394.86, -1460.87, 3515.91,   0.00, 0.00, 89.90);
CreateDynamicObject(1705, 1401.66, -1459.77, 3515.91,   0.00, 0.00, 269.17);
// Exterior Electronicos LGC
CreateDynamicObject(3850, 1764.10, -1660.90, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1667.70, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1671.10, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1674.50, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1677.90, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1681.30, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1664.30, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1764.20, -1682.80, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1764.10, -1658.80, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1363, 1756.40, -1684.80, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1766.50, -1682.10, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1766.50, -1656.70, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1757.30, -1656.60, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1757.20, -1647.10, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(644, 1769.00, -1653.20, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(644, 1773.50, -1659.60, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2714, 1773.60, -1654.70, 17.10,   0.00, 0.00, 305.75);

//=================================== Puerta de Casa Premium =========================================
CreateDynamicObject(1556,2522.45312500,-1285.90039062,1053.64062500,0.00000000,0.00000000,90.00000000); //object(gen_doorext18)(2)
CreateDynamicObject(1556,2522.46728516,-1287.39843750,1053.65332031,0.00000000,0.00000000,90.00000000); //object(gen_doorext18)(3)

//========================== Objeto para gobierno ==================================
CreateDynamicObject(5821,1356.04187012,-1629.78430176,12.81710815,0.00000000,0.00000000,269.00000000); //object(odrampbit03) (1)

// Objeto de Camionero
CreateDynamicObject(11292, -73.28, -1104.79, 1.49,   0.00, 0.00, 342.78);

// Grotti By Jhon
CreateDynamicObject(19325, 518.23462, -1298.30981, 18.15200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 518.63373, -1294.75024, 22.66941,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19325, 518.24542, -1304.94165, 18.15200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 518.63745, -1294.78394, 18.57321,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19325, 518.24921, -1298.42981, 22.25720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19325, 518.25122, -1305.06152, 22.27720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, 523.07220, -1299.56848, 16.20124,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 532.65222, -1299.56848, 16.20120,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 542.27222, -1299.56848, 16.20120,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 551.91217, -1299.56848, 16.20120,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 561.53241, -1299.54846, 16.20120,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19325, 566.34418, -1298.51001, 18.31070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 565.96582, -1294.75354, 18.57321,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 565.96582, -1294.75354, 23.57040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19325, 566.37238, -1305.02271, 22.40980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19325, 566.36420, -1298.43091, 22.40980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19325, 566.37262, -1305.00952, 18.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19449, 561.49750, -1303.77856, 16.54870,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 561.51788, -1303.75891, 23.53703,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 561.51788, -1303.75891, 20.03856,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 551.87927, -1303.79370, 20.03856,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 551.87927, -1303.79370, 16.55421,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 551.87927, -1303.79370, 23.49235,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 542.37732, -1303.81177, 20.08790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 542.35931, -1303.79456, 23.49230,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 542.37732, -1303.81177, 16.60790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 532.79547, -1303.56506, 20.08790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 523.25598, -1303.81555, 20.08790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 532.77728, -1303.81177, 16.60790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 523.25598, -1303.81555, 16.58790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 532.77728, -1303.81177, 23.52790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19449, 523.25598, -1303.81555, 23.48790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 562.29993, -1294.26880, 18.31070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 562.29993, -1294.26880, 22.43070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 555.67102, -1294.27649, 18.31070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 549.07080, -1294.30652, 18.31070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 555.67102, -1294.29651, 22.43070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 549.07080, -1294.30652, 22.37070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18762, 545.48547, -1294.72461, 17.75320,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 543.48340, -1294.77783, 19.75320,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(18762, 541.47076, -1294.73096, 17.75320,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19325, 541.30151, -1299.94617, 26.17920,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19325, 542.54547, -1294.35339, 22.31070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 535.90381, -1294.34534, 22.37070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 538.53906, -1294.34924, 18.31070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 529.27368, -1294.35217, 22.37070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 522.70850, -1294.26550, 22.37070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 531.89911, -1294.34924, 18.31070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 520.34125, -1294.34192, 18.31070,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 525.26300, -1294.35132, 18.31070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 545.09747, -1293.76282, 25.99720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 545.09747, -1293.76282, 29.49720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 541.89752, -1293.76282, 25.97720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 541.91528, -1293.75366, 29.49720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 539.56989, -1293.76819, 25.97720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19325, 541.30151, -1295.86621, 26.17920,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19325, 547.90149, -1299.94617, 26.17920,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19325, 547.90149, -1295.82617, 26.17920,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19357, 539.56989, -1293.76819, 29.45720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 538.02612, -1295.29956, 27.79720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 538.02612, -1298.49963, 27.79720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 538.02612, -1298.49963, 29.73720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 538.02612, -1295.29956, 29.77720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 538.02612, -1300.17957, 27.79720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 538.02612, -1300.17957, 29.73720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 546.42609, -1300.17957, 29.73720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 546.45605, -1300.15308, 27.89720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 546.45612, -1296.93311, 27.89720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 546.47412, -1295.35999, 27.89720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 546.43945, -1297.02881, 29.73720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 546.44177, -1295.26379, 29.73720,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19357, 544.78424, -1301.65808, 29.49720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 541.67322, -1301.66687, 29.49720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 539.77020, -1301.71924, 29.49720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 539.77020, -1301.71924, 27.71720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 544.78418, -1301.65808, 27.67720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19357, 541.67322, -1301.66687, 27.69720,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2008, 562.49670, -1301.10583, 16.28120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2008, 551.77954, -1301.41309, 16.28120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2008, 537.42560, -1301.10913, 16.28120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2008, 528.27338, -1301.20715, 16.28120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1715, 537.72028, -1302.84998, 16.28120,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1715, 528.33167, -1302.84973, 16.28120,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1715, 552.30188, -1303.29932, 16.28120,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1715, 563.13940, -1302.80029, 16.28120,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1892, 543.00293, -1294.50708, 16.39320,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 561.30005, -1298.94019, 24.33700,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1893, 553.32849, -1298.93152, 24.33700,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1893, 549.29260, -1298.91479, 24.33700,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1893, 535.35950, -1298.92017, 24.33700,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1893, 531.31848, -1298.88660, 24.33700,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1893, 525.26819, -1298.94482, 24.33700,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(0, 529.27368, -1294.35217, 22.37070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1944, 535.90381, -1294.34534, 22.37070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19126, 541.42377, -1293.63123, 16.70507,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19126, 545.42572, -1293.87109, 16.70510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19126, 518.67548, -1293.56824, 16.70507,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19126, 565.90540, -1293.55188, 16.70507,   0.00000, 0.00000, 90.00000);


// RentBike-1
CreateDynamicObject(18762, 2279.06641, -1263.07104, 24.16880,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18762, 2279.08057, -1253.39063, 24.16880,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19370, 2277.71167, -1254.54980, 26.58740,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 2277.69214, -1257.70544, 26.58740,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 2277.69214, -1260.88538, 26.60740,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 2277.75220, -1261.94543, 26.58740,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 2277.69165, -1254.54980, 22.96740,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 2277.69165, -1257.74976, 22.96740,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 2277.69165, -1260.94983, 22.96740,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 2277.69165, -1261.94983, 22.96740,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 2277.69214, -1260.88538, 26.60740,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(18652, 2277.72632, -1256.23340, 26.46958,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18652, 2277.38672, -1260.06165, 26.46958,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 2276.42627, -1263.07104, 24.16880,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18762, 2276.42627, -1253.39111, 24.16880,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, 2279.45898, -1258.10999, 21.40880,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, 1522.00085, -1709.03259, 12.50010,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, 1520.17688, -1705.93555, 11.22510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 1520.79272, -1710.22290, 13.90749,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 1523.27710, -1710.14294, 13.90750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 1523.28455, -1701.58008, 13.90749,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 1520.77673, -1701.57959, 13.90749,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, 1521.99756, -1702.69385, 12.50010,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 1522.00513, -1705.90063, 12.50010,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 1522.00513, -1709.07666, 16.50040,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 1522.01636, -1702.68188, 16.50040,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 1522.00964, -1705.88501, 16.50040,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(18652, 1522.53516, -1704.15430, 16.38750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18652, 1522.53137, -1707.34705, 16.38750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, 1218.13623, -1419.51489, 12.23240,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 1225.05457, -1419.51074, 12.27240,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 1221.55847, -1419.50415, 12.23240,   0.00000, 89.00000, 0.00000);
CreateDynamicObject(19379, 1221.59424, -1421.14392, 12.67680,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(18762, 1226.30957, -1418.40112, 14.80670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 1226.31494, -1420.64734, 14.80670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 1216.86292, -1418.34241, 14.80670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18762, 1216.85278, -1420.60486, 14.80670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19370, 1221.57959, -1419.44275, 17.39760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 1218.10046, -1419.45435, 17.39760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 1225.03235, -1419.44080, 17.39760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(18652, 1219.58655, -1419.61694, 17.29440,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18652, 1223.14282, -1419.63623, 17.29440,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18762, 345.37759, -1722.76563, 8.33590,   0.00000, 0.00000, -4.00000);
CreateDynamicObject(18762, 354.83429, -1723.45203, 8.33590,   0.00000, 0.00000, -4.00000);
CreateDynamicObject(18762, 345.22672, -1725.00854, 8.33590,   0.00000, 0.00000, -4.00000);
CreateDynamicObject(18762, 354.70251, -1725.72510, 8.33590,   0.00000, 0.00000, -4.00000);
CreateDynamicObject(19362, 350.04449, -1724.25623, 5.74040,   0.00000, 90.00000, -4.00000);
CreateDynamicObject(19362, 346.56320, -1724.01660, 5.74040,   0.00000, 90.00000, -4.00000);
CreateDynamicObject(19362, 353.49850, -1724.48291, 5.76040,   0.00000, 90.00000, -4.00000);
CreateDynamicObject(19379, 349.89359, -1725.90454, 6.18870,   90.00000, 0.00000, 85.00000);
CreateDynamicObject(19370, 353.48959, -1724.49438, 10.91590,   0.00000, 90.00000, -3.00000);
CreateDynamicObject(19370, 349.99341, -1724.26001, 10.91590,   0.00000, 90.00000, -4.00000);
CreateDynamicObject(19370, 346.50610, -1723.98035, 10.91590,   0.00000, 90.00000, -4.00000);
CreateDynamicObject(18652, 351.76144, -1724.34192, 10.66390,   0.00000, 0.00000, 85.00000);
CreateDynamicObject(18652, 347.79309, -1723.94409, 10.66390,   0.00000, 0.00000, 84.00000);
// Camionero Map

CreateDynamicObject(717, 2421.37012, -2081.01270, 12.71183,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 2422.03711, -2097.62891, 12.71183,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1684, 2426.90503, -2112.05518, 13.99277,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1232, 2428.79932, -2107.21509, 13.26234,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 2426.25952, -2102.92749, 13.29314,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1568, 2424.36816, -2080.06616, 12.50528,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 2424.33032, -2099.17065, 12.50528,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 2449.07715, -2101.66602, 12.52106,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 2472.17480, -2101.76831, 12.52106,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 2496.68506, -2101.69653, 12.52106,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 2520.12964, -2101.64722, 12.52106,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(978, 2408.51001, -2135.92993, 13.35000,   0.00000, 0.00000, 270.20001);
CreateDynamicObject(978, 2408.53003, -2125.20996, 13.35000,   0.00000, 0.00000, 270.20001);
CreateDynamicObject(978, 2408.43994, -2114.62988, 13.35000,   0.00000, 0.00000, 270.20001);
CreateDynamicObject(978, 2408.37988, -2104.32007, 13.35000,   0.00000, 0.00000, 270.20001);
CreateDynamicObject(978, 2408.31006, -2093.93994, 13.35000,   0.00000, 0.00000, 270.20001);
CreateDynamicObject(978, 2408.22998, -2083.37988, 13.35000,   0.00000, 0.00000, 270.20001);
CreateDynamicObject(978, 2408.20996, -2073.33008, 13.35000,   0.00000, 0.00000, 270.20001);
CreateDynamicObject(978, 2408.15991, -2063.02002, 13.35000,   0.00000, 0.00000, 270.20001);
CreateDynamicObject(978, 2413.84009, -2141.87988, 13.35000,   0.00000, 0.00000, 359.35999);
CreateDynamicObject(978, 2421.29004, -2137.77002, 13.35000,   0.00000, 0.00000, 419.42001);
CreateDynamicObject(3722, 2181.42554, -1981.38647, 16.86720,   3.14000, 0.00000, -89.76000);

// Zona Registro 19379
CreateObject(19379, -1634.09717, 1050.52417, 56.02780,   0.00000, 90.00000, 90.00000);
CreateObject(19379, -1634.11230, 1040.04749, 56.02780,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19446, -1637.64819, 1046.24744, 57.70540,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19377, -1634.66772, 1041.55652, 59.41896,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19446, -1634.21619, 1037.30334, 57.70540,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19446, -1631.97119, 1038.12842, 57.70540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -1631.97278, 1044.55066, 57.70540,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1502, -1631.95215, 1043.76501, 56.00567,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1638.99548, 1048.42542, 57.70540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -1633.66553, 1043.69202, 57.70540,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, -1634.45239, 1043.66675, 56.00570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -1638.91077, 1041.46423, 57.72480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -1638.99927, 1034.51807, 57.70540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -1635.18030, 1048.59900, 57.70540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2299, -1638.44080, 1042.62744, 56.11545,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1727, -1636.45728, 1045.68091, 56.11470,   0.00000, 0.00000, -33.00000);
CreateDynamicObject(2700, -1638.64514, 1044.03516, 58.72801,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, -1632.49304, 1039.01367, 56.11580,   0.00000, 0.00000, -147.00000);
CreateDynamicObject(1742, -1631.94714, 1040.76465, 56.11570,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1742, -1631.94714, 1042.18054, 56.11570,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(14740, -1638.86914, 1040.15552, 58.73728,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14740, -1638.86914, 1040.15552, 57.16266,   0.00000, 0.00000, 0.00000);

// -------- RentBikeGrotti------- //
CreateObject(19362, 513.24463, -1253.57043, 15.13750,   0.00000, 90.00000, -52.00000);
CreateObject(19362, 516.39789, -1251.11560, 15.19750,   1.00000, 90.00000, -52.00000);
CreateObject(19362, 518.92731, -1249.15430, 15.25750,   1.00000, 90.00000, -52.00000);
CreateObject(18762, 520.60175, -1249.46411, 17.60610,   0.00000, 0.00000, 37.00000);
CreateObject(18762, 519.05524, -1247.50464, 17.60610,   0.00000, 0.00000, 38.00000);
CreateObject(18762, 511.61035, -1253.37256, 17.62610,   0.00000, 0.00000, 38.00000);
CreateObject(18762, 513.12207, -1255.26196, 17.64610,   0.00000, 0.00000, 38.00000);
CreateObject(19379, 514.97992, -1249.98779, 15.28280,   90.00000, 0.00000, -52.00000);
CreateObject(19362, 514.52148, -1252.57288, 15.15750,   0.00000, 90.00000, -52.00000);
CreateObject(19370, 518.96460, -1249.16003, 20.18570,   0.00000, 90.00000, -52.00000);
CreateObject(19370, 516.47699, -1251.10901, 20.18570,   0.00000, 90.00000, -52.00000);
CreateObject(19370, 513.98401, -1253.08630, 20.18570,   0.00000, 90.00000, -52.00000);
CreateObject(19370, 513.25775, -1253.61951, 20.18570,   0.00000, 90.00000, -52.00000);
CreateObject(18652, 514.71417, -1252.48413, 20.07420,   0.00000, 0.00000, -52.00000);
CreateObject(18652, 517.46869, -1250.32629, 20.07420,   0.00000, 0.00000, -52.00000);
CreateObject(1226, 511.61160, -1257.07825, 18.99380,   3.14160, 0.00000, 1.01820);



// -=========== Decoracion 24-7 By Rocio & Maria ====================- //
CreateDynamicObject(1649, 1313.00, -877.30, 46.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 1322.90, -897.50, 45.30,   270.00, 0.00, 0.00);
CreateDynamicObject(2395, 1322.90, -894.90, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1322.90, -892.20, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1322.90, -889.50, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1322.90, -886.80, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1322.90, -884.10, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1322.90, -881.40, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1322.90, -880.00, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1319.20, -880.10, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1315.60, -880.00, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1312.10, -880.00, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1308.50, -880.00, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1305.10, -880.00, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1319.20, -882.80, 45.30,   270.00, 0.00, 0.00);
CreateDynamicObject(2395, 1319.20, -885.50, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1319.20, -888.20, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1319.20, -890.90, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1319.20, -893.60, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1319.20, -896.30, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1319.20, -897.90, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1315.50, -897.90, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1315.50, -895.20, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1315.50, -892.50, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1315.50, -889.80, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1315.50, -887.10, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1315.50, -884.40, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1315.50, -881.70, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1311.80, -897.50, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1311.80, -894.80, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1311.80, -892.10, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1311.80, -889.40, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1311.80, -886.70, 45.30,   270.00, 0.00, 0.00);
CreateDynamicObject(2395, 1311.80, -884.00, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1311.80, -881.30, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1308.10, -882.70, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1308.10, -885.40, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1308.10, -888.10, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1308.10, -890.80, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1308.10, -893.50, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1308.10, -896.10, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1308.10, -898.00, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1305.30, -897.40, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1305.30, -894.70, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1305.40, -892.00, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1305.20, -889.30, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1305.20, -886.60, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1305.10, -884.00, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(2395, 1305.20, -881.30, 45.30,   269.99, 0.00, 0.00);
CreateDynamicObject(12985, 1313.80, -876.50, 42.80,   0.00, 0.00, 269.99);
CreateDynamicObject(12950, 1322.50, -876.50, 35.80,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1318.50, -877.20, 46.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1312.90, -877.40, 46.30,   0.00, 0.00, 182.00);
CreateDynamicObject(1649, 1318.50, -877.30, 46.30,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, 1307.10, -877.20, 46.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1307.20, -877.10, 46.40,   0.00, 0.00, 180.00);
CreateDynamicObject(3051, 1315.70, -877.30, 46.60,   0.00, 0.00, 318.00);
CreateDynamicObject(3051, 1321.30, -877.20, 46.60,   0.00, 0.00, 317.99);
CreateDynamicObject(1649, 1324.10, -877.20, 46.30,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 1324.10, -877.20, 46.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1326.30, -879.40, 46.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1326.30, -879.40, 46.30,   0.00, 0.00, 269.99);
CreateDynamicObject(3051, 1326.30, -882.20, 46.60,   0.00, 0.00, 45.50);
CreateDynamicObject(1649, 1326.30, -885.00, 46.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1326.30, -885.00, 46.30,   0.00, 0.00, 269.99);
CreateDynamicObject(3051, 1326.30, -887.80, 46.60,   0.00, 0.00, 45.50);
CreateDynamicObject(1649, 1326.30, -890.60, 46.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1326.30, -890.60, 46.30,   0.00, 0.00, 269.99);
CreateDynamicObject(3051, 1326.30, -893.40, 46.60,   0.00, 0.00, 45.50);
CreateDynamicObject(1649, 1326.20, -895.70, 46.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1326.30, -895.70, 46.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, 1324.10, -897.90, 46.30,   0.00, 0.00, 180.24);
CreateDynamicObject(1649, 1324.10, -897.90, 46.30,   0.00, 0.00, 0.75);
CreateDynamicObject(3051, 1321.30, -897.90, 46.60,   0.00, 0.00, 318.00);
CreateDynamicObject(1649, 1318.50, -897.90, 46.30,   0.00, 0.00, 180.24);
CreateDynamicObject(1649, 1318.60, -897.80, 46.30,   0.00, 0.00, 0.74);
CreateDynamicObject(3051, 1315.80, -897.90, 46.60,   0.00, 0.00, 318.00);
CreateDynamicObject(1649, 1313.20, -897.90, 46.30,   0.00, 0.00, 0.75);
CreateDynamicObject(1649, 1313.00, -897.90, 46.30,   0.00, 0.00, 180.24);
CreateDynamicObject(3051, 1310.40, -897.90, 46.60,   0.00, 0.00, 318.00);
CreateDynamicObject(1649, 1307.60, -897.90, 46.30,   0.00, 0.00, 180.24);
CreateDynamicObject(1649, 1307.60, -898.00, 46.30,   0.00, 0.00, 0.75);
CreateDynamicObject(1649, 1305.40, -895.70, 46.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1305.40, -895.80, 46.30,   0.00, 0.00, 270.00);
CreateDynamicObject(3051, 1305.40, -893.00, 46.60,   0.00, 0.00, 45.50);
CreateDynamicObject(1649, 1305.40, -890.20, 46.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, 1305.40, -890.20, 46.30,   0.00, 0.00, 90.00);
CreateDynamicObject(3051, 1305.40, -887.40, 46.60,   0.00, 0.00, 45.50);
CreateDynamicObject(1649, 1305.40, -884.60, 46.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1305.40, -884.60, 46.30,   0.00, 0.00, 269.99);
CreateDynamicObject(3051, 1305.40, -881.80, 46.60,   0.00, 0.00, 45.50);
CreateDynamicObject(1649, 1305.40, -879.00, 46.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, 1305.40, -879.20, 46.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1491, 1309.32, -877.28, 45.26,   0.00, 0.00, 359.07);
CreateDynamicObject(3851, 1310.90, -896.00, 48.50,   354.00, 90.00, 90.00);
CreateDynamicObject(3851, 1320.90, -896.00, 48.50,   354.00, 90.00, 270.00);
CreateDynamicObject(3851, 1310.90, -892.00, 48.50,   354.00, 90.00, 90.00);
CreateDynamicObject(3851, 1320.90, -892.00, 48.50,   354.00, 90.00, 269.99);
CreateDynamicObject(3851, 1310.90, -888.10, 48.50,   354.00, 90.00, 90.00);
CreateDynamicObject(3851, 1320.90, -888.20, 48.50,   354.00, 90.00, 269.99);
CreateDynamicObject(3851, 1310.90, -884.20, 48.50,   354.00, 90.00, 90.00);
CreateDynamicObject(3851, 1320.90, -884.20, 48.50,   354.00, 90.00, 269.99);
CreateDynamicObject(3851, 1320.90, -880.30, 48.50,   354.00, 90.00, 269.99);
CreateDynamicObject(3851, 1310.80, -880.30, 48.50,   354.00, 90.00, 90.00);
CreateDynamicObject(3851, 1310.80, -876.40, 48.50,   354.00, 90.00, 90.00);
CreateDynamicObject(3851, 1320.90, -876.40, 48.50,   354.00, 90.00, 269.99);
CreateDynamicObject(3851, 1310.90, -897.90, 49.80,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1320.90, -897.80, 49.80,   0.00, 0.00, 90.00);
CreateDynamicObject(2801, 1323.10, -884.40, 45.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2802, 1323.10, -884.40, 45.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3657, 1316.00, -877.90, 45.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3657, 1322.10, -877.90, 45.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2800, 1320.80, -887.30, 45.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2799, 1320.80, -887.20, 45.80,   0.00, 0.00, 0.00);
CreateDynamicObject(14399, 1316.90, -894.90, 45.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2125, 1308.30, -891.60, 45.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2125, 1310.80, -891.70, 45.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2125, 1313.10, -891.80, 45.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2125, 1315.40, -891.80, 45.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1670, 1309.30, -892.80, 46.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1670, 1315.00, -892.80, 46.40,   0.00, 0.00, 206.00);
CreateDynamicObject(14705, 1306.10, -892.80, 46.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2862, 1307.80, -897.70, 46.30,   0.00, 0.00, 11.25);
CreateDynamicObject(2863, 1306.50, -897.70, 46.30,   0.00, 358.00, 21.75);
CreateDynamicObject(2868, 1305.60, -897.00, 46.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2865, 1305.50, -897.10, 46.90,   0.00, 0.00, 292.00);
CreateDynamicObject(2864, 1307.00, -897.80, 46.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2799, 1318.90, -884.90, 45.80,   0.00, 0.00, 254.00);
CreateDynamicObject(2799, 1322.20, -889.30, 45.80,   0.00, 0.00, 254.00);
CreateDynamicObject(2799, 1319.30, -889.80, 45.80,   0.00, 0.00, 164.00);
CreateDynamicObject(2799, 1324.10, -892.00, 45.80,   0.00, 0.00, 300.00);
CreateDynamicObject(2847, 1309.30, -878.80, 45.30,   0.00, 0.00, 0.00);
CreateDynamicObject(3920, 1320.10, -874.70, 47.60,   0.00, 5.00, 358.99);
CreateDynamicObject(3920, 1311.40, -874.80, 47.70,   0.00, 355.25, 2.25);
CreateDynamicObject(3920, 1320.20, -897.80, 50.70,   0.00, 0.00, 180.00);
CreateDynamicObject(3920, 1312.20, -897.80, 50.70,   0.00, 0.00, 180.00);
CreateDynamicObject(1215, 1319.80, -875.60, 39.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1311.20, -877.10, 45.90,   0.00, 0.00, 0.00);
CreateDynamicObject(14834, 1305.80, -877.70, 45.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1307.90, -876.80, 40.70,   0.00, 0.00, 178.25);
CreateDynamicObject(3802, 1320.40, -876.80, 44.20,   0.00, 0.00, 90.00);
CreateDynamicObject(3811, 1323.40, -876.90, 44.20,   0.00, 0.00, 90.00);
CreateDynamicObject(2251, 1320.10, -877.80, 46.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2245, 1318.30, -877.90, 45.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1319.20, -877.80, 45.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1321.50, -874.80, 38.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1323.70, -874.90, 38.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1214, 1326.10, -875.00, 38.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1776, 1306.20, -885.30, 46.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2260, 1305.90, -887.40, 46.60,   0.00, 0.00, 90.00);
CreateDynamicObject(2265, 1315.70, -877.80, 46.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2270, 1308.90, -877.70, 47.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2277, 1321.30, -878.00, 47.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1307.70, -872.70, 38.70,   0.00, 0.00, 268.00);
CreateDynamicObject(1251, 1307.80, -868.40, 38.70,   0.00, 0.00, 267.99);
CreateDynamicObject(1251, 1307.70, -864.00, 38.70,   0.00, 0.00, 267.99);
CreateDynamicObject(1251, 1307.80, -860.10, 38.70,   0.00, 0.00, 267.99);
CreateDynamicObject(1251, 1307.90, -855.80, 38.70,   0.00, 0.00, 267.99);
CreateDynamicObject(1549, 1325.90, -876.60, 38.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1462, 1327.10, -880.40, 38.60,   0.00, 0.00, 86.00);
CreateDynamicObject(984, 1333.80, -882.80, 39.20,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1333.90, -895.60, 39.20,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1333.80, -908.40, 39.20,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1330.70, -913.90, 39.30,   0.00, 0.00, 256.00);
CreateDynamicObject(983, 1324.40, -912.20, 39.30,   0.00, 0.00, 254.00);
CreateDynamicObject(983, 1321.30, -908.10, 39.30,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1321.30, -905.30, 39.30,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1307.40, -910.00, 39.30,   0.00, 0.00, 266.00);
CreateDynamicObject(983, 1304.30, -906.50, 39.30,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1310.60, -907.00, 39.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1237, 1338.10, -916.20, 34.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1237, 1338.10, -900.90, 35.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1237, 1337.80, -877.30, 38.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1237, 1338.20, -888.50, 36.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1336.90, -875.80, 37.80,   0.00, 0.00, 356.00);
CreateDynamicObject(854, 1332.60, -875.70, 38.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1349, 1321.20, -898.80, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1322.20, -898.80, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1323.10, -898.70, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1324.10, -898.60, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1325.00, -898.50, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1325.92, -898.40, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1310.60, -898.80, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1309.60, -898.80, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1308.60, -898.90, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1307.60, -899.00, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1306.70, -899.00, 39.10,   0.00, 0.00, 92.00);
CreateDynamicObject(1349, 1305.70, -899.00, 39.10,   0.00, 0.00, 92.00);
// -============= Peaje LS/SF by Sebastian ??? ====================- //
CreateDynamicObject(3881, 61.70, -1532.60, 6.10,   0.00, 0.00, 260.50);
CreateDynamicObject(1321, 28.30, -1525.50, 5.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 53.30, -1531.70, 5.10,   0.00, 0.00, 262.00);
CreateDynamicObject(3265, 66.70, -1532.20, 4.20,   0.00, 0.00, 83.00);
CreateDynamicObject(3265, 28.70, -1529.90, 4.20,   0.00, 0.00, 263.50);
CreateDynamicObject(966, 59.10, -1528.50, 4.10,   0.00, 0.00, 263.75);
CreateDynamicObject(1237, 59.10, -1529.30, 3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1237, 59.90, -1521.10, 3.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3881, 42.00, -1530.70, 6.10,   0.00, 0.00, 82.25);
CreateDynamicObject(966, 44.20, -1535.10, 4.10,   0.00, 0.00, 82.75);
CreateDynamicObject(1237, 43.30, -1542.70, 3.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1237, 44.30, -1534.20, 3.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1321, 73.50, -1536.40, 5.70,   0.00, 0.00, 176.50);
CreateDynamicObject(996, 47.90, -1533.70, 5.10,   0.00, 0.00, 352.25);
CreateDynamicObject(996, 48.50, -1528.10, 5.10,   0.00, 0.00, 349.75);
CreateDynamicObject(738, 29.30, -1527.80, 4.20,   0.00, 0.00, 350.00);
CreateDynamicObject(738, 78.52, -1535.34, 4.40,   0.00, 0.00, 353.25);
CreateDynamicObject(1364, 69.20, -1534.00, 5.00,   0.00, 0.00, 84.25);
CreateDynamicObject(1364, 36.10, -1529.30, 5.00,   0.00, 0.00, 262.25);
CreateDynamicObject(1361, 51.40, -1531.40, 5.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1622, 67.60, -1533.20, 11.80,   0.00, 341.75, 165.00);
CreateDynamicObject(1622, 38.30, -1530.70, 11.80,   0.00, 341.75, 355.00);
CreateDynamicObject(1615, 58.60, -1532.30, 7.50,   0.00, 0.00, 351.75);
CreateDynamicObject(2121, 46.20, -1529.70, 4.90,   0.00, 0.00, 44.00);
CreateDynamicObject(1237, -3.30, -1520.80, 1.60,   0.00, 0.00, 351.50);
CreateDynamicObject(1237, 20.90, -1525.80, 3.30,   0.00, 0.00, 351.50);
CreateDynamicObject(1237, 80.20, -1535.70, 4.20,   0.00, 0.00, 0.00);
CreateDynamicObject(7313, 68.20, -1526.30, 9.80,   0.00, 0.00, 82.25);
CreateDynamicObject(7313, 37.70, -1537.40, 9.80,   0.00, 0.00, 260.75);
pea1 = CreateDynamicObject(968, 59.02, -1528.69, 4.90,   -0.32, 90.22, 83.20);
pea2 = CreateDynamicObject(968, 44.20, -1534.97, 4.89,   -2.90, -90.48, 82.91);
// -============= Basura Beautiful by Maria Fernandez =============- //
CreateDynamicObject(12957, 2601.30, -2191.50, -0.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3593, 2591.55, -2179.71, -0.70,   0.00, 0.00, 328.00);
CreateDynamicObject(2674, 2593.20, -2167.10, -1.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2674, 2591.60, -2152.70, -1.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2674, 2581.10, -2144.20, -1.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2674, 2600.50, -2139.10, -1.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2674, 2582.70, -2139.10, -1.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2674, 2567.14, -2176.93, -1.12,   0.00, 0.00, 0.00);
CreateDynamicObject(1441, 2612.20, -2193.30, -0.60,   0.00, 0.00, 268.00);
CreateDynamicObject(1449, 2600.10, -2190.20, -0.70,   0.00, 0.00, 270.00);
CreateDynamicObject(3092, 2613.80, -2183.60, 7.20,   0.00, 0.00, 96.00);
CreateDynamicObject(2674, 2573.00, -2160.90, -1.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2674, 2580.60, -2192.10, -1.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2674, 2587.60, -2187.60, -1.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2674, 2594.90, -2175.90, -1.20,   0.00, 0.00, 0.00);
CreateDynamicObject(3593, 2569.50, -2162.10, -0.71,   0.00, 0.00, 22.00);
CreateDynamicObject(1449, 2602.80, -2193.20, -0.71,   0.00, 0.00, 88.00);
CreateDynamicObject(12957, 2600.90, -2154.40, -0.50,   0.00, 0.00, 336.00);
// Club VIP by Zenon City
CreateDynamicObject(8378, 2783.25, 2408.80, 1238.86,   90.00, 179.99, 179.99);
CreateDynamicObject(8378, 2783.02, 2398.25, 1238.86,   90.00, 179.99, 179.98);
CreateDynamicObject(14639, 2791.75, 2411.67, 1240.83,   0.00, 0.00, 0.00);
CreateDynamicObject(2367, 2785.66, 2401.79, 1239.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2367, 2785.66, 2403.74, 1239.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2367, 2785.73, 2406.03, 1239.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2367, 2785.35, 2408.48, 1239.50,   0.00, 0.00, 146.25);
CreateDynamicObject(2367, 2788.92, 2412.19, 1239.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2367, 2789.62, 2411.74, 1239.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2367, 2791.66, 2411.77, 1239.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2367, 2793.51, 2411.81, 1239.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3037, 2808.33, 2394.46, 1241.73,   0.00, 0.00, 0.00);
CreateDynamicObject(3037, 2792.66, 2412.27, 1241.73,   0.00, 0.00, 90.00);
CreateDynamicObject(3037, 2785.11, 2404.68, 1241.73,   0.00, 0.00, 0.00);
CreateDynamicObject(3037, 2785.14, 2404.31, 1241.73,   0.00, 0.00, 0.00);
CreateDynamicObject(3037, 2783.94, 2394.24, 1241.73,   0.00, 0.00, 0.00);
CreateDynamicObject(3037, 2784.59, 2402.63, 1241.73,   0.00, 0.00, 0.00);
CreateDynamicObject(3037, 2780.08, 2390.04, 1241.73,   0.00, 0.00, 90.00);
CreateDynamicObject(3037, 2784.14, 2389.08, 1241.73,   0.00, 0.00, 90.00);
CreateDynamicObject(3037, 2785.14, 2388.53, 1241.73,   0.00, 0.00, 90.00);
CreateDynamicObject(3037, 2790.28, 2388.37, 1241.73,   0.00, 0.00, 90.00);
CreateDynamicObject(3037, 2802.31, 2389.04, 1238.81,   0.00, 0.00, 90.00);
CreateDynamicObject(3037, 2811.39, 2389.04, 1241.73,   0.00, 0.00, 90.00);
CreateDynamicObject(3037, 2802.09, 2389.01, 1245.82,   0.00, 0.00, 90.00);
CreateDynamicObject(1557, 2794.23, 2388.58, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1557, 2794.23, 2388.58, 1242.03,   0.00, 0.00, 0.00);
CreateDynamicObject(3037, 2800.38, 2389.04, 1238.81,   0.00, 0.00, 90.00);
CreateDynamicObject(3037, 2808.23, 2402.06, 1241.73,   0.00, 0.00, 5.50);
CreateDynamicObject(3037, 2808.19, 2403.19, 1241.73,   0.00, 0.00, 15.50);
CreateDynamicObject(3037, 2807.62, 2405.22, 1241.73,   0.00, 0.00, 28.50);
CreateDynamicObject(3037, 2806.19, 2407.66, 1241.73,   0.00, 0.00, 39.49);
CreateDynamicObject(3037, 2805.01, 2409.15, 1241.73,   0.00, 0.00, 51.49);
CreateDynamicObject(3037, 2802.00, 2411.15, 1241.73,   0.00, 0.00, 67.99);
CreateDynamicObject(3037, 2802.20, 2412.19, 1241.73,   0.00, 0.00, 89.00);
CreateDynamicObject(8378, 2797.67, 2398.60, 1245.84,   90.00, 179.99, 179.99);
CreateDynamicObject(8378, 2799.55, 2411.31, 1245.84,   90.00, 179.99, 179.99);
CreateDynamicObject(2367, 2797.03, 2411.86, 1239.40,   0.00, 0.00, 356.50);
CreateDynamicObject(2367, 2798.89, 2411.65, 1239.40,   0.00, 0.00, 346.75);
CreateDynamicObject(2367, 2799.81, 2411.36, 1239.40,   0.00, 0.00, 342.99);
CreateDynamicObject(2367, 2801.33, 2410.96, 1239.40,   0.00, 0.00, 331.49);
CreateDynamicObject(2367, 2803.54, 2409.69, 1239.40,   0.00, 0.00, 319.24);
CreateDynamicObject(2367, 2805.16, 2408.32, 1239.40,   0.00, 0.00, 302.49);
CreateDynamicObject(2367, 2806.10, 2406.79, 1239.40,   0.00, 0.00, 298.23);
CreateDynamicObject(2367, 2807.07, 2404.81, 1239.40,   0.00, 0.00, 286.98);
CreateDynamicObject(2367, 2807.68, 2402.74, 1239.40,   0.00, 0.00, 275.98);
CreateDynamicObject(2367, 2807.76, 2401.86, 1239.40,   0.00, 0.00, 271.48);
CreateDynamicObject(3854, 2807.61, 2400.45, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(3854, 2807.54, 2400.97, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(3854, 2807.67, 2400.67, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(3854, 2808.35, 2400.29, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(3854, 2807.98, 2400.43, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(3854, 2808.14, 2401.00, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1557, 2785.17, 2388.64, 1242.03,   0.00, 0.00, 90.25);
CreateDynamicObject(1557, 2785.16, 2388.65, 1239.53,   0.00, 0.00, 90.00);
CreateDynamicObject(3037, 2788.38, 2413.18, 1241.73,   0.00, 0.00, 126.50);
CreateDynamicObject(3037, 2785.94, 2411.70, 1241.73,   0.00, 0.00, 151.25);
CreateDynamicObject(3854, 2797.08, 2411.26, 1239.53,   0.00, 0.00, 313.75);
CreateDynamicObject(3854, 2796.78, 2411.25, 1239.53,   0.00, 0.00, 313.75);
CreateDynamicObject(3854, 2796.40, 2411.27, 1239.53,   0.00, 0.00, 313.74);
CreateDynamicObject(3854, 2796.40, 2412.05, 1239.53,   0.00, 0.00, 313.75);
CreateDynamicObject(3854, 2796.40, 2411.71, 1239.53,   0.00, 0.00, 313.75);
CreateDynamicObject(3854, 2797.14, 2411.71, 1239.53,   0.00, 0.00, 313.75);
CreateDynamicObject(3854, 2797.07, 2412.25, 1239.53,   0.00, 0.00, 313.75);
CreateDynamicObject(4028, 2772.94, 2325.32, 1240.77,   0.00, 0.00, 126.00);
CreateDynamicObject(4033, 2714.32, 2331.50, 1226.63,   0.00, 0.00, 0.00);
CreateDynamicObject(4141, 2714.29, 2316.76, 1244.15,   0.00, 0.00, 0.00);
CreateDynamicObject(5408, 2865.92, 2292.20, 1248.69,   0.00, 0.00, 0.00);
CreateDynamicObject(5476, 2875.74, 2399.85, 1234.00,   0.00, 0.00, 0.00);
CreateDynamicObject(4019, 2772.03, 2201.22, 1226.08,   0.00, 0.00, 0.00);
CreateDynamicObject(4079, 2799.79, 2407.21, 1242.81,   0.00, 0.00, 267.99);
CreateDynamicObject(3984, 2775.57, 2327.20, 1237.12,   0.00, 0.00, 0.00);
CreateDynamicObject(4000, 2779.60, 2408.78, 1225.83,   0.00, 0.00, 0.00);
CreateDynamicObject(5474, 2924.07, 2396.92, 1226.15,   0.00, 0.00, 0.00);
CreateDynamicObject(4156, 2732.26, 2372.29, 1226.31,   0.00, 0.00, 0.00);
CreateDynamicObject(4125, 2758.75, 2468.07, 1231.07,   0.00, 0.00, 0.00);
CreateDynamicObject(6123, 2741.87, 2274.63, 1226.16,   0.00, 0.00, 0.00);
CreateDynamicObject(6121, 2814.08, 2352.92, 1226.35,   0.00, 0.00, 270.00);
CreateDynamicObject(6117, 2862.18, 2362.10, 1226.35,   0.00, 0.00, 0.00);
CreateDynamicObject(6121, 2816.98, 2430.85, 1226.35,   0.00, 0.00, 270.00);
CreateDynamicObject(4079, 2755.84, 2405.48, 1242.71,   0.00, 0.00, 87.99);
CreateDynamicObject(6121, 2814.04, 2213.09, 1226.35,   0.00, 0.00, 270.00);
CreateDynamicObject(6117, 2813.96, 2274.87, 1226.35,   0.00, 0.00, 270.00);
CreateDynamicObject(6117, 2861.88, 2222.50, 1226.35,   0.00, 0.00, 180.00);
CreateDynamicObject(6117, 2770.79, 2242.88, 1226.35,   0.00, 0.00, 179.99);
CreateDynamicObject(4027, 2775.60, 2272.70, 1228.29,   0.00, 0.00, 0.00);
CreateDynamicObject(4018, 2784.31, 2258.12, 1226.48,   0.00, 0.00, 0.00);
CreateDynamicObject(5725, 2854.03, 2207.84, 1235.40,   0.00, 0.00, 0.00);
CreateDynamicObject(5725, 2833.26, 2168.41, 1235.40,   0.00, 0.00, 0.00);
CreateDynamicObject(5725, 2828.74, 2174.39, 1235.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1846, 2807.23, 2394.48, 1242.29,   90.00, 179.99, 269.99);
CreateDynamicObject(1846, 2807.23, 2394.48, 1242.29,   90.00, 179.99, 269.99);
CreateDynamicObject(1846, 2807.23, 2394.48, 1242.29,   90.00, 179.99, 269.99);
CreateDynamicObject(18090, 2791.55, 2410.14, 1242.09,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 2784.57, 2405.93, 1242.10,   270.00, 180.00, 90.00);
CreateDynamicObject(1649, 2784.56, 2403.43, 1242.10,   270.00, 179.99, 89.99);
CreateDynamicObject(1518, 2785.08, 2407.61, 1241.34,   0.00, 0.00, 90.00);
CreateDynamicObject(1518, 2785.11, 2404.99, 1241.34,   0.00, 0.00, 90.00);
CreateDynamicObject(1518, 2785.08, 2401.91, 1241.34,   0.00, 0.00, 90.00);
CreateDynamicObject(1716, 2795.83, 2408.04, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 2794.70, 2408.03, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 2793.32, 2407.98, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 2791.84, 2407.93, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 2790.10, 2407.87, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 2787.37, 2408.01, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 2787.41, 2406.69, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 2787.37, 2405.32, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 2787.38, 2403.94, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1716, 2787.33, 2402.48, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1665, 2785.61, 2407.03, 1240.56,   0.00, 0.00, 0.00);
CreateDynamicObject(1665, 2785.99, 2404.34, 1240.56,   0.00, 0.00, 0.00);
CreateDynamicObject(1665, 2786.07, 2401.39, 1240.56,   0.00, 0.00, 138.00);
CreateDynamicObject(1548, 2785.28, 2406.21, 1240.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1548, 2785.27, 2402.82, 1240.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1551, 2785.51, 2408.00, 1240.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 2785.78, 2402.04, 1240.54,   0.00, 0.00, 0.00);
CreateDynamicObject(1703, 2799.91, 2390.71, 1239.49,   0.00, 0.00, 179.99);
CreateDynamicObject(1703, 2796.70, 2391.98, 1239.49,   0.00, 0.00, 90.00);
CreateDynamicObject(1703, 2796.70, 2395.76, 1239.49,   0.00, 0.00, 90.00);
CreateDynamicObject(1703, 2798.08, 2398.73, 1239.49,   0.00, 0.00, 0.00);
CreateDynamicObject(1703, 2805.84, 2390.66, 1239.49,   0.00, 0.00, 179.99);
CreateDynamicObject(1703, 2803.88, 2398.74, 1239.49,   0.00, 0.00, 0.00);
CreateDynamicObject(3533, 2795.77, 2399.73, 1243.78,   0.00, 0.00, 0.00);
CreateDynamicObject(2236, 2801.35, 2390.20, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(2236, 2798.58, 2396.63, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(2236, 2797.62, 2393.25, 1239.53,   0.00, 0.00, 270.25);
CreateDynamicObject(1649, 2799.72, 2389.00, 1242.13,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, 2804.10, 2389.00, 1242.13,   0.00, 0.00, 179.99);
CreateDynamicObject(2898, 2804.73, 2389.11, 1241.96,   359.75, 89.99, 270.00);
CreateDynamicObject(2898, 2799.33, 2389.12, 1241.96,   359.75, 89.99, 269.99);
CreateDynamicObject(2755, 2795.38, 2391.57, 1241.26,   0.00, 0.00, 270.00);
CreateDynamicObject(2755, 2795.42, 2397.45, 1241.26,   0.00, 0.00, 269.99);
CreateDynamicObject(2755, 2798.25, 2400.02, 1241.26,   0.00, 0.00, 179.99);
CreateDynamicObject(2755, 2805.85, 2400.03, 1241.26,   0.00, 0.00, 179.99);
CreateDynamicObject(2395, 2795.36, 2398.84, 1242.23,   0.00, 90.00, 270.00);
CreateDynamicObject(2395, 2795.48, 2396.09, 1242.23,   0.00, 90.00, 89.99);
CreateDynamicObject(2395, 2795.34, 2392.94, 1242.23,   0.00, 90.00, 269.99);
CreateDynamicObject(2395, 2795.45, 2390.19, 1242.23,   0.00, 90.00, 89.99);
CreateDynamicObject(3533, 2795.41, 2389.40, 1243.78,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 2796.85, 2399.93, 1242.23,   0.00, 90.00, 0.00);
CreateDynamicObject(2395, 2799.60, 2400.07, 1242.23,   0.00, 90.00, 180.00);
CreateDynamicObject(2395, 2807.31, 2400.07, 1242.23,   0.00, 90.00, 179.99);
CreateDynamicObject(2395, 2804.49, 2399.96, 1242.23,   0.00, 90.00, 0.00);
CreateDynamicObject(2231, 2808.53, 2392.17, 1242.01,   0.00, 0.00, 270.25);
CreateDynamicObject(2231, 2808.43, 2396.37, 1242.01,   0.00, 0.00, 270.25);
CreateDynamicObject(2230, 2808.45, 2394.36, 1239.53,   0.00, 90.00, 270.00);
CreateDynamicObject(2230, 2808.46, 2394.36, 1240.13,   180.00, 90.00, 90.01);
CreateDynamicObject(2230, 2808.08, 2388.95, 1239.53,   0.00, 0.00, 232.00);
CreateDynamicObject(2230, 2808.42, 2400.06, 1239.53,   0.00, 0.00, 326.00);
CreateDynamicObject(1670, 2798.71, 2397.15, 1240.06,   0.00, 0.00, 81.75);
CreateDynamicObject(1670, 2798.24, 2392.70, 1240.06,   0.00, 0.00, 81.75);
CreateDynamicObject(1235, 2795.78, 2411.50, 1240.03,   0.00, 0.00, 0.00);
CreateDynamicObject(2109, 2803.70, 2403.28, 1239.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1704, 2803.29, 2405.13, 1239.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1704, 2805.60, 2403.65, 1239.53,   0.00, 0.00, 270.50);
CreateDynamicObject(1704, 2804.23, 2401.51, 1239.53,   0.00, 0.00, 179.25);
CreateDynamicObject(1704, 2801.84, 2402.81, 1239.53,   0.00, 0.00, 89.75);
CreateDynamicObject(1704, 2797.40, 2404.43, 1239.53,   0.00, 0.00, 358.25);
CreateDynamicObject(1704, 2798.17, 2400.81, 1239.53,   0.00, 0.00, 179.25);
CreateDynamicObject(2109, 2797.77, 2402.70, 1239.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1704, 2798.51, 2409.60, 1239.53,   0.00, 0.00, 80.75);
CreateDynamicObject(1704, 2802.28, 2409.52, 1239.53,   0.00, 0.00, 255.00);
CreateDynamicObject(2109, 2800.39, 2409.67, 1239.92,   0.00, 0.00, 356.25);
CreateDynamicObject(2800, 2800.28, 2409.56, 1240.15,   0.00, 0.00, 0.00);
CreateDynamicObject(2894, 2803.69, 2403.32, 1240.35,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 2794.46, 2411.57, 1241.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 2794.36, 2411.56, 1241.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 2794.26, 2411.56, 1241.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 2794.17, 2411.56, 1241.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 2794.07, 2411.55, 1241.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 2793.97, 2411.52, 1241.20,   0.00, 0.00, 44.00);
CreateDynamicObject(1517, 2792.72, 2411.61, 1240.91,   0.00, 0.00, 96.00);
CreateDynamicObject(1517, 2790.35, 2411.65, 1240.91,   0.00, 0.00, 96.00);
CreateDynamicObject(1517, 2791.65, 2411.62, 1240.91,   0.00, 0.00, 96.00);
CreateDynamicObject(1520, 2792.24, 2411.64, 1240.76,   0.00, 0.00, 268.25);
CreateDynamicObject(1520, 2790.91, 2411.69, 1240.76,   0.00, 0.00, 268.25);
CreateDynamicObject(1664, 2789.24, 2411.44, 1241.37,   0.00, 0.00, 76.00);
CreateDynamicObject(1664, 2789.08, 2411.50, 1241.37,   0.00, 0.00, 76.00);
CreateDynamicObject(1664, 2788.93, 2411.48, 1241.37,   0.00, 0.00, 76.00);
CreateDynamicObject(1664, 2788.77, 2411.47, 1241.37,   0.00, 0.00, 76.00);
CreateDynamicObject(1667, 2797.81, 2403.22, 1240.43,   0.00, 0.00, 0.00);
CreateDynamicObject(1667, 2797.76, 2402.13, 1240.43,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 2795.78, 2408.86, 1240.58,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 2793.28, 2408.84, 1240.58,   0.00, 0.00, 0.00);
CreateDynamicObject(1543, 2788.48, 2408.78, 1240.58,   0.00, 0.00, 0.00);
CreateDynamicObject(1544, 2789.55, 2408.87, 1240.58,   0.00, 0.00, 0.00);
CreateDynamicObject(1544, 2790.40, 2408.72, 1240.58,   0.00, 0.00, 0.00);
CreateDynamicObject(1546, 2794.76, 2408.81, 1240.67,   0.00, 0.00, 0.00);
CreateDynamicObject(1548, 2791.97, 2408.83, 1240.59,   0.00, 0.00, 0.00);
CreateDynamicObject(1548, 2794.80, 2408.83, 1240.59,   0.00, 0.00, 0.00);
CreateDynamicObject(18650, 2795.72, 2411.62, 1244.21,   0.00, 0.00, 0.00);
CreateDynamicObject(18650, 2807.29, 2399.70, 1244.21,   0.00, 0.00, 271.50);
CreateDynamicObject(18885, 2787.13, 2389.61, 1240.67,   0.00, 0.00, 179.99);
// -===================== Licoreria By Manuel ===========================- //
CreateDynamicObject(12843, 2148.47, -1730.83, 12.52,   0.00, 0.00, 0.00);
CreateDynamicObject(12844, 2145.49, -1730.83, 14.52,   0.00, 0.00, 0.00);
CreateDynamicObject(12845, 2145.61, -1730.49, 14.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1497, 2139.17, -1725.96, 12.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1497, 2139.18, -1726.18, 12.53,   0.00, 0.00, 0.00);
CreateDynamicObject(2714, 2148.33, -1735.87, 14.66,   0.00, 0.00, 359.94);
CreateDynamicObject(1523, 2148.65, -1735.77, 12.34,   0.00, 0.00, 0.00);
CreateDynamicObject(1523, 2151.63, -1735.70, 12.34,   0.00, 0.00, 179.80);
CreateDynamicObject(9697, 2134.69, -1688.08, 12.56,   0.00, 0.00, 270.41);
CreateDynamicObject(17969, 2138.43, -1729.22, 15.74,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 2141.82, -1742.31, 13.10,   0.00, 0.00, 269.86);
CreateDynamicObject(9697, 2157.34, -1687.77, 12.56,   0.00, 0.00, 89.85);
CreateDynamicObject(2048, 2152.25, -1735.84, 14.34,   0.00, 0.00, 0.00);
CreateDynamicObject(1412, 2172.53, -1722.70, 13.70,   356.86, 0.00, 359.92);
CreateDynamicObject(1412, 2155.88, -1742.25, 13.70,   356.86, 0.00, 359.90);
CreateDynamicObject(1412, 2161.17, -1742.28, 13.70,   356.86, 0.00, 359.92);
CreateDynamicObject(1412, 2172.51, -1742.22, 13.70,   356.86, 0.00, 359.92);
CreateDynamicObject(1412, 2138.56, -1738.44, 13.70,   3.00, 0.00, 269.82);
CreateDynamicObject(1412, 2138.51, -1739.73, 13.70,   3.00, 0.00, 269.82);
CreateDynamicObject(1412, 2138.63, -1725.26, 13.70,   3.00, 0.00, 270.33);
CreateDynamicObject(1412, 2153.33, -1725.30, 13.72,   3.00, 0.00, 269.77);
CreateDynamicObject(983, 2145.02, -1742.31, 13.10,   0.00, 0.00, 269.86);
CreateDynamicObject(1290, 2153.66, -1731.48, 17.48,   0.00, 0.00, 91.39);
CreateDynamicObject(1290, 2138.50, -1731.40, 17.48,   0.00, 0.00, 91.39);
CreateDynamicObject(1412, 2153.32, -1739.69, 13.70,   3.00, 0.00, 269.82);
CreateDynamicObject(1412, 2153.35, -1734.45, 13.70,   3.00, 0.00, 269.82);
CreateDynamicObject(1412, 2175.10, -1721.50, 13.70,   3.00, 0.00, 269.82);
CreateDynamicObject(1412, 2175.09, -1726.69, 13.70,   3.00, 0.00, 269.82);
CreateDynamicObject(1412, 2175.13, -1731.89, 13.70,   3.00, 0.00, 269.82);
CreateDynamicObject(1412, 2175.11, -1737.08, 13.70,   3.00, 0.00, 269.82);
CreateDynamicObject(1412, 2175.07, -1739.70, 13.70,   3.00, 0.00, 269.82);
	// -==================================== PRISIÓN by Stallone ===============================- //
    CreateDynamicObject(980,2772.14160156,423.47741699,2.84985399,0.00000000,0.00000000,270.00000000); //object(airportgate) (1)
    CreateDynamicObject(980,2772.14160156,435.09915161,2.84985399,0.00000000,0.00000000,270.00000000); //object(airportgate) (2)
    CreateDynamicObject(980,2761.52636719,423.47741699,2.84985399,0.00000000,0.00000000,90.00000000); //object(airportgate) (3)
    CreateDynamicObject(980,2761.52636719,434.95144653,2.84985399,0.00000000,0.00000000,90.00000000); //object(airportgate) (4)
    CreateDynamicObject(980,2772.14160156,446.54803467,2.84985399,0.00000000,0.00000000,270.00000000); //object(airportgate) (5)
    CreateDynamicObject(980,2761.52636719,446.42642212,2.84985399,0.00000000,0.00000000,90.00000000); //object(airportgate) (6)
    CreateDynamicObject(980,2766.86279297,452.27990723,2.84985399,0.00000000,0.00000000,0.00000000); //object(airportgate) (7)
    CreateDynamicObject(10828,2761.90429688,434.44531250,-6.38496542,90.00000000,178.69812012,91.29638672); //object(drydock1_sfse) (1)
    CreateDynamicObject(980,2772.14160156,423.47656250,-2.65014601,0.00000000,0.00000000,270.00000000); //object(airportgate) (8)
    CreateDynamicObject(980,2772.14160156,435.09863281,-2.65014601,0.00000000,0.00000000,270.00000000); //object(airportgate) (9)
    CreateDynamicObject(980,2772.14160156,446.54785156,-2.65014601,0.00000000,0.00000000,270.00000000); //object(airportgate) (10)
    CreateDynamicObject(980,2766.86230469,452.27929688,-2.65014601,0.00000000,0.00000000,0.00000000); //object(airportgate) (11)
    CreateDynamicObject(980,2761.52636719,446.42578125,-2.65014601,0.00000000,0.00000000,90.00000000); //object(airportgate) (12)
    CreateDynamicObject(980,2761.52636719,434.95117188,-2.65014601,0.00000000,0.00000000,90.00000000); //object(airportgate) (13)
    CreateDynamicObject(980,2761.52636719,423.47656250,-2.65014601,0.00000000,0.00000000,90.00000000); //object(airportgate) (14)
    CreateDynamicObject(3092,2766.52392578,417.99725342,3.02500200,0.00000000,0.00000000,0.00000000); //object(dead_tied_cop) (1)
    // Exterior VIP
    CreateDynamicObject(18651,1801.69775391,-1580.07006836,16.20111656,0.00000000,0.00000000,310.50000000); //object(?) (1)
    CreateDynamicObject(18649,1802.29785156,-1578.30346680,16.21812439,0.00000000,0.00000000,9.74658203); //object(?) (4)
    CreateDynamicObject(1231,1811.30334473,-1601.99914551,15.27726746,0.00000000,0.00000000,0.00000000); //object(streetlamp2) (2)
    CreateDynamicObject(2773,1799.42272949,-1580.08850098,13.59138870,0.00000000,0.00000000,111.99993896); //object(cj_airprt_bar) (1)
    CreateDynamicObject(18651,1800.25659180,-1581.27722168,16.20872498,0.00000000,0.00000000,310.49560547); //object(?) (3)
    CreateDynamicObject(18649,1802.00158691,-1576.67321777,16.20733261,0.00000000,0.00000000,9.74487305); //object(?) (11)
    CreateDynamicObject(18649,1801.76110840,-1575.22558594,16.20807266,0.00000000,0.00000000,9.74487305); //object(?) (12)
    CreateDynamicObject(997,1812.56103516,-1578.55871582,12.54687500,0.00000000,0.00000000,256.00000000); //object(lhouse_barrier3) (1)
    CreateDynamicObject(997,1814.05090332,-1572.83923340,12.54687500,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (2)
    CreateDynamicObject(997,1815.62902832,-1566.97583008,12.54582596,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (3)
    CreateDynamicObject(997,1817.38867188,-1560.39196777,12.54559422,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (4)
    CreateDynamicObject(997,1818.94812012,-1554.78149414,12.54675865,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (5)
    CreateDynamicObject(997,1792.78674316,-1601.26025391,12.54468727,0.00000000,0.00000000,167.24792480); //object(lhouse_barrier3) (6)
    CreateDynamicObject(997,1787.48547363,-1600.02307129,12.54336357,0.00000000,0.00000000,166.99743652); //object(lhouse_barrier3) (7)
    CreateDynamicObject(18647,1797.10388184,-1578.98486328,15.54859447,0.00000000,0.00000000,9.50000000); //object(bar2) (2)
    CreateDynamicObject(1280,1807.01550293,-1584.59997559,12.91286850,0.00000000,0.00000000,309.75000000); //object(parkbench1) (1)
    CreateDynamicObject(1280,1801.79589844,-1588.47436523,12.93736362,0.00000000,0.00000000,309.74853516); //object(parkbench1) (2)
    CreateDynamicObject(1280,1796.06933594,-1593.20556641,12.93888855,0.00000000,0.00000000,309.74853516); //object(parkbench1) (3)
    CreateDynamicObject(6462,1794.72363281,-1576.30712891,14.55592728,0.00000000,0.00000000,130.25000000); //object(pier04a_law2) (1)
//Rejas cerrar transfender LV
CreateDynamicObject(980,2385.96093750,1043.56250000,12.59370422,0.00000000,0.00000000,0.00000000); //object(airportgate) (1)
CreateDynamicObject(980,1968.78955078,2162.33325195,12.59370422,0.00000000,0.00000000,270.00000000); //object(airportgate) (2)
CreateDynamicObject(980,-1421.79968262,2590.89697266,56.80568314,0.00000000,0.00000000,0.00000000); //object(airportgate) (3)
CreateDynamicObject(980,-1935.38757324,239.34281921,36.12965393,0.00000000,0.00000000,0.00000000); //object(airportgate) (4)
CreateDynamicObject(980,-2425.79125977,1028.10961914,52.17105103,0.00000000,0.00000000,0.00000000); //object(airportgate) (5)
CreateDynamicObject(971,-99.74066925,1111.51843262,20.36210823,0.00000000,0.00000000,0.00000000); //object(subwaygate) (1)
// Interior Militares Armeria
CreateDynamicObject(2205, 251.99, 2033.38, -7.76,   0.00, 0.00, 90.25);
CreateDynamicObject(16656, 253.78, 2027.61, -4.76,   0.00, 0.00, 0.00);
CreateDynamicObject(14782, 257.88, 2035.70, -6.75,   0.00, 0.00, 0.00);
CreateDynamicObject(14782, 263.86, 2032.05, -6.77,   0.00, 0.00, 270.25);
CreateDynamicObject(2605, 253.41, 2026.80, -7.36,   0.00, 0.00, 90.00);
CreateDynamicObject(2606, 264.14, 2022.34, -4.67,   0.00, 0.00, 272.25);
CreateDynamicObject(14782, 263.92, 2025.15, -6.74,   0.00, 0.00, 270.25);
CreateDynamicObject(3794, 248.20, 2026.53, -7.16,   0.00, 0.00, 359.75);
CreateDynamicObject(3794, 244.50, 2026.64, -7.16,   0.00, 0.00, 359.75);
CreateDynamicObject(3795, 244.55, 2036.63, -7.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3795, 248.99, 2036.56, -7.42,   0.00, 0.00, 0.00);
CreateDynamicObject(2951, 247.35, 2038.18, -7.80,   0.00, 0.00, 179.75);
CreateDynamicObject(16782, 258.82, 2019.12, -6.27,   0.00, 0.00, 91.25);
CreateDynamicObject(1210, 253.40, 2026.97, -6.84,   89.50, 0.00, 90.00);
CreateDynamicObject(2254, 262.54, 2036.20, -5.85,   0.00, 0.00, 0.00);
CreateDynamicObject(2811, 253.54, 2035.55, -7.76,   0.00, 0.00, 39.00);
CreateDynamicObject(2241, 263.88, 2024.14, -7.26,   0.00, 0.00, 0.00);
CreateDynamicObject(2011, 253.71, 2020.57, -7.76,   0.00, 0.00, 0.00);
CreateDynamicObject(2619, 261.99, 2019.23, -6.32,   0.00, 0.00, 274.25);
CreateDynamicObject(2011, 263.88, 2035.68, -7.86,   0.00, 0.00, 0.00);
CreateDynamicObject(2614, 258.93, 2035.81, -3.95,   0.00, 0.00, 0.00);
CreateDynamicObject(2612, 252.95, 2027.11, -5.90,   0.00, 0.00, 90.25);
CreateDynamicObject(2967, 253.73, 2027.64, -6.94,   0.00, 0.00, 0.00);
CreateDynamicObject(14782, 242.35, 2030.46, -6.74,   0.00, 0.00, 89.75);
CreateDynamicObject(2064, 242.77, 2035.07, -7.13,   0.00, 0.00, 0.00);
CreateDynamicObject(2061, 252.21, 2035.14, -6.53,   0.00, 0.00, 0.00);
CreateDynamicObject(2061, 251.84, 2035.14, -6.53,   0.00, 0.00, 0.00);
CreateDynamicObject(2061, 251.85, 2034.94, -6.53,   0.00, 0.00, 0.00);
CreateDynamicObject(2061, 252.22, 2034.95, -6.53,   0.00, 0.00, 0.00);
CreateDynamicObject(2061, 251.86, 2034.74, -6.53,   0.00, 0.00, 0.00);
CreateDynamicObject(2061, 252.21, 2034.75, -6.53,   0.00, 0.00, 0.00);
CreateDynamicObject(2955, 252.83, 2025.09, -6.56,   0.00, 0.00, 359.75);
CreateDynamicObject(2955, 252.79, 2022.36, -6.57,   0.00, 0.00, 179.25);
CreateDynamicObject(1649, 252.85, 2023.54, -3.75,   0.00, 0.00, 89.75);
CreateDynamicObject(1508, 252.73, 2023.31, -7.15,   0.00, 0.00, 359.00);
CreateDynamicObject(964, 251.79, 2026.18, -7.76,   0.00, 0.00, 0.75);
CreateDynamicObject(964, 250.36, 2026.17, -7.76,   0.00, 0.00, 179.50);
CreateDynamicObject(1348, 251.53, 2036.63, -7.06,   0.00, 0.00, 270.50);
CreateDynamicObject(1578, 251.74, 2034.41, -6.85,   0.00, 0.00, 0.00);
CreateDynamicObject(1578, 251.73, 2034.41, -6.71,   0.00, 0.00, 0.00);
CreateDynamicObject(3264, 95.71, 1922.87, 17.10,   0.00, 0.00, 296.00);
CreateDynamicObject(3263, 349.77, 1800.30, 17.59,   0.00, 0.00, 0.00);
// Cuarteles
CreateDynamicObject(16150,2911.38671875,2132.02832031,-0.67968750,0.00000000,0.00000000,357.99499512); //object(ufo_barinterior) (1)
CreateDynamicObject(14842,2918.41918945,2132.07641602,-0.08257473,0.00000000,0.00000000,269.00000000); //object(int_policea07) (1)
CreateDynamicObject(2738,2919.18725586,2125.79589844,-0.06902504,0.00000000,0.00000000,178.00000000); //object(cj_toilet_bs) (1)
CreateDynamicObject(2738,2917.95947266,2125.76635742,-0.06902504,0.00000000,0.00000000,177.99499512); //object(cj_toilet_bs) (2)
CreateDynamicObject(2738,2916.61914062,2125.77783203,-0.06902504,0.00000000,0.00000000,177.99499512); //object(cj_toilet_bs) (3)
CreateDynamicObject(2739,2915.72265625,2130.07666016,-0.64300251,0.00000000,0.00000000,86.00000000); //object(cj_b_sink1) (1)
CreateDynamicObject(2603,2909.25463867,2136.75048828,-0.21862763,0.00000000,0.00000000,266.25000000); //object(police_cell_bed) (1)
CreateDynamicObject(2603,2909.19555664,2134.43017578,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (2)
CreateDynamicObject(2603,2909.06030273,2131.92919922,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (3)
CreateDynamicObject(2603,2913.96582031,2136.75756836,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (4)
CreateDynamicObject(2603,2913.87060547,2133.76928711,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (5)
CreateDynamicObject(2603,2913.84692383,2131.59375000,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (6)
CreateDynamicObject(2603,2908.90722656,2129.15844727,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (7)
CreateDynamicObject(2596,2911.75000000,2137.87133789,1.69875479,0.00000000,0.00000000,0.00000000); //object(cj_sex_tv) (1)
CreateDynamicObject(2331,2907.95239258,2130.53564453,-0.42821521,0.00000000,0.00000000,0.00000000); //object(cj_bed_furn_1) (1)
CreateDynamicObject(2331,2907.88208008,2133.12353516,-0.42821521,0.00000000,0.00000000,0.00000000); //object(cj_bed_furn_1) (2)
CreateDynamicObject(2331,2908.10937500,2135.66601562,-0.42821521,0.00000000,0.00000000,0.00000000); //object(cj_bed_furn_1) (3)
CreateDynamicObject(2331,2914.83081055,2135.27392578,-0.42821521,0.00000000,0.00000000,0.00000000); //object(cj_bed_furn_1) (4)
CreateDynamicObject(2331,2914.93212891,2132.67895508,-0.42821521,0.00000000,0.00000000,0.00000000); //object(cj_bed_furn_1) (5)
CreateDynamicObject(2002,2912.03564453,2119.21630859,-0.07541287,0.00000000,0.00000000,178.00000000); //object(water_coolnu) (1)
CreateDynamicObject(1828,2909.48168945,2126.70898438,-0.67968750,0.00000000,0.00000000,0.00000000); //object(man_sdr_rug) (1)
CreateDynamicObject(1481,2914.12426758,2119.21435547,0.61733305,0.00000000,0.00000000,219.75000000); //object(dyn_bar_b_q) (1)
CreateDynamicObject(2762,2909.51318359,2121.48510742,0.31939495,0.00000000,0.00000000,0.00000000); //object(cj_chick_table) (1)
CreateDynamicObject(2762,2909.51806641,2122.52612305,0.31939495,0.00000000,0.00000000,0.00000000); //object(cj_chick_table) (2)
CreateDynamicObject(2762,2911.58984375,2122.53100586,0.32706249,0.00000000,0.00000000,0.00000000); //object(cj_chick_table) (3)
CreateDynamicObject(2762,2911.58325195,2121.49291992,0.31939495,0.00000000,0.00000000,0.00000000); //object(cj_chick_table) (4)
CreateDynamicObject(2121,2911.63989258,2120.15551758,0.42747712,0.00000000,0.00000000,180.00000000); //object(low_din_chair_2) (1)
CreateDynamicObject(2121,2910.44311523,2120.15673828,0.42747712,0.00000000,0.00000000,179.99450684); //object(low_din_chair_2) (2)
CreateDynamicObject(2121,2909.40649414,2120.12133789,0.42747712,0.00000000,0.00000000,179.99450684); //object(low_din_chair_2) (3)
CreateDynamicObject(2121,2909.31469727,2124.02441406,0.42747712,0.00000000,0.00000000,358.24450684); //object(low_din_chair_2) (4)
CreateDynamicObject(2121,2910.70751953,2124.03564453,0.42747712,0.00000000,0.00000000,358.24218750); //object(low_din_chair_2) (5)
CreateDynamicObject(2121,2911.96997070,2124.01025391,0.42747712,0.00000000,0.00000000,358.24218750); //object(low_din_chair_2) (6)
//===== Prisión Militar
CreateDynamicObject(14412,615.78137207,847.28698730,-81.85933685,0.00000000,0.00000000,0.00000000); //object(carter_drugfloor) (1)
CreateDynamicObject(2951,633.22283936,839.21752930,-91.25302887,0.00000000,0.00000000,269.50000000); //object(a51_labdoor) (2)
CreateDynamicObject(974,606.24859619,860.64294434,-90.20045471,0.00000000,0.00000000,270.00000000); //object(tall_fence) (1)
CreateDynamicObject(974,615.07238770,860.68023682,-89.92543793,0.00000000,0.00000000,270.00000000); //object(tall_fence) (2)
CreateDynamicObject(974,624.01391602,860.53326416,-90.20039368,0.00000000,0.00000000,270.00000000); //object(tall_fence) (3)
CreateDynamicObject(10244,600.36383057,839.32269287,-90.67967224,0.00000000,0.00000000,180.25000000); //object(vicjump_sfe) (1)
CreateDynamicObject(1998,632.31713867,857.31060791,-91.20308685,0.00000000,0.00000000,179.50000000); //object(officedesk1l) (2)
CreateDynamicObject(1998,628.27124023,858.33392334,-91.20308685,0.00000000,0.00000000,89.99450684); //object(officedesk1l) (3)
CreateDynamicObject(2309,628.80157471,859.26489258,-91.20308685,0.00000000,0.00000000,90.00000000); //object(med_office_chair2) (1)
CreateDynamicObject(2309,631.39935303,857.62768555,-91.20308685,0.00000000,0.00000000,179.00000000); //object(med_office_chair2) (2)
CreateDynamicObject(15038,632.41613770,860.59429932,-90.58589935,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (1)
CreateDynamicObject(15038,628.83160400,852.79248047,-90.58589935,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (2)
CreateDynamicObject(3851,592.82928467,844.12921143,-82.97804260,0.00000000,0.00000000,358.50000000); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,592.86151123,849.48962402,-82.96470642,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(5856,584.18750000,839.34197998,-85.03285217,0.00000000,0.00000000,0.00000000); //object(lawnspraydoor1) (1)
CreateDynamicObject(982,615.98748779,837.23931885,-86.36843872,0.00000000,0.00000000,270.00000000); //object(fenceshit) (3)
CreateDynamicObject(982,616.12329102,857.30126953,-86.36559296,0.00000000,0.00000000,270.00000000); //object(fenceshit) (4)
CreateDynamicObject(983,629.09228516,840.83258057,-86.35546875,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (4)
CreateDynamicObject(983,629.07537842,847.23492432,-86.35546875,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (5)
CreateDynamicObject(983,629.06280518,853.64178467,-86.35546875,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (6)
CreateDynamicObject(983,600.14123535,857.22741699,-86.37047577,0.00000000,0.00000000,270.75000000); //object(fenceshit3) (7)
CreateDynamicObject(983,596.14746094,857.14874268,-86.35546875,0.00000000,0.00000000,270.74707031); //object(fenceshit3) (8)
CreateDynamicObject(983,601.59661865,837.24938965,-86.35546875,0.00000000,0.00000000,270.74707031); //object(fenceshit3) (9)
CreateDynamicObject(1215,629.11126709,837.23767090,-86.47470093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
CreateDynamicObject(1215,629.08911133,857.16937256,-86.47470093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
CreateDynamicObject(1215,593.76672363,837.14868164,-86.47470093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
CreateDynamicObject(1216,597.79144287,850.98852539,-90.51108551,0.00000000,0.00000000,91.75000000); //object(phonebooth1) (2)
CreateDynamicObject(1216,597.75109863,851.58166504,-90.51108551,0.00000000,0.00000000,91.74682617); //object(phonebooth1) (3)
CreateDynamicObject(1216,597.72137451,852.15960693,-90.51108551,0.00000000,0.00000000,91.74682617); //object(phonebooth1) (4)
CreateDynamicObject(2606,587.20196533,861.26373291,-83.88135529,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (2)
CreateDynamicObject(2606,589.18109131,861.26373291,-83.87923431,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (3)
CreateDynamicObject(2606,589.16925049,861.26373291,-84.32472992,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (4)
CreateDynamicObject(2606,587.18566895,861.26373291,-84.33766174,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (5)
CreateDynamicObject(2609,585.38281250,861.26373291,-86.32429504,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (1)
CreateDynamicObject(2609,585.84710693,861.24859619,-86.30731201,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (2)
CreateDynamicObject(2609,586.30236816,861.25897217,-86.30731201,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (3)
CreateDynamicObject(2609,586.75256348,861.25360107,-86.30731201,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (4)
CreateDynamicObject(2604,589.21783447,860.75445557,-86.24214935,0.00000000,0.00000000,0.00000000); //object(cj_police_counter) (1)
CreateDynamicObject(1703,588.35546875,844.76611328,-87.03902435,0.00000000,0.00000000,181.00000000); //object(kb_couch02) (1)
CreateDynamicObject(1703,586.39172363,849.75042725,-87.03902435,0.00000000,0.00000000,358.99975586); //object(kb_couch02) (2)
CreateDynamicObject(2074,602.54382324,859.65155029,-87.64872742,0.00000000,0.00000000,0.00000000); //object(cj_mlight8) (1)
CreateDynamicObject(2109,587.43835449,846.94415283,-86.64791870,0.00000000,0.00000000,0.00000000); //object(low_dinning_3) (1)
CreateDynamicObject(2106,587.45599365,846.86895752,-86.22494507,0.00000000,0.00000000,0.00000000); //object(cj_mlight15) (1)
CreateDynamicObject(2256,591.50878906,861.23937988,-83.41544342,0.00000000,0.00000000,0.00000000); //object(frame_clip_3) (1)
CreateDynamicObject(2239,585.50231934,849.75665283,-87.03902435,0.00000000,0.00000000,0.00000000); //object(cj_mlight16) (1)
CreateDynamicObject(1671,590.48974609,859.27911377,-86.57881165,0.00000000,0.00000000,182.00000000); //object(swivelchair_a) (1)
CreateDynamicObject(2165,584.96478271,854.24078369,-87.03902435,0.00000000,0.00000000,88.75000000); //object(med_office_desk_1) (1)
CreateDynamicObject(1671,586.52288818,854.71789551,-86.57881165,0.00000000,0.00000000,263.99951172); //object(swivelchair_a) (2)
CreateDynamicObject(1670,586.98498535,847.14306641,-86.22494507,0.00000000,0.00000000,0.00000000); //object(propcollecttable) (1)
CreateDynamicObject(2922,592.47760010,838.94757080,-85.86143494,0.00000000,0.00000000,90.00000000); //object(kmb_keypad) (1)
CreateDynamicObject(2921,592.50012207,836.91625977,-82.11330414,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (1)
CreateDynamicObject(2921,632.99652100,837.03424072,-88.60442352,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (2)
CreateDynamicObject(2921,597.24102783,855.04864502,-87.35303497,354.04174805,353.21316528,223.29225159); //object(kmb_cam) (3)
CreateDynamicObject(3387,592.18200684,857.08758545,-87.03902435,0.00000000,0.00000000,0.00000000); //object(a51_srack3_) (1)
CreateDynamicObject(3387,592.19024658,856.08770752,-87.03902435,0.00000000,0.00000000,0.00000000); //object(a51_srack3_) (2)
CreateDynamicObject(3387,592.16955566,855.12414551,-87.03902435,0.00000000,0.00000000,0.00000000); //object(a51_srack3_) (3)
CreateDynamicObject(14855,629.89465332,856.10174561,-88.05695343,0.00000000,0.00000000,261.50000000); //object(counterb) (1)
CreateDynamicObject(8957,593.48791504,857.30523682,-90.28941345,0.00000000,0.00000000,270.00000000); //object(vgsespdr01) (1)
CreateDynamicObject(8957,593.59973145,854.81341553,-91.23956299,0.02835083,270.49926758,269.99987793); //object(vgsespdr01) (2)
CreateDynamicObject(2776,595.00518799,856.38317871,-90.64956665,0.00000000,0.00000000,0.00000000); //object(lee_stripchair2) (1)
CreateDynamicObject(3657,593.42749023,844.82995605,-90.68487549,0.00000000,0.00000000,90.00000000); //object(airseata_las) (1)
CreateDynamicObject(1215,593.27801514,846.91503906,-90.63876343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
CreateDynamicObject(1215,606.20446777,838.54064941,-90.63876343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
CreateDynamicObject(2603,598.73052979,859.89050293,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (1)
CreateDynamicObject(2603,605.04431152,860.02496338,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (2)
CreateDynamicObject(2603,607.45782471,859.71130371,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (3)
CreateDynamicObject(2603,612.94519043,859.16772461,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (4)
CreateDynamicObject(2603,615.77783203,859.77984619,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (5)
CreateDynamicObject(2603,622.72192383,859.67974854,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (6)
CreateDynamicObject(2596,584.77294922,847.07635498,-83.84789276,12.75000000,0.00000000,90.00000000); //object(cj_sex_tv) (1)
//SAEM by Manuel Lopez
CreateDynamicObject(3753, 2817.77, -2405.77, 2.91,   357.00, 0.00, 268.17);
CreateDynamicObject(8154, 2711.47, -2537.54, 15.48,   0.00, 0.00, 269.95);
CreateDynamicObject(3749, 2668.26, -2504.03, 18.44,   0.00, 0.00, 89.94);
CreateDynamicObject(8342, 2789.81, -2564.57, 15.35,   0.00, 0.00, 180.11);
CreateDynamicObject(8150, 2807.71, -2471.04, 15.57,   0.00, 0.00, 90.38);
CreateDynamicObject(3749, 2805.98, -2401.65, 18.40,   0.00, 0.00, 89.85);
CreateDynamicObject(8342, 2807.57, -2349.73, 15.35,   0.00, 0.00, 270.02);
CreateDynamicObject(8210, 2724.85, -2331.51, 15.38,   0.00, 0.00, 0.00);
CreateDynamicObject(8342, 2686.06, -2331.50, 15.35,   0.00, 0.00, 359.96);
CreateDynamicObject(3749, 2669.86, -2405.31, 18.44,   0.00, 0.00, 89.94);
CreateDynamicObject(8210, 2667.86, -2370.85, 15.27,   0.00, 0.00, 90.10);
CreateDynamicObject(8210, 2667.95, -2466.97, 15.27,   0.00, 0.00, 90.10);
CreateDynamicObject(8210, 2667.87, -2442.87, 15.27,   0.00, 0.00, 90.10);
CreateDynamicObject(3623, 2745.90, -2548.69, 17.07,   0.00, 0.00, 89.65);
CreateDynamicObject(16096, 2733.63, -2468.66, 14.50,   0.00, 0.00, 270.11);
CreateDynamicObject(16096, 2735.38, -2447.19, 14.50,   0.00, 0.00, 178.00);
CreateDynamicObject(16096, 2741.62, -2430.39, 14.50,   0.00, 0.00, 89.39);
CreateDynamicObject(3268, 2695.17, -2343.33, 12.62,   0.00, 0.00, 90.45);
CreateDynamicObject(9241, 2778.36, -2355.14, 14.45,   0.00, 0.00, 0.00);
CreateDynamicObject(3627, 2734.61, -2344.31, 16.46,   0.00, 0.00, 89.43);
CreateDynamicObject(3279, 2675.93, -2532.35, 12.24,   0.00, 0.00, 0.00);
CreateDynamicObject(16093, 2677.73, -2516.64, 16.47,   0.00, 0.00, 180.62);
CreateDynamicObject(16638, 2677.66, -2515.69, 14.77,   0.00, 0.00, 180.52);
CreateDynamicObject(3279, 2673.91, -2380.17, 12.24,   0.00, 0.00, 0.00);
CreateDynamicObject(16093, 2680.71, -2392.90, 16.47,   0.00, 0.00, 359.86);
CreateDynamicObject(16638, 2680.77, -2393.82, 14.77,   0.00, 0.00, 359.90);
CreateDynamicObject(3637, 2789.71, -2558.50, 20.01,   357.00, 0.00, 89.56);
CreateDynamicObject(9241, 2701.49, -2539.30, 14.45,   0.00, 0.00, 270.32);
CreateDynamicObject(10771, 2896.78, -2458.02, 6.86,   0.00, 0.00, -91.00);
CreateDynamicObject(10772, 2896.48, -2460.11, 18.65,   0.00, 0.00, 268.88);
CreateDynamicObject(10770, 2889.15, -2461.13, 40.01,   0.00, 0.00, 269.10);
CreateDynamicObject(11237, 2889.00, -2463.68, 39.98,   0.00, 0.00, 269.40);
CreateDynamicObject(11145, 2897.96, -2395.13, 5.54,   0.00, 0.00, -91.00);
CreateDynamicObject(11149, 2891.70, -2451.85, 13.33,   0.00, 0.00, 268.92);
CreateDynamicObject(11146, 2897.48, -2449.04, 13.70,   0.00, 0.00, 268.95);
CreateDynamicObject(16096, 2744.74, -2463.83, 14.50,   0.00, 0.00, 0.00);
CreateDynamicObject(10610, 2708.34, -2459.01, 23.14,   0.00, 0.00, 89.74);
CreateDynamicObject(9260, 2797.04, -2443.64, 17.77,   0.00, 0.00, 179.84);
CreateDynamicObject(17040, 2783.29, -2540.90, 12.59,   0.00, 0.00, 179.85);
CreateDynamicObject(9244, 2760.99, -2525.19, 17.78,   0.00, 0.00, 89.99);
CreateDynamicObject(1697, 2715.70, -2458.13, 35.16,   0.00, 0.00, 49.24);
CreateDynamicObject(1697, 2716.05, -2449.70, 35.16,   0.00, 0.00, 49.24);
CreateDynamicObject(1697, 2717.28, -2441.54, 35.16,   0.00, 0.00, 49.24);
CreateDynamicObject(1697, 2715.75, -2465.75, 35.16,   0.00, 0.00, 49.24);
CreateDynamicObject(1697, 2707.91, -2445.44, 35.16,   0.00, 0.00, 49.24);
CreateDynamicObject(1697, 2708.73, -2453.53, 35.16,   0.00, 0.00, 49.24);
CreateDynamicObject(1697, 2708.91, -2463.05, 35.16,   0.00, 0.00, 49.24);
CreateDynamicObject(3277, 2791.35, -2506.12, 13.43,   0.00, 0.00, 280.00);
CreateDynamicObject(3277, 2727.37, -2383.54, 13.43,   0.00, 0.00, 244.00);
CreateDynamicObject(3267, 2791.26, -2506.17, 13.52,   0.00, 0.00, 106.00);
CreateDynamicObject(3267, 2727.45, -2383.66, 13.72,   0.00, 0.00, 62.00);
saem1 = CreateDynamicObject(980, 2669.81, -2405.30, 15.44,   0.00, 0.00, 90.49);
saem2 = CreateDynamicObject(980, 2668.29, -2504.00, 15.44,   0.00, 0.00, 90.49);
saem3 = CreateDynamicObject(980, 2807.08, -2401.64, 15.44,   0.00, 0.00, 270.35);
// Oficina Saem by Manuel
CreateDynamicObject(13007, 1101.40, 1497.10, 6.70,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 1095.10, 1492.80, 7.00,   0.00, 0.00, 270.00);
CreateDynamicObject(7191, 1095.10, 1492.80, 7.50,   0.00, 0.00, 269.99);
CreateDynamicObject(7191, 1098.80, 1497.60, 7.10,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 1098.80, 1497.60, 7.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2292, 1104.40, 1499.10, 4.90,   0.00, 0.00, 90.00);
CreateDynamicObject(2291, 1105.90, 1499.10, 4.90,   0.00, 0.00, 180.00);
CreateDynamicObject(2291, 1106.90, 1499.10, 4.90,   0.00, 0.00, 179.99);
CreateDynamicObject(2291, 1107.90, 1499.10, 4.90,   0.00, 0.00, 179.99);
CreateDynamicObject(2197, 1104.20, 1502.90, 4.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2197, 1104.90, 1502.90, 4.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2197, 1103.20, 1502.90, 4.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1819, 1104.70, 1500.30, 4.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1510, 1105.30, 1500.60, 5.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1736, 1108.10, 1504.00, 7.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2002, 1108.50, 1499.20, 4.90,   0.00, 0.00, 180.00);
CreateDynamicObject(2828, 1109.40, 1501.70, 5.80,   0.00, 0.00, 20.00);
CreateDynamicObject(1670, 1105.20, 1501.00, 5.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 1101.40, 1493.40, 4.90,   0.00, 0.00, 180.00);
CreateDynamicObject(1724, 1102.90, 1493.40, 4.90,   0.00, 0.00, 180.00);
CreateDynamicObject(1722, 1101.50, 1500.00, 4.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1722, 1102.50, 1500.00, 4.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2957, 1110.80, 1494.10, 6.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1533, 1110.70, 1495.00, 4.70,   0.00, 0.00, 270.00);
CreateDynamicObject(1722, 1109.10, 1500.40, 4.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1722, 1107.90, 1500.40, 4.90,   0.00, 0.00, 0.00);
// Iglesia
CreateDynamicObject(9931,1486.55859375,837.69335938,-53.95624542,0.00000000,0.00000000,180.99975586); //object(church_sfe) (2)
CreateDynamicObject(9931,1485.95117188,870.78906250,-53.95635223,0.00000000,0.00000000,180.99975586); //object(church_sfe) (3)
CreateDynamicObject(3976,1489.52539062,835.36523438,-53.31316376,0.00000000,0.00000000,90.98876953); //object(policest02_lan) (1)
CreateDynamicObject(3976,1448.45214844,854.00976562,-49.58849335,0.00000000,0.00000000,180.24719238); //object(policest02_lan) (2)
CreateDynamicObject(11472,1492.43750000,854.27636719,-70.11368561,0.00000000,268.49768066,0.99975586); //object(des_swtstairs1) (2)
CreateDynamicObject(11472,1489.43359375,854.22167969,-70.18869019,0.00000000,268.24768066,0.99975586); //object(des_swtstairs1) (3)
CreateDynamicObject(6959,1480.74401855,851.49420166,-54.48571777,0.00000000,0.00000000,0.00000000); //object(vegasnbball1) (1)
CreateDynamicObject(2960,1491.72595215,854.18212891,-64.32915497,0.02041626,270.74963379,1.99993896); //object(kmb_beam) (2)
CreateDynamicObject(2960,1491.72863770,854.18023682,-65.28768158,0.02041626,270.74963379,1.99993896); //object(kmb_beam) (3)
CreateDynamicObject(2960,1491.70715332,854.12542725,-63.57369995,88.52954102,210.79498291,60.94931030); //object(kmb_beam) (4)
CreateDynamicObject(1698,1486.35900879,853.74407959,-70.09292603,0.00000000,0.00000000,0.25000000); //object(esc_step8) (1)
CreateDynamicObject(1698,1486.70971680,853.75299072,-69.92232513,0.00000000,0.00000000,0.25000000); //object(esc_step8) (2)
CreateDynamicObject(2946,1464.31726074,852.26568604,-70.05713654,0.00000000,0.00000000,359.75000000); //object(cr_door_03) (1)
CreateDynamicObject(2946,1464.34863281,855.48071289,-70.06368256,0.00000000,0.00000000,179.75000000); //object(cr_door_03) (2)
CreateDynamicObject(3872,1494.89172363,854.16369629,-60.79240799,0.00000000,145.24475098,0.00000000); //object(ws_floodbeams) (1)
CreateDynamicObject(3657,1478.32458496,857.01525879,-69.59547424,0.00000000,0.00000000,88.75000000); //object(airseata_las) (1)
CreateDynamicObject(3657,1476.19604492,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (2)
CreateDynamicObject(3657,1473.94482422,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (3)
CreateDynamicObject(3657,1471.98486328,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (4)
CreateDynamicObject(3657,1471.85913086,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (5)
CreateDynamicObject(3657,1473.80468750,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (6)
CreateDynamicObject(3657,1475.80883789,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (7)
CreateDynamicObject(3657,1478.21154785,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (8)
CreateDynamicObject(3439,1491.20922852,861.81793213,-66.00033569,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (1)
CreateDynamicObject(3439,1491.57543945,846.41058350,-66.00033569,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (2)
CreateDynamicObject(3462,1489.42199707,850.11035156,-67.92717743,0.00000000,0.00000000,0.25000000); //object(csrangel_lvs) (1)
CreateDynamicObject(3462,1489.32116699,857.82922363,-67.92613983,0.00000000,0.00000000,1.00000000); //object(csrangel_lvs) (2)
CreateDynamicObject(2868,1488.90454102,854.85382080,-68.58234406,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (1)
CreateDynamicObject(2868,1488.88110352,852.93615723,-68.55734253,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (2)
CreateDynamicObject(2207,1488.21228027,854.76940918,-69.36368561,0.00000000,0.00000000,269.75000000); //object(med_office7_desk_1) (1)
CreateDynamicObject(2894,1488.26757812,853.82714844,-68.58631134,0.00000000,0.00000000,270.00000000); //object(kmb_rhymesbook) (2)
CreateDynamicObject(2842,1484.55505371,853.26849365,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (1)
CreateDynamicObject(2842,1482.72216797,853.27215576,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (2)
CreateDynamicObject(2842,1480.89453125,853.28710938,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (3)
CreateDynamicObject(2842,1479.06896973,853.28985596,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (4)
CreateDynamicObject(2842,1477.25146484,853.28991699,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (5)
CreateDynamicObject(2842,1475.41406250,853.28125000,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (6)
CreateDynamicObject(2842,1473.60546875,853.27435303,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (7)
CreateDynamicObject(2842,1471.76989746,853.27740479,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (8)
CreateDynamicObject(2842,1469.94689941,853.26287842,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (9)
CreateDynamicObject(2842,1468.12060547,853.26165771,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (10)
CreateDynamicObject(2842,1466.29992676,853.25488281,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (11)
CreateDynamicObject(2842,1464.47155762,853.24865723,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (12)
CreateDynamicObject(1720,1491.69433594,852.16210938,-69.39298248,0.00000000,0.00000000,269.24743652); //object(rest_chair) (1)
CreateDynamicObject(1720,1491.70898438,851.42382812,-69.39285278,0.00000000,0.00000000,268.74462891); //object(rest_chair) (2)
CreateDynamicObject(948,1556.50170898,907.01184082,-83.20445251,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (1)
CreateDynamicObject(948,1486.81567383,858.92468262,-69.51581573,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (2)
CreateDynamicObject(948,1486.97290039,848.90582275,-69.51637268,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (3)
CreateDynamicObject(949,1472.10925293,861.92718506,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (1)
CreateDynamicObject(949,1478.15686035,861.93243408,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (2)
CreateDynamicObject(949,1477.97363281,846.08349609,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (3)
CreateDynamicObject(949,1471.76525879,845.77685547,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (4)
CreateDynamicObject(949,1467.48242188,856.13964844,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (5)
CreateDynamicObject(949,1467.33996582,851.61102295,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (6)
CreateDynamicObject(2842,1486.79052734,853.30078125,-69.51958466,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (13)
CreateDynamicObject(2842,1487.91479492,853.29595947,-69.48745728,0.00000000,356.00000000,0.00000000); //object(gb_bedrug04) (14)
CreateDynamicObject(3440,1468.04956055,846.46435547,-67.73719025,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (1)
CreateDynamicObject(3440,1468.30798340,861.13378906,-67.73719025,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (2)
CreateDynamicObject(1215,1468.03002930,846.44238281,-65.06007385,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,1468.33190918,861.07635498,-65.01007080,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(3657,1481.19042969,857.01464844,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (10)
CreateDynamicObject(3657,1481.05957031,850.52734375,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (11)
CreateDynamicObject(970,1488.38928223,860.21148682,-68.91707611,0.00000000,0.00000000,0.25000000); //object(fencesmallb) (1)
CreateDynamicObject(970,1488.60888672,847.72064209,-68.99224854,0.00000000,0.00000000,1.74682617); //object(fencesmallb) (2)
CreateDynamicObject(970,1486.54992676,849.75415039,-68.98716736,0.00000000,0.00000000,270.99682617); //object(fencesmallb) (3)
CreateDynamicObject(970,1486.34521484,858.05175781,-68.97917175,0.00000000,0.00000000,270.99426270); //object(fencesmallb) (4)
CreateDynamicObject(1215,1491.28063965,859.75567627,-68.83144379,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1215,1491.49182129,848.65087891,-68.83090973,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
// ============ Ayuntamiento LS (Edited Miami Roleplay) ================ //
CreateDynamicObject(10377, 1480.15, -1798.75, 30.61,   0.00, 0.00, 90.26);
CreateDynamicObject(6874, 1528.58, -1766.01, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(6874, 1429.57, -1764.35, 12.48,   0.00, 0.00, 180.12);
CreateDynamicObject(3439, 1494.00, -1780.17, 18.00,   0.00, 0.00, 350.43);
CreateDynamicObject(3439, 1466.07, -1780.35, 17.99,   0.00, 0.00, 1.57);
CreateDynamicObject(1215, 1482.30, -1779.69, 14.89,   0.00, 0.00, 358.04);
CreateDynamicObject(1215, 1477.82, -1779.71, 14.89,   0.00, 0.00, 358.04);
CreateDynamicObject(1597, 1479.53, -1758.94, 15.11,   0.00, 0.00, 0.00);
CreateDynamicObject(3439, 1479.91, -1753.50, 16.72,   0.00, 0.00, 359.09);
CreateDynamicObject(1215, 1476.80, -1758.52, 13.06,   0.00, 0.00, 1.73);
CreateDynamicObject(1215, 1479.89, -1754.73, 13.16,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1482.83, -1757.24, 12.91,   0.00, 0.00, 0.11);
CreateDynamicObject(1280, 1476.88, -1757.06, 12.90,   0.00, 0.00, 180.50);
CreateDynamicObject(1280, 1482.80, -1761.11, 12.90,   0.00, 0.00, 359.91);
CreateDynamicObject(1280, 1476.83, -1761.06, 12.90,   0.00, 0.00, 180.50);
CreateDynamicObject(1215, 1479.79, -1763.40, 13.06,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1482.77, -1758.67, 13.06,   0.00, 0.00, 1.73);
CreateDynamicObject(1215, 1476.85, -1759.63, 13.06,   0.00, 0.00, 1.73);
CreateDynamicObject(1215, 1508.72, -1763.50, 13.06,   0.00, 0.00, 1.73);
CreateDynamicObject(638, 1449.56, -1768.32, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1508.39, -1768.52, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1449.61, -1761.75, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1508.40, -1762.01, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1482.82, -1759.70, 13.06,   0.00, 0.00, 1.73);
CreateDynamicObject(1215, 1449.44, -1766.80, 13.06,   0.00, 0.00, 1.73);
CreateDynamicObject(1215, 1508.61, -1767.05, 13.06,   0.00, 0.00, 1.73);
CreateDynamicObject(1215, 1449.50, -1763.26, 13.06,   0.00, 0.00, 1.73);
CreateDynamicObject(1597, 1471.60, -1822.01, 15.08,   0.00, 0.00, 89.86);
CreateDynamicObject(1597, 1489.13, -1822.10, 15.08,   0.00, 0.00, 89.86);
CreateDynamicObject(1215, 1476.93, -1815.64, 14.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1476.06, -1821.88, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1467.14, -1821.86, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1483.50, -1815.61, 14.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1484.90, -1821.87, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1493.58, -1821.81, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(2942, 1476.80, -1779.51, 14.87,   0.00, 0.00, 181.11);
CreateDynamicObject(1251, 1537.48, -1678.15, 12.49,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1537.50, -1671.49, 12.49,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1537.48, -1667.16, 12.49,   0.00, 0.00, 0.00);
CreateDynamicObject(994, 1538.12, -1675.08, 12.59,   0.00, 0.00, 270.00);
CreateDynamicObject(994, 1538.10, -1663.88, 12.59,   0.00, 0.00, 270.25);
CreateDynamicObject(997, 1534.66, -1663.39, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(997, 1534.69, -1681.98, 12.55,   0.00, 0.00, 0.24);
CreateDynamicObject(8131, 1479.42, -1638.59, 23.84,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1488.00, -1663.63, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1485.91, -1665.49, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1483.90, -1667.12, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1481.50, -1668.44, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1479.06, -1664.83, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1477.57, -1663.31, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1476.10, -1664.59, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1475.14, -1666.38, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1474.21, -1668.05, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1472.96, -1666.16, 14.58,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1470.84, -1664.63, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(870, 1469.91, -1663.23, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1493.59, -1683.90, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1495.16, -1685.73, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1497.72, -1687.53, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1499.84, -1689.20, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1500.03, -1692.29, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1498.89, -1694.62, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1497.31, -1697.00, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1495.69, -1699.25, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1494.12, -1701.90, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1497.57, -1702.76, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1500.24, -1704.59, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1498.72, -1707.25, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1496.07, -1709.69, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1494.15, -1711.91, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1463.38, -1712.04, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1460.70, -1709.13, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1458.52, -1706.70, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1456.95, -1704.78, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1457.05, -1702.53, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1459.02, -1700.45, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1462.50, -1697.07, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1463.08, -1694.47, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1459.66, -1693.22, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1457.34, -1690.66, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1461.15, -1687.29, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1463.20, -1684.93, 14.00,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1459.75, -1683.92, 14.00,   0.00, 0.00, 0.00);
// Banco LS by Diego Gabriel
CreateDynamicObject(18023, 286.40, -1614.90, -71.20,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 293.20, -1620.70, -71.40,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 279.60, -1617.90, -71.40,   0.00, 0.00, 180.00);
CreateDynamicObject(7191, 286.80, -1625.60, -71.40,   0.00, 0.00, 270.00);
CreateDynamicObject(7191, 284.20, -1610.10, -71.40,   0.00, 0.00, 89.99);
CreateDynamicObject(10615, 266.30, -1653.60, -83.50,   0.00, 0.00, 146.00);
CreateDynamicObject(2286, 281.70, -1610.30, -70.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2946, 279.70, -1619.80, -73.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2946, 279.70, -1616.60, -73.30,   0.00, 0.00, 180.00);
CreateDynamicObject(1886, 279.90, -1625.20, -69.40,   12.00, 0.00, 134.00);
CreateDynamicObject(1886, 292.80, -1610.50, -69.30,   6.00, 0.00, 313.99);
CreateDynamicObject(1808, 283.10, -1610.40, -73.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2008, 288.70, -1611.70, -73.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2008, 288.70, -1613.70, -73.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2008, 288.70, -1615.70, -73.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2008, 288.70, -1617.70, -73.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2008, 288.70, -1619.70, -73.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2008, 288.70, -1621.70, -73.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2008, 288.70, -1623.70, -73.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1715, 290.00, -1622.80, -73.30,   0.00, 0.00, 270.00);
CreateDynamicObject(1715, 290.00, -1620.80, -73.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1715, 290.00, -1618.80, -73.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1715, 290.00, -1616.70, -73.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1715, 290.00, -1614.80, -73.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1715, 290.00, -1612.90, -73.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1715, 290.00, -1611.00, -73.30,   0.00, 0.00, 269.99);
CreateDynamicObject(2828, 288.60, -1623.50, -72.50,   0.00, 0.00, 284.00);
CreateDynamicObject(2828, 288.60, -1617.50, -72.50,   0.00, 0.00, 284.00);
CreateDynamicObject(2828, 288.60, -1613.50, -72.50,   0.00, 0.00, 284.00);
CreateDynamicObject(2829, 288.70, -1621.50, -72.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2186, 292.60, -1618.10, -73.30,   0.00, 0.00, 270.00);
CreateDynamicObject(1808, 292.70, -1610.40, -73.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2634, 293.10, -1612.60, -72.10,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 288.30, -1618.50, -70.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1491, 289.10, -1625.60, -74.90,   0.00, 0.00, 90.00);
CreateDynamicObject(2754, 282.53, -1625.30, -72.30,   0.00, 0.00, 269.99);
CreateDynamicObject(2754, 284.51, -1625.34, -72.30,   0.00, 0.00, 266.94);
CreateDynamicObject(2754, 280.59, -1625.31, -72.30,   0.00, 0.00, 269.99);
CreateDynamicObject(3851, 288.30, -1607.20, -70.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2608, 291.10, -1610.50, -72.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2609, 292.80, -1615.20, -72.50,   0.00, 0.00, 270.00);
CreateDynamicObject(2164, 293.10, -1616.10, -73.30,   0.00, 0.00, 270.00);
CreateDynamicObject(2167, 293.10, -1614.40, -73.30,   0.00, 0.00, 270.00);
CreateDynamicObject(2191, 292.60, -1620.00, -73.30,   0.00, 0.00, 270.00);
CreateDynamicObject(2199, 293.00, -1621.50, -73.30,   0.00, 0.00, 270.00);
CreateDynamicObject(2161, 293.10, -1623.20, -73.30,   0.00, 0.00, 268.00);
CreateDynamicObject(2197, 292.10, -1624.80, -73.30,   0.00, 0.00, 270.00);
CreateDynamicObject(1703, 284.10, -1610.70, -73.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2258, 286.59, -1610.22, -70.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2261, 280.20, -1614.50, -71.30,   0.00, 0.00, 92.00);
CreateDynamicObject(2266, 280.20, -1623.10, -71.40,   0.00, 0.00, 88.00);
CreateDynamicObject(1886, 288.70, -1610.50, -69.50,   12.00, 0.00, 51.99);
CreateDynamicObject(1703, 280.20, -1610.70, -73.30,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 258.40, -1583.90, -71.30,   0.00, 0.00, 89.99);
CreateDynamicObject(7191, 261.80, -1596.50, -71.30,   0.00, 0.00, 269.99);
CreateDynamicObject(7191, 256.80, -1595.20, -71.30,   0.00, 0.00, 179.99);
CreateDynamicObject(7191, 274.50, -1588.80, -71.30,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 272.50, -1587.60, -69.40,   0.00, 270.00, 0.00);
CreateDynamicObject(7191, 268.60, -1593.20, -69.40,   0.00, 270.00, 0.00);
CreateDynamicObject(7191, 264.90, -1590.30, -69.40,   0.00, 270.00, 0.00);
CreateDynamicObject(7191, 261.00, -1585.20, -69.40,   0.00, 270.00, 0.00);
CreateDynamicObject(7191, 257.20, -1585.30, -69.40,   0.00, 270.00, 0.00);
CreateDynamicObject(10841, 265.70, -1583.70, -65.30,   0.00, 0.00, 0.00);
CreateDynamicObject(10841, 264.00, -1596.70, -65.30,   0.00, 0.00, 180.00);
CreateDynamicObject(10841, 256.90, -1589.70, -65.30,   0.00, 0.00, 92.00);
CreateDynamicObject(10841, 274.80, -1589.30, -65.30,   0.00, 0.00, 270.00);
CreateDynamicObject(3069, 259.60, -1596.20, -73.20,   354.00, 0.00, 0.00);
CreateDynamicObject(3069, 265.60, -1596.30, -73.20,   354.00, 0.00, 0.00);
CreateDynamicObject(3069, 271.50, -1596.10, -73.20,   354.00, 0.00, 0.00);
CreateDynamicObject(3069, 271.10, -1584.10, -69.50,   6.00, 180.00, 180.00);
CreateDynamicObject(3069, 265.20, -1584.10, -69.50,   6.00, 179.99, 179.99);
CreateDynamicObject(3069, 259.30, -1584.30, -69.50,   6.00, 179.99, 179.99);
CreateDynamicObject(2634, 274.20, -1590.50, -71.80,   0.00, 0.00, 90.00);
CreateDynamicObject(1550, 258.20, -1595.70, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 258.30, -1594.40, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 258.20, -1595.00, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 258.70, -1595.40, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 259.00, -1594.70, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 259.10, -1593.80, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 258.40, -1593.60, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 259.50, -1595.10, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 260.80, -1593.10, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 260.00, -1593.20, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 260.30, -1594.60, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 261.80, -1586.80, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 260.30, -1588.20, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 261.80, -1589.70, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 263.40, -1588.10, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 260.50, -1589.40, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 259.90, -1591.20, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 262.50, -1591.10, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 263.30, -1589.00, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 262.10, -1590.50, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 261.90, -1592.40, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 262.10, -1593.90, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 263.80, -1592.20, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 259.20, -1592.70, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 258.60, -1591.10, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 260.40, -1591.90, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 260.50, -1590.60, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 261.30, -1591.40, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 258.30, -1592.30, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 258.20, -1589.60, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 259.40, -1589.70, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 259.90, -1595.50, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 261.20, -1595.60, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 262.40, -1595.60, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 263.40, -1595.60, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 262.90, -1595.10, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 261.80, -1595.10, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 261.00, -1594.80, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 262.10, -1594.50, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 263.20, -1594.30, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 259.90, -1593.90, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 262.20, -1593.10, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 262.50, -1591.90, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 262.90, -1592.50, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 263.40, -1593.40, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 261.20, -1593.90, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1550, 260.80, -1592.30, -72.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1212, 261.60, -1588.60, -73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1212, 263.00, -1591.60, -73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1212, 262.20, -1592.80, -73.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1212, 263.40, -1588.40, -73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1212, 260.20, -1591.00, -73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1212, 263.60, -1593.10, -73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1212, 258.60, -1595.10, -73.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1886, 273.60, -1584.60, -69.60,   6.00, 0.00, 313.99);
	// -====================== LSPD Interior (by CodeMan) =============================-
	CreateDynamicObject(2886, 244.84130859375, 77.09822845459, 1003.8363037109, 0, 0, 90, 0, 6);
	CreateDynamicObject(2886, 247.96560668945, 74.597625732422, 1003.8363037109, 0, 0, 270, 0, 6);
	CreateDynamicObject(2886, 226.36407470703, 73.719345092773, 1005.2398681641, 0, 0, 90, 0, 6);
	CreateDynamicObject(2615, 216.92349243164, 67.561538696289, 1005.8748779297, 0, 0, 90.030029296875, 0, 6);
	CreateDynamicObject(2612, 220.72543334961, 72.770309448242, 1006.1749267578, 0, 0, 0, 0, 6);
	CreateDynamicObject(2616, 216.97341918945, 70.674957275391, 1005.9150390625, 0, 0, 90.060028076172, 0, 6);
	CreateDynamicObject(2614, 221.81564331055, 67.515487670898, 1005.6319580078, 0, 0, 269.96008300781, 0, 6);
	CreateDynamicObject(1810, 220.21421813965, 67.719902038574, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.2138671875, 69.069717407227, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.2138671875, 70.769348144531, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.2138671875, 72.093589782715, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 72.0927734375, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 70.667762756348, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 69.016967773438, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 67.666595458984, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 66.266036987305, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.18887329102, 66.265625, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(2180, 255.23165893555, 82.261199951172, 1001.4453125, 0, 0, 90, 0, 6);
	CreateDynamicObject(2180, 255.2314453125, 84.18579864502, 1001.4453125, 0, 0, 90, 0, 6);
	CreateDynamicObject(2180, 255.2314453125, 86.085540771484, 1001.4453125, 0, 0, 90, 0, 6);
	CreateDynamicObject(2073, 255.19268798828, 83.772262573242, 1004.3923950195, 0, 0, 0, 0, 6);
	CreateDynamicObject(2073, 255.1923828125, 87.521484375, 1004.3923950195, 0, 0, 0, 0, 6);
	CreateDynamicObject(2121, 256.74890136719, 82.969360351563, 1001.9585571289, 0, 0, 270, 0, 6);
	CreateDynamicObject(2121, 256.748046875, 84.793815612793, 1001.9585571289, 0, 0, 270, 0, 6);
	CreateDynamicObject(2121, 256.748046875, 86.717994689941, 1001.9585571289, 0, 0, 270, 0, 6);
	CreateDynamicObject(2121, 253.64807128906, 82.96875, 1001.9585571289, 0, 0, 90, 0, 6);
	CreateDynamicObject(2121, 253.6474609375, 84.69376373291, 1001.9585571289, 0, 0, 90, 0, 6);
	CreateDynamicObject(2121, 253.6474609375, 86.593383789063, 1001.9585571289, 0, 0, 90, 0, 6);
	CreateDynamicObject(1649, 255.92436218262, 83.734672546387, 1003.0633544922, 0, 0, 0, 0, 6);
	CreateDynamicObject(1649, 255.923828125, 83.909400939941, 1003.0633544922, 0, 0, 180, 0, 6);
	CreateDynamicObject(1649, 255.923828125, 85.683441162109, 1003.0633544922, 0, 0, 179.99450683594, 0, 6);
	CreateDynamicObject(1649, 255.923828125, 85.859474182129, 1003.0633544922, 0, 0, 0, 0, 6);
	CreateDynamicObject(2922, 250.87344360352, 88.255447387695, 1003.1617431641, 0, 0, 272.65997314453, 0, 6);
	CreateDynamicObject(2966, 255.19311523438, 86.556129455566, 1002.2766723633, 0, 0, 0, 0, 6);
	CreateDynamicObject(2967, 255.20861816406, 84.935287475586, 1002.2469482422, 0, 0, 0, 0, 6);
	CreateDynamicObject(2967, 255.14236450195, 82.912994384766, 1002.2469482422, 0, 0, 0, 0, 6);
	CreateDynamicObject(1649, 255.31187438965, 84.655776977539, 1003.1110839844, 0, 0, 89.325012207031, 0, 6);
	CreateDynamicObject(1649, 255.3115234375, 84.6552734375, 1003.1110839844, 0, 0, 272.01943969727, 0, 6);
	CreateDynamicObject(1892, 246.2585144043, 63.024715423584, 1002.640625, 0, 0, 0, 0, 6);
	CreateDynamicObject(1737, 217.97715759277, 76.868797302246, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1649, 218.17239379883, 73.885864257813, 1007.0811767578, 0, 0, 179.98498535156, 0, 6);
	CreateDynamicObject(1737, 217.9765625, 78.418212890625, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.9765625, 79.918060302734, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.02679443359, 79.91796875, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.0263671875, 76.86784362793, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.0263671875, 78.392280578613, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1810, 217.42031860352, 75.677513122559, 1004.0390625, 0, 0, 180, 0, 6);
	CreateDynamicObject(1616, 221.47817993164, 74.085952758789, 1007.4117431641, 0, 0, 0, 0, 6);
	CreateDynamicObject(2595, 217.28680419922, 79.932136535645, 1005.1920166016, 0, 0, 316.32998657227, 0, 6);
	CreateDynamicObject(1665, 217.67994689941, 76.964950561523, 1004.8448486328, 0, 0, 0, 0, 6);
// -=========== 24/7 Unity By Rodrigo Sepulveda =====================- //
CreateDynamicObject(1649, 1833.60, -1852.80, 14.20,   0.00, 0.00, 89.58);
CreateDynamicObject(9131, 1833.60, -1855.30, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(9131, 1833.60, -1855.30, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1833.60, -1857.60, 14.20,   0.00, 0.00, 89.83);
CreateDynamicObject(9131, 1833.60, -1859.60, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(9131, 1833.60, -1859.60, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1845.80, -1862.20, 14.20,   0.00, 0.00, 90.10);
CreateDynamicObject(1649, 1845.80, -1867.10, 14.20,   0.00, 0.00, 89.74);
CreateDynamicObject(9131, 1846.10, -1864.60, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(9131, 1846.10, -1869.50, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(9131, 1846.10, -1869.50, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(9131, 1846.10, -1864.60, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1845.80, -1871.80, 14.20,   0.00, 0.00, 89.97);
CreateDynamicObject(9131, 1846.00, -1874.20, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(9131, 1846.00, -1874.20, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1844.00, -1874.10, 14.10,   0.00, 0.00, 359.91);
CreateDynamicObject(9131, 1841.50, -1874.40, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(9131, 1841.50, -1874.40, 14.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1834.20, -1874.10, 14.10,   0.00, 0.00, 0.04);
CreateDynamicObject(9131, 1836.60, -1874.30, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(9131, 1836.60, -1874.30, 14.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1833.69, -1832.52, 14.30,   0.00, 0.00, 90.68);
CreateDynamicObject(9131, 1833.60, -1830.30, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(9131, 1833.60, -1830.30, 14.80,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1845.70, -1863.20, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1845.70, -1869.60, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1845.70, -1871.20, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1842.50, -1874.00, 13.10,   0.00, 0.00, 270.00);
CreateDynamicObject(983, 1836.00, -1873.90, 13.10,   0.00, 0.00, 269.99);
CreateDynamicObject(983, 1835.10, -1873.90, 13.10,   0.00, 0.00, 269.99);
CreateDynamicObject(970, 1833.40, -1840.60, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1833.40, -1844.60, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1827.50, -1834.40, 12.70,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1827.50, -1850.30, 12.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1831.30, -1840.70, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1831.30, -1844.60, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1831.70, -1860.30, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1831.30, -1874.10, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1845.50, -1860.20, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1845.60, -1873.90, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1843.00, -1851.30, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1832.00, -1865.20, 11.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3578, 1832.00, -1869.00, 11.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1833.60, -1832.50, 14.30,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, 1833.60, -1852.80, 14.20,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, 1833.60, -1857.60, 14.20,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, 1834.20, -1874.10, 14.10,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 1839.00, -1874.10, 14.10,   0.00, 0.00, 359.92);
CreateDynamicObject(1649, 1839.00, -1874.10, 14.10,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 1844.00, -1874.10, 14.10,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, 1845.80, -1871.80, 14.20,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, 1845.80, -1867.10, 14.20,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, 1845.80, -1862.20, 14.20,   0.00, 0.00, 269.99);
CreateDynamicObject(971, 1843.26, -1855.43, 11.88,   0.00, 0.00, 270.00);
// LSPD Exterior by Manuel Lopez
CreateDynamicObject(3749, 1545.80, -1627.72, 18.20,   0.00, 0.00, 270.00);
CreateDynamicObject(3475, 1545.10, -1638.30, 14.90,   0.00, 0.00, 330.00);
CreateDynamicObject(8673, 1550.10, -1602.40, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(8673, 1570.50, -1602.40, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(8673, 1590.90, -1602.40, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(8673, 1597.90, -1602.40, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(8674, 1607.90, -1607.50, 17.40,   0.00, 0.00, 270.00);
CreateDynamicObject(8674, 1607.90, -1617.80, 17.40,   0.00, 0.00, 270.00);
CreateDynamicObject(8674, 1607.90, -1628.10, 17.40,   0.00, 0.00, 270.00);
CreateDynamicObject(8674, 1607.90, -1632.80, 17.40,   0.00, 0.00, 270.00);
CreateDynamicObject(8674, 1602.70, -1637.90, 17.40,   0.00, 0.00, 180.00);
CreateDynamicObject(8674, 1539.60, -1607.60, 17.40,   0.00, 0.00, 270.00);
CreateDynamicObject(8674, 1539.60, -1612.60, 17.40,   0.00, 0.00, 270.00);
CreateDynamicObject(8674, 1544.80, -1617.80, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2886, 1547.60, -1621.70, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1238, 1559.60, -1620.10, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(8557, 1587.70, -1605.20, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1238, 1560.60, -1620.10, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1238, 1561.60, -1620.10, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1238, 1562.60, -1620.10, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1237, 1574.10, -1620.30, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1605.40, -1606.80, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1552.80, -1679.70, 13.30,   0.00, 0.00, 270.00);
CreateDynamicObject(984, 1556.10, -1621.60, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(3578, 1553.70, -1619.90, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1568.60, -1619.90, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1237, 1574.10, -1619.50, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1237, 1574.70, -1619.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1568.90, -1621.60, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(984, 1556.00, -1617.60, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(984, 1568.80, -1617.60, 13.20,   0.00, 0.00, 270.00);
CreateDynamicObject(1251, 1598.00, -1606.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1591.00, -1606.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1584.00, -1606.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1577.00, -1606.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1570.00, -1606.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(8557, 1566.70, -1605.20, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1563.00, -1606.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1556.00, -1606.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1549.00, -1606.90, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(11489, 1556.80, -1675.80, 26.40,   0.00, 0.00, 270.00);
CreateDynamicObject(16003, 1565.30, -1665.70, 28.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1360, 1552.80, -1671.50, 13.30,   0.00, 0.00, 270.00);
CreateDynamicObject(2606, 1578.50, -1633.40, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2356, 1579.30, -1634.70, 12.60,   0.00, 0.00, 30.00);
CreateDynamicObject(2002, 1577.90, -1634.60, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(2190, 1580.40, -1633.40, 13.70,   0.00, 0.00, 326.00);
CreateDynamicObject(2595, 1581.50, -1633.60, 14.00,   0.00, 0.00, 238.00);
CreateDynamicObject(2812, 1581.50, -1635.40, 13.70,   0.00, 0.00, 280.00);
CreateDynamicObject(1665, 1580.60, -1633.60, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1455, 1580.80, -1633.60, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2342, 1581.60, -1636.20, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2222, 1581.40, -1634.50, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2500, 1581.80, -1637.10, 13.70,   0.00, 0.00, 270.00);
CreateDynamicObject(1344, 1606.40, -1637.10, 13.50,   0.00, 0.00, 182.00);
CreateDynamicObject(1415, 1604.20, -1637.20, 12.70,   0.00, 0.00, 180.00);
CreateDynamicObject(1440, 1601.90, -1637.00, 13.20,   0.00, 0.00, 180.00);
CreateDynamicObject(2356, 1580.40, -1634.70, 12.60,   0.00, 0.00, 356.00);
CreateDynamicObject(1257, 1538.10, -1690.40, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(1216, 1545.90, -1700.70, 13.20,   0.00, 0.00, 180.00);

// Taxis Unity by Gus

CreateDynamicObject(870, 1790.00000, -1883.09998, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1791.19995, -1883.30005, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1792.69995, -1883.19995, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1794.30005, -1883.30005, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1795.69995, -1883.19995, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1797.30005, -1883.30005, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1798.69995, -1883.09998, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1800.19995, -1883.09998, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1801.69995, -1883.09998, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1803.09998, -1883.19995, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1804.90002, -1883.09998, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1806.50000, -1883.30005, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1807.90002, -1883.30005, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1806.59998, -1883.30005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1802.40002, -1883.19995, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1798.09998, -1883.09998, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1794.19995, -1883.09998, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1791.00000, -1882.90002, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1790.40002, -1883.19995, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1794.80005, -1883.30005, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1799.00000, -1883.19995, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1803.40002, -1883.19995, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1807.50000, -1883.00000, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, 1806.69995, -1922.69995, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, 1806.69995, -1911.50000, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1803.50000, -1935.50000, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1803.50000, -1898.69995, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1784.69995, -1935.59998, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1778.30005, -1935.59998, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1791.09998, -1935.59998, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1794.19995, -1932.40002, 13.10000,   0.00000, 0.00000, 182.00000);
CreateDynamicObject(983, 1776.69995, -1935.59998, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1215, 1792.30005, -1882.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1797.09998, -1882.80005, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1801.30005, -1882.90002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1805.59998, -1882.90002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1811.57996, -1897.31006, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1811.59998, -1883.00000, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1807.69995, -1925.19995, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1807.50000, -1913.59998, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1789.50000, -1936.09998, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1779.90002, -1936.09998, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(966, 1811.62854, -1885.96936, 12.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1801.50000, -1884.50000, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1807.90002, -1884.50000, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1795.09998, -1884.50000, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1791.90002, -1884.50000, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(968, 1811.62927, -1885.88855, 13.00000,   0.00000, 0.00000, 267.57999);
CreateDynamicObject(1237, 1811.59998, -1894.19995, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1237, 1811.60034, -1884.99744, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3458, 1804.96582, -1917.97937, 13.88402,   0.00000, 0.00000, 90.09998);
CreateDynamicObject(3458, 1789.41345, -1933.88074, 13.88402,   0.00000, 0.00000, -0.00001);
CreateDynamicObject(4597, 1787.84900, -1934.98132, 12.08905,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(4697, 1813.08069, -1923.31519, 12.39946,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1769.45654, -1904.98938, 13.11642,   0.00000, 0.00000, 90.20002);
CreateDynamicObject(970, 1769.44226, -1900.79956, 13.11642,   0.00000, 0.00000, 90.20002);
CreateDynamicObject(970, 1769.38989, -1885.92810, 13.11642,   0.00000, 0.00000, 90.20002);
CreateDynamicObject(970, 1769.40430, -1890.11865, 13.11642,   0.00000, 0.00000, 90.20002);
CreateDynamicObject(970, 1769.43347, -1898.71826, 13.11642,   0.00000, 0.00000, 90.20002);
CreateDynamicObject(1368, 1766.77734, -1906.56897, 13.27558,   0.00000, 0.00000, -179.30005);
CreateDynamicObject(1368, 1762.90759, -1906.61621, 13.26558,   0.00000, 0.00000, -179.30005);
CreateDynamicObject(1368, 1758.95789, -1906.66443, 13.26558,   0.00000, 0.00000, -179.30005);
CreateDynamicObject(1368, 1766.89380, -1884.34937, 13.27558,   0.00000, 0.00000, -0.30007);
CreateDynamicObject(1368, 1763.01343, -1884.32922, 13.27558,   0.00000, 0.00000, -0.30007);
CreateDynamicObject(1368, 1759.01367, -1884.30884, 13.27558,   0.00000, 0.00000, -0.30007);
CreateDynamicObject(951, 1762.68958, -1894.78101, 13.31441,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1790.00000, -1883.09998, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1791.19995, -1883.30005, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1792.69995, -1883.19995, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1794.30005, -1883.30005, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1795.69995, -1883.19995, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1797.30005, -1883.30005, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1798.69995, -1883.09998, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1800.19995, -1883.09998, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1801.69995, -1883.09998, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1803.09998, -1883.19995, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1804.90002, -1883.09998, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1806.50000, -1883.30005, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1807.90002, -1883.30005, 12.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1806.59998, -1883.30005, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1802.40002, -1883.19995, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1798.09998, -1883.09998, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1794.19995, -1883.09998, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1791.00000, -1882.90002, 13.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1790.40002, -1883.19995, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1794.80005, -1883.30005, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1799.00000, -1883.19995, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1803.40002, -1883.19995, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(738, 1807.50000, -1883.00000, 12.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, 1806.69995, -1922.69995, 13.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, 1806.69995, -1911.50000, 13.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(983, 1803.50000, -1935.50000, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1803.50000, -1898.69995, 13.10000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1784.69995, -1935.59998, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1778.30005, -1935.59998, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1791.09998, -1935.59998, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1794.19995, -1932.40002, 13.10000,   0.00000, 0.00000, 182.00000);
CreateDynamicObject(983, 1776.69995, -1935.59998, 13.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1215, 1792.30005, -1882.69995, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1797.09998, -1882.80005, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1801.30005, -1882.90002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1805.59998, -1882.90002, 13.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1811.57996, -1897.31006, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1811.59998, -1883.00000, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1807.69995, -1925.19995, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1807.50000, -1913.59998, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1789.50000, -1936.09998, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1779.90002, -1936.09998, 15.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(966, 1811.62854, -1885.96936, 12.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 1801.50000, -1884.50000, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1807.90002, -1884.50000, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1795.09998, -1884.50000, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(983, 1791.90002, -1884.50000, 13.30000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(968, 1811.62927, -1885.88855, 13.00000,   0.00000, 0.00000, 267.57999);
CreateDynamicObject(1237, 1811.59998, -1894.19995, 12.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1237, 1811.60034, -1884.99744, 12.40000,   0.00000, 0.00000, 0.00000);


//======================== Ammunation ================================================
	CreateDynamicObject(2047,1367.59350586,-1279.90527344,15.86694527,0.00000000,0.00000000,270.00000000); //object(cj_flag1) (1)
	CreateDynamicObject(1251,1366.05517578,-1266.16882324,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (1)
	CreateDynamicObject(1251,1366.05517578,-1262.91943359,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (2)
	CreateDynamicObject(1251,1366.05517578,-1259.67529297,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (3)
	CreateDynamicObject(1251,1366.05517578,-1256.17651367,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (4)
	CreateDynamicObject(1251,1366.05517578,-1286.14843750,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (5)
	CreateDynamicObject(1251,1366.05517578,-1289.39526367,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (6)
	CreateDynamicObject(1251,1366.05517578,-1292.64135742,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (7)
	CreateDynamicObject(1251,1366.05517578,-1295.62744141,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (8)
	CreateDynamicObject(1251,1366.05517578,-1298.55078125,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (9)
	CreateDynamicObject(1251,1366.05517578,-1301.59936523,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (10)
	CreateDynamicObject(1280,1367.09094238,-1284.11254883,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (1)
	CreateDynamicObject(1280,1367.09094238,-1275.11230469,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (2)
	CreateDynamicObject(1280,1367.09094238,-1267.90014648,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (3)
	CreateDynamicObject(1280,1367.09094238,-1304.78930664,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (4)
	CreateDynamicObject(10236,1363.70874023,-1294.72070312,30.58548737,0.00000000,0.00000000,0.00000000); //object(hotelbits_sfe06) (1)
	CreateDynamicObject(10236,1363.70874023,-1262.82409668,30.58548737,0.00000000,0.00000000,0.00000000); //object(hotelbits_sfe06) (3)
	CreateDynamicObject(970,1365.57482910,-1285.63012695,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1365.57482910,-1273.58715820,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1365.57482910,-1266.47985840,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1365.57482910,-1302.76013184,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(2035,1369.34790039,-1280.56286621,14.44631386,63.67941284,85.95184326,2.51452637); //object(cj_m16) (1)
	CreateDynamicObject(2035,1369.23596191,-1279.04162598,14.44631386,63.67675781,85.95153809,192.51039124); //object(cj_m16) (2)
	// -====================================== Floristeria ===================================- //
	CreateDynamicObject(1571,1413.62756348,-1717.96020508,13.87769127,0.00000000,0.00000000,84.00000000); //object(cj_noodle_1) (1)
	CreateDynamicObject(638,1413.49511719,-1719.98754883,13.24390888,0.00000000,0.00000000,264.00000000); //object(kb_planter_bush) (2)
	CreateDynamicObject(638,1410.89611816,-1714.25329590,12.99390888,0.00000000,0.00000000,173.99597168); //object(kb_planter_bush) (3)
	CreateDynamicObject(638,1411.52563477,-1714.32128906,12.99390888,0.00000000,0.00000000,354.49597168); //object(kb_planter_bush) (4)
	CreateDynamicObject(638,1411.78723145,-1711.80737305,12.99390888,0.00000000,0.00000000,352.74597168); //object(kb_planter_bush) (5)
	CreateDynamicObject(638,1411.18347168,-1711.72937012,12.99390888,0.00000000,0.00000000,352.74353027); //object(kb_planter_bush) (6)
	CreateDynamicObject(638,1411.99230957,-1710.23767090,12.99390888,0.00000000,0.00000000,352.74597168); //object(kb_planter_bush) (7)
	CreateDynamicObject(638,1411.44262695,-1710.16870117,12.99390888,0.00000000,0.00000000,352.74597168); //object(kb_planter_bush) (8)
	CreateDynamicObject(949,1412.29260254,-1719.13647461,13.55325699,0.00000000,0.00000000,326.00000000); //object(plant_pot_4) (1)
	CreateDynamicObject(1361,1412.51306152,-1715.24926758,13.29021835,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (2)
	CreateDynamicObject(1807,1412.71105957,-1710.17358398,13.09504414,0.00000000,0.00000000,172.00000000); //object(cj_mediumpots1) (1)
	CreateDynamicObject(1570,1412.93066406,-1712.57226562,13.87800121,0.00000000,0.00000000,87.99499512); //object(cj_noodle_3) (1)
	CreateDynamicObject(2010,1412.70520020,-1716.28869629,12.78391838,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (1)
	CreateDynamicObject(2194,1413.42187500,-1712.11816406,13.48869896,0.00000000,0.00000000,0.00000000); //object(plant_pot_2) (1)
	CreateDynamicObject(2195,1412.96240234,-1712.27197266,13.90500259,0.00000000,0.00000000,0.00000000); //object(plant_pot_3) (1)
	CreateDynamicObject(2245,1413.04101562,-1712.84667969,13.79286861,0.00000000,0.00000000,0.00000000); //object(plant_pot_11) (1)
	CreateDynamicObject(2251,1413.37597656,-1712.58593750,14.14997768,0.00000000,0.00000000,0.00000000); //object(plant_pot_20) (1)
	CreateDynamicObject(2253,1412.91113281,-1713.90234375,13.81469631,0.00000000,0.00000000,0.00000000); //object(plant_pot_22) (1)
	CreateDynamicObject(2345,1413.88659668,-1713.32983398,14.64687729,0.00000000,0.00000000,88.00000000); //object(plant_pot_23) (1)
	CreateDynamicObject(2811,1413.08593750,-1713.40942383,13.44913387,0.00000000,0.00000000,0.00000000); //object(gb_romanpot01) (1)
	CreateDynamicObject(3802,1415.30041504,-1715.97839355,15.01242733,0.00000000,0.00000000,18.75000000); //object(sfx_plant03) (1)
	CreateDynamicObject(2895,1414.75939941,-1716.50488281,13.92855644,0.00000000,0.00000000,0.00000000); //object(fun_flower_law) (1)
	CreateDynamicObject(941,1412.61584473,-1717.52844238,13.18401051,0.00000000,0.00000000,267.75000000); //object(cj_df_worktop_3) (1)
	CreateDynamicObject(1359,1414.95214844,-1715.70996094,13.24543190,0.00000000,0.00000000,0.00000000); //object(cj_bin1) (1)
	CreateDynamicObject(2369,1414.58142090,-1718.62841797,13.66830826,0.00000000,0.00000000,86.50000000); //object(cj_till) (1)
	CreateDynamicObject(2194,1412.78466797,-1717.14062500,13.89698315,0.00000000,0.00000000,0.00000000); //object(plant_pot_2) (1)
	CreateDynamicObject(2245,1412.72778320,-1717.68127441,13.95284081,0.00000000,0.00000000,0.00000000); //object(plant_pot_11) (1)
	CreateDynamicObject(2253,1412.54492188,-1718.52319336,13.95878601,0.00000000,0.00000000,0.00000000); //object(plant_pot_22) (1)
	CreateDynamicObject(2194,1415.13403320,-1716.55358887,13.99495029,0.00000000,0.00000000,0.00000000); //object(plant_pot_2) (1)
	CreateDynamicObject(1215,1414.95971680,-1719.68066406,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1413.61108398,-1711.04553223,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(3109,1412.73559570,-1715.90612793,13.86344910,0.00000000,0.00000000,264.00000000); //object(imy_la_door) (1)
    // -=========================== [Bowling Interior] by Greate FelipekxD! =======================================-
	CreateDynamicObject(6066,-2338.11230469,907.33886719,95.13129425,0.00000000,0.00000000,0.00000000); //convertffs(1)
	CreateDynamicObject(6066,-2337.96484375,918.02246094,95.13129425,0.00000000,0.00000000,0.00000000); //convertffs(2)
	CreateDynamicObject(3819,-2363.83105469,904.21765137,92.63438416,0.00000000,0.00000000,179.91210938); //convertffs(4)
	CreateDynamicObject(7617,-2336.66894531,906.78698730,94.02362061,0.00000000,0.00000000,89.32434082); //convertffs(5)
	CreateDynamicObject(1251,-2345.10791016,923.32342529,92.73552704,0.00000000,0.00000000,269.95434570); //convertffs(6)
	CreateDynamicObject(1251,-2351.31958008,923.32366943,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(7)
	CreateDynamicObject(1251,-2344.53515625,918.07617188,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(8)
	CreateDynamicObject(1251,-2351.43286133,918.07012939,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(9)
	CreateDynamicObject(1251,-2354.90722656,920.69732666,92.73552704,0.00000000,0.00000000,180.63439941); //convertffs(10)
	CreateDynamicObject(1251,-2345.32104492,912.64587402,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(11)
	CreateDynamicObject(1251,-2351.53417969,912.63867188,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(12)
	CreateDynamicObject(1251,-2344.61425781,907.32592773,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(13)
	CreateDynamicObject(1251,-2351.40795898,907.32751465,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(14)
	CreateDynamicObject(1251,-2354.78662109,910.73162842,92.73552704,0.00000000,0.00000000,180.63172913); //convertffs(15)
	CreateDynamicObject(1251,-2354.85449219,916.02441406,92.73552704,0.00000000,0.00000000,180.63172913); //convertffs(16)
	CreateDynamicObject(1251,-2345.33227539,901.95989990,92.73749542,0.00000000,0.00000000,269.95056152); //convertffs(17)
	CreateDynamicObject(1251,-2351.36083984,901.95697021,92.73749542,0.00000000,0.00000000,269.95056152); //convertffs(18)
	CreateDynamicObject(1251,-2354.72534180,905.39117432,92.73552704,0.00000000,0.00000000,180.63171387); //convertffs(19)
	CreateDynamicObject(1251,-2359.10205078,920.70440674,92.90537262,0.00000000,0.00000000,179.91467285); //convertffs(21)
	CreateDynamicObject(1251,-2359.10107422,913.88238525,92.90537262,0.00000000,0.00000000,179.91210938); //convertffs(22)
	CreateDynamicObject(1251,-2359.11181641,905.00335693,92.90537262,0.00000000,0.00000000,179.91210938); //convertffs(23)
	CreateDynamicObject(1251,-2359.10937500,909.07714844,92.90537262,0.00000000,0.00000000,179.91210938); //convertffs(24)
	CreateDynamicObject(1215,-2354.56811523,923.55108643,93.22747803,0.00000000,0.00000000,0.00000000); //convertffs(25)
	CreateDynamicObject(1215,-2354.46582031,912.80676270,93.20095062,0.00000000,0.00000000,0.00000000); //convertffs(26)
	CreateDynamicObject(1215,-2354.51269531,917.86425781,93.20659637,0.00000000,0.00000000,0.00000000); //convertffs(27)
	CreateDynamicObject(1215,-2354.41992188,907.54614258,93.20095062,0.00000000,0.00000000,0.00000000); //convertffs(28)
	CreateDynamicObject(1215,-2354.37255859,902.13873291,93.20095062,0.00000000,0.00000000,0.00000000); //convertffs(29)
	CreateDynamicObject(1231,-2337.74609375,915.55566406,92.82028961,0.00000000,0.00000000,89.32434082); //convertffs(30)
	CreateDynamicObject(1231,-2341.42871094,907.36718750,94.07028961,0.00000000,0.00000000,89.31884766); //convertffs(31)
	CreateDynamicObject(1215,-2336.19287109,912.65063477,97.48706055,0.00000000,0.00000000,0.00000000); //convertffs(32)
	CreateDynamicObject(3526,-2337.56933594,920.52166748,96.05293274,0.00000000,0.00000000,0.00000000); //convertffs(33)
	CreateDynamicObject(3526,-2337.57763672,915.46704102,96.05138397,0.00000000,0.00000000,0.00000000); //convertffs(34)
	CreateDynamicObject(3526,-2337.72167969,909.78729248,96.05220032,0.00000000,0.00000000,0.00000000); //convertffs(35)
	CreateDynamicObject(3526,-2337.72998047,904.65997314,96.05060577,0.00000000,0.00000000,0.00000000); //convertffs(36)
	CreateDynamicObject(16475,-2360.24316406,892.80078125,92.63662720,0.00000000,0.00000000,0.00000000); //convertffs(37)
	CreateDynamicObject(16475,-2348.56396484,926.14044189,92.63662720,0.00000000,0.00000000,180.62622070); //convertffs(38)
	CreateDynamicObject(1775,-2358.21386719,901.44531250,93.62271118,0.00000000,0.00000000,180.63171387); //convertffs(39)
	CreateDynamicObject(1598,-2339.79052734,916.47283936,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1946,-2362.83178711,923.20263672,92.94399261,0.00000000,0.00000000,0.00000000); //convertffs(48)
	CreateDynamicObject(3819,-2363.83105469,915.14257812,92.63438416,0.00000000,0.00000000,179.91210938); //convertffs(4)
	CreateDynamicObject(8378,-2344.10766602,915.36987305,92.00922394,90.00000000,180.00000000,270.00000000); //object(vgsbighngrdoor) (1)
	CreateDynamicObject(8378,-2349.45507812,915.36914062,91.95915985,90.00000000,179.99450684,270.00000000); //object(vgsbighngrdoor) (2)
	CreateDynamicObject(8378,-2367.60351562,915.36914062,91.95915985,0.00000000,0.00000000,90.00000000); //object(vgsbighngrdoor) (3)
	CreateDynamicObject(8378,-2335.92138672,915.36914062,91.95915985,0.00000000,0.00000000,90.00000000); //object(vgsbighngrdoor) (4)
	CreateDynamicObject(8378,-2344.77929688,947.33978271,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (5)
	CreateDynamicObject(8378,-2358.49951172,947.33886719,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (6)
	CreateDynamicObject(8378,-2358.49902344,900.23864746,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (7)
	CreateDynamicObject(8378,-2345.24902344,900.23828125,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (8)
	CreateDynamicObject(8378,-2358.46020508,914.66418457,101.08418274,90.00000000,180.00549316,269.98901367); //object(vgsbighngrdoor) (9)
	CreateDynamicObject(8378,-2345.34765625,915.06835938,101.08418274,90.00000000,180.00549316,269.98901367); //object(vgsbighngrdoor) (10)
	CreateDynamicObject(9507,-2350.76806641,879.70959473,88.41332245,0.00000000,0.00000000,0.00000000); //object(bigboxtmp03) (1)
	CreateDynamicObject(9507,-2350.49316406,879.70898438,69.64332581,0.00000000,0.00000000,0.00000000); //object(bigboxtmp03) (2)
	CreateDynamicObject(1697,-2337.80249023,910.09875488,92.73693085,301.98464966,0.00000000,90.00000000); //object(roofstuff16) (1)
	CreateDynamicObject(1697,-2337.80175781,905.34863281,92.73693085,301.98120117,0.00000000,90.00000000); //object(roofstuff16) (2)
	CreateDynamicObject(1697,-2337.67724609,914.84863281,92.73693085,301.98120117,0.00000000,90.00000000); //object(roofstuff16) (3)
	CreateDynamicObject(1598,-2339.79003906,915.74743652,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,914.87121582,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79394531,914.87109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79394531,915.72192383,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79394531,916.44738770,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,909.12109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,910.12109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,910.87109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79003906,910.87109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79003906,910.07080078,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79003906,909.21948242,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,904.02099609,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,904.79479980,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,905.66882324,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.76416016,905.66796875,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.76367188,904.79333496,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.76367188,903.99316406,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1231,-2337.87060547,909.80541992,92.82028961,0.00000000,0.00000000,89.32434082); //convertffs(30)
	CreateDynamicObject(1231,-2337.87011719,904.77941895,92.82028961,0.00000000,0.00000000,89.32434082); //convertffs(30)
	CreateDynamicObject(1231,-2364.45068359,909.86718750,94.07028961,0.00000000,0.00000000,89.31884766); //convertffs(31)
// Taxistas Interior by Venedetto
CreateDynamicObject(18030, 1773.14, -1907.16, -6.80,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 1780.25, -1911.81, -7.31,   0.00, 0.00, 90.00);
CreateDynamicObject(7191, 1780.21, -1911.78, -6.43,   0.00, 0.00, 90.00);
CreateDynamicObject(7191, 1789.70, -1909.32, -6.99,   0.00, 4.00, 0.00);
CreateDynamicObject(7191, 1789.76, -1909.32, -6.45,   0.00, 4.00, 0.00);
CreateDynamicObject(1523, 1788.93, -1913.54, -8.95,   0.00, 0.00, 180.00);
CreateDynamicObject(2525, 1786.29, -1915.01, -8.95,   0.00, 0.00, 92.00);
CreateDynamicObject(2524, 1788.14, -1916.16, -8.95,   0.00, 0.00, 180.00);
CreateDynamicObject(1778, 1786.09, -1916.75, -8.95,   0.00, 0.00, 185.00);
CreateDynamicObject(7191, 1780.94, -1920.84, -7.31,   0.00, 0.00, 90.00);
CreateDynamicObject(2310, 1784.52, -1913.91, -8.71,   0.00, 0.00, 3.00);
CreateDynamicObject(2310, 1784.54, -1915.83, -8.71,   0.00, 0.00, 0.00);
CreateDynamicObject(2310, 1784.58, -1917.39, -8.71,   0.00, 0.00, 0.00);
CreateDynamicObject(2310, 1784.51, -1919.41, -8.71,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1784.55, -1914.85, -8.53,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1784.63, -1916.63, -8.53,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1784.66, -1918.50, -8.53,   0.00, 0.00, 0.00);
CreateDynamicObject(4724, 1753.06, -1914.18, -7.21,   0.00, 0.00, -90.00);
CreateDynamicObject(7191, 1772.32, -1911.80, -7.31,   0.00, 0.00, 90.00);
CreateDynamicObject(7191, 1772.32, -1911.80, -6.81,   0.00, 0.00, 90.00);
CreateDynamicObject(2184, 1760.65, -1915.04, -9.21,   0.00, 0.00, 46.00);
CreateDynamicObject(1671, 1760.26, -1913.11, -8.73,   0.00, 0.00, 29.00);
CreateDynamicObject(1649, 1770.45, -1918.05, -7.57,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1770.37, -1912.28, -7.57,   0.00, 0.00, 90.00);
CreateDynamicObject(1523, 1770.35, -1914.36, -9.17,   0.00, 0.00, 271.00);
CreateDynamicObject(1649, 1770.37, -1912.28, -4.31,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1770.45, -1918.05, -4.27,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1770.32, -1915.11, -5.03,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, 1770.45, -1918.05, -7.57,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, 1770.45, -1918.05, -4.27,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, 1770.37, -1912.28, -7.57,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, 1770.37, -1912.28, -4.31,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, 1770.32, -1915.11, -5.03,   0.00, 0.00, 270.00);
CreateDynamicObject(2072, 1771.24, -1920.19, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2072, 1773.83, -1920.26, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2072, 1777.01, -1920.38, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2072, 1779.40, -1920.11, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2072, 1782.21, -1920.34, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2072, 1784.60, -1920.36, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1772.54, -1920.09, -8.66,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1775.46, -1920.10, -8.66,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1781.05, -1920.33, -8.66,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1783.67, -1920.34, -8.64,   0.00, 0.00, 0.00);
CreateDynamicObject(2257, 1771.59, -1911.93, -7.03,   0.00, 0.00, 0.00);
CreateDynamicObject(2262, 1774.51, -1912.40, -6.92,   0.00, 0.00, 0.00);
CreateDynamicObject(2270, 1776.31, -1912.48, -7.06,   0.00, 0.00, 0.00);
CreateDynamicObject(2257, 1781.65, -1911.93, -7.03,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1779.24, -1912.37, -8.53,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1774.57, -1912.52, -8.53,   0.00, 0.00, 0.00);
CreateDynamicObject(19174, 1785.00, -1917.18, -6.18,   0.00, 0.00, -90.00);
CreateDynamicObject(1557, 1767.37, -1920.79, -9.18,   0.00, 0.00, 0.00);
CreateDynamicObject(19172, 1762.49, -1911.90, -6.92,   0.00, 0.00, 0.00);
CreateDynamicObject(19173, 1768.03, -1911.91, -7.29,   0.00, 0.00, 0.00);
CreateDynamicObject(2894, 1761.01, -1913.87, -8.44,   0.00, 0.00, -142.00);
CreateDynamicObject(2253, 1765.34, -1920.40, -8.36,   0.00, 0.00, 0.00);
CreateDynamicObject(2072, 1764.77, -1920.34, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2072, 1761.87, -1920.27, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2072, 1759.09, -1920.35, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2253, 1764.14, -1920.36, -8.36,   0.00, 0.00, 0.00);
CreateDynamicObject(2253, 1762.62, -1920.34, -8.36,   0.00, 0.00, 0.00);
CreateDynamicObject(2253, 1761.02, -1920.34, -8.36,   0.00, 0.00, 0.00);
CreateDynamicObject(2253, 1759.64, -1920.38, -8.36,   0.00, 0.00, 0.00);
CreateDynamicObject(2072, 1757.04, -1920.24, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(2072, 1754.71, -1920.14, -7.16,   0.00, 0.00, 0.00);
CreateDynamicObject(14804, 1764.84, -1912.85, -8.38,   0.00, 0.00, 0.00);
CreateDynamicObject(14804, 1768.68, -1912.70, -8.38,   0.00, 0.00, 0.00);
CreateDynamicObject(2253, 1755.79, -1920.22, -8.36,   0.00, 0.00, 0.00);
CreateDynamicObject(2253, 1757.54, -1920.37, -8.36,   0.00, 0.00, 0.00);
CreateDynamicObject(2253, 1753.76, -1920.24, -8.36,   0.00, 0.00, 0.00);
CreateDynamicObject(19455, 1775.04, -1869.85, 14.03,   0.00, 0.00, 90.00);
CreateDynamicObject(19455, 1775.04, -1869.85, 16.97,   0.00, 0.00, 90.00);
CreateDynamicObject(717, 1786.28, -1877.31, 12.56,   0.00, 0.00, 0.00);
// Periodico by Swash & Texter
CreateDynamicObject(14665, 2066.90, -2214.30, 2665.60,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 2072.30, -2211.50, 2665.60,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 2062.35, -2220.14, 2665.60,   0.00, 0.00, 270.59);
CreateDynamicObject(7191, 2061.70, -2213.00, 2665.60,   0.00, 0.00, 180.00);
CreateDynamicObject(1569, 2061.80, -2215.80, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 2061.80, -2212.80, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(7191, 2081.33, -2207.86, 2665.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1723, 2069.17, -2208.51, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 2067.37, -2212.18, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1704, 2070.51, -2213.43, 2663.60,   0.00, 0.00, 179.21);
CreateDynamicObject(2311, 2069.30, -2210.94, 2663.60,   0.00, 0.00, 359.53);
CreateDynamicObject(1714, 2062.10, -2217.70, 2663.60,   0.00, 0.00, 78.00);
CreateDynamicObject(1663, 2065.04, -2217.24, 2664.10,   0.00, 0.00, 282.00);
CreateDynamicObject(1663, 2064.85, -2218.93, 2664.10,   0.00, 0.00, 242.00);
CreateDynamicObject(2165, 2070.00, -2218.20, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1806, 2071.10, -2217.90, 2663.60,   0.00, 0.00, 68.00);
CreateDynamicObject(1663, 2068.90, -2217.70, 2664.10,   0.00, 0.00, 88.00);
CreateDynamicObject(2700, 2070.90, -2208.30, 2667.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2202, 2062.83, -2208.45, 2663.60,   0.00, 0.00, 1.77);
CreateDynamicObject(2184, 2063.78, -2219.09, 2663.60,   0.00, 0.00, 78.00);
CreateDynamicObject(2270, 2067.40, -2208.50, 2665.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2108, 2065.67, -2208.39, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1616, 2061.90, -2208.20, 2667.20,   0.00, 0.00, 180.00);
// -===================== Parqueadero by Ximena ======================- //
CreateDynamicObject(978, 1767.80, -1716.51, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(646, 1778.80, -1705.20, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1597, 1794.31, -1692.00, 15.10,   0.00, 0.00, 0.00);
CreateDynamicObject(3439, 1762.40, -1696.00, 16.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1597, 1777.46, -1692.15, 15.10,   0.00, 0.00, 0.00);
CreateDynamicObject(4641, 1762.00, -1693.30, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(4641, 1762.00, -1690.00, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(630, 1763.50, -1691.80, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1597, 1802.93, -1692.15, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1423, 1762.10, -1704.50, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1434, 1809.05, -1707.99, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1434, 1809.09, -1712.82, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1434, 1809.13, -1717.01, 12.60,   0.00, 0.00, 0.12);
CreateDynamicObject(3504, 1763.90, -1688.00, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3802, 1795.80, -1705.50, 23.00,   0.00, 0.00, 90.00);
CreateDynamicObject(3802, 1786.70, -1705.50, 22.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3802, 1778.50, -1705.50, 22.50,   0.00, 0.00, 90.00);
CreateDynamicObject(3802, 1767.90, -1705.50, 22.50,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1770.44, -1689.22, 13.00,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1770.40, -1693.29, 13.00,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1775.98, -1689.24, 13.00,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1775.97, -1693.36, 13.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1597, 1786.55, -1692.06, 15.10,   0.00, 0.00, 0.00);
CreateDynamicObject(4641, 1800.16, -1720.66, 14.27,   0.00, 0.00, 90.25);
estac = CreateDynamicObject(969, 1761.42, -1703.32, 12.60,   0.00, 0.00, 90.40);
estac2 = CreateDynamicObject(975, 1805.53, -1722.11, 14.18,   0.00, 0.00, 179.91);
// Seguros LS by Jhoel Gomez
CreateDynamicObject(14672, 1255.30, -1252.30, 0.10,   0.00, 0.00, 1.99);
CreateDynamicObject(2190, 1256.10, -1245.90, -0.80,   0.00, 0.00, 152.00);
CreateDynamicObject(1778, 1263.90, -1246.50, -1.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1808, 1254.70, -1249.80, -1.90,   0.00, 0.00, 92.00);
CreateDynamicObject(2002, 1264.20, -1260.80, -1.90,   0.00, 0.00, 272.00);
CreateDynamicObject(2202, 1259.80, -1243.70, -1.90,   0.00, 0.00, 2.00);
CreateDynamicObject(2596, 1257.60, -1252.60, 1.00,   0.00, 0.00, 10.00);
CreateDynamicObject(1671, 1255.70, -1244.60, -1.40,   0.00, 0.00, 23.99);
CreateDynamicObject(1671, 1258.60, -1244.40, -1.50,   0.00, 0.00, 21.99);
CreateDynamicObject(1723, 1255.10, -1252.60, -1.90,   0.00, 0.00, 92.00);
CreateDynamicObject(1723, 1263.90, -1250.20, -1.90,   0.00, 0.00, 272.00);
CreateDynamicObject(1723, 1264.10, -1256.20, -1.90,   0.00, 0.00, 272.00);
CreateDynamicObject(1723, 1255.30, -1258.40, -1.90,   0.00, 0.00, 92.00);
CreateDynamicObject(1724, 1257.20, -1252.90, -1.90,   0.00, 0.00, 2.00);
CreateDynamicObject(1724, 1260.80, -1252.80, -1.90,   0.00, 0.00, 1.99);
CreateDynamicObject(2440, 1255.40, -1260.90, -1.90,   0.00, 0.00, 92.00);
CreateDynamicObject(2439, 1261.90, -1246.50, -1.90,   0.00, 0.00, 2.00);
CreateDynamicObject(2231, 1254.90, -1261.00, -0.90,   0.00, 0.00, 134.00);
CreateDynamicObject(2231, 1262.20, -1246.30, -0.90,   0.00, 0.00, 1.99);
CreateDynamicObject(2011, 1255.40, -1259.70, -1.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2245, 1257.90, -1245.80, -0.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, 1257.90, -1246.20, 0.90,   0.00, 0.00, 182.16);
CreateDynamicObject(1649, 1253.42, -1246.30, 0.90,   0.00, 0.00, 1.52);
CreateDynamicObject(3440, 1255.60, -1246.10, 1.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3440, 1255.60, -1246.20, 0.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, 1255.20, -1255.30, -1.90,   0.00, 0.00, 92.00);
CreateDynamicObject(2311, 1264.00, -1255.00, -1.90,   0.00, 0.00, 92.00);
CreateDynamicObject(2200, 1256.60, -1243.00, -1.90,   0.00, 0.00, 2.00);
CreateDynamicObject(2610, 1254.50, -1243.70, -1.10,   0.00, 0.00, 360.00);
CreateDynamicObject(3851, 1253.90, -1248.70, 0.10,   0.00, 0.00, 182.00);
CreateDynamicObject(1532, 1253.90, -1248.60, -1.90,   0.00, 0.00, 92.00);
CreateDynamicObject(2773, 1259.60, -1247.40, -1.40,   0.00, 0.00, 2.00);
CreateDynamicObject(2773, 1257.00, -1247.60, -1.40,   0.00, 0.00, 2.00);
CreateDynamicObject(2726, 1264.00, -1255.10, -1.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2827, 1263.90, -1254.00, -1.40,   0.00, 0.00, 296.00);
CreateDynamicObject(2832, 1255.20, -1255.00, -1.40,   0.00, 0.00, 272.00);
CreateDynamicObject(1496, 1264.00, -1261.30, -1.90,   0.00, 0.00, 184.00);
CreateDynamicObject(2369, 1259.00, -1245.60, -0.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2011, 1263.00, -1246.50, -1.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2684, 1257.00, -1243.50, -0.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2614, 1257.30, -1243.40, 0.80,   0.00, 0.00, 2.00);
CreateDynamicObject(16779, 1259.50, -1249.50, 2.10,   0.00, 0.00, 0.00);
CreateDynamicObject(16779, 1259.70, -1257.90, 2.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2616, 1258.90, -1261.50, 0.20,   0.00, 0.00, 182.00);
CreateDynamicObject(1649, 1257.96, -1246.19, 0.90,   0.00, 0.00, 1.87);
CreateDynamicObject(1649, 1253.42, -1246.30, 0.90,   0.00, 0.00, 181.26);
// Fabrica Rusos by Swash
CreateDynamicObject(14665, 2334.00, 1493.00, 44.10,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(8177, 2341.10, 1488.30, 43.60,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(8177, 2341.10, 1488.30, 46.30,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(8177, 2335.60, 1484.90, 43.60,   0.00, 0.00, 272.00,-1,1);
CreateDynamicObject(8177, 2336.60, 1485.00, 46.30,   0.00, 0.00, 272.00,-1,1);
CreateDynamicObject(8177, 2329.40, 1482.50, 43.60,   0.00, 0.00, 180.00,-1,1);
CreateDynamicObject(8177, 2329.40, 1482.50, 46.30,   0.00, 0.00, 179.99,-1,1);
CreateDynamicObject(8177, 2328.30, 1493.00, 43.60,   0.00, 0.00, 89.99,-1,1);
CreateDynamicObject(8177, 2328.30, 1493.00, 46.30,   0.00, 0.00, 89.99,-1,1);
CreateDynamicObject(3383, 2335.60, 1484.70, 41.80,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(3383, 2338.10, 1488.40, 41.80,   0.00, 0.00, 90.00,-1,1);
CreateDynamicObject(2776, 2335.40, 1486.50, 42.60,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2776, 2336.40, 1488.80, 42.60,   0.00, 0.00, 48.00,-1,1);
CreateDynamicObject(2776, 2336.10, 1487.60, 42.60,   0.00, 0.00, 108.00,-1,1);
CreateDynamicObject(356, 2335.10, 1483.40, 44.60,   0.00, 0.00, 2.00,-1,1);
CreateDynamicObject(356, 2335.10, 1483.40, 45.10,   0.00, 0.00, 2.00,-1,1);
CreateDynamicObject(356, 2335.10, 1483.40, 45.60,   0.00, 0.00, 2.00,-1,1);
CreateDynamicObject(373, 2336.00, 1484.70, 43.10,   0.00, 35.00, 54.00,-1,1);
CreateDynamicObject(353, 2336.40, 1483.40, 45.30,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(353, 2336.40, 1483.40, 44.80,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(353, 2336.40, 1483.40, 44.30,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(353, 2336.40, 1483.40, 45.80,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(1299, 2331.70, 1484.20, 42.60,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(3092, 2332.10, 1483.40, 45.00,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(356, 2337.90, 1487.90, 42.90,   100.00, 2.00, 0.00,-1,1);
CreateDynamicObject(356, 2337.90, 1489.00, 42.90,   100.00, 2.00, 0.00,-1,1);
CreateDynamicObject(355, 2333.80, 1483.50, 44.60,   0.00, 0.00, 2.00,-1,1);
CreateDynamicObject(355, 2333.80, 1483.50, 45.30,   0.00, 0.00, 2.00,-1,1);
CreateDynamicObject(355, 2333.80, 1483.50, 45.80,   0.00, 0.00, 2.00,-1,1);
CreateDynamicObject(355, 2333.80, 1483.50, 44.10,   0.00, 0.00, 2.00,-1,1);
CreateDynamicObject(358, 2334.70, 1494.40, 44.70,   0.00, 0.00, 8.00,-1,1);
CreateDynamicObject(358, 2334.70, 1494.40, 44.00,   0.00, 0.00, 8.00,-1,1);
CreateDynamicObject(358, 2334.70, 1494.40, 45.50,   0.00, 0.00, 8.00,-1,1);
CreateDynamicObject(358, 2334.70, 1494.40, 43.30,   0.00, 0.00, 8.00,-1,1);
CreateDynamicObject(2479, 2338.20, 1494.40, 42.20,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2479, 2338.20, 1494.40, 42.50,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2479, 2338.20, 1494.40, 42.80,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(3577, 2332.80, 1493.30, 42.90,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(3576, 2339.00, 1492.20, 43.60,   0.00, 0.00, 0.00,-1,1);
CreateDynamicObject(2959, 2331.50, 1488.70, 42.10,   0.00, 0.00, 0.00,-1,1);
	// -============================= Interiores sólidos, debugged ================================- //
	CreateDynamicObject(2395,680.76300049,-450.74395752,-26.61718750,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,680.76269531,-450.74316406,-23.87632751,298.00000000,359.95739746,359.96234131); //object(cj_sports_wall) (2)
	CreateDynamicObject(1493,680.87274170,-450.71969604,-26.61718750,0.00000000,0.00000000,0.00000000); //object(gen_doorshop01) (1)
	CreateDynamicObject(2765,677.88525391,-450.36499023,-23.68194962,0.00000000,0.00000000,0.00000000); //object(cj_cb_list1) (1)
	CreateDynamicObject(2766,686.85430908,-451.71658325,-23.59758568,0.00000000,0.00000000,0.00000000); //object(cj_cb_list2) (1)
	CreateDynamicObject(1966,661.82586670,-568.60437012,15.66175652,0.00000000,0.00000000,90.00000000); //object(imcompmovedr1_las) (1)
	CreateDynamicObject(2395,669.83331299,-565.27886963,15.32873726,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (3)
	CreateDynamicObject(2395,666.63330078,-565.37335205,15.33593750,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (4)
	CreateDynamicObject(2395,662.89569092,-565.37304688,15.33593750,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (5)
	CreateDynamicObject(2395,670.37353516,-568.61584473,15.32873726,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (7)
	CreateDynamicObject(2395,665.79125977,-570.59216309,14.15433979,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (8)
	CreateDynamicObject(2395,665.79101562,-574.91839600,14.15433979,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (9)
	CreateDynamicObject(2837,682.87695312,-457.86511230,-25.55373001,0.00000000,0.00000000,0.00000000); //object(gb_takeaway02) (1)
	CreateDynamicObject(2838,679.94616699,-456.98199463,-25.55373001,0.00000000,0.00000000,0.00000000); //object(gb_takeaway03) (1)
	CreateDynamicObject(2839,680.39288330,-454.61041260,-25.55373001,0.00000000,0.00000000,0.00000000); //object(gb_takeaway04) (1)
	CreateDynamicObject(2395,461.40478516,-15.44111538,1000.13281250,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (10)
	CreateDynamicObject(2395,461.40429688,-19.17049217,1000.13281250,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (13)
	CreateDynamicObject(2395,461.10028076,-20.19733238,1000.14001465,0.00000000,0.00000000,236.00000000); //object(cj_sports_wall) (14)
	CreateDynamicObject(2395,459.67370605,-22.85202980,1000.14001465,0.00000000,0.00000000,180.00000000); //object(cj_sports_wall) (15)
	CreateDynamicObject(2395,456.48413086,-22.65886497,1000.14001465,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (16)
	CreateDynamicObject(2395,456.32592773,-19.92231560,1000.14001465,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (17)
	CreateDynamicObject(2395,456.87603760,-23.08882332,998.38281250,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (18)
	CreateDynamicObject(2395,455.93872070,-23.30822563,1000.88281250,46.00000000,0.00000000,179.99456787); //object(cj_sports_wall) (20)
	CreateDynamicObject(1532,456.00756836,-23.12667274,998.52563477,0.00000000,0.00000000,180.00000000); //object(gen_doorext11) (1)
	CreateDynamicObject(2945,1.11733890,34.35177612,1199.92248535,0.00000000,0.00000000,0.00000000); //object(kmb_netting) (1)
	CreateDynamicObject(17951,608.95489502,-128.31036377,998.63360596,0.00000000,0.00000000,0.00000000); //object(cjgaragedoor) (1)
	CreateDynamicObject(17951,608.95410156,-122.15434265,998.63360596,0.00000000,0.00000000,0.00000000); //object(cjgaragedoor) (2)
	// -================================  Boulevard LS =============================================- //
	CreateDynamicObject(2773,1289.37890625,-1158.91113281,23.34535408,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(1)
	CreateDynamicObject(2773,1291.92761230,-1158.71960449,23.34535408,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(2)
	CreateDynamicObject(2773,1284.65295410,-1158.82336426,23.34535408,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(3)
	CreateDynamicObject(2773,1282.45312500,-1158.71496582,23.34535408,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(4)
	CreateDynamicObject(983,1212.75720215,-1122.16674805,23.92969131,0.00000000,0.00000000,269.99450684); //object(fenceshit3)(41)
	CreateDynamicObject(983,1186.03881836,-1122.00769043,23.88294601,0.00000000,0.00000000,269.99450684); //object(fenceshit3)(48)
	CreateDynamicObject(983,1182.86206055,-1122.05493164,23.87419510,0.00000000,0.00000000,269.99450684); //object(fenceshit3)(49)
	CreateDynamicObject(1412,1116.59863281,-1163.42187500,23.90258598,0.00000000,0.00000000,0.00000000); //object(dyn_mesh_2)(1)
	CreateDynamicObject(1412,1121.80078125,-1163.20605469,23.93933678,0.00000000,0.00000000,0.00000000); //object(dyn_mesh_2)(2)
	CreateDynamicObject(1215,1225.88952637,-1158.69934082,23.15852737,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1245.33618164,-1135.28125000,23.40343666,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(1215,1254.65930176,-1155.03186035,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
	CreateDynamicObject(1215,1279.86047363,-1158.97741699,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1295.61071777,-1158.68981934,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(7)
	CreateDynamicObject(1215,1311.57165527,-1135.40917969,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(1215,1205.79931641,-1155.19372559,23.22752953,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1215,1073.19836426,-1158.92041016,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(15)
	CreateDynamicObject(1215,1071.70434570,-1134.81481934,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(17)
	CreateDynamicObject(1215,1017.06079102,-1134.92602539,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(19)
	CreateDynamicObject(1215,992.18469238,-1157.97900391,23.43024826,0.00000000,0.00000000,0.00000000); //object(bollardlight)(21)
	CreateDynamicObject(1215,972.37487793,-1158.49645996,23.41949463,0.00000000,0.00000000,0.00000000); //object(bollardlight)(23)
	CreateDynamicObject(1215,952.12390137,-1155.52746582,23.34817314,0.00000000,0.00000000,0.00000000); //object(bollardlight)(24)
	CreateDynamicObject(1215,952.70190430,-1131.42321777,23.42784119,0.00000000,0.00000000,0.00000000); //object(bollardlight)(25)
	CreateDynamicObject(1215,955.09649658,-1210.80236816,16.64270782,0.00000000,0.00000000,0.00000000); //object(bollardlight)(26)
	CreateDynamicObject(2773,1018.24414062,-1134.36230469,23.34535408,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(5)
	CreateDynamicObject(2773,1026.92871094,-1134.35937500,23.33755684,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(6)
	CreateDynamicObject(1215,1028.13171387,-1135.07495117,23.38465118,0.00000000,0.00000000,0.00000000); //object(bollardlight)(27)
	CreateDynamicObject(2773,1026.01000977,-1122.24194336,23.39434433,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(6)
	CreateDynamicObject(2773,1018.97094727,-1122.36560059,23.38367844,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(6)
	CreateDynamicObject(2773,1018.56927490,-1124.18664551,23.38095093,0.00000000,0.00000000,336.00000000); //object(cj_airprt_bar)(6)
	CreateDynamicObject(2773,1026.23559570,-1124.08740234,23.39478493,0.00000000,0.00000000,13.99487305); //object(cj_airprt_bar)(6)
	CreateDynamicObject(1568,1350.77026367,-1125.96801758,22.65625000,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf)(1)
	CreateDynamicObject(1360,1122.42431641,-1161.51391602,23.48288345,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop3)(1)
	CreateDynamicObject(1360,1116.10546875,-1161.07238770,23.56543350,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop3)(2)
	CreateDynamicObject(7662,1106.64611816,-1145.03491211,23.40058899,0.00000000,0.00000000,270.00000000); //object(miragehedge14)(1)
	CreateDynamicObject(7662,1199.39062500,-1144.82092285,23.39715958,0.00000000,0.00000000,270.00000000); //object(miragehedge14)(2)
	CreateDynamicObject(7662,1285.05505371,-1144.82727051,23.40058899,0.00000000,0.00000000,270.00000000); //object(miragehedge14)(3)
	CreateDynamicObject(717,1193.99865723,-1144.82373047,22.78829384,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(2)
	CreateDynamicObject(717,1205.15283203,-1144.86682129,23.10209465,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(3)
	CreateDynamicObject(717,1146.56359863,-1145.09094238,23.09747314,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(4)
	CreateDynamicObject(717,1134.40612793,-1145.01855469,23.13043594,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(5)
	CreateDynamicObject(717,1112.42517090,-1145.21826172,22.65625000,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(6)
	CreateDynamicObject(717,1100.60925293,-1145.07556152,23.10619354,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(7)
	CreateDynamicObject(717,1227.24084473,-1144.90771484,23.06764984,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(8)
	CreateDynamicObject(717,1239.40795898,-1144.57788086,22.92505646,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(9)
	CreateDynamicObject(717,1278.90563965,-1144.87377930,23.10517311,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(10)
	CreateDynamicObject(717,1290.91699219,-1144.86364746,23.11371040,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(11)
	CreateDynamicObject(717,1312.89807129,-1144.83178711,23.13787460,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(12)
	CreateDynamicObject(717,1325.30493164,-1144.35717773,22.73616791,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(13)
	CreateDynamicObject(7662,1003.65844727,-1144.81176758,23.63367462,0.00000000,0.00000000,270.00000000); //object(miragehedge14)(4)
	CreateDynamicObject(717,1043.38891602,-1144.61669922,23.20218658,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(14)
	CreateDynamicObject(717,1031.27343750,-1144.81726074,23.37006187,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(15)
	CreateDynamicObject(717,1009.51611328,-1144.79199219,23.34696579,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(16)
	CreateDynamicObject(717,997.55261230,-1144.71533203,23.28487778,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(17)
	CreateDynamicObject(738,971.44647217,-1158.68847656,23.35329056,0.00000000,0.00000000,0.00000000); //object(aw_streettree2)(1)
	CreateDynamicObject(738,992.80493164,-1158.47937012,23.36738968,0.00000000,0.00000000,0.00000000); //object(aw_streettree2)(2)
	CreateDynamicObject(1215,995.42712402,-1144.89245605,23.49665642,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1010.97686768,-1144.78552246,23.25055122,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1029.96020508,-1144.74243164,23.22836304,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1044.78662109,-1144.98059082,23.22727966,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1098.92016602,-1144.88244629,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1114.00146484,-1145.03442383,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1132.94128418,-1145.06970215,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1147.86425781,-1144.91137695,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1191.89306641,-1144.85290527,23.28835869,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1206.73828125,-1144.94201660,23.13462639,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1225.80310059,-1144.85754395,23.04506302,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1240.89355469,-1144.77111816,23.10700226,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1277.37707520,-1144.90197754,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1292.74487305,-1144.81713867,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1311.19494629,-1144.85363770,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1326.33544922,-1144.85229492,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1331.37475586,-1144.89208984,23.21276855,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1360,1329.73449707,-1144.91638184,23.42046547,0.00000000,0.00000000,272.00000000); //object(cj_bush_prop3)(3)
	CreateDynamicObject(1215,1332.58129883,-1145.38244629,23.21276855,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1327.44506836,-1144.90234375,23.21276855,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(983,1329.29870605,-1143.89685059,23.33980560,0.00000000,0.00000000,270.00000000); //object(fenceshit3)(1)
	CreateDynamicObject(983,1329.35400391,-1145.84313965,23.33200073,0.00000000,0.00000000,270.00000000); //object(fenceshit3)(1)
	CreateDynamicObject(1215,1332.62084961,-1144.14733887,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1332.60058594,-1144.80187988,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1115.71459961,-1159.16418457,23.37307549,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1122.65319824,-1159.17578125,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1597,1350.56726074,-1120.90820312,25.52637863,0.00000000,0.00000000,356.00000000); //object(cntrlrsac1)(5)
	CreateDynamicObject(1597,1351.78430176,-1105.79589844,25.64109421,0.00000000,0.00000000,353.99548340); //object(cntrlrsac1)(6)
	CreateDynamicObject(1597,1355.36718750,-1085.44531250,26.29489517,0.00000000,0.00000000,347.99194336); //object(cntrlrsac1)(7)
	CreateDynamicObject(1597,1360.50000000,-1060.41833496,28.30481339,0.00000000,0.00000000,355.99194336); //object(cntrlrsac1)(8)
	CreateDynamicObject(1364,1119.33032227,-1162.21813965,23.35606766,0.00000000,0.00000000,180.00000000); //object(cj_bush_prop)(1)
	CreateDynamicObject(1215,1121.58911133,-1161.92712402,23.21425819,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1116.97387695,-1161.99719238,23.29438782,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(2773,1120.00439453,-1130.21911621,23.32828331,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(5)
	CreateDynamicObject(2773,1125.40222168,-1129.71118164,23.32191658,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(5)
	CreateDynamicObject(1412,1254.95080566,-1171.07714844,24.10208511,0.00000000,0.00000000,0.00000000); //object(dyn_mesh_2)(2)
	CreateDynamicObject(1412,1254.95104980,-1171.07495117,26.60208511,0.00000000,0.00000000,0.00000000); //object(dyn_mesh_2)(2)
	// -================================  Aparcamiento St María Beach =============================================- //
	CreateDynamicObject(970,359.12124600,-1812.36230500,3.99906500,0.00000000,0.00000000,0.00000000); //object(2)
	CreateDynamicObject(970,354.99923700,-1812.35974100,3.99511200,0.00000000,0.00000000,0.00000000); //object(3)
	CreateDynamicObject(970,350.84991500,-1812.36474600,3.99091200,0.00000000,0.00000000,0.00000000); //object(4)
	CreateDynamicObject(970,346.74987800,-1812.36071800,3.98702400,0.00000000,0.00000000,0.00000000); //object(5)
	CreateDynamicObject(970,342.66690100,-1812.36840800,3.98281100,0.00000000,0.00000000,0.00000000); //object(6)
	CreateDynamicObject(970,338.61465500,-1812.36950700,3.97882000,0.00000000,0.00000000,0.00000000); //object(7)
	CreateDynamicObject(970,330.34967000,-1812.38073700,3.96842300,0.00000000,0.00000000,0.00000000); //object(9)
	CreateDynamicObject(970,326.17645300,-1812.37988300,3.96640800,0.00000000,0.00000000,0.00000000); //object(10)
	CreateDynamicObject(970,322.05777000,-1812.38024900,3.96438500,0.00000000,0.00000000,0.00000000); //object(11)
	CreateDynamicObject(970,317.92639200,-1812.36840800,3.96270500,0.00000000,0.00000000,0.00000000); //object(12)
	CreateDynamicObject(970,313.77969400,-1812.35717800,3.96100000,0.00000000,0.00000000,0.00000000); //object(13)
	CreateDynamicObject(970,310.37042200,-1812.34228500,3.95976100,0.00000000,0.00000000,0.00000000); //object(14)
	CreateDynamicObject(970,308.43722500,-1810.21374500,4.07038300,0.00000000,0.00000000,-89.99998128); //object(15)
	CreateDynamicObject(970,308.43405200,-1806.07763700,4.06154400,0.00000000,0.00000000,-89.99998128); //object(16)
	CreateDynamicObject(970,308.48739600,-1801.99035600,4.15251300,0.00000000,0.00000000,-89.99998128); //object(17)
	CreateDynamicObject(970,308.49069200,-1797.84472700,4.14371000,0.00000000,0.00000000,-89.99998128); //object(18)
	CreateDynamicObject(970,308.50747700,-1793.71118200,4.17922100,0.00000000,0.00000000,-89.99998128); //object(19)
	CreateDynamicObject(970,308.52377300,-1789.55993700,4.19075900,0.00000000,0.00000000,-89.99998128); //object(20)
	CreateDynamicObject(970,308.51736500,-1788.10937500,4.23059500,0.00000000,0.00000000,-89.99998128); //object(21)
	CreateDynamicObject(970,310.52984600,-1785.98046900,4.11960900,0.00000000,0.00000000,0.00000000); //object(22)
	CreateDynamicObject(970,314.72155800,-1786.02661100,4.18693100,0.00000000,0.00000000,0.00000000); //object(23)
	CreateDynamicObject(970,318.83895900,-1786.04638700,4.25279900,0.00000000,0.00000000,0.00000000); //object(24)
	CreateDynamicObject(970,327.02829000,-1786.08215300,4.38463000,0.00000000,0.00000000,0.00000000); //object(26)
	CreateDynamicObject(970,331.18158000,-1786.10546900,4.45146800,0.00000000,0.00000000,0.00000000); //object(27)
	CreateDynamicObject(970,335.34008800,-1786.12231400,4.52137300,0.00000000,0.00000000,0.00000000); //object(28)
	CreateDynamicObject(8041,349.69409200,-1787.00854500,10.07214800,0.00000000,0.00000000,89.99998128); //object(32)
	CreateDynamicObject(970,338.14315800,-1786.10229500,4.58726100,0.00000000,0.00000000,0.00000000); //object(33)
	CreateDynamicObject(970,360.50793500,-1788.07214400,4.86103200,0.00000000,0.00000000,-89.99998128); //object(34)
	CreateDynamicObject(970,360.89669800,-1800.36132800,4.38031800,0.00000000,0.00000000,-90.85941797); //object(35)
	CreateDynamicObject(970,360.78790300,-1796.19421400,4.49962100,0.00000000,0.00000000,-89.99998128); //object(36)
	CreateDynamicObject(970,360.64831500,-1792.15332000,4.65000100,0.00000000,0.00000000,-89.99998128); //object(37)
	CreateDynamicObject(1237,360.26190200,-1786.13000500,4.41219400,0.00000000,0.00000000,0.00000000); //object(39)
	CreateDynamicObject(1237,340.31073000,-1785.96984900,4.09716300,0.00000000,0.00000000,0.00000000); //object(40)
	CreateDynamicObject(1251,344.81417800,-1786.03723100,4.30694600,0.00000000,0.00000000,-89.99998128); //object(41)
	CreateDynamicObject(1251,353.90399200,-1785.99792500,4.48802100,0.00000000,0.00000000,-88.28110789); //object(42)
	CreateDynamicObject(1361,336.36419700,-1812.48168900,4.16525100,0.00000000,0.00000000,0.00000000); //object(135)
	CreateDynamicObject(1361,332.68090800,-1812.49951200,4.15803000,0.00000000,0.00000000,0.00000000); //object(136)
	CreateDynamicObject(1361,321.11694300,-1786.00695800,4.48197000,0.00000000,0.00000000,0.00000000); //object(137)
	CreateDynamicObject(1361,324.72979700,-1785.88439900,4.54082700,0.00000000,0.00000000,0.00000000); //object(138)
	CreateDynamicObject(1597,313.16030900,-1800.16052200,6.20513500,0.00000000,0.00000000,89.99998128); //object(139)
	CreateDynamicObject(1597,322.76184100,-1799.60656700,6.33214300,0.00000000,0.00000000,-89.99998128); //object(140)
	CreateDynamicObject(1597,332.42315700,-1799.56298800,6.33773300,0.00000000,0.00000000,-89.99998128); //object(141)
	CreateDynamicObject(700,327.32196000,-1799.97314500,4.39941700,0.00000000,0.00000000,0.00000000); //object(145)
	CreateDynamicObject(700,317.76477100,-1799.86853000,4.27240900,0.00000000,0.00000000,0.00000000); //object(146)
	CreateDynamicObject(700,308.74038700,-1800.05285600,4.27240900,0.00000000,0.00000000,0.00000000); //object(147)
	CreateDynamicObject(700,336.71615600,-1799.91137700,4.40500700,0.00000000,0.00000000,0.00000000); //object(148)
	CreateDynamicObject(3472,333.16851800,-1799.66430700,3.15607600,0.00000000,0.00000000,0.00000000); //object(149)
	CreateDynamicObject(3472,312.55999800,-1799.68676800,3.39844700,0.00000000,0.00000000,0.00000000); //object(150)
	CreateDynamicObject(3472,323.03418000,-1799.67272900,3.02545300,0.00000000,0.00000000,0.00000000); //object(151)
	CreateDynamicObject(970,310.34433000,-1799.02294900,4.05884900,0.00000000,0.00000000,0.00000000); //object(152)
	CreateDynamicObject(970,314.44125400,-1798.96557600,4.12513300,0.00000000,0.00000000,0.00000000); //object(153)
	CreateDynamicObject(970,318.55984500,-1798.90222200,4.19179100,0.00000000,0.00000000,0.00000000); //object(155)
	CreateDynamicObject(970,322.69604500,-1798.89611800,4.20521300,0.00000000,0.00000000,0.00000000); //object(156)
	CreateDynamicObject(970,326.79223600,-1798.89697300,4.20813500,0.00000000,0.00000000,0.00000000); //object(157)
	CreateDynamicObject(970,330.89617900,-1798.90051300,4.19229300,0.00000000,0.00000000,0.00000000); //object(158)
	CreateDynamicObject(970,335.08688400,-1798.84899900,4.23347900,0.00000000,0.00000000,0.00000000); //object(159)
	CreateDynamicObject(970,310.46014400,-1800.93505900,4.05231000,0.00000000,0.00000000,0.00000000); //object(160)
	CreateDynamicObject(970,314.60681200,-1800.98144500,4.11904900,0.00000000,0.00000000,0.00000000); //object(161)
	CreateDynamicObject(970,318.75631700,-1801.01940900,4.18623600,0.00000000,0.00000000,0.00000000); //object(162)
	CreateDynamicObject(970,322.90301500,-1801.02075200,4.19799100,0.00000000,0.00000000,0.00000000); //object(163)
	CreateDynamicObject(970,327.02911400,-1800.99548300,4.20051400,0.00000000,0.00000000,0.00000000); //object(164)
	CreateDynamicObject(970,331.15847800,-1800.98315400,4.20327900,0.00000000,0.00000000,0.00000000); //object(165)
	CreateDynamicObject(970,334.83090200,-1800.98022500,4.20983300,0.00000000,0.00000000,0.00000000); //object(166)
	CreateDynamicObject(1360,337.30590800,-1800.00732400,4.23781500,0.00000000,0.00000000,0.00000000); //object(168)
	// -================================  ESTUDIO CNN =============================================- //
	CreateDynamicObject(14391,249.88735962,304.25994873,999.09527588,0.00000000,0.00000000,179.94287109); //
	CreateDynamicObject(14393,250.75074768,303.27984619,1000.36871338,0.00000000,0.00000000,181.63391113); //
	CreateDynamicObject(14392,250.80520630,303.21340942,999.33160400,0.00000000,0.00000000,180.97521973); //
	CreateDynamicObject(14820,249.26252747,305.72671509,999.05853271,10.54898071,0.00000000,269.77844238); //
	CreateDynamicObject(14820,249.25497437,302.45178223,999.07855225,10.54687500,0.00000000,269.77478027); //
	CreateDynamicObject(10154,251.23742676,298.33959961,998.53216553,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(10154,241.88075256,302.64770508,998.53216553,0.00000000,0.00000000,181.31555176); //
	CreateDynamicObject(1498,242.02909851,301.88348389,998.11431885,0.00000000,0.00000000,90.33483887); //
	// Casa VIP Charli
	CreateObject(8614, 1250.5999755859, -790.5, 91.033996582031, 0.39999389648438, 0.10000610351563, 270);
	CreateObject(984, 1303.9000244141, -795.43005371094, 83.800003051758, 0, 0, 0);
// CNN Exterior (ZenonCity)
CreateDynamicObject(3626, 756.00, -1380.20, 14.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1371.20, 14.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1362.20, 14.00,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 753.00, -1357.30, 18.20,   90.00, 0.00, 180.00);
CreateDynamicObject(3626, 745.50, -1357.30, 14.10,   90.00, 0.00, 179.99);
CreateDynamicObject(3626, 745.50, -1357.30, 18.20,   90.00, 0.00, 179.99);
CreateDynamicObject(3626, 745.50, -1357.30, 22.10,   90.00, 0.00, 179.99);
CreateDynamicObject(3626, 742.50, -1360.30, 22.10,   90.00, 0.00, 270.00);
CreateDynamicObject(3626, 742.50, -1360.30, 14.10,   90.00, 0.00, 269.99);
CreateDynamicObject(3626, 742.50, -1360.30, 18.20,   90.00, 0.00, 269.99);
CreateDynamicObject(3626, 753.00, -1357.30, 14.10,   90.00, 0.00, 179.99);
CreateDynamicObject(3626, 756.00, -1360.30, 18.20,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1371.20, 18.20,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1362.20, 18.20,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1380.20, 18.20,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 753.00, -1357.30, 22.10,   90.00, 0.00, 179.99);
CreateDynamicObject(3626, 756.00, -1362.20, 22.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1360.30, 22.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1371.20, 22.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1380.20, 22.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 755.10, -1383.20, 20.00,   180.00, 270.00, 90.00);
CreateDynamicObject(3626, 755.10, -1380.20, 23.00,   0.00, 0.00, 270.00);
CreateDynamicObject(3626, 755.10, -1371.30, 23.00,   0.00, 0.00, 270.00);
CreateDynamicObject(3626, 755.10, -1364.10, 23.00,   0.00, 0.00, 270.00);
CreateDynamicObject(3626, 755.10, -1360.30, 23.00,   0.00, 0.00, 270.00);
CreateDynamicObject(3626, 749.00, -1358.20, 23.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3626, 745.50, -1358.20, 23.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 766.90, -1356.60, 14.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 777.40, -1356.60, 14.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 757.60, -1377.40, 17.20,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 757.60, -1377.40, 21.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2946, 757.70, -1362.80, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2946, 757.70, -1359.60, 13.10,   0.00, 0.00, 179.99);
CreateDynamicObject(3626, 756.00, -1360.30, 14.00,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 757.60, -1361.20, 9.80,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 757.60, -1362.80, 21.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 757.60, -1362.80, 17.20,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 756.10, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 760.30, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 764.50, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 768.70, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 772.90, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 777.10, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 781.30, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 785.30, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 785.30, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 781.20, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 777.10, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 773.00, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 768.90, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 764.80, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 760.60, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 756.50, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 749.30, -1355.70, 21.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 749.30, -1355.70, 17.20,   0.00, 0.00, 90.00);
CreateDynamicObject(8661, 767.20, -1340.30, 12.70,   0.00, 0.00, 359.25);
CreateDynamicObject(3601, 743.00, -1372.70, 17.10,   0.00, 0.00, 0.00);
CreateDynamicObject(8661, 727.30, -1339.80, 12.70,   0.00, 0.00, 359.25);
CreateDynamicObject(8661, 767.00, -1360.20, 12.70,   0.00, 0.00, 359.24);
CreateDynamicObject(8661, 727.00, -1359.70, 12.70,   0.00, 0.00, 359.25);
CreateDynamicObject(16501, 735.00, -1354.10, 14.90,   0.00, 0.00, 90.00);
CreateDynamicObject(16501, 735.00, -1354.10, 19.20,   0.00, 0.00, 90.00);
CreateDynamicObject(16501, 735.00, -1354.10, 22.10,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 739.10, -1354.10, 21.50,   90.00, 0.00, 90.00);
CreateDynamicObject(16501, 731.50, -1356.20, 23.70,   90.00, 0.00, 180.00);
CreateDynamicObject(3851, 741.10, -1356.10, 21.50,   90.00, 0.00, 0.00);
CreateDynamicObject(16501, 738.90, -1360.30, 23.60,   90.00, 0.00, 270.00);
CreateDynamicObject(16501, 731.50, -1358.20, 23.70,   90.00, 0.00, 179.99);
CreateDynamicObject(16501, 741.10, -1358.10, 23.60,   90.00, 0.00, 0.00);
CreateDynamicObject(16501, 735.00, -1354.10, 25.00,   0.00, 0.00, 90.00);
CreateDynamicObject(16501, 736.70, -1360.30, 23.60,   90.00, 0.00, 270.00);
CreateDynamicObject(16501, 739.10, -1357.20, 27.20,   0.00, 270.00, 0.00);
CreateDynamicObject(16501, 733.10, -1357.20, 27.20,   0.00, 270.00, 0.00);
CreateDynamicObject(16501, 736.40, -1357.20, 27.20,   0.00, 270.00, 0.00);
CreateDynamicObject(3851, 741.10, -1356.10, 10.20,   90.00, 0.00, 0.00);
CreateDynamicObject(3934, 742.80, -1372.10, 25.00,   0.00, 0.00, 89.25);
CreateDynamicObject(14394, 730.50, -1358.80, 23.79,   0.00, 0.00, 270.00);
CreateDynamicObject(14394, 730.50, -1358.18, 23.33,   0.00, 0.00, 270.00);
CreateDynamicObject(14387, 776.40, -1386.20, 12.10,   0.00, 0.00, 270.00);
CreateDynamicObject(14387, 779.70, -1386.20, 12.10,   0.00, 0.00, 270.00);
CreateDynamicObject(6136, 782.70, -1359.80, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 782.70, -1363.30, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 782.70, -1380.00, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 782.70, -1371.70, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 774.70, -1380.00, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 774.70, -1371.60, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 774.70, -1363.50, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 774.70, -1361.30, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 766.90, -1361.50, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 759.20, -1361.60, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 759.30, -1369.30, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 766.70, -1369.30, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 759.50, -1379.80, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 767.20, -1379.80, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 766.90, -1372.40, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 759.70, -1372.00, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(3660, 758.30, -1374.10, 14.80,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 757.50, -1364.30, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 757.50, -1383.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 759.50, -1381.80, 13.80,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 759.50, -1377.70, 13.80,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 759.50, -1373.60, 13.80,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 759.50, -1369.50, 13.80,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 759.50, -1366.40, 13.80,   0.00, 0.00, 90.00);
CreateDynamicObject(3472, 771.60, -1365.80, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 771.60, -1375.80, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 771.60, -1367.90, 13.50,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 771.60, -1373.80, 13.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1364, 772.50, -1373.70, 13.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1364, 772.50, -1368.00, 13.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1364, 770.90, -1368.00, 13.40,   0.00, 0.00, 270.00);
CreateDynamicObject(1364, 771.00, -1373.70, 13.40,   0.00, 0.00, 270.00);
CreateDynamicObject(1361, 771.60, -1370.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(9697, 734.50, -1349.90, 12.80,   0.00, 0.00, 180.00);
CreateDynamicObject(8841, 754.70, -1340.70, 16.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3881, 784.20, -1334.80, 14.40,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 767.00, -1325.00, 13.00,   0.00, 0.00, 88.75);
CreateDynamicObject(984, 754.20, -1324.70, 13.00,   0.00, 0.00, 88.75);
CreateDynamicObject(3881, 779.80, -1329.80, 9.40,   0.00, 292.00, 89.25);
CreateDynamicObject(1595, 723.30, -1335.80, 32.40,   0.00, 0.00, 142.00);
CreateDynamicObject(1595, 723.30, -1350.50, 32.40,   0.00, 0.00, 142.00);
CreateDynamicObject(1595, 723.20, -1365.30, 32.40,   0.00, 0.00, 142.00);
//CNN Interior
CreateDynamicObject(18009, -2710.78, 524.81, 51.42,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2720.50, 519.55, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 515.22, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 519.55, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 515.22, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 523.90, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 528.24, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 532.60, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 536.97, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 523.90, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 528.24, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 532.60, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2713.96, 513.03, 51.01,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, -2718.30, 513.03, 47.75,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 521.23, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 513.03, 47.75,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 513.03, 51.01,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 514.70, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 517.96, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 514.70, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 517.96, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 521.23, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2719.10, 520.67, 51.01,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.52, 522.47, 50.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2707.51, 533.97, 50.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2707.51, 517.79, 54.24,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, -2700.92, 519.99, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2707.51, 517.79, 50.99,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 517.79, 50.99,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 517.79, 54.24,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2700.92, 537.35, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 519.99, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 524.33, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 528.66, 50.99,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2700.92, 533.00, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 524.33, 54.24,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 528.66, 54.24,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 533.00, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2700.92, 537.35, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2703.15, 536.40, 50.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 536.40, 50.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2703.15, 536.40, 54.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 536.40, 54.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 525.90, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 519.40, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 529.20, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 522.80, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 532.43, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 535.70, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 519.40, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 522.63, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 532.43, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 529.20, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 535.70, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1523, -2706.96, 524.53, 48.17,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2700.55, 524.40, 52.31,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2704.90, 524.47, 52.31,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2700.55, 524.40, 52.31,   0.00, 0.00, 179.99);
CreateDynamicObject(2591, -2702.66, 524.43, 48.11,   359.50, 180.00, 89.00);
CreateDynamicObject(2591, -2703.76, 524.47, 48.13,   359.49, 179.99, 88.99);
CreateDynamicObject(1649, -2703.14, 522.63, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.46, 522.80, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2704.90, 524.47, 52.31,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 525.90, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 519.53, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.46, 519.53, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(2184, -2703.32, 520.12, 48.18,   0.00, 0.00, 180.00);
CreateDynamicObject(1998, -2702.40, 522.80, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(2190, -2704.80, 519.90, 48.96,   0.00, 0.00, 18.00);
CreateDynamicObject(1663, -2701.49, 522.85, 48.64,   0.00, 0.00, 178.00);
CreateDynamicObject(1714, -2704.37, 518.30, 48.20,   0.00, 0.00, 182.00);
CreateDynamicObject(2894, -2704.11, 519.48, 48.96,   0.00, 0.00, 344.00);
CreateDynamicObject(1962, -2700.95, 519.20, 49.79,   0.00, 0.00, 90.00);
CreateDynamicObject(1961, -2700.95, 521.17, 49.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1960, -2700.95, 522.03, 50.47,   0.00, 0.00, 90.00);
CreateDynamicObject(14860, -2703.91, 518.92, 49.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2066, -2705.05, 523.60, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(14493, -2704.80, 531.20, 50.48,   0.00, 0.00, 180.00);
CreateDynamicObject(2637, -2704.07, 533.90, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(2596, -2706.78, 535.97, 51.37,   0.00, 0.00, 40.00);
CreateDynamicObject(2813, -2704.06, 533.87, 48.99,   0.00, 0.00, 0.00);
CreateDynamicObject(2828, -2702.60, 522.74, 48.99,   0.00, 0.00, 286.00);
CreateDynamicObject(14391, -2712.40, 528.10, 49.04,   0.00, 0.00, 0.00);
CreateDynamicObject(1670, -2704.77, 533.62, 49.02,   0.00, 0.00, 0.00);
CreateDynamicObject(625, -2703.78, 524.84, 48.99,   0.00, 0.00, 228.00);
CreateDynamicObject(638, -2706.96, 534.01, 48.88,   0.00, 0.00, 0.00);
CreateDynamicObject(3386, -2708.90, 519.30, 48.18,   0.00, 0.00, 90.00);
CreateDynamicObject(3386, -2708.90, 520.32, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(3387, -2709.91, 519.30, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3388, -2710.90, 519.30, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3389, -2711.90, 519.29, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3387, -2712.89, 519.29, 48.18,   0.00, 0.00, 90.00);
CreateDynamicObject(1714, -2710.08, 528.15, 48.18,   0.00, 0.00, 274.00);
CreateDynamicObject(1663, -2717.84, 529.74, 49.04,   0.00, 0.00, 44.00);
CreateDynamicObject(1663, -2717.83, 526.97, 49.04,   0.00, 0.00, 140.00);
CreateDynamicObject(1827, -2716.56, 528.35, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 529.11, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(646, -2719.20, 524.70, 49.99,   0.00, 0.00, 0.00);
CreateDynamicObject(646, -2719.20, 532.21, 49.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1557, -2719.06, 520.38, 47.08,   0.00, 0.00, 208.00);
CreateDynamicObject(1557, -2720.42, 518.09, 47.08,   0.00, 0.00, 90.00);
CreateDynamicObject(638, -2718.17, 517.72, 49.28,   0.00, 0.00, 90.00);
CreateDynamicObject(638, -2718.99, 517.72, 49.28,   0.00, 0.00, 90.00);
CreateDynamicObject(629, -2714.90, 515.60, 48.50,   0.00, 0.00, 220.00);
CreateDynamicObject(741, -2712.05, 516.10, 48.90,   0.00, 0.00, 248.00);
CreateDynamicObject(2572, -2717.70, 514.10, 48.50,   0.00, 0.00, 120.00);
CreateDynamicObject(2266, -2714.87, 519.25, 50.95,   0.00, 0.00, 270.00);
CreateDynamicObject(2179, -2719.80, 524.81, 50.29,   0.00, 0.00, 0.00);
CreateDynamicObject(2179, -2719.80, 531.82, 50.29,   0.00, 0.00, 0.00);
CreateDynamicObject(1892, -2716.11, 520.57, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(18075, -2713.50, 528.47, 51.77,   0.00, 0.00, 0.00);
CreateDynamicObject(1776, -2710.81, 536.21, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(2700, -2708.35, 535.81, 51.29,   0.00, 0.00, 226.00);
CreateDynamicObject(3031, -2713.24, 514.25, 50.18,   0.00, 0.00, 132.00);
CreateDynamicObject(2295, -2719.82, 535.15, 48.58,   0.00, 0.00, 44.00);
CreateDynamicObject(1510, -2717.00, 528.53, 49.02,   0.00, 0.00, 0.00);
CreateDynamicObject(1667, -2717.00, 528.00, 49.02,   0.00, 0.00, 0.00);
//Restaurante Unity (By Esparza)
CreateDynamicObject(19453, 1909.86, -1879.51, 14.27,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1919.42, -1879.51, 14.27,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1905.13, -1874.76, 14.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1905.13, -1865.19, 14.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1905.13, -1855.62, 14.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1909.97, -1850.87, 14.27,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1919.39, -1850.87, 14.27,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1924.15, -1874.70, 14.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1924.15, -1855.60, 14.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19434, 1924.15, -1869.15, 14.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19434, 1924.15, -1861.20, 14.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19434, 1924.15, -1862.76, 14.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19434, 1924.15, -1867.56, 14.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19452, 1906.96, -1874.66, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1910.43, -1874.64, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1913.92, -1874.64, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1917.41, -1874.64, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1920.91, -1874.64, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1922.36, -1874.64, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1922.36, -1865.08, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1920.91, -1865.08, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1917.41, -1865.08, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1913.94, -1865.08, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1910.43, -1865.08, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1906.98, -1865.04, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1922.35, -1855.61, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1920.91, -1855.61, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1917.41, -1855.61, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1913.92, -1855.61, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1910.43, -1855.61, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1906.96, -1855.61, 12.57,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1910.43, -1855.61, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1906.96, -1855.61, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1913.92, -1855.61, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1917.41, -1855.61, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1920.91, -1855.61, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1922.35, -1855.61, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1906.98, -1865.04, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1910.43, -1865.08, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1913.92, -1865.08, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1917.41, -1865.08, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1920.91, -1865.08, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1922.36, -1865.08, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1906.96, -1874.66, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1910.43, -1874.64, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1913.92, -1874.64, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1917.41, -1874.64, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1922.36, -1874.64, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1920.91, -1874.64, 15.93,   0.00, 90.00, 0.00);
CreateDynamicObject(8614, 1911.18, -1880.44, 14.77,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1930.62, -1879.57, 13.16,   0.00, 0.00, 90.00);
CreateDynamicObject(984, 1943.42, -1879.59, 13.16,   0.00, 0.00, 90.00);
CreateDynamicObject(3660, 1922.96, -1869.77, 18.66,   0.00, 0.00, 90.00);
CreateDynamicObject(3660, 1923.00, -1860.67, 18.66,   0.00, 0.00, 90.00);
CreateDynamicObject(3660, 1905.79, -1860.64, 18.66,   0.00, 0.00, 90.00);
CreateDynamicObject(3660, 1905.79, -1869.75, 18.66,   0.00, 0.00, 90.00);
CreateDynamicObject(984, 1915.90, -1850.90, 16.60,   0.00, 0.00, 90.00);
CreateDynamicObject(984, 1912.70, -1850.90, 16.60,   0.00, 0.00, 90.00);
CreateDynamicObject(984, 1916.95, -1879.53, 16.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3498, 1924.11, -1879.40, 11.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1905.20, -1879.43, 11.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1905.23, -1850.97, 11.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1924.06, -1850.98, 11.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1949.85, -1879.63, 15.16,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1923.21, -1879.04, 18.48,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1923.17, -1851.59, 18.48,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1905.95, -1851.64, 18.48,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1906.11, -1878.89, 18.48,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1924.37, -1866.91, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1924.37, -1863.43, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1949.25, -1858.89, 15.16,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1930.52, -1854.36, 13.16,   0.00, 0.00, 76.44);
CreateDynamicObject(984, 1942.97, -1857.38, 13.16,   0.00, 0.00, 76.44);
CreateDynamicObject(3935, 1924.96, -1873.26, 15.03,   0.00, 0.00, -90.00);
CreateDynamicObject(3935, 1924.87, -1857.58, 15.03,   0.00, 0.00, -90.00);
CreateDynamicObject(16151, 1923.13, -1856.42, 12.98,   0.00, 0.00, 0.00);
CreateDynamicObject(16151, 1922.99, -1874.33, 12.98,   0.00, 0.00, 0.00);
CreateDynamicObject(14651, 1907.94, -1876.14, 14.85,   0.00, 0.00, 0.00);
CreateDynamicObject(14651, 1908.40, -1854.23, 14.85,   0.00, 0.00, -25.68);
CreateDynamicObject(14651, 1907.33, -1864.91, 14.85,   0.00, 0.00, 65.94);
CreateDynamicObject(1679, 1914.03, -1876.03, 13.14,   0.00, 0.00, -63.72);
CreateDynamicObject(1679, 1917.12, -1869.57, 13.14,   0.00, 0.00, -168.30);
CreateDynamicObject(1679, 1911.64, -1870.24, 13.14,   0.00, 0.00, -184.86);
CreateDynamicObject(1679, 1918.05, -1864.71, 13.14,   0.00, 0.00, -218.82);
CreateDynamicObject(1679, 1912.54, -1864.97, 13.14,   0.00, 0.00, -218.82);
CreateDynamicObject(1679, 1912.50, -1859.76, 13.14,   0.00, 0.00, -218.82);
CreateDynamicObject(1679, 1914.16, -1855.50, 13.14,   0.00, 0.00, -218.82);
CreateDynamicObject(1679, 1917.38, -1859.63, 13.14,   0.00, 0.00, -218.82);
CreateDynamicObject(1216, 1905.50, -1859.04, 13.32,   0.00, 0.00, 90.00);
CreateDynamicObject(1216, 1905.50, -1859.65, 13.32,   0.00, 0.00, 90.00);
CreateDynamicObject(1216, 1905.50, -1860.25, 13.32,   0.00, 0.00, 90.00);
CreateDynamicObject(19434, 1924.13, -1865.15, 16.15,   90.00, 0.00, 0.00);
CreateDynamicObject(3089, 1924.08, -1866.76, 13.97,   0.00, 0.00, 169.98);
CreateDynamicObject(3089, 1924.07, -1863.57, 13.97,   0.00, 0.00, 185.64);
CreateDynamicObject(638, 1924.62, -1868.38, 13.21,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1924.62, -1871.06, 13.21,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1924.62, -1877.81, 13.21,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1924.62, -1875.16, 13.21,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1924.62, -1872.92, 13.21,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1924.61, -1861.91, 13.21,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1924.62, -1859.26, 13.21,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1924.62, -1854.40, 13.21,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1924.62, -1857.02, 13.21,   0.00, 0.00, 0.00);
CreateDynamicObject(3920, 1924.11, -1872.88, 15.04,   0.00, 0.00, -90.00);
CreateDynamicObject(3920, 1924.11, -1860.26, 15.04,   0.00, 0.00, -90.00);
CreateDynamicObject(3920, 1924.11, -1857.62, 15.04,   0.00, 0.00, -90.00);
CreateDynamicObject(643, 1909.46, -1853.61, 16.48,   0.00, 0.00, -47.46);
CreateDynamicObject(643, 1919.25, -1854.18, 16.48,   0.00, 0.00, -180.84);
CreateDynamicObject(643, 1918.06, -1859.81, 16.48,   0.00, 0.00, -265.38);
CreateDynamicObject(643, 1914.26, -1855.17, 16.48,   0.00, 0.00, -392.10);
CreateDynamicObject(643, 1911.18, -1859.75, 16.48,   0.00, 0.00, -265.26);
CreateDynamicObject(643, 1918.37, -1864.50, 16.48,   0.00, 0.00, -265.26);
CreateDynamicObject(643, 1913.93, -1863.35, 16.48,   0.00, 0.00, -305.10);
CreateDynamicObject(643, 1919.00, -1868.18, 16.48,   0.00, 0.00, -354.96);
CreateDynamicObject(643, 1909.40, -1863.86, 16.48,   0.00, 0.00, -354.96);
CreateDynamicObject(643, 1919.18, -1873.79, 16.48,   0.00, 0.00, -458.22);
CreateDynamicObject(643, 1914.77, -1870.41, 16.48,   0.00, 0.00, -498.66);
CreateDynamicObject(643, 1910.34, -1869.15, 16.48,   0.00, 0.00, -447.60);
CreateDynamicObject(642, 1914.75, -1870.43, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1918.99, -1868.24, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1914.72, -1875.25, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1910.31, -1869.16, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1909.37, -1863.90, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1913.93, -1863.40, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1918.38, -1864.54, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1918.07, -1859.85, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1911.21, -1859.82, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1909.43, -1853.64, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1914.22, -1855.20, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1919.26, -1854.18, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(643, 1914.74, -1875.22, 16.48,   0.00, 0.00, -458.22);
CreateDynamicObject(642, 1909.72, -1874.94, 17.40,   0.00, 0.00, 0.00);
CreateDynamicObject(643, 1909.74, -1874.89, 16.48,   0.00, 0.00, -458.22);
CreateDynamicObject(1597, 1933.27, -1867.06, 15.13,   0.00, 0.00, 81.24);
CreateDynamicObject(1597, 1945.97, -1868.79, 15.13,   0.00, 0.00, 82.34);
CreateDynamicObject(1280, 1929.36, -1879.21, 12.91,   0.00, 0.00, -90.00);
CreateDynamicObject(1280, 1933.44, -1879.21, 12.91,   0.00, 0.00, -90.00);
CreateDynamicObject(1280, 1938.08, -1879.21, 12.91,   0.00, 0.00, -90.00);
CreateDynamicObject(1280, 1942.32, -1879.21, 12.91,   0.00, 0.00, -90.00);
CreateDynamicObject(1280, 1946.07, -1879.21, 12.91,   0.00, 0.00, -90.00);
CreateDynamicObject(1280, 1929.19, -1854.31, 12.91,   0.00, 0.00, 76.44);
CreateDynamicObject(1280, 1933.23, -1855.41, 12.91,   0.00, 0.00, 76.44);
CreateDynamicObject(1280, 1937.79, -1856.47, 12.91,   0.00, 0.00, 76.44);
CreateDynamicObject(1280, 1942.19, -1857.52, 12.91,   0.00, 0.00, 76.44);
CreateDynamicObject(1280, 1946.34, -1858.55, 12.91,   0.00, 0.00, 76.44);
// Restaurante Ayunta (By Esparza)
CreateDynamicObject(3498, 1397.73, -1882.44, 15.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1397.29, -1882.28, 18.45,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1385.99, -1882.27, 18.45,   0.00, 0.00, 90.00);
CreateDynamicObject(3498, 1380.15, -1882.44, 15.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1393.77, -1882.45, 20.22,   0.00, 90.00, 0.00);
CreateDynamicObject(3498, 1384.81, -1882.44, 20.22,   0.00, 90.00, 180.00);
CreateDynamicObject(3498, 1380.11, -1891.77, 15.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1379.91, -1884.62, 14.33,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1379.89, -1888.56, 14.33,   90.00, 0.00, 0.00);
CreateDynamicObject(3498, 1380.13, -1887.05, 20.22,   0.00, 90.00, 90.00);
CreateDynamicObject(3498, 1380.13, -1887.05, 20.22,   0.00, 90.00, -90.00);
CreateDynamicObject(3851, 1379.90, -1889.60, 14.33,   90.00, 0.00, 0.00);
CreateDynamicObject(3498, 1397.69, -1891.95, 15.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1393.89, -1891.95, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1385.27, -1891.98, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1389.54, -1892.00, 19.36,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1383.05, -1892.03, 14.33,   90.00, 0.00, 90.00);
CreateDynamicObject(3498, 1384.70, -1891.80, 20.22,   0.00, 90.00, 180.00);
CreateDynamicObject(3851, 1382.31, -1892.02, 14.33,   90.00, 0.00, 90.00);
CreateDynamicObject(3498, 1393.58, -1891.80, 20.22,   0.00, 90.00, 180.00);
CreateDynamicObject(3851, 1396.04, -1891.93, 14.33,   90.00, 0.00, 90.00);
CreateDynamicObject(3498, 1389.54, -1892.00, 19.64,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1385.73, -1884.40, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1385.72, -1888.28, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1397.00, -1888.31, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1397.03, -1884.41, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1385.97, -1889.73, 20.49,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1392.22, -1889.82, 20.47,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1397.79, -1884.67, 14.79,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1397.77, -1888.68, 14.79,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1397.75, -1889.65, 14.79,   90.00, 0.00, 0.00);
CreateDynamicObject(14651, 1383.13, -1889.66, 18.68,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1383.17, -1885.57, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1387.58, -1884.75, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1386.40, -1888.89, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(16151, 1396.95, -1887.19, 16.81,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1390.22, -1887.49, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(8615, 1389.37, -1893.13, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1395.17, -1899.48, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1391.92, -1896.33, 12.95,   0.00, 0.00, -79.92);
CreateDynamicObject(1679, 1388.92, -1900.16, 12.95,   0.00, 0.00, -79.92);
CreateDynamicObject(1679, 1387.78, -1896.39, 12.95,   0.00, 0.00, -79.92);
CreateDynamicObject(642, 1387.71, -1896.43, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1391.90, -1896.36, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1395.14, -1899.54, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1388.87, -1900.16, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1368.12, -1892.82, 12.47,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1368.03, -1899.96, 12.47,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1368.30, -1892.53, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1368.42, -1899.86, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1379.49, -1882.23, 14.49,   0.00, 0.00, -89.22);
CreateDynamicObject(1231, 1365.99, -1880.63, 14.49,   0.00, 0.00, -89.22);
CreateDynamicObject(717, 1368.19, -1885.65, 12.47,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1368.16, -1885.64, 12.92,   0.00, 0.00, 0.00);
// Hospital Los Santos by Jhoel Gomez
CreateDynamicObject(1536, 1160.50, -1384.50, -4.10,   0.00, 0.00, 268.75);
CreateDynamicObject(1536, 1160.50, -1384.50, -8.40,   0.00, 0.00, 268.75);
CreateDynamicObject(1536, 1152.90, -1391.50, -8.40,   0.00, 0.00, 180.03);
CreateDynamicObject(1536, 1148.90, -1391.40, -8.40,   0.00, 0.00, 180.03);
CreateDynamicObject(1536, 1160.60, -1383.50, -8.40,   0.00, 0.00, 88.78);
CreateDynamicObject(1536, 1160.50, -1387.50, -8.40,   0.00, 0.00, 88.78);
CreateDynamicObject(14388, 1172.80, -1359.00, -6.80,   0.00, 0.00, 268.75);
CreateDynamicObject(2774, 1154.50, -1369.70, -8.40,   0.00, 0.00, 0.00);
CreateDynamicObject(14395, 1157.50, -1373.50, -6.30,   0.00, 0.00, 268.13);
CreateDynamicObject(2774, 1145.10, -1369.60, -8.40,   0.00, 0.00, 359.16);
CreateDynamicObject(4012, 1186.50, -1371.00, -39.70,   90.00, 0.00, 359.15);
CreateDynamicObject(4012, 1161.40, -1345.60, -39.70,   90.00, 0.00, 88.59);
CreateDynamicObject(2774, 1161.20, -1377.10, -8.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1536, 1149.90, -1391.50, -8.40,   0.00, 0.00, 359.44);
CreateDynamicObject(1536, 1145.90, -1391.40, -8.40,   0.00, 0.00, 359.43);
CreateDynamicObject(8169, 1160.50, -1387.30, -6.20,   90.00, 0.00, 89.16);
CreateDynamicObject(8169, 1160.60, -1383.00, -6.20,   90.00, 0.00, 89.15);
CreateDynamicObject(8169, 1150.20, -1391.50, -6.20,   90.00, 0.00, 358.97);
CreateDynamicObject(8169, 1146.10, -1391.40, -6.20,   90.00, 0.00, 358.97);
CreateDynamicObject(8169, 1160.60, -1385.10, -3.20,   90.00, 0.00, 89.14);
CreateDynamicObject(1536, 1160.60, -1380.50, -8.40,   0.00, 0.00, 268.75);
CreateDynamicObject(1536, 1160.50, -1387.50, -4.10,   0.00, 0.00, 88.78);
CreateDynamicObject(8402, 1154.40, -1350.50, -8.40,   0.00, 0.00, 358.31);
CreateDynamicObject(1536, 1153.90, -1366.00, -8.40,   0.00, 0.00, 269.81);
CreateDynamicObject(1536, 1153.90, -1369.00, -8.40,   0.00, 0.00, 88.78);
CreateDynamicObject(3851, 1148.20, -1384.40, -2.80,   90.00, 0.00, 88.48);
CreateDynamicObject(3851, 1155.40, -1384.60, -2.80,   90.00, 0.00, 88.48);
CreateDynamicObject(3851, 1157.40, -1382.70, -2.80,   90.00, 0.00, 179.51);
CreateDynamicObject(3851, 1157.50, -1375.70, -2.80,   90.00, 0.00, 179.51);
CreateDynamicObject(3851, 1155.50, -1373.70, -2.80,   90.00, 0.00, 268.85);
CreateDynamicObject(3851, 1144.40, -1384.30, -2.80,   90.00, 0.00, 88.48);
CreateDynamicObject(3851, 1145.00, -1389.90, -4.10,   0.00, 90.00, 88.48);
CreateDynamicObject(3851, 1156.30, -1390.20, -4.10,   0.00, 90.00, 88.48);
CreateDynamicObject(2976, 1173.10, -1376.20, -3.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2599, 1146.40, -1369.70, -8.00,   0.00, 0.00, 86.82);
CreateDynamicObject(3462, 1159.00, -1377.00, -7.20,   0.00, 0.00, 87.66);
CreateDynamicObject(2711, 1150.20, -1374.20, -8.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2611, 1153.90, -1362.70, -6.60,   0.00, 0.00, 269.81);
CreateDynamicObject(1997, 1156.70, -1375.00, -8.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1997, 1155.70, -1375.00, -8.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1997, 1154.70, -1375.00, -8.40,   0.00, 0.00, 0.00);
CreateDynamicObject(11245, 1145.60, -1380.20, -3.00,   0.00, 0.00, 0.00);
CreateDynamicObject(11245, 1145.70, -1376.30, -3.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1849, 1208.60, -1362.90, -4.40,   0.00, 0.00, 359.16);
CreateDynamicObject(1649, 1150.50, -1365.40, -8.80,   0.00, 90.00, 0.84);
CreateDynamicObject(2774, 1149.30, -1365.40, -8.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2813, 1151.70, -1365.70, -7.40,   0.00, 0.00, 1.69);
CreateDynamicObject(1671, 1152.30, -1364.40, -7.90,   0.00, 0.00, 15.17);
CreateDynamicObject(1671, 1152.60, -1361.40, -7.90,   0.00, 0.00, 117.16);
CreateDynamicObject(2190, 1153.80, -1361.10, -7.40,   0.00, 0.00, 269.71);
CreateDynamicObject(1649, 1152.20, -1365.40, -5.00,   0.00, 0.00, 360.00);
CreateDynamicObject(18092, 1151.60, -1365.30, -7.90,   0.00, 0.00, 180.47);
CreateDynamicObject(1649, 1154.60, -1365.40, -8.80,   0.00, 90.00, 359.15);
CreateDynamicObject(3851, 1148.70, -1363.30, -6.40,   90.00, 0.00, 176.14);
CreateDynamicObject(1523, 1148.90, -1361.40, -8.40,   0.00, 0.00, 86.82);
CreateDynamicObject(3851, 1149.00, -1359.40, -0.40,   90.00, 0.00, 176.13);
CreateDynamicObject(2343, 1177.40, -1377.20, -4.10,   0.00, 0.00, 0.00);
CreateDynamicObject(3657, 1155.60, -1384.20, -7.90,   0.00, 0.00, 179.63);
CreateDynamicObject(3657, 1148.40, -1384.00, -7.90,   0.00, 0.00, 177.94);
CreateDynamicObject(3657, 1155.40, -1391.00, -7.90,   0.00, 0.00, 178.78);
CreateDynamicObject(3657, 1145.90, -1387.80, -7.90,   0.00, 0.00, 88.59);
CreateDynamicObject(3657, 1157.90, -1382.60, -7.90,   0.00, 0.00, 88.59);
CreateDynamicObject(1808, 1146.10, -1384.10, -8.40,   0.00, 0.00, 179.63);
CreateDynamicObject(1808, 1158.10, -1388.20, -8.40,   0.00, 0.00, 179.63);
CreateDynamicObject(1808, 1160.40, -1383.00, -4.10,   0.00, 0.00, 269.81);
CreateDynamicObject(3657, 1155.50, -1385.10, -7.90,   0.00, 0.00, 358.40);
CreateDynamicObject(3657, 1148.40, -1384.90, -7.90,   0.00, 0.00, 359.24);
CreateDynamicObject(2186, 1149.30, -1362.80, -8.40,   0.00, 0.00, 86.82);
CreateDynamicObject(2103, 1153.70, -1363.20, -7.40,   0.00, 0.00, 268.97);
CreateDynamicObject(18092, 1153.80, -1362.60, -7.90,   0.00, 0.00, 89.44);
CreateDynamicObject(628, 1146.10, -1385.10, -6.40,   0.00, 0.00, 0.00);
CreateDynamicObject(628, 1146.00, -1390.40, -6.40,   0.00, 0.00, 0.00);
CreateDynamicObject(628, 1157.90, -1384.90, -6.40,   0.00, 0.00, 0.00);
CreateDynamicObject(633, 1154.90, -1390.00, -3.10,   0.00, 0.00, 0.00);
CreateDynamicObject(633, 1147.90, -1389.80, -3.10,   0.00, 0.00, 0.00);
CreateDynamicObject(633, 1151.30, -1389.90, -3.10,   0.00, 0.00, 0.00);
CreateDynamicObject(3657, 1151.60, -1379.70, -7.90,   0.00, 0.00, 89.44);
CreateDynamicObject(3657, 1149.10, -1379.60, -7.90,   0.00, 0.00, 269.90);
CreateDynamicObject(644, 1149.20, -1366.50, -8.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1597, 1150.10, -1377.30, -5.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3657, 1149.00, -1375.30, -7.90,   0.00, 0.00, 269.90);
CreateDynamicObject(3657, 1151.60, -1375.30, -7.90,   0.00, 0.00, 89.43);
CreateDynamicObject(14532, 1146.20, -1377.10, -7.40,   0.00, 0.00, 269.81);
CreateDynamicObject(2596, 1157.00, -1379.20, -3.70,   0.00, 0.00, 268.13);
CreateDynamicObject(2718, 1157.30, -1375.10, -6.00,   0.00, 0.00, 268.97);
CreateDynamicObject(2595, 1153.40, -1364.60, -7.00,   0.00, 0.00, 184.69);
CreateDynamicObject(2816, 1153.40, -1365.70, -7.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2596, 1151.90, -1384.00, -3.70,   0.00, 0.00, 177.94);
CreateDynamicObject(1566, 1145.50, -1387.00, -2.60,   0.00, 0.00, 90.19);
CreateDynamicObject(1369, 1159.70, -1377.00, -3.50,   0.00, 0.00, 269.81);
CreateDynamicObject(14603, 1174.80, -1375.70, -2.90,   0.00, 0.00, 179.53);
CreateDynamicObject(914, 1176.60, -1376.00, -2.40,   0.00, 0.00, 269.81);
CreateDynamicObject(914, 1176.60, -1374.80, -2.40,   0.00, 0.00, 270.65);
CreateDynamicObject(914, 1176.60, -1377.20, -2.40,   0.00, 0.00, 269.81);
CreateDynamicObject(9819, 1172.50, -1376.40, -3.90,   0.00, 0.00, 269.81);
CreateDynamicObject(9822, 1172.10, -1376.30, -4.00,   0.00, 0.00, 270.66);
CreateDynamicObject(3851, 1178.60, -1374.20, 0.90,   90.00, 0.00, 90.16);
CreateDynamicObject(3851, 1176.60, -1379.80, -1.40,   0.00, 0.00, 180.00);
CreateDynamicObject(930, 1202.80, -1363.10, -3.90,   0.00, 0.00, 268.13);
CreateDynamicObject(2167, 1180.00, -1377.70, -4.70,   0.00, 0.00, 180.37);
CreateDynamicObject(2419, 1177.30, -1376.00, -4.70,   0.00, 0.00, 89.34);
CreateDynamicObject(8169, 1181.50, -1374.40, -4.70,   0.00, 0.00, 107.69);
CreateDynamicObject(8231, 1204.70, -1362.60, -2.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1997, 1203.50, -1364.40, -4.40,   0.00, 0.00, 90.19);
CreateDynamicObject(1997, 1203.60, -1369.50, -4.40,   0.00, 0.00, 90.18);
CreateDynamicObject(3394, 1212.00, -1370.50, -4.40,   0.00, 0.00, 271.50);
CreateDynamicObject(3395, 1203.10, -1366.80, -4.40,   0.00, 0.00, 179.63);
CreateDynamicObject(3851, 1206.50, -1362.50, -2.40,   0.00, 0.00, 89.32);
CreateDynamicObject(3851, 1217.70, -1362.70, 0.00,   0.00, 0.00, 88.48);
CreateDynamicObject(1523, 1212.10, -1362.60, -4.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2206, 1207.90, -1360.40, -4.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1663, 1210.10, -1358.80, -3.90,   0.00, 0.00, 345.67);
CreateDynamicObject(1663, 1207.50, -1358.70, -3.90,   0.00, 0.00, 16.85);
CreateDynamicObject(1714, 1208.80, -1361.70, -4.40,   0.00, 0.00, 179.63);
CreateDynamicObject(2011, 1205.50, -1362.20, -4.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2011, 1211.90, -1362.20, -4.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2167, 1180.90, -1377.70, -4.70,   0.00, 0.00, 180.37);
CreateDynamicObject(2167, 1206.80, -1366.70, -4.40,   0.00, 0.00, 269.71);
CreateDynamicObject(2167, 1206.80, -1367.60, -4.40,   0.00, 0.00, 269.71);
CreateDynamicObject(1536, 1205.90, -1354.00, -4.40,   0.00, 0.00, 0.00);
CreateDynamicObject(8169, 1211.30, -1354.00, -3.20,   90.00, 0.00, 359.80);
CreateDynamicObject(1806, 1212.20, -1369.00, -4.40,   0.00, 0.00, 181.31);
CreateDynamicObject(1806, 1209.20, -1368.60, -4.40,   0.00, 0.00, 161.93);
CreateDynamicObject(1536, 1175.00, -1371.00, -4.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1886, 1149.00, -1369.20, -2.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1886, 1151.70, -1369.20, -2.30,   0.00, 0.00, 0.00);
CreateDynamicObject(14718, 1123.30, -1384.00, -4.00,   0.00, 0.00, 0.00);
CreateDynamicObject(16378, 1121.70, -1383.50, -3.20,   0.00, 0.00, 178.79);
CreateDynamicObject(2528, 1120.90, -1385.50, -4.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2523, 1120.20, -1388.20, -4.00,   0.00, 0.00, 88.50);
CreateDynamicObject(1494, 1122.20, -1388.60, -4.00,   0.00, 0.00, 89.34);
CreateDynamicObject(1494, 1124.20, -1383.10, -4.00,   0.00, 0.00, 89.34);
CreateDynamicObject(1494, 1131.00, -1386.40, -4.00,   0.00, 0.00, 89.34);
CreateDynamicObject(2184, 1135.20, -1386.90, -4.00,   0.00, 0.00, 180.47);
CreateDynamicObject(2777, 1135.10, -1385.80, -3.50,   0.00, 0.00, 347.36);
CreateDynamicObject(2777, 1133.10, -1385.80, -3.50,   0.00, 0.00, 16.01);
CreateDynamicObject(1714, 1134.10, -1388.70, -4.00,   0.00, 0.00, 181.31);
CreateDynamicObject(1742, 1132.50, -1389.80, -4.00,   0.00, 0.00, 179.63);
CreateDynamicObject(1742, 1136.30, -1389.80, -4.00,   0.00, 0.00, 180.47);
CreateDynamicObject(1744, 1134.70, -1389.90, -3.00,   0.00, 0.00, 183.74);
CreateDynamicObject(2102, 1134.20, -1389.60, -2.70,   0.00, 0.00, 183.00);
CreateDynamicObject(1536, 1125.50, -1392.60, -3.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1240, 1145.60, -1386.20, -1.80,   0.00, 0.00, 269.81);
CreateDynamicObject(3396, 1208.60, -1370.60, -4.40,   0.00, 0.00, 272.34);
CreateDynamicObject(14665, 1156.50, -1325.00, -11.50,   0.00, 0.00, 178.69);
CreateDynamicObject(1536, 1161.90, -1323.60, -13.50,   0.00, 0.00, 268.13);
CreateDynamicObject(1536, 1161.80, -1326.60, -13.50,   0.00, 0.00, 88.60);
CreateDynamicObject(3851, 1158.80, -1326.60, -13.70,   0.00, 0.00, 90.15);
CreateDynamicObject(3384, 1160.50, -1334.00, -12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3383, 1160.80, -1331.00, -13.50,   0.00, 0.00, 88.60);
CreateDynamicObject(2132, 1157.60, -1327.20, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2131, 1155.60, -1327.20, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2134, 1154.60, -1327.20, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2134, 1153.60, -1327.20, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2133, 1159.60, -1327.20, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3922, 1150.30, -1332.10, -13.50,   0.00, 0.00, 86.82);
CreateDynamicObject(3922, 1150.30, -1335.30, -13.50,   0.00, 0.00, 86.81);
CreateDynamicObject(2812, 1154.10, -1329.90, -12.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2829, 1157.20, -1333.20, -12.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2832, 1154.20, -1333.20, -12.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2822, 1154.60, -1327.10, -12.50,   0.00, 0.00, 27.81);
CreateDynamicObject(2831, 1159.60, -1327.20, -12.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1156.20, -1323.50, -9.00,   0.00, 359.60, 89.30);
CreateDynamicObject(1523, 1151.00, -1323.50, -13.50,   0.00, 0.00, 0.84);
CreateDynamicObject(3851, 1158.20, -1323.50, -13.00,   0.00, 0.00, 89.31);
CreateDynamicObject(11455, 1150.80, -1325.70, -10.10,   359.00, 0.00, 268.97);
CreateDynamicObject(1671, 1159.40, -1315.70, -13.00,   0.00, 0.00, 60.69);
CreateDynamicObject(1808, 1153.50, -1323.70, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1808, 1161.50, -1323.10, -13.50,   0.00, 0.00, 268.13);
CreateDynamicObject(2003, 1155.50, -1314.60, -13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(14532, 1161.30, -1322.20, -12.50,   0.00, 0.00, 88.50);
CreateDynamicObject(1997, 1153.40, -1315.10, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1997, 1154.50, -1315.10, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1997, 1156.50, -1315.20, -13.50,   0.00, 0.00, 359.16);
CreateDynamicObject(1997, 1157.60, -1315.20, -13.50,   0.00, 0.00, 359.16);
CreateDynamicObject(2864, 1155.40, -1314.60, -12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(14867, 1150.80, -1318.70, -12.00,   0.00, 0.00, 268.13);
CreateDynamicObject(3386, 1161.40, -1318.20, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3387, 1161.40, -1319.20, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3388, 1161.40, -1320.20, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3389, 1161.40, -1321.20, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1997, 1153.20, -1322.40, -13.50,   0.00, 0.00, 177.84);
CreateDynamicObject(1997, 1154.30, -1322.40, -13.50,   0.00, 0.00, 177.84);
CreateDynamicObject(2003, 1155.30, -1323.00, -13.00,   0.00, 0.00, 178.79);
CreateDynamicObject(3397, 1161.10, -1316.00, -13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1997, 1156.40, -1322.50, -13.50,   0.00, 0.00, 179.53);
CreateDynamicObject(1997, 1157.50, -1322.50, -13.50,   0.00, 0.00, 179.52);
CreateDynamicObject(4643, 1108.80, -1360.90, -36.50,   90.00, 0.00, 358.31);
	// -============================== Cyber Café ==========================================- //
	CreateDynamicObject(12843,1092.53417969,-1380.43945312,12.80624962,0.00000000,0.00000000,0.00000000); //object(cos_liquorshop) (1)
	CreateDynamicObject(12844,1089.54785156,-1380.46679688,14.78195858,0.00000000,0.00000000,359.50000000); //object(cos_liqinside) (2)
	CreateDynamicObject(2954,1084.42919922,-1375.44812012,12.82817554,0.00000000,0.00000000,270.00000000); //object(kmb_ot) (1)
	CreateDynamicObject(2954,1084.43017578,-1375.50622559,14.86172867,0.00000000,2.00000000,270.00000000); //object(kmb_ot) (2)
	CreateDynamicObject(1280,1084.25866699,-1385.80151367,13.17749691,0.00000000,0.00000000,91.50000000); //object(parkbench1) (1)
	CreateDynamicObject(1281,1104.75927734,-1380.01562500,13.58163261,0.00000000,0.00000000,342.00000000); //object(parktable1) (1)
	CreateDynamicObject(1281,1108.77478027,-1382.49890137,13.58163261,0.00000000,0.00000000,270.00000000); //object(parktable1) (2)
	CreateDynamicObject(970,1108.77661133,-1385.20068359,13.33273125,0.00000000,0.00000000,0.50000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1099.61035156,-1385.34729004,13.33273125,0.00000000,0.00000000,2.00000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1110.91345215,-1383.09204102,13.33927536,0.00000000,0.00000000,268.99987793); //object(fencesmallb) (3)
	CreateDynamicObject(974,1093.53308105,-1372.20556641,15.08400536,0.00000000,0.00000000,272.00000000); //object(tall_fence) (1)
	CreateDynamicObject(1568,1110.58142090,-1384.93798828,12.78125000,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (1)
	CreateDynamicObject(1568,1097.84497070,-1384.99291992,12.78779411,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (2)
	CreateDynamicObject(1568,1097.82299805,-1376.09619141,12.78125000,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (3)
	CreateDynamicObject(1367,1092.23010254,-1385.70190430,13.40314579,0.00000000,0.00000000,0.00000000); //object(cj_postbox) (1)
	CreateDynamicObject(1215,1101.83349609,-1385.21325684,13.34557343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1106.50598145,-1385.14501953,13.34557343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1216,1096.18566895,-1385.74523926,13.43976593,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (2)
	CreateDynamicObject(1216,1096.96252441,-1385.74523926,13.43786907,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (3)
	CreateDynamicObject(1286,1081.86267090,-1385.85839844,13.37843704,0.00000000,0.00000000,182.00000000); //object(newstandnew4) (1)
	CreateDynamicObject(1288,1082.41528320,-1385.86096191,13.37351227,0.00000000,0.00000000,182.00000000); //object(newstandnew2) (1)
	CreateDynamicObject(1215,1084.58093262,-1386.50805664,16.17106056,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(3851,1086.95507812,-1385.25195312,14.80624962,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx) (1)
	CreateDynamicObject(1215,1089.78186035,-1386.37145996,16.17106056,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1096.02331543,-1386.44958496,16.17106056,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(3851,1082.58496094,-1379.19921875,13.21324253,0.00000000,0.00000000,0.24719238); //object(carshowwin_sfsx) (2)
	CreateDynamicObject(2009,1091.24450684,-1383.28833008,12.80539608,0.00000000,0.00000000,270.00000000); //object(officedesk2l) (1)
	CreateDynamicObject(2175,1083.44921875,-1381.57421875,12.80539608,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (1)
	CreateDynamicObject(2175,1084.88574219,-1381.56933594,12.81272793,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (2)
	CreateDynamicObject(2175,1086.32592773,-1381.57690430,12.81272793,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (3)
	CreateDynamicObject(2175,1083.34863281,-1378.85351562,12.83039570,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (4)
	CreateDynamicObject(2175,1084.80957031,-1378.85644531,12.81272793,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (5)
	CreateDynamicObject(2175,1086.28076172,-1378.86328125,12.81272793,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (6)
	CreateDynamicObject(2175,1089.77929688,-1378.72131348,12.81272793,0.00000000,0.00000000,180.25000000); //object(med_office4_desk_3) (7)
	CreateDynamicObject(2175,1091.21716309,-1378.72521973,12.81272793,0.00000000,0.00000000,180.24719238); //object(med_office4_desk_3) (8)
	CreateDynamicObject(2175,1092.62463379,-1378.72863770,12.81272793,0.00000000,0.00000000,180.24719238); //object(med_office4_desk_3) (9)
	CreateDynamicObject(2356,1091.36364746,-1384.71154785,12.80539608,0.00000000,0.00000000,321.00000000); //object(police_off_chair) (1)
	CreateDynamicObject(2356,1083.75585938,-1382.90832520,12.81272793,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (2)
	CreateDynamicObject(2356,1085.15991211,-1382.91076660,12.81272793,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (3)
	CreateDynamicObject(2356,1086.60034180,-1382.88769531,12.80539608,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (4)
	CreateDynamicObject(2356,1083.59436035,-1380.15734863,12.80539608,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (5)
	CreateDynamicObject(2356,1085.05749512,-1380.13964844,12.81272793,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (6)
	CreateDynamicObject(2356,1086.70715332,-1380.09973145,12.81272793,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (7)
	CreateDynamicObject(2356,1089.54003906,-1377.34082031,12.81272793,0.00000000,0.00000000,182.00000000); //object(police_off_chair) (8)
	CreateDynamicObject(2356,1090.91235352,-1377.33349609,12.81272793,0.00000000,0.00000000,181.99951172); //object(police_off_chair) (9)
	CreateDynamicObject(2356,1092.41406250,-1377.40722656,12.81272793,0.00000000,0.00000000,181.99951172); //object(police_off_chair) (10)
	CreateDynamicObject(1999,1085.63647461,-1381.48754883,12.76807976,0.00000000,0.00000000,0.00000000); //object(officedesk2) (1)
	CreateDynamicObject(1999,1084.31164551,-1381.48852539,12.76844692,0.00000000,0.00000000,0.00000000); //object(officedesk2) (2)
	CreateDynamicObject(1999,1082.75622559,-1381.48669434,12.78039646,0.00000000,0.00000000,0.00000000); //object(officedesk2) (3)
	CreateDynamicObject(1999,1085.73669434,-1378.79357910,12.78772831,0.00000000,0.00000000,0.00000000); //object(officedesk2) (4)
	CreateDynamicObject(1999,1084.02490234,-1378.79467773,12.78199196,0.00000000,0.00000000,0.00000000); //object(officedesk2) (5)
	CreateDynamicObject(1999,1082.68261719,-1378.80163574,12.78281021,0.00000000,0.00000000,0.00000000); //object(officedesk2) (6)
	CreateDynamicObject(1999,1090.30798340,-1378.76574707,12.76620388,0.00000000,0.00000000,180.75000000); //object(officedesk2) (7)
	CreateDynamicObject(1999,1091.82434082,-1378.76098633,12.77811432,0.00000000,0.00000000,180.74707031); //object(officedesk2) (8)
	CreateDynamicObject(1999,1093.12976074,-1378.74401855,12.77968597,0.00000000,0.00000000,180.75000000); //object(officedesk2) (9)
	CreateDynamicObject(1723,1095.90820312,-1380.42211914,12.80539608,0.00000000,0.00000000,270.50000000); //object(mrk_seating1) (1)
	CreateDynamicObject(3920,1091.14123535,-1385.21215820,16.77091980,0.00000000,0.00000000,179.75000000); //object(lib_veg3) (1)
	CreateDynamicObject(18014,1088.97656250,-1385.84521484,13.03953648,0.00000000,0.00000000,270.00000000); //object(int_rest_veg03) (2)
	CreateDynamicObject(646,1095.86645508,-1384.27429199,14.22192001,0.00000000,0.00000000,0.00000000); //object(veg_palmkb14) (2)
	CreateDynamicObject(792,1079.34008789,-1387.42004395,13.00259399,0.00000000,0.00000000,0.00000000); //object(aw_streettree1) (1)
	CreateDynamicObject(792,1108.19799805,-1378.93762207,13.53124619,0.00000000,0.00000000,336.50000000); //object(aw_streettree1) (2)
	CreateDynamicObject(2690,1086.00170898,-1376.02270508,13.89021015,0.00000000,0.00000000,0.00000000); //object(cj_fire_ext) (1)
	CreateDynamicObject(1210,1091.08935547,-1383.31115723,13.58370876,271.24987793,0.00000000,0.00000000); //object(briefcase) (1)
	CreateDynamicObject(2773,1095.29663086,-1383.93017578,13.32262421,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (1)
	CreateDynamicObject(2894,1091.81188965,-1383.31445312,13.61028004,0.00000000,0.00000000,0.00000000); //object(kmb_rhymesbook) (1)
	CreateDynamicObject(1808,1096.20764160,-1379.24938965,12.80539608,0.00000000,0.00000000,268.00000000); //object(cj_watercooler2) (1)
	CreateDynamicObject(1841,1096.35949707,-1383.75842285,16.11229324,0.00000000,0.00000000,0.00000000); //object(speaker_1) (1)
	CreateDynamicObject(1841,1096.41943359,-1376.90161133,16.09013367,0.00000000,0.00000000,0.00000000); //object(speaker_1) (2)
	CreateDynamicObject(2596,1096.08959961,-1380.46264648,16.24308968,0.00000000,0.00000000,272.00000000); //object(cj_sex_tv) (1)
	CreateDynamicObject(1340,1099.31652832,-1383.34667969,13.91538048,0.00000000,0.00000000,0.00000000); //object(chillidogcart) (1)
	CreateDynamicObject(1341,1100.52355957,-1379.22460938,13.78383636,0.00000000,0.00000000,324.00000000); //object(icescart_prop) (1)
	CreateDynamicObject(1223,1101.61254883,-1389.30249023,12.69149494,0.00000000,0.00000000,280.00000000); //object(lampost_coast) (1)
	CreateDynamicObject(1223,1103.89453125,-1378.02917480,13.28125000,0.00000000,0.00000000,240.00000000); //object(lampost_coast) (3)
	CreateDynamicObject(16779,1085.93273926,-1379.76574707,16.76301765,0.00000000,0.00000000,355.50000000); //object(ufo_light02) (1)
	CreateDynamicObject(16779,1093.37512207,-1380.00732422,16.74996376,0.00000000,0.00000000,0.00000000); //object(ufo_light02) (2)
	CreateDynamicObject(1359,1095.86840820,-1376.59875488,13.50395298,0.00000000,0.00000000,0.00000000); //object(cj_bin1) (1)
	CreateDynamicObject(2412,1094.53698730,-1385.00585938,12.80539608,0.00000000,0.00000000,0.00000000); //object(cj_detector) (1)
	CreateDynamicObject(2413,1089.12194824,-1384.68481445,12.80539608,0.00000000,0.00000000,181.25000000); //object(shop_counter_3a) (1)
	CreateDynamicObject(2413,1087.50573730,-1384.72082520,12.80539608,0.00000000,0.00000000,181.24694824); //object(shop_counter_3a) (2)
	CreateDynamicObject(2488,1089.29760742,-1384.75659180,13.51120472,0.00000000,0.00000000,181.00000000); //object(manhunt_toy_1) (1)
	CreateDynamicObject(2488,1088.60522461,-1384.78820801,13.49805927,0.00000000,0.00000000,180.99975586); //object(manhunt_toy_1) (2)
	CreateDynamicObject(2490,1089.23059082,-1384.49633789,13.13751602,0.00000000,0.00000000,181.00000000); //object(vice_toy_1) (1)
	CreateDynamicObject(2490,1088.44836426,-1384.47937012,13.14030647,0.00000000,0.00000000,180.99975586); //object(vice_toy_1) (2)
	CreateDynamicObject(2484,1087.26464844,-1384.74438477,14.68132496,0.00000000,0.00000000,0.00000000); //object(model_yaught) (1)
	CreateDynamicObject(2489,1087.48742676,-1384.57702637,13.53079510,0.00000000,0.00000000,184.00000000); //object(manhunt_toy_2) (1)
	CreateDynamicObject(2489,1086.83081055,-1384.68835449,13.49906635,0.00000000,0.00000000,183.99902344); //object(manhunt_toy_2) (2)
	CreateDynamicObject(2499,1091.25048828,-1376.06591797,15.60769653,330.02014160,2.30908203,1.15432739); //object(hobby_kite4) (1)
	CreateDynamicObject(2601,1092.10168457,-1383.68713379,13.70128441,0.00000000,0.00000000,0.00000000); //object(cj_juice_can) (1)
	CreateDynamicObject(2495,1087.55554199,-1384.46093750,13.17615986,0.00000000,0.00000000,182.00000000); //object(vice_toy_2) (2)
	CreateDynamicObject(2495,1086.83349609,-1384.45275879,13.18251991,0.00000000,0.00000000,181.99951172); //object(vice_toy_2) (3)
	CreateDynamicObject(1514,1089.42248535,-1384.46032715,14.11250591,0.00000000,0.00000000,274.00000000); //object(dyn_ff_till) (1)
	CreateDynamicObject(2897,1091.31762695,-1385.46826172,21.09654045,271.99996948,269.99993896,183.99980164); //object(funtarp_law) (1)
	CreateDynamicObject(2897,1090.31494141,-1385.31628418,20.98733139,273.99902344,269.99450684,3.99902344); //object(funtarp_law) (2)
	CreateDynamicObject(1975,1091.33581543,-1386.89392090,21.19247246,0.00000000,0.00000000,86.00000000); //object(e_test) (1)
	// -======================== Premiums Rejas ==========================- //
	CreateDynamicObject(3749, 320.05, -1186.61, 81.12,   0.00, 0.00, 38.58);
	jennifer = CreateDynamicObject(980, 321.32, -1188.11, 78.08,   0.00, 0.00, 218.45);
	pablo = CreateDynamicObject(975, 1003.97, -643.57, 122.04,   0.00, 2.00, 23.00);
	brian = CreateDynamicObject(975, 264.36, -1333.31, 53.76,   0.00, 0.00, 35.75);
	CreateDynamicObject(3749, 260.86, -1229.67, 77.80,   0.00, 0.00, 35.41);
	matias = CreateDynamicObject(980, 261.00, -1229.75, 74.75,   0.00, 0.00, 215.96);
	CreateDynamicObject(3749, 210.70, -1350.06, 55.22,   0.00, 0.00, 42.42);
	distasio = CreateDynamicObject(980, 211.25, -1350.55, 52.18,   0.00, 0.00, 221.46);
	jeangate = CreateDynamicObject(980, 1246.0033, -767.3727, 91.1473, 0, 0.0000, 0);
	torres = CreateDynamicObject(980,787.20361328,-1152.45361328,25.40438461,0.00000000,0.00000000,90.00000000);
	torres2 = CreateDynamicObject(980,658.68890381,-1226.62780762,17.62639618,0.00000000,0.00000000,64.00000000);
	torres3 = CreateDynamicObject(980,665.05010986,-1310.76293945,15.35269642,0.00000000,0.00000000,180.00000000);
	// -===================== Interior Ambulance ==========================- //
	CreateDynamicObject(1698, 2002.0, 2285.0, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(1698, 2003.36, 2285.0, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(1698, 2004.72, 2285.0, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(1698, 2002.0, 2288.3, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(1698, 2003.36, 2288.3, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(1698, 2004.72, 2288.3, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(3386, 2001.58, 2285.75, 1010.1, 0.0, 0.0, 180.0);
	CreateDynamicObject(3388, 2001.58, 2284.8, 1010.1, 0.0, 0.0, 180.0);
	CreateDynamicObject(2146, 2003.3, 2286.4, 1010.6, 0.0, 0.0, 0.0);
	CreateDynamicObject(16000, 2001.3, 2281.0, 1007.5, 0.0, 0.0, 270.0);
	CreateDynamicObject(16000, 2005.4, 2281.0, 1007.5, 0.0, 0.0, 90.0);
	CreateDynamicObject(18049, 2006.0, 2279.5, 1013.05, 0.0, 0.0, 90.0);
	CreateDynamicObject(2639, 2005.0, 2285.55, 1010.7, 0.0, 0.0, 90.0);
	CreateDynamicObject(3791, 2005.3, 2288.25, 1012.4, 270.0, 0.0, 90.0);
	CreateDynamicObject(2174, 2001.7, 2286.74, 1010.1, 0.0, 0.0, 90.0);
	CreateDynamicObject(2690, 2001.41, 2287.0, 1011.25, 0.0, 0.0, 90.0);
	CreateDynamicObject(2163, 2001.3, 2286.84, 1011.9, 0.0, 0.0, 90.0);
	CreateDynamicObject(1789, 2005.1, 2284.1, 1010.7, 0.0, 0.0, 270.0);
	CreateDynamicObject(1369, 2001.85, 2283.85, 1010.7, 0.0, 0.0, 90.0);
	CreateDynamicObject(3384, 2001.9, 2288.85, 1011.1, 0.0, 0.0, 180.0);
	CreateDynamicObject(3395, 2005.3, 2288.32, 1010.05, 0.0, 0.0, 0.0);
    CreateDynamicObject(11469, 2008.6, 2294.5, 1010.1, 0.0, 0.0, 90.0);
    CreateDynamicObject(2154, 2001.55, 2289.75, 1010.0, 0.0, 0.0, 90.0);
    CreateDynamicObject(2741, 2001.4, 2289.65, 1012.0, 0.0, 0.0, 90.0);
    CreateDynamicObject(2685, 2001.35, 2289.65, 1011.5, 0.0, 0.0, 90.0);
    CreateDynamicObject(18056, 2005.4, 2290.4, 1011.9, 0.0, 0.0, 180.0);
    CreateDynamicObject(2688, 2001.4, 2283.85, 1012.0, 0.0, 0.0, 90.0);
    CreateDynamicObject(2687, 2005.35, 2286.0, 1012.0, 0.0, 0.0, 270.0);
    CreateDynamicObject(16000, 2006.5, 2290.0, 1020.0, 0.0, 180.0, 180.0);
    CreateDynamicObject(16000, 1991.0, 2283.4, 1016.0, 0.0, 90.0, 0.0);
    CreateDynamicObject(16000, 2015.7, 2283.4, 1016.0, 0.0, 270.0, 0.0);
    CreateDynamicObject(1719, 2005.0, 2284.1, 1010.6, 0.0, 0.0, 270.0);
    CreateDynamicObject(1718, 2005.1, 2284.1, 1010.73, 0.0, 0.0, 270.0);
    CreateDynamicObject(1785, 2005.1, 2284.1, 1010.95, 0.0, 0.0, 270.0);
    CreateDynamicObject(1783, 2005.05, 2284.1, 1010.4, 0.0, 0.0, 270.0);
	/* Cajeros */
	CreateDynamicObject(2754,1144.09912109,-1766.47509766,13.42406273,0.00000000,0.00000000,270.00000000); //object(otb_machine) (1)
	CreateDynamicObject(2754,1269.66125488,-1323.76599121,13.40214443,0.00000000,0.00000000,0.00000000); //object(otb_machine) (4)
	CreateDynamicObject(2754,2823.22656250,-1593.80871582,11.00387192,0.00000000,0.00000000,244.00000000); //object(otb_machine) (5)
	CreateDynamicObject(2754,1589.39196777,-2295.21191406,13.46932220,0.00000000,0.00000000,90.00000000); //object(otb_machine) (6)
	CreateDynamicObject(2754,1591.40454102,-2295.21191406,13.46932220,0.00000000,0.00000000,90.00000000); //object(otb_machine) (7)
	CreateDynamicObject(2754,1593.41723633,-2295.21191406,13.46932220,0.00000000,0.00000000,90.00000000); //object(otb_machine) (8)
	CreateDynamicObject(2754,450.53472900,-1794.50781250,5.43714857,0.00000000,0.00000000,270.00000000); //object(otb_machine) (9)
	CreateDynamicObject(2754,1415.19128418,-1020.33685303,23.73026848,0.00000000,0.00000000,90.00000000); //object(otb_machine) (10)
	CreateDynamicObject(2754,1417.67700195,-1020.33593750,23.73026848,0.00000000,0.00000000,90.00000000); //object(otb_machine) (11)
	// ++
	CreateDynamicObject(971,1025.2795,-1029.2299,32.1016,-0.00000,0.000000,0); // Pay & Spray
	CreateDynamicObject(971,488.2341,-1735.4591,11.1416,-0.00000,0.000000,174); // Pay & Spray
	CreateDynamicObject(971,2071.5410,-1831.4143,13.5469,-0.00000,0.000000,90); // Pay & Spray
	CreateDynamicObject(971,719.8199,-462.4768,16.3359,-0.00000,0.000000,0); // Pay & Spray
	CreateDynamicObject(971,-1904.4561,277.8578,41.0469,-0.00000,0.000000,0); // Pay & Spray
	CreateDynamicObject(1676,1007.3336,-936.4127,42.7581,-0.00000,0.000000,5); // Gas tank in Vinewood
	CreateDynamicObject(1676,1000.6406,-937.1027,42.7581,-0.00000,0.000000,5); // Gas tank in Vinewood
	// Actores
//	CreateDynamicActor(240, 2276.4126, -1264.5131, 24.1688, 90.00);
	/*      Count System    */
	printf("-=============== Objetos Cargados ===============-");
	printf("- CreateDynamicObjetcs [%d]", CountDynamicObjects());
	
	// -============================================== [ Faction Cars ] =========================================- //
    //RentBikes Ayuntamiento
    Hire_Vehiculos[0] = AddStaticVehicle(462,1522.5298,-1708.8992,13.1849,271.5256,1,1); // RentBike LSPD #1
	Hire_Vehiculos[1] = AddStaticVehicle(462,1522.6038,-1707.4457,13.1845,269.8559,1,1); // RentBike LSPD #2
	Hire_Vehiculos[2] = AddStaticVehicle(462,1522.6914,-1706.1799,13.1829,271.3940,1,1); // RentBike LSPD #3
	Hire_Vehiculos[3] = AddStaticVehicle(462,1522.7052,-1705.1754,13.1854,269.1204,1,1); // RentBike LSPD #4
	Hire_Vehiculos[4] = AddStaticVehicle(462,1522.7245,-1704.9312,13.1845,273.8936,1,1); // RentBike LSPD #4
	Hire_Vehiculos[5] = AddStaticVehicle(462,1522.7047,-1703.4611,13.1857,271.4095,1,1); // RentBike LSPD #5
	Hire_Vehiculos[6] = AddStaticVehicle(462,1224.5283,-1419.0996,12.9568,359.4164,1,1); // RentBike Hospital #1
	Hire_Vehiculos[7] = AddStaticVehicle(462,1223.2981,-1419.0470,12.9520,0.5961,1,1); // RentBike Hospital #2
	Hire_Vehiculos[8] = AddStaticVehicle(462,1222.2231,-1419.0000,12.9294,1.2078,1,1); // RentBike Hospital #3
	Hire_Vehiculos[9] = AddStaticVehicle(462,1221.0525,-1418.9910,12.9091,2.2727,1,1); // RentBike Hospital #4
	Hire_Vehiculos[10] = AddStaticVehicle(462,1219.4562,-1418.9425,12.9150,1.8591,1,1); // RentBike Hospital #5
	Hire_Vehiculos[11] = AddStaticVehicle(462,2277.6248,-1254.4854,23.6603,88.7045,10,10); // rentBike Spawn #1
	Hire_Vehiculos[12] = AddStaticVehicle(462,2277.5876,-1256.0574,23.6589,90.1423,3,1); // rentBike Spawn #2
	Hire_Vehiculos[13] = AddStaticVehicle(462,2277.5874,-1257.7000,23.6562,90.2473,1,3); // rentBike Spawn #3
	Hire_Vehiculos[14] = AddStaticVehicle(462,2277.4490,-1259.1830,23.6601,88.8227,2,1); // rentBike Spawn #4
	Hire_Vehiculos[15] = AddStaticVehicle(462,2277.3149,-1260.7236,23.6590,88.8854,1,2); // rentBike Spawn #5
	Hire_Vehiculos[16] = AddStaticVehicleEx(445,1560.5090,-2308.7578,13.4211,269.5337,1,1,60000); // Admiral    139
	Hire_Vehiculos[17] = AddStaticVehicleEx(401,1560.2716,-2312.1628,13.3247,269.8196,1,1,60000); // Bravura  140
	Hire_Vehiculos[18] = AddStaticVehicleEx(527,1560.4138,-2315.4321,13.2629,271.1275,1,1,60000); // Cadrona    141
	Hire_Vehiculos[19] = AddStaticVehicleEx(542,1560.6772,-2318.7734,13.2925,270.9814,1,1,60000); // Clover     142
	Hire_Vehiculos[20] = AddStaticVehicleEx(585,1560.6815,-2322.1318,13.1338,270.7402,1,1,60000); // Emperor    143
	Hire_Vehiculos[21] = AddStaticVehicleEx(526,1560.4124,-2325.3198,13.3150,270.8010,1,1,60000); // Fortune  144
	Hire_Vehiculos[22] = AddStaticVehicleEx(426,1560.6582,-2328.6963,13.2942,269.5092,1,1,60000); // Premier    145
	Hire_Vehiculos[23] = AddStaticVehicleEx(516,1560.6428,-2331.9155,13.3830,269.7287,1,1,60000); // Nebula     146
	Hire_Vehiculos[24] = AddStaticVehicleEx(421,1560.6007,-2335.2468,13.4078,270.4727,1,1,60000); // Washington 147
	Hire_Vehiculos[25] = AddStaticVehicleEx(540,1560.6134,-2338.5308,13.4294,270.6723,1,1,60000); // Vincen   148
	Hire_Vehiculos[26] = AddStaticVehicleEx(454,2961.6636,-1504.8459,-0.2164,260.8893,-1,-1,60000); //Tropic
	Hire_Vehiculos[27] = AddStaticVehicleEx(454,2951.8560,-1557.5182,-0.0475,259.2883,-1,-1,60000); //Tropic
	Hire_Vehiculos[28] = AddStaticVehicleEx(493,2973.0176,-1490.2281,-0.5906,261.5586,-1,-1,60000); //Jetmax
	Hire_Vehiculos[29] = AddStaticVehicleEx(493,2959.5867,-1574.8894,0.0131,261.8297,-1,-1,60000); //Squalo
	// LSPD
	LSPD_IsACopCarros[0] = AddStaticVehicleEx(596,1601.872924,-1704.370971,5.612636,89.574440,0,1,60000); // Patrulla LS   	1
	LSPD_IsACopCarros[2] = AddStaticVehicleEx(596,1601.902221,-1700.465332,5.634525,89.566131,0,1,60000); // Patrulla LS   	2
	LSPD_IsACopCarros[3] = AddStaticVehicleEx(596,1601.933105,-1696.409912,5.642260,89.562606,0,1,60000); // Patrulla LS   	3
	LSPD_IsACopCarros[4] = AddStaticVehicleEx(596,1601.963134,-1692.478881,5.656129,89.555740,0,1,60000); // Patrulla LS   	4
	LSPD_IsACopCarros[5] = AddStaticVehicleEx(596,1595.511840,-1710.769531,5.613651,0.000000,0,1,60000); // Patrulla LS    	5
	LSPD_IsACopCarros[6] = AddStaticVehicleEx(596,1591.606079,-1710.771240,5.626485,0.000000,0,1,60000); // Patrulla LS    	6
	LSPD_IsACopCarros[7] = AddStaticVehicleEx(599,1526.548095,-1644.479614,6.056174,179.637084,0,1,60000); // Ranger   		9
	LSPD_IsACopCarros[8] = AddStaticVehicleEx(599,1530.429199,-1644.505371,6.124225,179.634948,0,1,60000); // Ranger   		10
	LSPD_IsACopCarros[9] = AddStaticVehicleEx(525,1534.434448,-1644.530761,6.133507,179.633880,-1,103,60000); // Ranger   		11
	LSPD_IsACopCarros[10] = AddStaticVehicleEx(525,1538.758666,-1644.558349,6.156028,179.631210,-1,103,60000); // Ranger   		12
	LSPD_IsACopCarros[11] = AddStaticVehicleEx(523,1567.272338,-1708.937011,5.457219,354.100372,0,1,60000); // HPV 1000 		13
	LSPD_IsACopCarros[12] = AddStaticVehicleEx(523,1565.331420,-1708.737304,5.475297,354.107971,0,1,60000); // HPV 1000 		14
	LSPD_IsACopCarros[13] = AddStaticVehicleEx(523,1562.516479,-1708.446411,5.508016,354.100280,0,1,60000); // HPV 1000 		15
	LSPD_IsACopCarros[14] = AddStaticVehicleEx(427,1571.071044,-1615.492797,13.514673,268.842010,0,1,60000); // Enforcer    	16
	LSPD_IsACopCarros[15] = AddStaticVehicleEx(427,1557.802734,-1615.510131,13.514776,269.681549,0,1,60000); // Enforcer    	17
	LSPD_IsACopCarros[16] = AddStaticVehicleEx(601,1544.134521,-1609.579345,13.141159,269.321655,0,1,60000); // SWAT Van    	18
	LSPD_IsACopCarros[17] = AddStaticVehicleEx(497,1563.660034,-1655.212158,28.589679,88.595161,0,1,60000); // Police Maverick  19
	LSPD_IsACopCarros[18] = AddStaticVehicleEx(596, 1535.3346, -1668.6804, 13.0203, 0.0000, 1, 0, 60000);
	LSPD_IsACopCarros[19] = AddStaticVehicleEx(596, 1535.4117, -1675.9891, 13.0203, 0.0000, 1, 0, 60000);

	// Transport LS (20 - 27)
	Taxi_Vehiculos[0] = AddStaticVehicleEx(420,1802.9644,-1901.6696,13.1674,90.0000,-1,-1,60000); //Taxi
	Taxi_Vehiculos[1] = AddStaticVehicleEx(420,1802.8650,-1907.5543,13.1811,90.0000,-1,-1,60000); //Taxi
	Taxi_Vehiculos[2] = AddStaticVehicleEx(420,1802.8635,-1913.6115,13.1843,90.0000,-1,-1,60000); //Taxi
	Taxi_Vehiculos[3] = AddStaticVehicleEx(420,1802.9010,-1920.3129,13.1738,90.0000,-1,-1,60000); //Taxi
	Taxi_Vehiculos[4] = AddStaticVehicleEx(420,1802.8678,-1926.5791,13.1709,90.0000,-1,-1,60000); //Taxi
	Taxi_Vehiculos[5] = AddStaticVehicleEx(420,1802.9144,-1932.6637,13.1691,90.0000,-1,-1,60000); //Taxi
	Taxi_Vehiculos[6] = AddStaticVehicleEx(437,1777.00000000,-1929.19995117,13.60000038,0.0000,6,6,60000); //Coach
	Taxi_Vehiculos[7] = AddStaticVehicleEx(431,1781.30004883,-1929.59997559,13.60000038,0.0000,6,6,60000); //Bus
	// SAMD (34 - 42)
	SAMD_Vehiculos[0] = AddStaticVehicleEx(416,1097.6229,-1328.4508,13.4449,359.6445,3,3,60000); // Ambulancia  	39
	SAMD_Vehiculos[1] = AddStaticVehicleEx(416,1110.9609,-1328.4464,13.4448,1.3679,3,3,60000); // Ambulancia    	40
	SAMD_Vehiculos[2] = AddStaticVehicleEx(416,1123.9703,-1328.4863,13.4420,359.8991,3,3,60000); // Ambulancia      41
	SAMD_Vehiculos[3] = AddStaticVehicleEx(416,1095.5303,-1315.5038,13.8521,269.5015,1,3,60000); // Ambulancia      42
	SAMD_Vehiculos[4] = AddStaticVehicleEx(416,1136.3173,-1338.6797,13.8751,0.5538,1,3,60000); // Ambulancia  		43
	SAMD_Vehiculos[5] = AddStaticVehicleEx(416,1141.5852,-1338.4622,13.7902,1.1260,1,3,60000); // Ambulancia  		44
	SAMD_Vehiculos[6] = AddStaticVehicleEx(596,1131.2094,-1327.8986,13.3697,0.5494,3,1,60000); // Patrulla LS 		45
	SAMD_Vehiculos[7] = AddStaticVehicleEx(596,1134.8329,-1309.3987,13.3042,359.3751,3,1,60000); // Patrulla LS 	46
	SAMD_Vehiculos[8] = AddStaticVehicleEx(563,1162.8477,-1309.0045,32.2224,271.4168,1,3,60000); // Raindance 47
	// Groove Street (43 - 48)
    GS_Vehiculos[0] = AddStaticVehicleEx(585,2514.033203,-1666.834228,13.196761,146.604492,44,44,60000); // Emperor   55
	GS_Vehiculos[1] = AddStaticVehicleEx(585,2507.031494,-1684.601928,13.144980,238.152038,44,44,60000); // Emperor   56
	GS_Vehiculos[2] = AddStaticVehicleEx(492,2499.072265,-1650.737060,13.307857,152.592132,44,44,60000); // Greenwood  57
	GS_Vehiculos[3] = AddStaticVehicleEx(510,2514.673828,-1679.253051,13.382580,44.357257,44,44,60000); // Greenwood   58
	GS_Vehiculos[4] = AddStaticVehicleEx(510,2470.653320,-1653.038696,13.294920,116.369949,44,44,60000); // Majestic  59
	GS_Vehiculos[5] = AddStaticVehicleEx(517,2458.179443,-1671.415893,13.353937,233.656723,44,44,60000); // Majestic  60
	// Latin Kings (49 - 54)
	LK_Vehiculos[0] = AddStaticVehicleEx(422,2278.9849,-1038.3428,50.0680,132.7227,6,1,60000); //Bobcat 61
	LK_Vehiculos[0] = AddStaticVehicleEx(550,2275.7161,-1034.9799,50.6073,137.0734,6,1,60000); //Sunrise 62
	LK_Vehiculos[0] = AddStaticVehicleEx(540,2272.0862,-1031.4424,51.6779,136.5865,6,1,60000); //Vincent 63
	LK_Vehiculos[0] = AddStaticVehicleEx(567,2270.1992,-1046.1663,49.8699,46.8058,6,1,60000); //Savanna 64
	LK_Vehiculos[0] = AddStaticVehicleEx(492,2270.3054,-1054.2903,49.0315,52.5484,6,1,60000); //Mountain
	LK_Vehiculos[0] = AddStaticVehicleEx(468,2251.9172,-1037.6565,53.9322,46.5032,6,1,60000); //Sanchez
	// Mecánicos LS (55 - 61)
	Mecanico_Vehiculos[0] = AddStaticVehicle(525,2160.5366,-2224.2051,13.0131,226.3010,3,7); // Grua1 Taller
	Mecanico_Vehiculos[1] = AddStaticVehicle(525,2162.1199,-2221.4399,13.0465,223.8785,3,7); // Grua2 Taller
	Mecanico_Vehiculos[2] = AddStaticVehicle(525,2164.1489,-2219.1616,13.0666,226.0403,3,7); // Grua3 Taller
	Mecanico_Vehiculos[3] = AddStaticVehicle(525,2166.4387,-2216.9626,13.0838,228.0261,3,7); // Grua4 Taller
	Mecanico_Vehiculos[4] = AddStaticVehicle(525,2168.4680,-2214.9944,13.1034,226.4905,3,7); // Grua5 Taller
	Mecanico_Vehiculos[5] = AddStaticVehicle(552,2172.8049,-2210.7976,13.1692,226.8295,3,7); // Camioneta Taller
	Mecanico_Vehiculos[6] = AddStaticVehicle(552,2174.6802,-2208.4866,13.1718,226.8502,3,7); // Camioneta2 Taller
	Mecanico_Vehiculos[7] = AddStaticVehicle(552,2176.7351,-2206.2634,13.1717,225.7270,3,7); // Camioneta3 Taller
	Mecanico_Vehiculos[8] = AddStaticVehicle(552,2178.9292,-2204.2156,13.1720,228.2463,3,7); // Camioneta5 Taller
	Mecanico_Vehiculos[9] = AddStaticVehicle(552,2180.8354,-2201.9785,13.1717,226.7205,3,7); // Camion1 Taller
	Mecanico_Vehiculos[10] = AddStaticVehicle(554,2183.3296,-2199.9949,13.1718,229.9837,3,7); // Camion2 Taller
	Mecanico_Vehiculos[11] = AddStaticVehicle(554,2185.2759,-2197.7808,13.1717,228.7507,3,7); // Camion3 Taller
	Mecanico_Vehiculos[12] = AddStaticVehicle(554,2187.3391,-2195.5933,13.1718,228.8402,3,7); // Camion5 Taller
	Mecanico_Vehiculos[13] = AddStaticVehicle(554,2189.4956,-2193.5916,13.1719,225.8826,3,7); // Camion4 Taller
 	// Mafia Italiana (62 - 70)
	Ita_Vehiculos[0] = AddStaticVehicleEx(487,1156.0237,-2019.9352,69.1782,95.6593,54,29,60000); //Maverick	    	89
	Ita_Vehiculos[1] = AddStaticVehicleEx(560,1259.286010,-2012.548950,59.145359,269.972534,0,0,60000); // Sultan      90
	Ita_Vehiculos[2] = AddStaticVehicleEx(560,1259.231079,-2015.927124,59.147296,268.529296,0,0,60000); // Sultan      91
	Ita_Vehiculos[3] = AddStaticVehicleEx(580,1258.436401,-2039.223754,59.259601,271.035675,0,0,60000); // Stafford    92
	Ita_Vehiculos[4] = AddStaticVehicleEx(580,1268.647216,-2039.133544,58.958675,90.153411,0,0,60000); // Stafford     93
	Ita_Vehiculos[5] = AddStaticVehicleEx(482,1268.526733,-2017.254272,59.105506,91.021903,0,0,60000); // Burrito      94
	Ita_Vehiculos[6] = AddStaticVehicleEx(409,1265.397583,-2059.459228,59.089286,268.428039,0,0,60000); // Stetch      95
	Ita_Vehiculos[7] = AddStaticVehicleEx(521,1259.4476,-2020.8646,59.0056,268.7068,0,3,60000); //FCR-900				96
	Ita_Vehiculos[8] = AddStaticVehicleEx(521,1259.6389,-2025.1091,59.0002,268.0077,0,3,60000); //FCR-900				97
	// Mafia Rusa (66 - 73)
	Rus_Vehiculos[0] = AddStaticVehicleEx(487,866.2315,-1620.9320,28.1409,0.0000,3,3,60000); // HelicopteroBratva 108
	Rus_Vehiculos[1] = AddStaticVehicleEx(587,879.0319,-1658.2081,13.2671,180.0000,3,3,60000); // Euros 	109
	Rus_Vehiculos[2] = AddStaticVehicleEx(587,883.6049,-1658.2273,13.2671,180.0000,3,3,60000); // Euros 	110
	Rus_Vehiculos[3] = AddStaticVehicleEx(560,874.4162,-1658.0074,13.1447,180.0000,3,3,60000); // Sultan			111
	Rus_Vehiculos[4] = AddStaticVehicleEx(500,888.1260,-1657.7847,13.5508,180.0000,3,3,60000); // Mesa			112
	Rus_Vehiculos[5] = AddStaticVehicleEx(409,857.4651,-1663.8910,13.2816,270.0000,3,3,60000); // Stetch    		113
	Rus_Vehiculos[6] = AddStaticVehicleEx(521,892.5515,-1658.3895,13.0493,180.0000,3,3,60000); // FCR-900  114
	Rus_Vehiculos[7] = AddStaticVehicleEx(521,870.0002,-1658.3158,13.0493,180.0000,3,3,60000); // FCR-900 	115
	//Gobierno (74 - 78)
	Gobierno_Vehiculos[0] = AddStaticVehicleEx(487,1352.80151367,-1646.44958496,18.08156967,0.00000000,-1,133,60000); //Maverick 	118
	Gobierno_Vehiculos[1] = AddStaticVehicleEx(409,1363.14257812,-1658.98486328,13.40606880,270.00000000,-1,133,60000) //Stretch  	119
	Gobierno_Vehiculos[2] = AddStaticVehicleEx(445,1361.64257812,-1650.87536621,13.29033661,270.00000000,-1,133,60000) //Admiral 	120
	Gobierno_Vehiculos[3] = AddStaticVehicleEx(445,1361.64257812,-1643.37890625,13.29033661,270.00000000,-1,133,60000) //Admiral 	121
	Gobierno_Vehiculos[4] = AddStaticVehicleEx(409,1363.2819,-1635.4894,13.1828,270.00000000,-1,133,60000) //Stretch                122
	// CNN Vehículos (79 - 82)
	CNN_Vehiculos[0] = AddStaticVehicleEx(582,740.687255,-1334.894653,13.601684,230.120437,2,1,60000); // News Van 125
	CNN_Vehiculos[1] = AddStaticVehicleEx(582,746.701599,-1334.121826,13.597522,230.621170,2,1,60000); // News Van 126
	CNN_Vehiculos[2] = AddStaticVehicleEx(582,753.755615,-1333.973510,13.593895,231.211013,2,1,60000); // News Van 127
	CNN_Vehiculos[3] = AddStaticVehicleEx(488,743.5662,-1372.6359,25.9022,358.8606,2,1,60000); // San News 			128
	// Train (101 - 104)
	IsATrain_Vehiculos[0] = AddStaticVehicleEx(538,1700.7551,-1953.6531,14.8756,200.0,-1,-1, 30000); // Train 160-163
	// Recogedor de Basura(105 - 109)
	IsABasurero_Vehiculos[0] = AddStaticVehicleEx(408,2179.5952,-1976.7136,14.0874,270.0000,26,26,30000); // Barrendero 164
	IsABasurero_Vehiculos[1] = AddStaticVehicleEx(408,2160.0964,-1970.1782,14.1120,270.0000,26,26,30000); // Barrendero 165
	IsABasurero_Vehiculos[2] = AddStaticVehicleEx(408,2148.8442,-1969.9829,14.1129,270.0000,26,26,30000); // Barrendero 166
	IsABasurero_Vehiculos[3] = AddStaticVehicleEx(408,2137.2947,-1970.0728,14.1126,270.0000,26,26,30000); // Barrendero 167
	IsABasurero_Vehiculos[4] = AddStaticVehicleEx(408,2123.2493,-1970.4979,14.0915,270.0000,26,26,30000); // Barrendero 167
	// Planes (110 - 114)
	IsAPlane_Vehiculos[0] = AddStaticVehicleEx(519,1422.52661133,-2442.94995117,15.22200012,180.00000000,53,1,30000); //Shamal  170
	IsAPlane_Vehiculos[1] = AddStaticVehicleEx(553,1471.54858398,-2440.02978516,15.78968716,182.00000000,1,53,30000); //Nevada  171
	IsAPlane_Vehiculos[2] = AddStaticVehicleEx(519,1451.6981,-2631.3005,14.4640,268.6503,1,1,60000); // Shamal  				172
	IsAPlane_Vehiculos[3] = AddStaticVehicleEx(553,1566.4611,-2643.8928,14.4698,11.7026,6,1,60000); // Nevada   				173
	IsAPlane_Vehiculos[4] = AddStaticVehicleEx(592,2003.3944,-2452.6799,14.4688,127.0967,1,1,60000); // Andromada   			174
	// Cosechadores (115 - 120)
	Harvest_Vehiculos[0] = AddStaticVehicleEx(532,-114.2888,50.8895,4.1169,69.0000,0,0,60000); // Combine  176
	Harvest_Vehiculos[1] = AddStaticVehicleEx(532,-118.0551,41.1166,4.0914,69.0000,0,0,60000); // Combine  177
	Harvest_Vehiculos[2] = AddStaticVehicleEx(532,-122.0533,31.0380,4.0970,69.0000,0,0,60000); // Combine  178
	Harvest_Vehiculos[3] = AddStaticVehicleEx(532,-125.5532,21.8425,4.0982,69.0000,0,0,60000); // Romero 179
	Harvest_Vehiculos[4] = AddStaticVehicleEx(532,-129.2178,12.1124,4.0988,69.0000,0,0,60000); // Romero  180
	Harvest_Vehiculos[5] = AddStaticVehicleEx(532,-132.6311,2.6540,4.0892,69.0000,0,0,60000); // Romero  181
 // Pizza Bike's (121 - 124)
	IsAPizzabike_Vehiculos[0] = AddStaticVehicleEx(448,2098.1230,-1793.0132,12.9839,90.0772,3,6,60000); // Pizza Bike 190
	IsAPizzabike_Vehiculos[1] = AddStaticVehicleEx(448,2098.2832,-1795.6893,12.9883,91.5060,3,6,60000); // Pizza Bike 191
	IsAPizzabike_Vehiculos[2] = AddStaticVehicleEx(448,2098.3613,-1798.0608,12.9877,91.7122,3,6,60000); // Pizza Bike 192
	IsAPizzabike_Vehiculos[3] = AddStaticVehicleEx(448,2098.3203,-1800.7795,12.9845,85.5136,3,6,60000); // Pizza Bike 193
	// SAEM Cars (125 - 149)
	SAEM_Vehiculos[0] = AddStaticVehicleEx(433, 2685.6157, -2346.1011, 14.0457, -149.0000, -1, -1,60000);
	SAEM_Vehiculos[1] = AddStaticVehicleEx(433, 2687.4346, -2340.6050, 14.0457, -149.0000, -1, -1,60000);
	SAEM_Vehiculos[2] = AddStaticVehicleEx(432, 2703.1226, -2338.7991, 13.5702, 141.2023, -1, -1,60000);
	SAEM_Vehiculos[3] = AddStaticVehicleEx(432, 2704.2502, -2345.2532, 13.5702, 139.3695, -1, -1,60000);
	SAEM_Vehiculos[4] = AddStaticVehicleEx(470, 2716.5354,-2346.8313,13.6273,178.4341, -1, -1,60000);
	SAEM_Vehiculos[5] = AddStaticVehicleEx(470, 2722.1196,-2346.6902,13.6252,178.5889, -1, -1,60000);
	SAEM_Vehiculos[6] = AddStaticVehicleEx(500, 2726.7407,-2346.6006,13.7374,177.6015, -1, -1,60000);
	SAEM_Vehiculos[7] = AddStaticVehicleEx(500, 2732.0398,-2346.7639,13.7397,176.9163, -1, -1,60000);
	SAEM_Vehiculos[8] = AddStaticVehicleEx(468, 2736.6362,-2346.8574,13.3018,176.0662, 16, 1,60000);
	SAEM_Vehiculos[9] = AddStaticVehicleEx(468, 2742.7383,-2347.3362,13.3042,176.0880, 16, 1,60000);
	SAEM_Vehiculos[10] = AddStaticVehicleEx(472, 2828.4067,-2417.4460,-0.2470, 0.0000, -1, -1,60000);
	SAEM_Vehiculos[11] = AddStaticVehicleEx(472, 2829.2598,-2393.5701,0.3762, 0.0000, -1, -1,60000);
	SAEM_Vehiculos[12] = AddStaticVehicleEx(473, 2824.9209, -2376.5698, 0.2232, 267.1559, -1, -1,60000);
	SAEM_Vehiculos[13] = AddStaticVehicleEx(473, 2818.8010, -2376.3962, 0.2232, 267.1559, -1, -1,60000);
	SAEM_Vehiculos[14] = AddStaticVehicleEx(471, 2746.4504,-2348.1238,13.1133,175.7160,37,16,60000);
	SAEM_Vehiculos[15] = AddStaticVehicleEx(471, 2746.6868,-2345.0903,13.1146,174.0569,37,16,60000);
	SAEM_Vehiculos[16] = AddStaticVehicleEx(425, 2777.3684,-2354.8000,16.8351,90.2367, -1, -1,60000);
	SAEM_Vehiculos[17] = AddStaticVehicleEx(425, 2897.1887,-2378.7742,20.2174,265.7891, -1, -1,60000);
	SAEM_Vehiculos[18] = AddStaticVehicleEx(476, 2891.0383, -2419.1489, 20.7080, -127.0000, 4, 16,60000);
	SAEM_Vehiculos[19] = AddStaticVehicleEx(520, 2890.1462, -2505.0776, 20.3335, 222.0000, -1, -1,60000);
	SAEM_Vehiculos[19] = AddStaticVehicleEx(520, 2898.0200, -2362.1724, 12.0655, 178.0000, -1, -1,60000);
	SAEM_Vehiculos[20] = AddStaticVehicleEx(520, 2888.7969, -2520.2148, 20.3295, 222.0000, -1, -1,60000);
	SAEM_Vehiculos[21] = AddStaticVehicleEx(563, 2893.4653, -2396.9446, 20.7080, -127.0000, 4, 16,60000);
	SAEM_Vehiculos[22] = AddStaticVehicleEx(548, 2701.4258, -2539.4277, 17.9804, 0.0000, -1, -1,60000);
	SAEM_Vehiculos[23] = AddStaticVehicleEx(548, 2789.7532,-2484.9019,15.2170,90.7661, -1, -1,60000);
    /*// Hitman Cars (150 - 156)
    Hitman_Vehiculos[0] = AddStaticVehicleEx(560,-579.3759,-472.0932,25.2287,180.0000,0,0,60000); //Sultan      233
    Hitman_Vehiculos[1] = AddStaticVehicleEx(560,-574.5015,-471.9547,25.2291,180.0000,0,0,60000); //Sultan      234
    Hitman_Vehiculos[2] = AddStaticVehicleEx(482,-569.4431,-471.9569,25.6387,180.0000,0,0,60000); //Burrito     235
    Hitman_Vehiculos[3] = AddStaticVehicleEx(482,-564.4279,-471.7672,25.6361,180.0000,0,0,60000); //Burrito     236
    Hitman_Vehiculos[4] = AddStaticVehicleEx(522,-559.3209,-472.3411,25.0976,180.0000,0,0,60000); //NRG-500 	237
    Hitman_Vehiculos[5] = AddStaticVehicleEx(521,-554.5011,-472.5904,25.0916,180.0000,0,0,60000); //FCR-900 	238
    Hitman_Vehiculos[6] = AddStaticVehicleEx(487,-608.0023,-484.3468,28.2168,270.0000,0,0,60000); 	//Maverick  239*/
    // Camioneros Cars (157 - 164)
    IsACamion_Vehiculos[0] = AddStaticVehicleEx(414,2217.5012,-2606.6030,13.6472,179.9134,-1,-1,60000); //Mule 242
    IsACamion_Vehiculos[1] = AddStaticVehicleEx(414,2217.3772,-2615.5388,13.6405,179.7724,-1,-1,60000); //Mule 243
    IsACamion_Vehiculos[2] = AddStaticVehicleEx(414,2217.3928,-2625.3667,13.6407,179.8098,-1,-1,60000); //Mule 244
    IsACamion_Vehiculos[3] = AddStaticVehicleEx(414,2203.3933,-2641.7988,13.6408,270.5010,-1,-1,60000); //Mule 245
    IsACamion_Vehiculos[4] = AddStaticVehicleEx(414,2222.2065,-2667.6165,13.6347,5.1526,-1,-1,60000); //Mule 246
    IsACamion_Vehiculos[5] = AddStaticVehicleEx(414,2193.8635,-2647.7454,13.6406,269.7316,-1,-1,60000); //Mule 247
    IsACamion_Vehiculos[6] = AddStaticVehicleEx(414,2222.4839,-2678.4028,13.6348,359.3468,-1,-1,60000); //Mule 246
    IsACamion_Vehiculos[7] = AddStaticVehicleEx(414,2203.0740,-2634.8933,13.6406,269.8508,-1,-1,60000); //Mule 247
    // Pescadores Barcos (165 - 167)
    IsABoatFish_Vehiculos [0] = AddStaticVehicleEx(453,2957.1960,-1521.8356,0.0667,260.5991,-1,-1,60000); //Reefer
	IsABoatFish_Vehiculos [1] = AddStaticVehicleEx(453,2955.4255,-1530.6007,-0.3255,260.3321,-1,-1,60000); //Reefer
	IsABoatFish_Vehiculos [2] = AddStaticVehicleEx(453,2953.0881,-1539.3872,-0.4192,258.5312,-1,-1,60000); //Reefer
	// Al Qaeda (168 - 173)
    IsATerroristas_Vehiculos[0] = AddStaticVehicleEx(432, 1109.2860, -297.9090, 74.0047, 89.0400, -1, -1,60000);
    IsATerroristas_Vehiculos[1] = AddStaticVehicleEx(470, 1070.7333,-286.4898,73.9842,181.4771, -1, -1,60000);
    IsATerroristas_Vehiculos[2] = AddStaticVehicleEx(470, 1060.8082,-286.3825,73.9834,178.9275, -1, -1,60000);
    IsATerroristas_Vehiculos[3] = AddStaticVehicleEx(487, 1019.6926,-326.1737,74.1414,179.6795, 104, 104,60000);
    IsATerroristas_Vehiculos[4] = AddStaticVehicleEx(468, 1064.3595,-285.8070,73.6612,179.1285, 104, 104,60000);
    IsATerroristas_Vehiculos[5] = AddStaticVehicleEx(520, 1021.1936, -299.7746, 77.3009, 0.0000, -1, -1,60000);
	// Trailers Gasolineras 10 - 10
	IsATrailer_Vehiculos[0] = AddStaticVehicleEx(584, -43.7108, -1154.6949, 2.1332, 63.2370, -1, -1, 60000);
	IsATrailer_Vehiculos[1] = AddStaticVehicleEx(514, -53.0165, -1150.1860, 1.5992, 64.8618, -1, -1, 60000);
	IsATrailer_Vehiculos[2] = AddStaticVehicleEx(584, -63.3948, -1144.9132, 2.1332, 65.0550, -1, -1, 60000);
	IsATrailer_Vehiculos[3] = AddStaticVehicleEx(514, -72.7560, -1140.6273, 1.5992, 65.5466, -1, -1, 60000);
	IsATrailer_Vehiculos[4] = AddStaticVehicleEx(584, -32.3654, -1130.0663, 2.1332, 66.6135, -1, -1, 60000);
	IsATrailer_Vehiculos[5] = AddStaticVehicleEx(514, -41.9991, -1126.0355, 1.5992, 67.7528, -1, -1, 60000);
	IsATrailer_Vehiculos[6] = AddStaticVehicleEx(584, -36.1954, -1138.4618, 2.1332, 65.0038, -1, -1, 60000);
	IsATrailer_Vehiculos[7] = AddStaticVehicleEx(514, -45.7411, -1134.2380, 1.5992, 66.3718, -1, -1, 60000);
	IsATrailer_Vehiculos[8] = AddStaticVehicleEx(584, -39.8595, -1146.4937, 2.1332, 64.3937, -1, -1, 60000);
	IsATrailer_Vehiculos[9] = AddStaticVehicleEx(514, -49.2981, -1142.0352, 1.5992, 65.2628, -1, -1, 60000);
	IsATrailer_Vehiculos[10] = AddStaticVehicleEx(584, -28.5946, -1121.7523, 2.1332, 69.4837, -1, -1, 60000);
	IsATrailer_Vehiculos[11] = AddStaticVehicleEx(514, -38.3482, -1118.0327, 1.5992, 70.3294, -1, -1, 60000);
	IsATrailer_Vehiculos[12] = AddStaticVehicleEx(584, -50.2116, -1113.9628, 2.1332, 70.3123, -1, -1, 60000);
	IsATrailer_Vehiculos[13] = AddStaticVehicleEx(514, -59.8516, -1110.4789, 1.5992, 70.3294, -1, -1, 60000);
	IsATrailer_Vehiculos[14] = AddStaticVehicleEx(584, -53.0818, -1121.6548, 2.1332, 69.6947, -1, -1, 60000);
	IsATrailer_Vehiculos[15] = AddStaticVehicleEx(514, -63.0421, -1117.8710, 1.5992, 70.5747, -1, -1, 60000);
	IsATrailer_Vehiculos[16] = AddStaticVehicleEx(584, -56.4828, -1129.5699, 2.1332, 67.6164, -1, -1, 60000);
	IsATrailer_Vehiculos[17] = AddStaticVehicleEx(514, -66.2554, -1125.6427, 1.5992, 68.6218, -1, -1, 60000);
	IsATrailer_Vehiculos[18] = AddStaticVehicleEx(584, -59.9407, -1137.2023, 2.1332, 66.6647, -1, -1, 60000);
	IsATrailer_Vehiculos[19] = AddStaticVehicleEx(514, -69.5455, -1133.2268, 1.5992, 67.2790, -1, -1, 60000);
	//-=========================================== [][][] ==================================================- //
	for(new i; i<VV; i++)
    {
        new string[32];
        VehicleSpawned[i] = true;
        format(string, 32, "LS - %d",i);
    	SetVehicleNumberPlate(i, string);
    	SetVehicleToRespawn(i);
    }
	// -========================= Dynamic Pickups ========================- //
	/*    Police LA     */
	CreateDynamicPickup(1247, 1, 1554.9644,-1675.6254,16.1953); //Entrada Policia
	CreateDynamicPickup(1314, 1, 267.5095,87.0759,1001.0391); // arrestar LSPD
	CreateDynamicPickup(1314, 1, 625.9482,854.0344,-90.2031); // arrestar2 SAEM
	CreateDynamicPickup(1318, 1, 242.7591,66.4315,1003.6406); // Inside PD elevator
    CreateDynamicPickup(1318, 1, 1524.5724,-1677.8043,6.2188); // PD Tunnel
    CreateDynamicPickup(1318, 1, 1557.7257,-1675.2711,28.3955); // PD roof
	/* Hitman + Terroristas */
    /*CreateDynamicPickup(1313, 1, 1425.2998,-1291.2107,13.5560); // Hitman
    CreateDynamicPickup(1239, 1, 1487.4659,2873.0540,10.8806); // Hitman*/
    CreateDynamicPickup(1239, 1, 1114.2040,-316.3322,74.0447); // Al Qaeda
    CreateDynamicPickup(1239, 1, -2705.0156,522.8817,49.1778); // Equipo CNN
    CreateDynamicPickup(1239, 1, 2509.4314,-1460.2108,24.0002); // Auto Lavado
	/*      Hospital       */
	CreateDynamicPickup(1559, 1, 1153.41, -1367.52, -7.40);
	CreateDynamicPickup(1559, 1, 1160.09, -1381.98, -7.40);
	CreateDynamicPickup(1559, 1, 1159.99, -1385.91, -7.40);
	CreateDynamicPickup(1559, 1, 1151.40, -1391.00, -7.40);
	CreateDynamicPickup(1559, 1, 1147.41, -1390.90, -7.40);
	CreateDynamicPickup(1559, 1, 1160.40, -1386.00, -3.10);
	/*          Other ENTER / EXITS     */
	CreateDynamicPickup(1239, 1, 265.3353,-1590.6843,-72.1891); // Robar Banco
    CreateDynamicPickup(1318, 1, 2105.2844,-1806.5475,13.5547); // Pizzeria LS
    CreateDynamicPickup(1239, 1, 379.1396,-114.2661,1001.4922); // Tomarpizza
   	CreateDynamicPickup(1318, 1, 154.2457,-1946.2103,5.1346); // Faro ENTER
   	CreateDynamicPickup(1318, 1, 154.1186,-1949.6292,47.8750); // Faro EXIT
   	CreateDynamicPickup(1239, 1, 994.3551,-1296.4821,13.5469); // JOB Tren
	CreateDynamicPickup(1239, 1, 1957.3217,-2183.6399,13.5469); // JOB Piloto
	CreateDynamicPickup(1239, 1, 378.6049,-119.5969,1001.4922); // JOB Pizzero
	CreateDynamicPickup(1239, 1, 986.9383,-1937.5042,2835.0078); //JOB Pescador
	CreateDynamicPickup(1239, 1, 2215.5657,-2661.1208,13.5469); // JOB Camionero
	CreateDynamicPickup(1239, 1, -75.8972,-1105.9155,1.0781); // JOB Trailero
   	CreateDynamicPickup(1239, 1, 2793.0981,-2505.6426,14.9223); // Misil 1
   	CreateDynamicPickup(1239, 1, 2728.9238,-2384.4739,14.9300); // Misil 2
   	CreateDynamicPickup(1239, 1, 865.2787,-1633.8477,14.9297); // Rusos Helipuerto
   	pMatI = CreateDynamicPickup(1279, 2, 2803.7249,-1444.1923,40.0443); // MAT-LOAD I
   	pMatII = CreateDynamicPickup(1279, 2, 2062.7231,-1785.9670,13.5469); // MAT-LOAD II
   	pMatIII = CreateDynamicPickup(1279, 2, 834.0850,-1351.0756,4.2970); // MAT-LOAD III
   	pMatIV = CreateDynamicPickup(1279, 2, 1414.5430,-909.2524,36.4467); // MAT-LOAD IV
   	pMatV = CreateDynamicPickup(1279, 2, 1526.9885,-1457.6107,9.5000); // MAT-LOAD V
	/*      Info & Ayuda & Points       */
	CreateDynamicPickup(1239, 1, -2355.8621,914.9895,93.8007); // Bowling
	CreateDynamicPickup(1239, 1, -2355.6140,910.4491,93.8007); // Bowling
	CreateDynamicPickup(1239, 1, -2355.9583,905.1354,93.8007); // Bowling
	CreateDynamicPickup(1239, 1, 1790.4347,-1591.3114,13.4938); // Boleto VIP
	CreateDynamicPickup(1239, 1, 2556.3853,-1296.8981,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 2543.2500,-1296.3975,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 2542.9377,-1290.5266,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 2556.0679,-1290.1639,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 1602.6775,-2173.6753,13.8940); // Equipo Mecanico
	CreateDynamicPickup(1239, 1, 366.6122,158.6483,1008.3828); // Equipo Gobierno
	CreateDynamicPickup(1239, 1, 2065.6050,-2218.2114,2664.6157); // Anuncios

	printf("M:RP: %d Pickups Cargados",CountDynamicPickups());

	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		tmphour = tmphour - 7;
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
	}
	// Timers
	SetTimer("OtherTimer", 1000, true);
	SetTimer("TimerGlobal", 1000, true);
	SetTimer("SyncUp", 60000, true);
	SetTimer("SaveAccounts", 330000, true);
	SetTimer("CheckGas", 100000, true);
	SetTimer("Tiempo1",100, true);
	for(new i = 0; i<MAX_PLAYERS; i++)
	{
	    TextTut[i] =
		TextDrawCreate(172.000000, 342.000000, "Bienvenido, este servidor es");
		TextDrawBackgroundColor(TextTut[i], 255);
		TextDrawFont(TextTut[i], 1);
		TextDrawLetterSize(TextTut[i], 0.220000, 1.200000);
		TextDrawColor(TextTut[i], -1);
		TextDrawSetOutline(TextTut[i], 0);
		TextDrawSetProportional(TextTut[i], 1);
		TextDrawSetShadow(TextTut[i], 1);
	
		RegDraw[i] = TextDrawCreate(190.000000, 367.000000, "~n~Sexo:  ~b~Masculino          ~w~Edad: ~b~29~n~~n~~w~Origen: ~b~America    ~w~Estilo: ~b~Pandilla1");
		TextDrawBackgroundColor(RegDraw[i], 255);
		TextDrawFont(RegDraw[i], 1);
		TextDrawLetterSize(RegDraw[i], 0.320000, 1.200000);
		TextDrawColor(RegDraw[i], -1);
		TextDrawSetOutline(RegDraw[i], 1);
		TextDrawSetProportional(RegDraw[i], 1);
		TextDrawUseBox(RegDraw[i], 1);
		TextDrawBoxColor(RegDraw[i], 70);
		TextDrawTextSize(RegDraw[i], 400.000000, 110.000000);

	    Taximeter[i] = TextDrawCreate(209.000000, 431.000000,"  A Pagar ~g~999$ ~w~- Tarifa: ~g~7$");
		TextDrawBackgroundColor(Taximeter[i], 255);
		TextDrawFont(Taximeter[i], 2);
		TextDrawLetterSize(Taximeter[i], 0.400000, 1.000000);
		TextDrawColor(Taximeter[i], -1);
		TextDrawSetOutline(Taximeter[i], 0);
		TextDrawSetProportional(Taximeter[i], 1);
		TextDrawSetShadow(Taximeter[i], 1);
		TextDrawUseBox(Taximeter[i], 1);
		TextDrawBoxColor(Taximeter[i], 255);
		TextDrawTextSize(Taximeter[i], 457.000000, -30.000000);
	}
	for(new f = 0; f < MAX_FACTION; f++)
	{
	    if(FactionInfo[f][fType] != 0)
	    {
	        if(FactionInfo[f][fEntrance][0] != 0.0 && FactionInfo[f][fEntrance][1] != 0.0)
	        {
	            FactionInfo[f][fPickup] = CreateDynamicPickup(1239, 1, FactionInfo[f][fEntrance][0], FactionInfo[f][fEntrance][1], FactionInfo[f][fEntrance][2]);
	            FactionInfo[f][fTextLabel] = CreateDynamic3DTextLabel(FactionInfo[f][fName], 0xE6DE48FF, FactionInfo[f][fEntrance][0], FactionInfo[f][fEntrance][1], FactionInfo[f][fEntrance][2], 5.0);
	        }
	        LoadVehiclesFaction(f);
	    }
	}

	RegInfo = TextDrawCreate(194.000000, 353.000000, "Informacion del personaje");
	TextDrawBackgroundColor(RegInfo, -1);
	TextDrawFont(RegInfo, 0);
	TextDrawLetterSize(RegInfo, 0.500000, 1.799999);
	TextDrawColor(RegInfo, 255);
	TextDrawSetOutline(RegInfo, 1);
	TextDrawSetProportional(RegInfo, 1);
	return 1;
}

public SyncUp()
{
    SyncTime();
	PayDayLeft -= 1;
	GMSuciedad -= 1;
	if(PayDayLeft == 0)	PayDay();   ChecarSed();
	if(GMSuciedad == 0) ChecarSuciedad();   ChecarHambre();
	Loop(i, MAX_PLAYERS)
	{
	    if(IsPlayerConnected(i))
	    {
	        SetPlayerScore(i, PlayerInfo[i][pLevel]);
			if(AFK[i] > 1) AFK[i]--;
			if(UsageTeam[i] > 0) UsageTeam[i]--;
			if(AutoLavado != -1)
			{
				if(!PlayerToPoint(40.0,AutoLavado,2454.4141,-1461.0684,24.0000))
				{
                	DisablePlayerCheckpoint(AutoLavado);
					DeletePVar(AutoLavado, "UsageCarWash");
			    	AutoLavado = -1;
   				}
			}
			if(HireKey[i] != 999)
			{
				if(HireMinutes[i] > 0) HireMinutes[i] = HireMinutes[i]-1;
				if(HireMinutes[i] == 2)
				{
			    	Message(i, COLOR_WHITE, "El tiempo de renta del vehículo está a punto de terminar, puedes extenderlo con /renovarrenta.");
   				}
   				if(HireMinutes[i] == 0)
   				{
   			    	HireState[HireKey[i]] = false;
   			    	HireCarLock[HireKey[i]] = 0;
					SetVehicleToRespawn(HireKey[i]);
					SetVehicleParamsEx(HireKey[i],0,0,0,0,0,0,0);
   			    	Message(i, COLOR_WHITE, "El tiempo de renta de tu vehículo ha expirado.");
   			    	HireKey[i] = 999;
   			    	HireMinutes[i] = 0;
    			}
  			}
    	}
	}
	return 1;
}
public SyncTime()
{
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	tmphour = tmphour - 7;
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		ghour = tmphour;
		if (realtime)
		{
			SetWorldTime(tmphour);
		}
		switch(tmphour)
		{
		    case 2,8,14,20: HouseTimer();
		    case 9,16,22:
			{
			    new string[80];
	            format(string, sizeof(string), "{2F99B5}Noticias de la Loteria: {FFFFFF}Hemos empesado la elección de la loteria.");
		        OOCOff(COLOR_WHITE, string);
	    	    new rand = random(51);
	        	if(rand == 0) { rand += 1; }
	        	Lotto(rand);
			}
		}
 	}
 	return 1;
}

public SaveAccounts()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i)) OnPlayerUpdateTime(i);
    }
    SaveAutos();
}

function Ectasy(i)
{
    new Float:cx, Float:cy, Float:cz, string[128];	GetPlayerPos(i, cx, cy, cz);
    if(IsPlayerConnected(i))
    {
		if(UsingEctasy[i] > 0)
		{
        	UsingEctasy[i] -= 1;
 			switch(UsingEctasy[i])
   			{
	     		case 285: { format(string, sizeof(string),"%s dice: Vivo en un lugar paralelo a la realidad.", PlayerName(i));  Message(i, COLOR_FADE, string); GetPlayerPos(i, InceptionPos[i][0],InceptionPos[i][1],InceptionPos[i][2]); }
				case 280: { format(string, sizeof(string),"Voz desconocida dice: ¿ Cuánto tiempo %s, verdad ?", PlayerName(i));  Message(i, COLOR_FADE, string); }
				case 275: { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ No me recuerdas, soy yo ... ?"); }
				case 270: { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ No me respondes ... que mal educado ... ?"); }
				case 260: { Message(i, COLOR_FADE, "Voz desconocida dice: Veo, que ... has crecido ..."); }
				case 250: { Message(i, COLOR_FADE, "Voz desconocida dice: Has aceptado pactar, conmigo. Verdad?"); }
				case 240: { Message(i, COLOR_FADE, "Voz desconocida dice: Estás en lo cierto pero ... pactar conmigo tiene sus inconvenientes"); }
				case 230: { Message(i, COLOR_FADE, "Voz desconocida dice: Pero ... veo que tu los has aceptado."); }
				case 220: { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ No te gusta tu realidad, verdad ?"); }
				case 210: { Message(i, COLOR_FADE, "Voz desconocida dice: Yo te ofrezco una, pero producto de tu imaginación."); }
				case 200: { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ Aceptas ?"); }
				case 195: { SetPlayerWeather(i, 250); }
				case 190: { Message(i, COLOR_FADE, "Voz desconocida dice: Es normal tu miedo... lo tomaré como un Sí!"); }
				case 180: { Message(i, COLOR_FADE, "Voz desconocida dice: Muahahaha! Intenta salir del laberinto de tu subconciente amigo."); }
				case 170: { Message(i, COLOR_FADE, "Voz suave dice: No! No camines! No intentes salir de aquí! No podrás!"); }
				case 160: { Message(i, COLOR_FADE, "Voz suave dice: Solo puedes salir si consigues devolverme a la vida!"); }
				case 150: { Message(i, COLOR_FADE, "Voz suave dice: Para eso, necesitas mi alma! Encuentrala, porfavor!"); }
				case 140: { Message(i, COLOR_FADE, "Voz suave dice: Guíate por tu intuición, piensa en lo real!"); }
				case 130: { Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha! Nunca saldrás de aqui!"); }
				case 125: { SetPlayerWeather(i, 19); }
				case 110: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha!");}
				case 108: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha!");}
				case 106: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Muahahahaahahahaaha!");}
				case 104: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha!");}
				case 102: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Atrapado en tu realidad ficticia!");}
				case 100: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Moriraas!");}
				case 96: { SetPlayerPos(i, cx+100, cy+50, cz+3); }
				case 95: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hhaahhahaa!"); SetPlayerPos(i, cx+100, cy+50, cz+3);}
				case 94: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hasta nunca ... !"); SetPlayerPos(i, cx+100, cy+50, cz+3);}
				case 93: { SetPlayerWeather(i, 2009); SetPlayerPos(i, cx+100, cy+50, cz+3); }
				case 92: { SetPlayerPos(i, cx+100, cy+50, cz+3); }
				case 60: { format(string, sizeof(string),"%s dice: He de volver a la realidad, ahora!", PlayerName(i));  Message(i, COLOR_FADE, string); }
				case 10: { format(string, sizeof(string),"%s dice: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaahhhhh!", PlayerName(i));  Message(i, COLOR_FADE, string); }
				case 9: { SetPlayerWeather(i, 150); }
			}
		}
		if(UsingEctasy[i] == 0 && EctasyEffect[i] == 1 && UsingDrugs[i] == 1)
		{
	    	KillTimer(GetPVarInt(i, "DrugTimer"));
			GText(i, "~w~Efecto ~y~extasis ~n~~w~pasado", 5000, 1);
  			UsingDrugs[i] = 0;
			SetPlayerWeather(i, DefaultWeather);
			UsingEctasy[i] = 0;
  			EctasyEffect[i] = 0
    		SetPlayerPos(i, InceptionPos[i][0],InceptionPos[i][1],InceptionPos[i][2]);
	    	SetPlayerVirtualWorld(i, 0);
	    	DeletePVar(i, "DrugTimer");
		}
	}
}

function SpeedEffectEnd(playerid)
{
    SetPlayerStats(playerid);
	GText(playerid, "~w~Efecto ~p~speed ~n~~w~pasado", 5000, 1);
    UsingDrugs[playerid] = 0;
    KillTimer(GetPVarInt(playerid, "DrugTimer"));
	DeletePVar(playerid, "DrugTimer");
}

function GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}

public PayDay()
{
	new string[68], account, interest, rent, key, secur, checks;
	for(new i=0; i < MAX_PLAYERS; i++)
	{
        if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
				account = PlayerInfo[i][pAccount];
				key = PlayerInfo[i][pPhousekey];
				rent = PlayerInfo[i][pRent];
				if(PlayerInfo[i][pDonateT] > 0) checks = 2000;
				else if(PlayerInfo[i][pRank] > 0) checks = 1000;
				else if(PlayerInfo[i][pRank] == 0 && PlayerInfo[i][pJob] > 0) checks = 750;
				else if(PlayerInfo[i][pRank] == 0 && PlayerInfo[i][pJob] == 0) checks = 500;
	   			account += checks;
				interest = PlayerInfo[i][pAccount]/20000;
				PlayerInfo[i][pAccount] = account+interest;
				Tax += TaxValue;
			    PlayerInfo[i][pAccount] -= TaxValue;
				switch(PlayerInfo[i][pSeguro])
				{
	    			case 0: secur = 0;
	    			case 1: secur = 20;
 				}
 				PlayerInfo[i][pAccount] -= secur;
 				if(key != 9999)
				{
					if(strcmp(PlayerName(i), HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > PlayerInfo[i][pAccount])
					{
		   				HouseInfo[key][hRooms] += 1;
						PlayerInfo[i][pPhousekey] = 9999;
						Message(i, COLOR_WHITE, "No puedes pagar el alquiler del cuarto, despídete.");
						PlayerInfo[i][pRent] = 0;
						rent = 0;
					}
					HouseInfo[key][hRentabil] = HouseInfo[key][hRentabil]+rent;
				}
				PlayerInfo[i][pAccount] -= rent;
				new ebill = 20;
				if(PlayerInfo[i][pPhousekey] != 9999)
				{
    				PlayerInfo[i][pAccount] -= ebill;
				}
				else
				{
					ebill = 0;
				}
				Message(i, COLOR_ASKQ, "{009B7D}>__________> | Estado Bancario | <__________<");
				format(string, sizeof(string), "  {2471A3}Pago:{FFFFFF} $%d   {2471A3}Impuestos:{FFFFFF} -$%d", checks, TaxValue);
				Message(i, COLOR_WHITE, string);
				format(string, sizeof(string), "  {2471A3}Gastos de Domicilio:{FFFFFF} -$%d", ebill+rent);
				Message(i, COLOR_GRAD1, string);
				format(string, sizeof(string), "  {2471A3}Seguro Medico:{FFFFFF} -$%d", secur);
				Message(i, COLOR_GRAD2, string);
				format(string, sizeof(string), "  {2471A3}Interés:{FFFFFF} $%d", interest);
				Message(i, COLOR_GRAD2, string);
				format(string, sizeof(string), "  {2471A3}Gastos totales:{FFFFFF} $%d", TaxValue + ebill + rent + secur);
				Message(i, COLOR_GRAD3, string);
				format(string, sizeof(string), "  {2471A3}Beneficios totales:{FFFFFF} $%d", checks+interest-ebill-TaxValue-rent-secur);
				Message(i, COLOR_GRAD3, string);
				Message(i, 0xB6B6B6FF, "{009B7D}| - _________________________________________ - |");
				format(string, sizeof(string), "  {C0392B}Antiguo Balance: %d$", PlayerInfo[i][pAccount] - checks - interest + ebill + TaxValue + rent + secur);
				Message(i, 0x00711DFF, string);
				format(string, sizeof(string), "  {2471A3}Nuevo Balance: %d$", PlayerInfo[i][pAccount]);
				Message(i, 0x00CC00FF, string);
				format(string, sizeof(string), "~h~~g~Hora de paga");
				GameTextForPlayer(i, string, 5000, 4);
				cNicotina[i] = 0;	cEnergysil[i] = 0;	cCancer[i] = 0;		cEpilepsia[i] = 0;  LookHouse[i] = 0;
				PlayerInfo[i][pRob] = 0;
				PlayerInfo[i][pConnectTime] += 1;
				PlayerInfo[i][pExp] += 1;
				PlayerInfo[i][pSuciedad] += 10;
				PlayerInfo[i][pSed] += 12;
				PlayerInfo[i][pHambre] += 15;
				SetProgressBarValue(Hambre[i], PlayerInfo[i][pHambre]);
  				UpdateProgressBar(Hambre[i], i);
				SetProgressBarValue(Sed[i], PlayerInfo[i][pSed]);
  				UpdateProgressBar(Sed[i], i);
				SetProgressBarValue(Suciedad[i], PlayerInfo[i][pSuciedad]);
  				UpdateProgressBar(Suciedad[i], i);
				if(PlayerInfo[i][pJobTime] > 0) PlayerInfo[i][pJobTime] -= 1;
				if(PlayerInfo[i][pADTime] > 0) { PlayerInfo[i][pADTime] -= 1; if(PlayerInfo[i][pADTime] == 0) { PlayerInfo[i][pADSent] = 0; } }
				for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
				{
				    if(PlayerVehicleInfo[i][v][pvModel] != 0)
				    {
				        PlayerVehicleInfo[i][v][pvSuciedad] += 5;
				    }
				}
				if(DobleOn == 1) PlayerInfo[i][pExp] += 1;
				if(PlayerInfo[i][pRecoger] > 0){
					PlayerInfo[i][pRecoger] -= 1;
					if(PlayerInfo[i][pRecoger] == 0) PlayerInfo[i][pRecogidos] = 0;
				}
				new ENFER = random(4);
				if(ENFER == 2) { PlayerInfo[i][pInfeccion] += 1; PlayerInfo[i][pGripe] += 1; }
			}
		}
	}
	TillTimer();
	PayDayLeft = 60;
	return 1;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}

public OnPlayerRegister(playerid, password[])
{
    if(IsPlayerConnected(playerid))
	{
		new PlayerFile[64], playername3[MAX_PLAYER_NAME];
		format(PlayerInfo[playerid][pKey], 24, password);
		GetPlayerName(playerid, playername3, sizeof(playername3));
		format(PlayerFile, sizeof(PlayerFile), "users/%s.ini", playername3);

		new	INI:PlayerAcc = INI_Open( PlayerFile );
			INI_WriteString( PlayerAcc, "Key", PlayerInfo[playerid][pKey]);
			INI_Close( PlayerAcc );
	}
	return 1;
}

public OnPlayerUpdateTime(playerid)
{
	if(gPlayerLogged[playerid] == 1)
	{
	    if(AFK[playerid] > 0) { PlayerInfo[playerid][pPos_x] = AFKLoc[playerid][0]; PlayerInfo[playerid][pPos_y] = AFKLoc[playerid][1]; PlayerInfo[playerid][pPos_z] = AFKLoc[playerid][2]; }
	    else { GetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]); }
	
 		new string[64], string3[40], playername3[MAX_PLAYER_NAME];

		GetPlayerName(playerid, playername3, sizeof(playername3));

		format(string3, sizeof(string3), "users/%s.ini", playername3);

		new INI:PlayerAcc = INI_Open( string3 );

			INI_WriteString( PlayerAcc, "Key", 			PlayerInfo[playerid][pKey]);
			INI_WriteInt( PlayerAcc, "Level", 			PlayerInfo[playerid][pLevel]);
			INI_WriteInt( PlayerAcc, "AdminCP",       	PlayerInfo[playerid][pAdminCP]);
			INI_WriteInt( PlayerAcc, "Facciones",       PlayerInfo[playerid][pFacciones]);
			INI_WriteInt( PlayerAcc, "ConnectedTime",   PlayerInfo[playerid][pConnectTime]);
			INI_WriteInt( PlayerAcc, "Registered",      PlayerInfo[playerid][pReg]);
			INI_WriteInt( PlayerAcc, "Sex",             PlayerInfo[playerid][pSex]);
			INI_WriteInt( PlayerAcc, "Age",             PlayerInfo[playerid][pAge]);
			INI_WriteInt( PlayerAcc, "Origin",          PlayerInfo[playerid][pOrigin]);
			INI_WriteInt( PlayerAcc, "Walk",            PlayerInfo[playerid][pWalk]);
			INI_WriteInt( PlayerAcc, "Respect",         PlayerInfo[playerid][pExp]);
			INI_WriteInt( PlayerAcc, "Money",           GetPlayerMoney(playerid));
			INI_WriteInt( PlayerAcc, "Bank",            PlayerInfo[playerid][pAccount]);
            INI_WriteInt( PlayerAcc, "Cheques",         PlayerInfo[playerid][pCheques]);
            INI_WriteInt( PlayerAcc, "Kills",           PlayerInfo[playerid][pKills]);
            INI_WriteInt( PlayerAcc, "Deaths",          PlayerInfo[playerid][pDeaths]);
            INI_WriteInt( PlayerAcc, "Arrested",        PlayerInfo[playerid][pArrested]);
            INI_WriteInt( PlayerAcc, "LottoNr",         PlayerInfo[playerid][pLottoNr]);
            INI_WriteInt( PlayerAcc, "Job",             PlayerInfo[playerid][pJob]);
            INI_WriteInt( PlayerAcc, "JobTime",         PlayerInfo[playerid][pJobTime]);
            INI_WriteInt( PlayerAcc, "Jailed",          PlayerInfo[playerid][pJailed]);
            INI_WriteInt( PlayerAcc, "JailTime",        PlayerInfo[playerid][pJailTime]);
            INI_WriteInt( PlayerAcc, "Materiales",      PlayerInfo[playerid][pMats]);
            INI_WriteInt( PlayerAcc, "Drogas",          PlayerInfo[playerid][pDrugs]);
            INI_WriteInt( PlayerAcc, "Speed",           PlayerInfo[playerid][pSpeed]);
            INI_WriteInt( PlayerAcc, "Ectasy",          PlayerInfo[playerid][pEctasy]);
            INI_WriteInt( PlayerAcc, "Ritalin",         PlayerInfo[playerid][pRitalin]);
            INI_WriteInt( PlayerAcc, "Heroina",         PlayerInfo[playerid][pHeroina]);
            INI_WriteInt( PlayerAcc, "Marihuana",       PlayerInfo[playerid][pMarihuana]);
            INI_WriteInt( PlayerAcc, "Leader",          PlayerInfo[playerid][pLeader]);
            INI_WriteInt( PlayerAcc, "Member",          PlayerInfo[playerid][pMember]);
            INI_WriteInt( PlayerAcc, "Rank",            PlayerInfo[playerid][pRank]);
            INI_WriteInt( PlayerAcc, "Char",            PlayerInfo[playerid][pChar]);
            	GetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
            INI_WriteFloat( PlayerAcc, "Health",		PlayerInfo[playerid][pHealth]);
            	GetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
            INI_WriteFloat( PlayerAcc, "Armour",		PlayerInfo[playerid][pArmour]);
            	PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
            INI_WriteInt( PlayerAcc, "Int",             PlayerInfo[playerid][pInt]);
            	PlayerInfo[playerid][pVirWorld] = GetPlayerVirtualWorld(playerid);
			INI_WriteInt( PlayerAcc, "VirWorld",        PlayerInfo[playerid][pVirWorld]);
            INI_WriteInt( PlayerAcc, "PhoneNr",         PlayerInfo[playerid][pPnumber]);
            INI_WriteInt( PlayerAcc, "Minutes",         PlayerInfo[playerid][pMinutes]);
            INI_WriteInt( PlayerAcc, "MTexto",          PlayerInfo[playerid][pMTexto]);
            INI_WriteInt( PlayerAcc, "House",           PlayerInfo[playerid][pPhousekey]);
            INI_WriteInt( PlayerAcc, "HouseVIP",        PlayerInfo[playerid][pPhousevip]);
            INI_WriteInt( PlayerAcc, "Negocio",         PlayerInfo[playerid][pPbizzkey]);
			INI_WriteFloat( PlayerAcc, "Pos_x",         PlayerInfo[playerid][pPos_x]);
			INI_WriteFloat( PlayerAcc, "Pos_y",         PlayerInfo[playerid][pPos_y]);
			INI_WriteFloat( PlayerAcc, "Pos_z",         PlayerInfo[playerid][pPos_z]);
			INI_WriteInt( PlayerAcc, "CarLic",          PlayerInfo[playerid][pCarLic]);
			INI_WriteInt( PlayerAcc, "FlyLic",          PlayerInfo[playerid][pFlyLic]);
			INI_WriteInt( PlayerAcc, "BoatLic",         PlayerInfo[playerid][pBoatLic]);
			INI_WriteInt( PlayerAcc, "GunLic",          PlayerInfo[playerid][pGunLic]);
			INI_WriteInt( PlayerAcc, "Gafas",           PlayerInfo[playerid][pGafas]);
			INI_WriteInt( PlayerAcc, "Tutorial",        PlayerInfo[playerid][pTut]);
			INI_WriteString( PlayerAcc, "Antecedente1",	PlayerInfo[playerid][pAntecedente1]);
        	INI_WriteString( PlayerAcc, "Antecedente2",	PlayerInfo[playerid][pAntecedente2]);
        	INI_WriteString( PlayerAcc, "Antecedente3",	PlayerInfo[playerid][pAntecedente3]);
        	INI_WriteString( PlayerAcc, "Note1", 		PlayerInfo[playerid][pNote1]);
        	INI_WriteString( PlayerAcc, "Note2", 		PlayerInfo[playerid][pNote2]);
        	INI_WriteString( PlayerAcc, "Note3", 		PlayerInfo[playerid][pNote3]);
        	INI_WriteString( PlayerAcc, "Note4", 		PlayerInfo[playerid][pNote4]);
        	INI_WriteString( PlayerAcc, "Note5", 		PlayerInfo[playerid][pNote5]);
        	INI_WriteString( PlayerAcc, "SMS1", 		PlayerInfo[playerid][pSMS_1]);
        	INI_WriteString( PlayerAcc, "SMS2", 		PlayerInfo[playerid][pSMS_2]);
        	INI_WriteString( PlayerAcc, "SMS3", 		PlayerInfo[playerid][pSMS_3]);
        	INI_WriteString( PlayerAcc, "SMS4", 		PlayerInfo[playerid][pSMS_4]);
        	INI_WriteString( PlayerAcc, "SMS5", 		PlayerInfo[playerid][pSMS_5]);
        	INI_WriteInt( PlayerAcc, "Lighter",         PlayerInfo[playerid][pLighter]);
        	INI_WriteInt( PlayerAcc, "Cigarettes",      PlayerInfo[playerid][pCigarettes]);
            INI_WriteInt( PlayerAcc, "Mascara",         PlayerInfo[playerid][pMask]);
        	INI_WriteInt( PlayerAcc, "Locked",          PlayerInfo[playerid][pLocked]);
        	INI_WriteInt( PlayerAcc, "Advertencias",    PlayerInfo[playerid][pAdvertencias]);
        	INI_WriteInt( PlayerAcc, "AdminAdver",      PlayerInfo[playerid][pAdminAdver]);
        	INI_WriteInt( PlayerAcc, "DNI",             PlayerInfo[playerid][pDNI]);
        	INI_WriteString( PlayerAcc, "MSN",          PlayerInfo[playerid][pMSN]);
        	INI_WriteString( PlayerAcc, "Estado",       PlayerInfo[playerid][pEstado]);
        	INI_WriteInt( PlayerAcc, "Weapon",          PlayerInfo[playerid][pWeapon]);
        	INI_WriteInt( PlayerAcc, "Ammo",            PlayerInfo[playerid][pAmmo]);
        	INI_WriteInt( PlayerAcc, "Weapon2",         PlayerInfo[playerid][pWeapon2]);
        	INI_WriteInt( PlayerAcc, "Ammo2",           PlayerInfo[playerid][pAmmo2]);
        	INI_WriteInt( PlayerAcc, "Weapon3",         PlayerInfo[playerid][pWeapon3]);
        	INI_WriteInt( PlayerAcc, "Ammo3",           PlayerInfo[playerid][pAmmo3]);
        	INI_WriteInt( PlayerAcc, "Weapon4",         PlayerInfo[playerid][pWeapon4]);
        	INI_WriteInt( PlayerAcc, "Ammo4",           PlayerInfo[playerid][pAmmo4]);
        	INI_WriteInt( PlayerAcc, "Weapon5",         PlayerInfo[playerid][pWeapon5]);
        	INI_WriteInt( PlayerAcc, "Ammo5",           PlayerInfo[playerid][pAmmo5]);
        	INI_WriteInt( PlayerAcc, "Weapon6",         PlayerInfo[playerid][pWeapon6]);
        	INI_WriteInt( PlayerAcc, "Ammo6",           PlayerInfo[playerid][pAmmo6]);
        	INI_WriteInt( PlayerAcc, "Weapon7",         PlayerInfo[playerid][pWeapon7]);
        	INI_WriteInt( PlayerAcc, "Ammo7",           PlayerInfo[playerid][pAmmo7]);
        	INI_WriteInt( PlayerAcc, "Weapon8",         PlayerInfo[playerid][pWeapon8]);
        	INI_WriteInt( PlayerAcc, "Ammo8",           PlayerInfo[playerid][pAmmo8]);
        	INI_WriteInt( PlayerAcc, "Weapon9",         PlayerInfo[playerid][pWeapon9]);
        	INI_WriteInt( PlayerAcc, "Ammo9",           PlayerInfo[playerid][pAmmo9]);
        	INI_WriteInt( PlayerAcc, "Weapon10",        PlayerInfo[playerid][pWeapon10]);
        	INI_WriteInt( PlayerAcc, "Ammo10",          PlayerInfo[playerid][pAmmo10]);
        	INI_WriteInt( PlayerAcc, "Weapon11",        PlayerInfo[playerid][pWeapon11]);
        	INI_WriteInt( PlayerAcc, "Ammo11",          PlayerInfo[playerid][pAmmo11]);
        	INI_WriteInt( PlayerAcc, "Weapon12",        PlayerInfo[playerid][pWeapon12]);
        	INI_WriteInt( PlayerAcc, "Ammo12",          PlayerInfo[playerid][pAmmo12]);
        	INI_WriteInt( PlayerAcc, "Maleta",          PlayerInfo[playerid][pMaleta]);
        	INI_WriteInt( PlayerAcc, "Mochila",         PlayerInfo[playerid][pMochila]);
        	INI_WriteInt( PlayerAcc, "Casco",           PlayerInfo[playerid][pCasco]);
        	INI_WriteInt( PlayerAcc, "Cancer",          PlayerInfo[playerid][pCancer]);
        	INI_WriteInt( PlayerAcc, "Epilepsia",       PlayerInfo[playerid][pEpilepsia]);
        	INI_WriteInt( PlayerAcc, "Gripe",           PlayerInfo[playerid][pGripe]);
        	INI_WriteInt( PlayerAcc, "Infeccion",       PlayerInfo[playerid][pInfeccion]);
        	INI_WriteInt( PlayerAcc, "DEagle",          PlayerInfo[playerid][pDEagle]);
        	INI_WriteInt( PlayerAcc, "Shotgun",         PlayerInfo[playerid][pShotgun]);
        	INI_WriteInt( PlayerAcc, "MP5",             PlayerInfo[playerid][pMP5]);
        	INI_WriteInt( PlayerAcc, "AK47",            PlayerInfo[playerid][pAK47]);
        	INI_WriteInt( PlayerAcc, "M4",              PlayerInfo[playerid][pM4]);
        	INI_WriteInt( PlayerAcc, "Sniper",          PlayerInfo[playerid][pSniper]);
        	INI_WriteInt( PlayerAcc, "FStyle",          PlayerInfo[playerid][pFStyle]);
        	INI_WriteInt( PlayerAcc, "Leccion",         PlayerInfo[playerid][pLeccion]);
        	INI_WriteInt( PlayerAcc, "Busqueda",        PlayerInfo[playerid][pBusqueda]);
        	INI_WriteInt( PlayerAcc, "AntiCancer",      PlayerInfo[playerid][pAntiCancer]);
        	INI_WriteInt( PlayerAcc, "AntiEpilepsia",   PlayerInfo[playerid][pAntiEpilepsia]);
        	INI_WriteInt( PlayerAcc, "Rent",            PlayerInfo[playerid][pRent]);
        	INI_WriteInt( PlayerAcc, "Rob",             PlayerInfo[playerid][pRob]);
        	INI_WriteInt( PlayerAcc, "Donate",          PlayerInfo[playerid][pDonateT]);
        	INI_WriteInt( PlayerAcc, "BanDuda",         PlayerInfo[playerid][pBanDuda]);
        	INI_WriteInt( PlayerAcc, "Seguro",          PlayerInfo[playerid][pSeguro]);
        	INI_WriteInt( PlayerAcc, "Walkie",          PlayerInfo[playerid][pWalkie]);
        	INI_WriteInt( PlayerAcc, "Head",            PlayerInfo[playerid][pHead]);
        	INI_WriteInt( PlayerAcc, "Married",         PlayerInfo[playerid][pMarried]);
        	INI_WriteString( PlayerAcc, "MarriedTo",	PlayerInfo[playerid][pMarriedTo]);
        	INI_WriteInt( PlayerAcc, "Entered",         PlayerInfo[playerid][pEntered]);
        	INI_WriteInt( PlayerAcc, "Peces",           PlayerInfo[playerid][pPeces]);
        	INI_WriteInt( PlayerAcc, "Implementos",     PlayerInfo[playerid][pImplementos]);
        	INI_WriteInt( PlayerAcc, "Carnada",         PlayerInfo[playerid][pCarnada]);
        	INI_WriteInt( PlayerAcc, "DNIFalse",        PlayerInfo[playerid][pDNIFalse]);
        	INI_WriteString( PlayerAcc, "DNIName",      PlayerInfo[playerid][pDNIName]);
        	INI_WriteInt( PlayerAcc, "Suciedad", 	    PlayerInfo[playerid][pSuciedad]);
        	INI_WriteInt( PlayerAcc, "Hambre", 	    	PlayerInfo[playerid][pHambre]);
        	INI_WriteInt( PlayerAcc, "Sed", 	    	PlayerInfo[playerid][pSed]);
        	INI_WriteInt( PlayerAcc, "AnilloCom",       PlayerInfo[playerid][pAnilloCom]);
        	INI_WriteInt( PlayerAcc, "AnilloOro",       PlayerInfo[playerid][pAnilloOro]);
        	INI_WriteInt( PlayerAcc, "Collar",          PlayerInfo[playerid][pCollar]);
        	INI_WriteInt( PlayerAcc, "AnilloDia",       PlayerInfo[playerid][pAnilloDia]);
        	INI_WriteInt( PlayerAcc, "Pulsera",         PlayerInfo[playerid][pPulsera]);
        	INI_WriteInt( PlayerAcc, "Aretes",          PlayerInfo[playerid][pAretes]);
        	INI_WriteInt( PlayerAcc, "Reloj",           PlayerInfo[playerid][pReloj]);
        	INI_WriteInt( PlayerAcc, "Recoger",         PlayerInfo[playerid][pRecoger]);
        	INI_WriteInt( PlayerAcc, "Recogidos",       PlayerInfo[playerid][pRecogidos]);
        	INI_WriteInt( PlayerAcc, "ChangeName",      PlayerInfo[playerid][pChangeName]);
        	INI_WriteString( PlayerAcc, "Anuncio",      PlayerInfo[playerid][pAnuncio]);
        	INI_WriteInt( PlayerAcc, "ADSent",          PlayerInfo[playerid][pADSent]);
        	INI_WriteInt( PlayerAcc, "ADTime",          PlayerInfo[playerid][pADTime]);
        	INI_WriteInt( PlayerAcc, "AdverFaccion",    PlayerInfo[playerid][pAdverFaccion]);
        	INI_WriteInt( PlayerAcc, "Dismissed",    	PlayerInfo[playerid][pDismissed]);
        	INI_WriteInt( PlayerAcc, "ActSlot",         PlayerInfo[playerid][pActSlot]);
        	for(new v = 0; v < MAX_PLAYERTOYS; v++)
 			{
 			    format(string, 30, "pt%dModelID",v);
 			    INI_WriteInt( PlayerAcc, string,        PlayerToyInfo[playerid][v][ptModelID]);
 			    format(string, 30, "pt%dBone",v);
                INI_WriteInt( PlayerAcc, string,        PlayerToyInfo[playerid][v][ptBone]);
                format(string, 30, "pt%dPosX",v);
                INI_WriteFloat( PlayerAcc, string,      PlayerToyInfo[playerid][v][ptPosX]);
                format(string, 30, "pt%dPosY",v);
                INI_WriteFloat( PlayerAcc, string,		PlayerToyInfo[playerid][v][ptPosY]);
                format(string, 30, "pt%dPosZ",v);
                INI_WriteFloat( PlayerAcc, string,		PlayerToyInfo[playerid][v][ptPosZ]);
                format(string, 30, "pt%dRotX",v);
                INI_WriteFloat( PlayerAcc, string,		PlayerToyInfo[playerid][v][ptRotX]);
                format(string, 30, "pt%dRotY",v);
                INI_WriteFloat( PlayerAcc, string,		PlayerToyInfo[playerid][v][ptRotY]);
                format(string, 30, "pt%dRotZ",v);
                INI_WriteFloat( PlayerAcc, string,		PlayerToyInfo[playerid][v][ptRotZ]);
			}
			for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
			{
			    format(string, 32, "pv%dModel",v);
				INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvModel]);
        		format(string, 32, "pv%dLocationx",v);
        		INI_WriteFloat( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvLocationx]);
        		format(string, 32, "pv%dLocationy",v);
        		INI_WriteFloat( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvLocationy]);
        		format(string, 32, "pv%dLocationz",v);
        		INI_WriteFloat( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvLocationz]);
        		format(string, 32, "pv%dAngle",v);
        		INI_WriteFloat( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvAngle]);
        		format(string, 32, "pv%dHealth",v);
        		INI_WriteFloat( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvHealth]);
        		format(string, 32, "pv%dColorOne",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvColorOne]);
        		format(string, 32, "pv%dColorTwo",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvColorTwo]);
        		format(string, 32, "pv%dName",v);
       			INI_WriteString( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvName]);
        		format(string, 32, "pv%dValue",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvValue]);
        		format(string, 32, "pv%dLock",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvLock]);
        		format(string, 32, "pv%dBattery",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvBattery]);
        		format(string, 32, "pv%dSpoiler",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvSpoiler]);
        		format(string, 32, "pv%dHood",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvHood]);
        		format(string, 32, "pv%dRoof",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvRoof]);
        		format(string, 32, "pv%dSideskirt",v);
       			INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvSideskirt]);
        		format(string, 32, "pv%dNitro",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvNitro]);
        		format(string, 32, "pv%dExhaust",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvExhaust]);
        		format(string, 32, "pv%dWheel",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvWheel]);
        		format(string, 32, "pv%dHydraulics",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvHydraulics]);
        		format(string, 32, "pv%dPaintjob",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvPaintjob]);
        		format(string, 32, "pv%dFrontBumper",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvFrontBumper]);
        		format(string, 32, "pv%dRearBumper",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvRearBumper]);
        		format(string, 32, "pv%dEmbargo",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvEmbargo]);
        		format(string, 32, "pv%dMulta",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvMulta]);
        		format(string, 32, "pv%dPlate",v);
        		INI_WriteString( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvPlate]);
        		format(string, 32, "pv%dGas",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvGas]);
        		format(string, 32, "pv%dAlarm",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvAlarm]);
        		format(string, 32, "pv%dGPS",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvGPS]);
        		format(string, 32, "pv%dGasolina",v);
        		INI_WriteInt( PlayerAcc, string,        PlayerVehicleInfo[playerid][v][pvGasolina]);
        		format(string, 32, "pv%dRespawn",v);
        		INI_WriteInt( PlayerAcc, string,        PlayerVehicleInfo[playerid][v][pvRespawn]);
        		format(string, 32, "pv%dSuciedad", v);
        		INI_WriteInt( PlayerAcc, string,        PlayerVehicleInfo[playerid][v][pvSuciedad]);
				format(string, 32, "pv%dTanque", v);
				INI_WriteInt( PlayerAcc, string,        PlayerVehicleInfo[playerid][v][pvTanque]);
				format(string, 32, "pv%dNeon",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvNeon]);
        		format(string, 32, "pv%dSpoiler",v);
        		INI_WriteInt( PlayerAcc, string,		PlayerVehicleInfo[playerid][v][pvSpoiler]);
        		
			}
			
   		INI_Close( PlayerAcc );
	}
	return 0;
}

public LoadUser(playerid, name[], value[])
{
	new string[32];
    INI_String("Key",          	PlayerInfo[playerid][pKey], 28);
	INI_Int( "Level",			PlayerInfo[playerid][pLevel]);
 	INI_Int( "AdminCP",			PlayerInfo[playerid][pAdminCP]);
 	INI_Int( "Facciones",       PlayerInfo[playerid][pFacciones]);
    INI_Int( "ConnectedTime",	PlayerInfo[playerid][pConnectTime]);
    INI_Int( "Registered",		PlayerInfo[playerid][pReg]);
    INI_Int( "Sex",				PlayerInfo[playerid][pSex]);
    INI_Int( "Age",				PlayerInfo[playerid][pAge]);
    INI_Int( "Origin",			PlayerInfo[playerid][pOrigin]);
    INI_Int( "Walk",			PlayerInfo[playerid][pWalk]);
    INI_Int( "Respect",			PlayerInfo[playerid][pExp]);
    INI_Int( "Money",			PlayerInfo[playerid][pCash]);
    INI_Int( "Bank",			PlayerInfo[playerid][pAccount]);
    INI_Int( "Cheques",			PlayerInfo[playerid][pCheques]);
    INI_Int( "Kills",			PlayerInfo[playerid][pKills]);
    INI_Int( "Deaths",			PlayerInfo[playerid][pDeaths]);
    INI_Int( "Arrested",		PlayerInfo[playerid][pArrested]);
    INI_Int( "LottoNr",			PlayerInfo[playerid][pLottoNr]);
    INI_Int( "Job",				PlayerInfo[playerid][pJob]);
    INI_Int( "JobTime",         PlayerInfo[playerid][pJobTime]);
    INI_Int( "Jailed",			PlayerInfo[playerid][pJailed]);
    INI_Int( "JailTime",		PlayerInfo[playerid][pJailTime]);
    INI_Int( "Materiales",		PlayerInfo[playerid][pMats]);
    INI_Int( "Drogas",			PlayerInfo[playerid][pDrugs]);
    INI_Int( "Speed",			PlayerInfo[playerid][pSpeed]);
    INI_Int( "Ectasy",			PlayerInfo[playerid][pEctasy]);
    INI_Int( "Ritalin",			PlayerInfo[playerid][pRitalin]);
    INI_Int( "Heroina",			PlayerInfo[playerid][pHeroina]);
    INI_Int( "Marihuana",		PlayerInfo[playerid][pMarihuana]);
    INI_Int( "Leader",			PlayerInfo[playerid][pLeader]);
    INI_Int( "Member",			PlayerInfo[playerid][pMember]);
    INI_Int( "Rank",			PlayerInfo[playerid][pRank]);
    INI_Int( "Char",			PlayerInfo[playerid][pChar]);
    INI_Float( "Health",		PlayerInfo[playerid][pHealth]);
    INI_Float( "Armour",		PlayerInfo[playerid][pArmour]);
    INI_Int( "Int",				PlayerInfo[playerid][pInt]);
    INI_Int( "VirWorld",        PlayerInfo[playerid][pVirWorld]);
    INI_Int( "PhoneNr",			PlayerInfo[playerid][pPnumber]);
    INI_Int( "Minutes",			PlayerInfo[playerid][pMinutes]);
    INI_Int( "MTexto",			PlayerInfo[playerid][pMTexto]);
    INI_Int( "House",			PlayerInfo[playerid][pPhousekey]);
    INI_Int( "HouseVIP",        PlayerInfo[playerid][pPhousevip]);
    INI_Int( "Negocio",         PlayerInfo[playerid][pPbizzkey]);
    INI_Float( "Pos_x",			PlayerInfo[playerid][pPos_x]);
	INI_Float( "Pos_y",			PlayerInfo[playerid][pPos_y]);
	INI_Float( "Pos_z",			PlayerInfo[playerid][pPos_z]);
	INI_Int( "CarLic",			PlayerInfo[playerid][pCarLic]);
	INI_Int( "FlyLic",			PlayerInfo[playerid][pFlyLic]);
	INI_Int( "BoatLic",			PlayerInfo[playerid][pBoatLic]);
	INI_Int( "GunLic",			PlayerInfo[playerid][pGunLic]);
	INI_Int( "Gafas",           PlayerInfo[playerid][pGafas]);
	INI_Int( "Tutorial",		PlayerInfo[playerid][pTut]);
	INI_String("Antecedente1", 	PlayerInfo[playerid][pAntecedente1], 78);
	INI_String("Antecedente2", 	PlayerInfo[playerid][pAntecedente2], 78);
	INI_String("Antecedente3", 	PlayerInfo[playerid][pAntecedente3], 78);
	INI_String("Note1",		 	PlayerInfo[playerid][pNote1], 80);
	INI_String("Note2", 		PlayerInfo[playerid][pNote2], 80);
	INI_String("Note3", 		PlayerInfo[playerid][pNote3], 80);
	INI_String("Note4",		 	PlayerInfo[playerid][pNote4], 80);
	INI_String("Note5",		 	PlayerInfo[playerid][pNote5], 80);
	INI_String("SMS1",		  	PlayerInfo[playerid][pSMS_1], 86);
	INI_String("SMS2",		  	PlayerInfo[playerid][pSMS_2], 86);
	INI_String("SMS3",		  	PlayerInfo[playerid][pSMS_3], 86);
	INI_String("SMS4",		  	PlayerInfo[playerid][pSMS_4], 86);
	INI_String("SMS5",		  	PlayerInfo[playerid][pSMS_5], 86);
	INI_Int( "Lighter",			PlayerInfo[playerid][pLighter]);
	INI_Int( "Cigarettes",		PlayerInfo[playerid][pCigarettes]);
	INI_Int( "Mascara",         PlayerInfo[playerid][pMask]);
	INI_Int( "Locked",			PlayerInfo[playerid][pLocked]);
	INI_Int( "Advertencias",    PlayerInfo[playerid][pAdvertencias]);
	INI_Int( "AdminAdver",      PlayerInfo[playerid][pAdminAdver]);
	INI_Int( "DNI"	,			PlayerInfo[playerid][pDNI]);
	INI_String( "MSN",		  	PlayerInfo[playerid][pMSN], 32);
	INI_String( "Estado",       PlayerInfo[playerid][pEstado], 26);
	INI_Int( "Weapon",			PlayerInfo[playerid][pWeapon]);
	INI_Int( "Ammo",			PlayerInfo[playerid][pAmmo]	);
	INI_Int( "Weapon2",			PlayerInfo[playerid][pWeapon2]);
	INI_Int( "Ammo2",			PlayerInfo[playerid][pAmmo2]);
	INI_Int( "Weapon3",			PlayerInfo[playerid][pWeapon3]);
	INI_Int( "Ammo3",			PlayerInfo[playerid][pAmmo3]);
	INI_Int( "Weapon4",			PlayerInfo[playerid][pWeapon4]);
	INI_Int( "Ammo4",			PlayerInfo[playerid][pAmmo4]);
	INI_Int( "Weapon5",			PlayerInfo[playerid][pWeapon5]);
	INI_Int( "Ammo5",			PlayerInfo[playerid][pAmmo5]);
	INI_Int( "Weapon6",			PlayerInfo[playerid][pWeapon6]);
	INI_Int( "Ammo6",			PlayerInfo[playerid][pAmmo6]);
	INI_Int( "Weapon7",			PlayerInfo[playerid][pWeapon7]);
	INI_Int( "Ammo7",			PlayerInfo[playerid][pAmmo7]);
	INI_Int( "Weapon8",			PlayerInfo[playerid][pWeapon8]);
	INI_Int( "Ammo8",			PlayerInfo[playerid][pAmmo8]);
	INI_Int( "Weapon9",			PlayerInfo[playerid][pWeapon9]);
	INI_Int( "Ammo9",			PlayerInfo[playerid][pAmmo9]);
	INI_Int( "Weapon10",		PlayerInfo[playerid][pWeapon10]);
	INI_Int( "Ammo10",			PlayerInfo[playerid][pAmmo10]);
	INI_Int( "Weapon11",		PlayerInfo[playerid][pWeapon11]);
	INI_Int( "Ammo11",			PlayerInfo[playerid][pAmmo11]);
	INI_Int( "Weapon12",		PlayerInfo[playerid][pWeapon12]);
	INI_Int( "Ammo12",			PlayerInfo[playerid][pAmmo12]);
	INI_Int( "Maleta",          PlayerInfo[playerid][pMaleta]);
	INI_Int( "Mochila",			PlayerInfo[playerid][pMochila]);
	INI_Int( "Casco",           PlayerInfo[playerid][pCasco]);
	INI_Int( "Cancer",			PlayerInfo[playerid][pCancer]);
	INI_Int( "Epilepsia",		PlayerInfo[playerid][pEpilepsia]);
	INI_Int( "Gripe",           PlayerInfo[playerid][pGripe]);
	INI_Int( "Infeccion",       PlayerInfo[playerid][pInfeccion]);
	INI_Int( "DEagle",			PlayerInfo[playerid][pDEagle]);
	INI_Int( "Shotgun",			PlayerInfo[playerid][pShotgun]);
	INI_Int( "MP5"	,			PlayerInfo[playerid][pMP5]);
	INI_Int( "AK47",			PlayerInfo[playerid][pAK47]);
	INI_Int( "M4"	,			PlayerInfo[playerid][pM4]);
	INI_Int( "Sniper",			PlayerInfo[playerid][pSniper]);
	INI_Int( "FStyle",			PlayerInfo[playerid][pFStyle]);
	INI_Int( "Leccion",			PlayerInfo[playerid][pLeccion]);
	INI_Int( "Busqueda",		PlayerInfo[playerid][pBusqueda]);
	INI_Int( "AntiCancer",		PlayerInfo[playerid][pAntiCancer]);
	INI_Int( "AntiEpilepsia",	PlayerInfo[playerid][pAntiEpilepsia]);
	INI_Int( "Rent",			PlayerInfo[playerid][pRent]);
	INI_Int( "Rob",				PlayerInfo[playerid][pRob]);
	INI_Int( "Donate",          PlayerInfo[playerid][pDonateT]);
	INI_Int( "BanDuda",         PlayerInfo[playerid][pBanDuda]);
	INI_Int( "Seguro",			PlayerInfo[playerid][pSeguro]);
	INI_Int( "Walkie",			PlayerInfo[playerid][pWalkie]);
	INI_Int( "Head",    	  	PlayerInfo[playerid][pHead]);
	INI_Int( "Married",         PlayerInfo[playerid][pMarried]);
	INI_String( "MarriedTo",    PlayerInfo[playerid][pMarriedTo], 30);
	INI_Int( "Entered",         PlayerInfo[playerid][pEntered]);
	INI_Int( "Peces",           PlayerInfo[playerid][pPeces]);
	INI_Int( "Implementos",     PlayerInfo[playerid][pImplementos]);
	INI_Int( "Carnada",         PlayerInfo[playerid][pCarnada]);
	INI_Int( "DNIFalse",        PlayerInfo[playerid][pDNIFalse]);
	INI_String( "DNIName",      PlayerInfo[playerid][pDNIName], 30);
	INI_Int( "Suciedad",        PlayerInfo[playerid][pSuciedad]);
	INI_Int( "Hambre", 			PlayerInfo[playerid][pHambre]);
	INI_Int( "Sed", 	    	PlayerInfo[playerid][pSed]);
	INI_Int( "AnilloCom",       PlayerInfo[playerid][pAnilloCom]);
	INI_Int( "AnilloOro",       PlayerInfo[playerid][pAnilloOro]);
	INI_Int( "Collar",          PlayerInfo[playerid][pCollar]);
	INI_Int( "AnilloDia",       PlayerInfo[playerid][pAnilloDia]);
	INI_Int( "Pulsera",         PlayerInfo[playerid][pPulsera]);
	INI_Int( "Aretes",          PlayerInfo[playerid][pAretes]);
	INI_Int( "Reloj",           PlayerInfo[playerid][pReloj]);
	INI_Int( "Recoger",         PlayerInfo[playerid][pRecoger]);
	INI_Int( "Recogidos",       PlayerInfo[playerid][pRecogidos]);
	INI_Int( "ChangeName",      PlayerInfo[playerid][pChangeName]);
	INI_String( "Anuncio",      PlayerInfo[playerid][pAnuncio], 80);
	INI_Int( "ADSent",          PlayerInfo[playerid][pADSent]);
	INI_Int( "ADTime",          PlayerInfo[playerid][pADTime]);
	INI_Int( "AdverFaccion",    PlayerInfo[playerid][pAdverFaccion]);
	INI_Int( "Dismissed",    	PlayerInfo[playerid][pDismissed]);
	INI_Int( "ActSlot",         PlayerInfo[playerid][pActSlot]);
	for(new v = 0; v < MAX_PLAYERTOYS; v++)
	{
 		format(string, 30, "pt%dModelID",v);
   		INI_Int( string,        PlayerToyInfo[playerid][v][ptModelID]);
	    format(string, 30, "pt%dBone",v);
	    INI_Int( string,        PlayerToyInfo[playerid][v][ptBone]);
	    format(string, 30, "pt%dPosX",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptPosX]);
	    format(string, 30, "pt%dPosY",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptPosY]);
	    format(string, 30, "pt%dPosY",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptPosZ]);
	    format(string, 30, "pt%dRotX",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptRotX]);
	    format(string, 30, "pt%dRotY",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptRotY]);
	    format(string, 30, "pt%dRotZ",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptRotZ]);
	}
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
	{
	    format(string, 32, "pv%dModel",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvModel]);
        format(string, 32, "pv%dLocationx",v);
        INI_Float(string,PlayerVehicleInfo[playerid][v][pvLocationx]);
        format(string, 32, "pv%dLocationy",v);
        INI_Float(string,PlayerVehicleInfo[playerid][v][pvLocationy]);
        format(string, 32, "pv%dLocationz",v);
        INI_Float(string,PlayerVehicleInfo[playerid][v][pvLocationz]);
        format(string, 32, "pv%dAngle",v);
        INI_Float(string,PlayerVehicleInfo[playerid][v][pvAngle]);
        format(string, 32, "pv%dHealth",v);
        INI_Float(string,PlayerVehicleInfo[playerid][v][pvHealth]);
        format(string, 32, "pv%dColorOne",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvColorOne]);
        format(string, 32, "pv%dColorTwo",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvColorTwo]);
        format(string, 32, "pv%dName",v);
        INI_String(string,PlayerVehicleInfo[playerid][v][pvName], 32);
        format(string, 32, "pv%dValue",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvValue]);
        format(string, 32, "pv%dLock",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvLock]);
        format(string, 32, "pv%dBattery",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvBattery]);
        format(string, 32, "pv%dSpoiler",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvSpoiler]);
        format(string, 32, "pv%dHood",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvHood]);
        format(string, 32, "pv%dRoof",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvRoof]);
        format(string, 32, "pv%dSideskirt",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvSideskirt]);
        format(string, 32, "pv%dNitro",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvNitro]);
        format(string, 32, "pv%dExhaust",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvExhaust]);
        format(string, 32, "pv%dWheel",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvWheel]);
        format(string, 32, "pv%dHydraulics",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvHydraulics]);
        format(string, 32, "pv%dPaintjob",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvPaintjob]);
        format(string, 32, "pv%dFrontBumper",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvFrontBumper]);
        format(string, 32, "pv%dRearBumper",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvRearBumper]);
        format(string, 32, "pv%dEmbargo",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvEmbargo]);
        format(string, 32, "pv%dMulta",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvMulta]);
        format(string, 32, "pv%dPlate",v);
        INI_String(string,PlayerVehicleInfo[playerid][v][pvPlate], 32);
        format(string, 32, "pv%dGas",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvGas]);
        format(string, 32, "pv%dAlarm",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvAlarm]);
        format(string, 32, "pv%dGPS",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvGPS]);
        format(string, 32, "pv%dGasolina",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvGasolina]);
        format(string, 32, "pv%dRespawn",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvRespawn]);
        format(string, 32, "pv%dSuciedad",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvSuciedad]);
        format(string, 32, "pv%dTanque",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvTanque]);
        format(string, 32, "pv%dNeon",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvNeon]);
        format(string, 32, "pv%dSpoiler",v);
        INI_Int(string,PlayerVehicleInfo[playerid][v][pvSpoiler]);
	}
	return 0;
}

public OnPlayerLoginGM(playerid)
{
    new string2[128];
	if(PlayerInfo[playerid][pLocked] == 8)
	{
 		Message(playerid, COLOR_YELLOW2, "Atención: Tu cuenta figura como bloqueada.");
 		Message(playerid, COLOR_YELLOW2, "(Baneado)");
		Message(playerid, COLOR_YELLOW2, "Acude al foro para reclamar tu desbaneo.");
  		Ban(playerid);
  		return 1;
	}
 	ResetPlayerMoney(playerid), GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	if(PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pLevel] = 1;
		PlayerInfo[playerid][pHealth] = 50.0;
		PlayerInfo[playerid][pPos_x] = 1612.3240;
		PlayerInfo[playerid][pPos_y] = -2330.1670;
		PlayerInfo[playerid][pPos_z] = 13.5469;
		PlayerInfo[playerid][pInt] = 0;
		PlayerInfo[playerid][pAccount] = 0;
		PlayerInfo[playerid][pReg] = 1;
		GivePlayerMoney(playerid, 3000);
	}
	ClearChatbox(playerid, 10);
	Message(playerid, COLOR_WHITE, "* Bienvenido a {2471A3}Miami Roleplay, {FFFFFF}disfruta tu estadia en el servidor.");
	Message(playerid, COLOR_WHITE, "- Escribe {2471A3}/info {FFFFFF}para estar alerta de los updates/novedades del servidor.");
	
	if(DobleOn == 1) Message(playerid, AMARILLO_ADMIN, "* INFORMACION: {FFFFFF}El sistema de doble experiencia esta activo, recuerda jugar para subir mas rapido de nivel.");
	if(PlayerInfo[playerid][pAdminCP] > 0)
	{
 		format(string2, sizeof(string2), "- {DC092F}Nivel Administrativo {FFFFFF}%d", PlayerInfo[playerid][pAdminCP]);
   		Message(playerid, -1, string2);
   		if(PlayerInfo[playerid][pAdminCP] >= 2013) SetIDMPS(playerid, 1);
	}
	if(PlayerInfo[playerid][pTut] == 1)
	{
		TextDrawShowForPlayer(playerid, Ciudad);
		TextDrawShowForPlayer(playerid, Prohibida);
	}
	if(PlayerInfo[playerid][pDismissed] == 1)
	{
	    Message(playerid, COLOR_WHITE, "Has sido despedido de tu faccion por algun lider mientras estabas offline.");
	    PlayerInfo[playerid][pMember] = 0;
	    PlayerInfo[playerid][pRank] = 0;
	    PlayerInfo[playerid][pAdverFaccion] = 0;
	    PlayerInfo[playerid][pDismissed] = 0;
 	}
 	if(PlayerInfo[playerid][pActSlot] == 0)
 	{
 	    ResetearVariablesAuto(playerid, 1);
 	    ResetearVariablesAuto(playerid, 2);
 	    ResetearVariablesAuto(playerid, 3);
 	    PlayerInfo[playerid][pActSlot] = 1;
 	    Message(playerid, COLOR_GRAD2, "Actualizacion de cuenta realizada correctamente.");
 	}
	SetTimerEx("Spawned", 5000, false, "i", playerid);
	gPlayerLogged[playerid] = 1;
 	SetSpawnInfo(playerid, 3, PlayerInfo[playerid][pChar], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
 	SetPlayerStats(playerid);
 	SpawnearVehiculo(playerid);
  	SpawnPlayer(playerid);
	TextDrawHideForPlayer(playerid, Text:Textdraw0);
	TextDrawHideForPlayer(playerid, Text:Textdraw1);
	TextDrawHideForPlayer(playerid, Text:Textdraw2);
	TextDrawHideForPlayer(playerid, Text:Textdraw3);
	Suciedad[playerid] = CreateProgressBar(537.00, 128.00, 56.50, 4.19, 611427327, 100.0);
 	ShowProgressBarForPlayer(playerid, Suciedad[playerid]);
 	SetProgressBarValue(Suciedad[playerid], PlayerInfo[playerid][pSuciedad]);
 	UpdateProgressBar(Suciedad[playerid], playerid);
 	
 	Hambre[playerid] = CreateProgressBar(537.00, 157.00, 56.50, 4.19, -603377665, 100.0);
 	ShowProgressBarForPlayer(playerid, Hambre[playerid]);
 	SetProgressBarValue(Hambre[playerid], PlayerInfo[playerid][pHambre]);
 	UpdateProgressBar(Hambre[playerid], playerid);
 	
 	Sed[playerid] = CreateProgressBar(537.00, 184.00, 56.50, 4.19, 10190335, 100.0);
 	ShowProgressBarForPlayer(playerid, Sed[playerid]);
 	SetProgressBarValue(Sed[playerid], PlayerInfo[playerid][pSed]);
 	UpdateProgressBar(Sed[playerid], playerid);
 	TextDrawShowForPlayer(playerid, PublicTD[0]);
	TextDrawShowForPlayer(playerid, PublicTD[1]);
	TextDrawShowForPlayer(playerid, PublicTD[2]);
	return 1;
}

SetIDMPS(playerid, renove)
{
	new Name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, Name, 24);

 	if(strfind(Name, "Mike_West", true) != -1)
 	{
 	    if(renove == 1)	{ AdminMPS[0] = playerid; return 1; }
 	    else if(renove == 2) { AdminMPS[0] = 999; return 1; }
  	}
   	else if(strfind(Name, "Jhon_West", true) != -1)
   	{
		if(renove == 1) { AdminMPS[1] = playerid; return 1; }
		else if(renove == 2) { AdminMPS[1] = 999; return 1; }
	}
  	else if(strfind(Name, "Fiend_West", true) != -1)
  	{
  	    if(renove == 1) { AdminMPS[2] = playerid; return 1; }
  	    else if(renove == 2) { AdminMPS[2] = playerid; return 1; }
   	}
	return 0;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new Float:cx, Float:cy, Float:cz;
	new idcar = GetPlayerVehicleID(playerid),string[128], giveplayerid;

	if(!IsPlayerConnected(playerid)) { return 1; }
	switch(dialogid)
	{
	    case BUYTOYS:
	    {
	        if(response)
	        {
 				new stringg[512];
				for(new x;x<MAX_PLAYERTOYS;x++)
				{
					new name[24];
    				format(name, sizeof(name), "Nada");

					for(new i;i < TOTAL_TOYS;i++)
					{
						if(gToysList[i][toymodelid] == PlayerToyInfo[playerid][x][ptModelID])
 						{
							format(name, sizeof(name), "%s", gToysList[i][toyname]);
						}
					}
					format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
				}
				ShowPlayerDialog(playerid, BUYTOYS2, DIALOG_STYLE_LIST, "Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
			} return 1;
		}
		case BUYTOYS2:
		{
		    if(response)
		    {
		        if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return Message(playerid, COLOR_YELLOW, "* Ya tienes algo en esa ranura, eliminala con /toys");
		        SetPVarInt(playerid, "SlotSelection", listitem);
		        gTotalItems[playerid] = TOTAL_TOYS;
		        SetPVarInt(playerid, "ModelsActive", 1);
		        SetPVarInt(playerid, "ModelsToys", 1);
		        SetPVarInt(playerid, "ModelsType", 3);
		        SetPVarString(playerid, "ModelsName", "Lista de Toys");
		        CreateSelectionMenu(playerid);
	    		SelectTextDraw(playerid, 0xACCBF1FF);
		    }
		    return 1;
  		}
		case TOYS:
		{
		    if (response)
		    {
				switch(listitem)
				{
				    case 0:
				    {
			  			new stringg[512];
						for(new x;x<MAX_PLAYERTOYS;x++)
						{
    						new name[24];
    						format(name, sizeof(name), "Nada");

							for(new i;i<TOTAL_TOYS;i++)
							{
    							if(gToysList[i][toymodelid] == PlayerToyInfo[playerid][x][ptModelID])
        						{
        							format(name, sizeof(name), "%s", gToysList[i][toyname]);
								}
							} format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
						} ShowPlayerDialog(playerid, WEARTOY, DIALOG_STYLE_LIST, "Seleccione un Objeto", stringg, "Seleccionar", "Cancelar");
   					}
   					case 1:
					{
   						new stringg[512];
						for(new x;x<MAX_PLAYERTOYS;x++)
						{
    						new name[24];
    						format(name, sizeof(name), "Nada");

							for(new i;i<TOTAL_TOYS;i++)
							{
    							if(gToysList[i][toymodelid] == PlayerToyInfo[playerid][x][ptModelID])
        						{
        							format(name, sizeof(name), "%s", gToysList[i][toyname]);
								}
							} format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
						} ShowPlayerDialog(playerid, EDITTOYS, DIALOG_STYLE_LIST, "Seleccione un Objeto", stringg, "Seleccionar", "Cancelar");
  					}
  					case 2:
  					{
			   			new stringg[512];
						for(new x;x<MAX_PLAYERTOYS;x++)
						{
							new name[24];
    						format(name, sizeof(name), "Nada");

							for(new i;i<TOTAL_TOYS;i++)
							{
    							if(gToysList[i][toymodelid] == PlayerToyInfo[playerid][x][ptModelID])
   								{
       								format(name, sizeof(name), "%s", gToysList[i][toyname]);
								}
							} format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
						} ShowPlayerDialog(playerid, DELETETOY, DIALOG_STYLE_LIST, "Seleccione un Objeto", stringg, "Borrar", "Cancelar");
					}
				}
			} return 1;
		}
		case EDITTOYS:
		{
		    if (response)
		    {
		 		if(PlayerToyInfo[playerid][listitem][ptModelID] == 0)
 				{
 					ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Menú: Edición", "Usted no tiene nada en ese slot!", "OK", "");
				}
				else
				{
   					SetPVarInt(playerid, "SlotSelection", listitem);
   					new stringg[84];
					format(stringg, sizeof(stringg), "Parte (%s)\nEditar Objeto", HoldingBones[PlayerToyInfo[playerid][GetPVarInt(playerid, "SlotSelection")][ptBone]]);
					ShowPlayerDialog(playerid, EDITTOYS2, DIALOG_STYLE_LIST, "Objeto Menu: Editar", stringg, "Seleccionar", "Cancelar");
				}
			} return 1;
		}
		case EDITTOYS2:
		{
	 		if (response)
 			{
 			    switch(listitem)
				{
					case 0:
					{
	      				ShowPlayerDialog(playerid, EDITTOYSBONE, DIALOG_STYLE_LIST, "Selecciona una Parte", "Columna\nCabeza\nBrazo Izq Sup\nBrazo Der Sup\nMano Izq\nMano Derecha\nMuslo Izq\nMuslo Der\nPie Izq\nPie Der\nRight calf\nLeft calf\nAnteBrazo Izq\nAnteBrazo Der\nClavicula Izq\nClavicula Der\nCuello\nQuijada", "Aceptar", "Cancelar");
                        return 1;
			    	}
			    	case 1:
			    	{
			    	    new index = GetPVarInt(playerid, "SlotSelection");
			    	    SetPlayerAttachedObject(playerid, index, PlayerToyInfo[playerid][index][ptModelID], PlayerToyInfo[playerid][index][ptBone], PlayerToyInfo[playerid][index][ptPosX], PlayerToyInfo[playerid][index][ptPosY], PlayerToyInfo[playerid][index][ptPosZ], PlayerToyInfo[playerid][index][ptRotX], PlayerToyInfo[playerid][index][ptRotY], PlayerToyInfo[playerid][index][ptRotZ], 1, 1, 1);
						EditAttachedObject(playerid, index);
						return 1;
					}
				}
			}
			else
			{
  				new stringg[512];
				for(new x;x<MAX_PLAYERTOYS;x++)
				{
   					new name[24];
   					format(name, sizeof(name), "Nada");

					for(new i;i<TOTAL_TOYS;i++)
					{
    					if(gToysList[i][toymodelid] == PlayerToyInfo[playerid][x][ptModelID])
        				{
       						format(name, sizeof(name), "%s", gToysList[i][toyname]);
						}
					} format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
				} ShowPlayerDialog(playerid, EDITTOYS, DIALOG_STYLE_LIST, "Seleccionar un Accesorio", stringg, "Seleccionar", "Cancelar");
			} return 1;
		}
		case EDITTOYSBONE:
		{
	 		if(response)
 			{
     			PlayerToyInfo[playerid][GetPVarInt(playerid, "SlotSelection")][ptBone] = listitem+1;
			}
			new stringg[84];
			format(stringg, sizeof(stringg), "Parte (%s)\nEditar Objeto", HoldingBones[PlayerToyInfo[playerid][GetPVarInt(playerid, "SlotSelection")][ptBone]]);
			ShowPlayerDialog(playerid, EDITTOYS2, DIALOG_STYLE_LIST, "Objeto Menu: Editar", stringg, "Seleccionar", "Cancelar");
			return 1;
		}
		case WEARTOY:
		{
		    if (response)
		    {
		 		if(PlayerToyInfo[playerid][listitem][ptModelID] == 0)
 				{
 	    			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Menú: Poner/Quitar", "Usted no tiene ningún objeto en este slot!", "OK", "");
 	    			return 1;
				}
				else
				{
   					if(IsPlayerAttachedObjectSlotUsed(playerid, listitem))
					{
   						new name[24];
   						format(name, sizeof(name), "Nada");

						for(new i;i<TOTAL_TOYS;i++)
  						{
							if(gToysList[i][toymodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
							{
								format(name, sizeof(name), "%s", gToysList[i][toyname]);
							}
						}
	    				format(string, sizeof(string), "Te quitaste tu %s (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
						Message(playerid, COLOR_RED, string);
	    				RemovePlayerAttachedObject(playerid, listitem);
	    				return 1;
					}
					else
					{
    					SetPlayerAttachedObject(playerid, listitem, PlayerToyInfo[playerid][listitem][ptModelID], PlayerToyInfo[playerid][listitem][ptBone], PlayerToyInfo[playerid][listitem][ptPosX], PlayerToyInfo[playerid][listitem][ptPosY], PlayerToyInfo[playerid][listitem][ptPosZ], PlayerToyInfo[playerid][listitem][ptRotX], PlayerToyInfo[playerid][listitem][ptRotY], PlayerToyInfo[playerid][listitem][ptRotZ], 1, 1, 1);
    					new name[24];
    					format(name, sizeof(name), "Nada");

						for(new i;i<TOTAL_TOYS;i++)
  						{
							if(gToysList[i][toymodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
							{
								format(name, sizeof(name), "%s", gToysList[i][toyname]);
							}
						}
						format(string, sizeof(string), "Te pusiste un %s (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
						Message(playerid, COLOR_LIGHTBLUE, string);
						return 1;
					}
				}
			}
		}
		case DELETETOY:
		{
		    if (response)
		    {
				PlayerToyInfo[playerid][listitem][ptModelID] = 0;
				PlayerToyInfo[playerid][listitem][ptBone] = 0;
				PlayerToyInfo[playerid][listitem][ptPosX] = 0.0;
				PlayerToyInfo[playerid][listitem][ptPosY] = 0.0;
				PlayerToyInfo[playerid][listitem][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][listitem][ptPosX] = 0.0;
				PlayerToyInfo[playerid][listitem][ptPosY] = 0.0;
				PlayerToyInfo[playerid][listitem][ptPosZ] = 0.0;
				if(IsPlayerAttachedObjectSlotUsed(playerid, listitem))
				{
				    RemovePlayerAttachedObject(playerid, listitem);
				}
				format(string, sizeof(string), "Usted ha eliminado su accesorio del slot %d", listitem);
   				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Menú", string, "OK", "");
   				return 1;
			}
		}
		case SEGURO_GPS:
		{
		    if(response)
		    {
		        new carid = strval(inputtext);
		        if(!VehicleSpawned[carid]) return Message(playerid, COLOR_GRAD4, "El vehículo que has intentado localizar no está spawneado.");
		        new time = random(10000)+10000;
		        format(string, sizeof string, "{FF7617}Seguro S.A: {FFFFFF}Espere un momento, el vehículo está siendo localizado(%d segundos).", time/1000);
		        Message(playerid, -1, string);
		        SetPVarInt(playerid, "Searching", 1);
				SetTimerEx("VehiculoLocalizado", time, false, "id", playerid, carid);
			} return 1;
		}
		case SEGURO_VEH:
		{
		    if(response)
		    {
		        new carro = strval(inputtext);
		        if(!VehicleSpawned[carro]) return Message(playerid, COLOR_GRAD4, "El vehículo que estas intentando recuperar no está spawneado.");
		        if(PlayerVehicleInfo[playerid][VehicleSlot[carro]][pvID] != carro && VehicleOwner[carro] != playerid) return Message(playerid, COLOR_GRAD2, "No puedes recuperar un vehículo que no es tuyo(Si es tuyo reloguea).");
		        if(PlayerVehicleInfo[playerid][VehicleSlot[carro]][pvRespawn] > 2)
		        {
		            new time = random(10000)+10000;
		            format(string, sizeof string, "{FF7617}Seguro S.A: {FFFFFF}Espere un momento, el vehículo está siendo recuperado(%d segundos).", time/1000);
		        	Message(playerid, -1, string);
		        	SetPVarInt(playerid, "Searching", 1);
		            SetTimerEx("VehiculoRecuperado", time, false, "id", playerid, carro);
		        } else Message(playerid, COLOR_GRAD4, "El vehículo mencionado no puede ser recuperado porque no ha sido enviado a Seguro S.A.");
		    }
		    return 1;
		}
		case AYUDA_DIALOG:
		{
		    if (response){
    	    	switch(listitem){
					case 0:
					{
					    new cj[] ="       \n {45F86C}CarJack {FFFFFF} - Esta es una de las reglas muy importantes, es cuando usted roba un auto sin un rol previo \n cometer esta falta es {DEDC44}Anti-RolePlay {FFFFFF}y si usted hace esto puede ser {FF150E}sancionado{FFFFFF}.";
     	   				ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> CarJack [CJ]", cj, "Aceptar", "Volver" );
         	   			return 1;
					}
                	case 1:
                	{
                	    new dm[] = "      \n {45F86C}DeathMatch {FFFFFF} - Muy simple, es matar a una persona sin razón alguna o sin ningún tipo de ROL.\n {FFFFFF}No olvide que el DM es una falta muy grave, usted puede ser {FF150E}baneado{FFFFFF}.";
             	   		ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> DeathMatch [DM]", dm, "Aceptar", "Volver" );
               	   		return 1;
					}
					case 2:
					{
					    new mg[] = "      \n {45F86C}MetaGaming {FFFFFF} - Es Confundir canales IC u OOC, para asi tomar ventaja usando informacion externa \n {5CFFCD}El MetaGaming {FFFFFF}es uno de los terminos mas importantes en Role Play.\n {FFFFFF}Deben estudiar bien este termino si desea sobrevivir en este modo de juego.";
     	   				ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> MetaGaming [MG]", mg, "Aceptar", "Volver" );
         	   			return 1;
   	 				}
			    	case 3:
			    	{
			    	    new pg[] = "      \n {45F86C}PowerGaming {FFFFFF} - Se llama a las acciones ficticias o irreales que usted puede llegar a hacer.\n {FFFFFF}Tambien se llama PG, cuando usted obliga a alguien a hacer un {FF150E}Rol.\n {54F288}Ejemplos de PowerGaming - {FFFFFF}Usando /me: \n\n {A615E0}* Juan Carlos le roba todo su dinero y corre.";
		   				ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> PowerGaming [PG]", pg, "Aceptar", "Volver" );
		   				return 1;
					}
					case 4:
					{
					    new bpc[] ="      \n {45F86C}Badly Parked Car {FFFFFF} - Esta regla se caracteriza cuando un usuario estaciona incorrectamente su vehiculo en las calles,\n como sancion tiene la venta del vehiculo y un envio a prisión administrativa.";
		   				ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Badly Parked Car [BPC]", bpc, "Aceptar", "Volver" );
		   				return 1;
					}
					case 5:
					{
					    new bd[] ="      \n {45F86C}Bad Driving {FFFFFF} - Manejar incorrectamente un vehiculo, causando desastres y desorden entre otros vehiculos. Recuerda manejar como en la vida real.";
		   				ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Bad Driving [BD]", bd, "Aceptar", "Volver" );
		   				return 1;
					}
					case 6:
					{
					    new rk[] ="       \n {45F86C}RevengeKill {FFFFFF} - Es la acción de cobrar vengaza despues de que usted haya {DEDC44}'muerto' \n {FFFFFF}Verdaderamente usted no muere, usted logra salvarse y aparece en el hospital. \n Lo que usted no debe hacer es volver al rol en el cual usted {DEDC44}'murio'.";
		   				ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Revenge Kill [RK]", rk, "Aceptar", "Volver" );
		   				return 1;
					}
					case 7:
					{
					    new na[] ="       \n {45F86C}Noob Abuser {FFFFFF} - Hacer NA se considera abusar de un usuario nuevo {0096E5}(Novato - Noob). \n\n {54F288}Por Ejemplo: \n\n {45F86C}> {FFFFFF}Confundirlo para aprovecharse de su inexperiencia en RolePlay.\n {45F86C}> {FFFFFF}Obligarlo a que te de dinero o que siga un rol de secuestro.";
		   				ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Noob Abuser [NA]", na, "Aceptar", "Volver" );
		   				return 1;
					}
				}
			}
		}
		case 500:
		{
         	if(!response)
         	{
            	ShowPlayerDialog(playerid, AYUDA_DIALOG, DIALOG_STYLE_LIST, "{FF0D00}>{2471A3}Miami Roleplay {FFFFFF}-{9024D3}Reglas de Rol", " {00FF00}>{FFFFFF}CarJack \n {00FF00}>{FFFFFF}DeathMatch \n {00FF00}>{FFFFFF}MetaGaming \n {00FF00}>{FFFFFF}PowerGaming \n {00FF00}>{FFFFFF}Badly Parked Car \n {00FF00}>{FFFFFF}Bad Driving \n {00FF00}>{FFFFFF}Revenge Kill \n {00FF00}>{FFFFFF}Noob Abuser", "Ver", "Salir");
            	return 1;
		 	}
		}
		case COLOR_ADM:
		{
		    if(response)
	    	{
	        	switch(listitem)
	        	{
	        	    case 0: { SetPlayerColor(playerid, 0x2471A3FF);   	Color[playerid] = 0x2471A3FF;		}
	            	case 1: { SetPlayerColor(playerid, 0x9C9C9CFF);    	Color[playerid] = 0x9C9C9CFF;		}
	            	case 2: { SetPlayerColor(playerid, 0x9C9C9CFF); 	Color[playerid] = 0x9C9C9CFF; 		}
	            	case 3: { SetPlayerColor(playerid, 0xFFCC00FF);    	Color[playerid] = 0xFFCC00FF; 		}
                	case 4: { SetPlayerColor(playerid, 0x8C004BFF);   	Color[playerid] = 0x8C004BFF; 		}
                	case 5: { SetPlayerColor(playerid, 0x572364FF);  	Color[playerid] = 0x572364FF; 		}
                	case 6: { SetPlayerColor(playerid, 0xCB3234FF);   	Color[playerid] = 0xCB3234FF; 		}
                	case 7: { SetPlayerColor(playerid, 0x00FFFFFF);   	Color[playerid] = 0x00FFFFFF; 		}
                	case 8: { SetPlayerColor(playerid, COLOR_WHITE);    Color[playerid] = COLOR_WHITE; 		}
		    	}return 1;
			}
		}
		case RadioFixFlow_.:
		{
			if(response)
			{
				switch(listitem)
				{
                    case 0:
                    {
                        if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "*Sube A Un Vehiculo {00FF00}Primero.");
                        GameTextForPlayer(playerid,"~g~Radio ~w~Europa Plus",4000,3);
                        StopAudioStreamForPlayer(playerid);
                        PlayAudioStreamForPlayer(playerid,"http://eptop128.streamr.ru");
                    }
                    case 1:
					{
                        if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "*Sube A Un Vehiculo {00FF00}Primero.");
                        GameTextForPlayer(playerid,"~g~Radio ~w~Radio Record",4000,3);
                        StopAudioStreamForPlayer(playerid);
                        PlayAudioStreamForPlayer(playerid, "https://www.radiorecord.fm/m3u/rr320-28kbps.m3u");
     				}
     				case 2:
					{
					   StopAudioStreamForPlayer(playerid);
                       SendClientMessage(playerid,-1,"{FFFFFF}* Has Apagado La Radio Del {00FF00}Coche");
					}
				}
			}
			return 1;
		}
		case CPRISION:
		{
			if(response)
			{
        	    switch(listitem)
            	{
            		case 0:
            		{
            	       ShowPlayerDialog(playerid,CELDA1,DIALOG_STYLE_MSGBOX, "{FFFFFF}> Celda Nro 1 - Seleccione:", "{00E400}Quiere Abrir o Cerrar la celda?", "Abrir", "Cerrar" );
            	    }
                	case 1:
                	{
                	   ShowPlayerDialog(playerid,CELDA2,DIALOG_STYLE_MSGBOX, "{FFFFFF}> Celda Nro 2 - Seleccione:", "{00E400}Quiere Abrir o Cerrar la celda?", "Abrir", "Cerrar" );
                	}
                	case 2:
                	{
                	   ShowPlayerDialog(playerid,CELDA3,DIALOG_STYLE_MSGBOX, "{FFFFFF}> Celda Nro 3 - Seleccione:", "{00E400}Quiere Abrir o Cerrar la celda?", "Abrir", "Cerrar" );
					}
				}
			}
			return 1;
		}
		case CELDA1:
		{
			if(response)
			{
        	    MoveDynamicObject(prison1,601.87536,857.282714,-95.533393, 0.8, -1000.0, -1000.0, -1000.0);
            	Message(playerid, COLOR_BLUE,"La celda numero uno está abierta.");
            	return 1;
			}
			else
			{
			    MoveDynamicObject(prison1,601.875366,857.282714,-91.008117, 0.8, -1000.0, -1000.0, -1000.0);
           		Message(playerid, COLOR_BLUE,"La celda número uno está cerrada.");
           		return 1;
     		}
		}
		case CELDA2:
		{
			if(response)
			{
        	    MoveDynamicObject(prison2,610.680053,857.309631,-95.558395, 0.8, -1000.0, -1000.0, -1000.0);
            	Message(playerid, COLOR_BLUE,"La celda número dos está abierta.");
            	return 1;
        	}
        	else
        	{
        	    MoveDynamicObject(prison2,610.68005,857.30963,-91.00811, 0.8, -1000.0, -1000.0, -1000.0);
           		Message(playerid, COLOR_BLUE,"La celda número dos está cerrada.");
           		return 1;
       		}
    	}
		case CELDA3:
		{
	        if(response)
    	    {
        	    MoveDynamicObject(prison3,619.552978,857.303405,-95.583473, 0.8, -1000.0, -1000.0, -1000.0);
            	Message(playerid, COLOR_BLUE,"La celda número tres está abierta.");
            	return 1;
			}
			else
			{
			    MoveDynamicObject(prison3,619.55297,857.30340,-91.00819, 0.8, -1000.0, -1000.0, -1000.0);
	       		Message(playerid, COLOR_BLUE,"La celda número tres está cerrada.");
	       		return 1;
			}
		}
		case CENTRODE_ANUNCIOS:
		{
			if(response)
			{
			    if(DetectarSPAM(inputtext) || strfind(inputtext, "=", true) != -1 || strlen(inputtext) < 1 || strlen(inputtext) > 80)
			    {
			        ShowPlayerDialog(playerid, CENTRODE_ANUNCIOS, DIALOG_STYLE_INPUT, "{2471A3}Centro de Publicidad", "{FFFFFF}Ingresa el anuncio que desees colocar en nuestro bloque de publicidad (Max. 80):", "Aceptar", "Cancelar");
			        return 1;
		        }
		        Bought(playerid, 150);
				Till(37, 150);
		        format(PlayerInfo[playerid][pAnuncio], 90, inputtext);
		        PlayerInfo[playerid][pADTime] = 3;
		        PlayerInfo[playerid][pADSent] = 1;
				Message(playerid, COLOR_WHITE, "{2471A3}Centro de Publicidad: {FFFFFF}Has publicado tu anuncio correctamente, podras volver a publicar dentro de 3 horas.");
				return 1;
		    }
			return 1;
		}
		case VER_ANUNCIOS:
		{
		    if(response)
		    {
		        SeeAds(playerid);
		        return 1;
			}
			else return 1;
  		}
		case TEL_INPUT:
		{
	    	if(response)
	    	{
	    	    if(GetPVarInt(playerid, "TEL_INPUT_ID") == 1)
	        	{
	        	    if(strval(inputtext) > 999999 || strval(inputtext) < 1000)
	        	    {
            	        ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Inserte el número del destino del mensaje\nTeléfono entre 4-6 carácteres", "Enviar", "Cancelar");
                	    return 1;
	            	}
		            SetPVarInt(playerid, "TEL_INPUT_ID", 2);
		            SetPVarInt(playerid, "TEL_NUMBER", strval(inputtext));
					format(string, sizeof(string), "Telf: %d",GetPVarInt(playerid, "TEL_NUMBER"));
					Message(playerid, COLOR_GRAD2, string);
    				ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Escriba el texto a enviar", "Enviar", "Cancelar");
    				return 1;
	        	}
	        	else if(GetPVarInt(playerid, "TEL_INPUT_ID") == 2)
	        	{
	            	if(DetectarSPAM(inputtext) || strlen(inputtext) > 80 || strlen(inputtext) < 1 || strfind(inputtext, "=", true) != -1)
	            	{
	            	    ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Escriba el texto a enviar\nLímite 80 carácteres", "Enviar", "Cancelar");
	            	    return 1;
	            	}
        	 		if(PlayerInfo[playerid][pMTexto] < 1) return Message(playerid, COLOR_WHITE, "{018CFE}OTECEL: {FFFFFF}Te informamos que no tienes mensajes disponibles, contrata un paquete.");
					PlayerInfo[playerid][pMTexto] -= 1;
					format(string, 60, "* %s manda un mensaje de texto.", PlayerName(playerid));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					Loop(i,MAX_PLAYERS)
			    	{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pPnumber] == GetPVarInt(playerid, "TEL_NUMBER"))
							{
						    	new h,m,s,y,month,d,mtext[12];
	     						gettime(h,m,s);
								getdate(y,month,d);
								switch(month)
								{
								    case 1:     mtext = "Enero";
							    	case 2:     mtext = "Febrero";
							    	case 3:     mtext = "Marzo";
						    		case 4:     mtext = "Abril";
							    	case 5:     mtext = "Mayo";
							    	case 6:     mtext = "Junio";
							    	case 7:     mtext = "Julio";
							    	case 8:     mtext = "Agosto";
							    	case 9:     mtext = "Septiembre";
							    	case 10:    mtext = "Octubre";
							    	case 11:    mtext = "Noviembre";
						    		case 12:    mtext = "Diciembre";
		    					}
		    					DeletePVar(playerid, "TEL_NUMBER");
								if(strcmp(PlayerInfo[i][pSMS_1], "Vacío", true) == 0)
						    	{
						        	Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (1)");
						        	format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
						        	format(PlayerInfo[i][pSMS_1], 80, string);
						        	return 1;
						    	}
						    	else if(strcmp(PlayerInfo[i][pSMS_2], "Vacío", true) == 0)
					    		{
						        	Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (2)");
						        	format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
						        	format(PlayerInfo[i][pSMS_2], 80, string);
						        	return 1;
						    	}
						    	else if(strcmp(PlayerInfo[i][pSMS_3], "Vacío", true) == 0)
						    	{
						    	    Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (3)");
						        	format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
					    	    	format(PlayerInfo[i][pSMS_3], 80, string);
					    	    	return 1;
					    		}
						    	else if(strcmp(PlayerInfo[i][pSMS_4], "Vacío", true) == 0)
						    	{
						        	Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (4)");
						        	format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
						        	format(PlayerInfo[i][pSMS_4], 80, string);
						        	return 1;
						    	}
						    	else if(strcmp(PlayerInfo[i][pSMS_5], "Vacío", true) == 0)
						    	{
						        	Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (5)");
						        	format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
						        	format(PlayerInfo[i][pSMS_5], 80, string);
						        	return 1;
						    	}
					    		else
						    	{
						        	Message(i, COLOR_WHITE, "Información: {FF4400}Tienes lleno el buzón de entrada. No recibirás mas mensajes. (5/5)");
						        	Message(playerid, COLOR_GRAD2, "Operadora: Este número está apagado o fuera de cobertura");
						        	return 1;
		        				}
						    }
						}
					}
	        	}
		        else if(GetPVarInt(playerid, "TEL_INPUT_ID") == 3)
		        {
        	 		new phonenumb = strval(inputtext);
          			if(PlayerInfo[playerid][pMinutes] < 1 && phonenumb != 911) return Message(playerid, COLOR_WHITE, "{018CFE}OTECEL: {FFFFFF}Estimado cliente, usted no cuenta con saldo disponible para realizar la llamada.");
            		format(string, sizeof(string), "* %s saca su teléfono.", PlayerName(playerid));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					SetPlayerAttachedObject(playerid, 0, 18866, 6, 0.03999, 0.00999, 0.00000, -90.00000, 0.00000, 180.00000);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);

					if(phonenumb == 444)
					{
   						if(TransportDuty[playerid] > 0) return Message(playerid, COLOR_GREY, "¡No puedes llamar a un taxi ahora!");
				    	if(GetPVarInt(playerid, "TaxiCalled") > 0) return Message(playerid, COLOR_GRAD2, "¡Ya has llamado un taxi (/cancelar taxi)!");
						ClearChatbox(playerid, 10);
    					Message(playerid, COLOR_WHITE, "*** {EE9900}Compañía de Taxi {FFFFFF}***");
				    	Message(playerid, COLOR_YELLOW2, "{EE9900}Operadora: {FFFFFF}¿ Que servicio necesita ?");
			    		Message(playerid, COLOR_YELLOW2, "{EE9900}Operadora: {FFFFFF}Diga \"TAXI\" si necesita servicio de taxi.");
			    		Message(playerid, COLOR_YELLOW2, "{EE9900}Operadora: {FFFFFF}Diga \"NO\" para cancelar la llamada.");
				    	PlayerInfo[playerid][pMinutes] -= 15;
				    	Mobile[playerid] = 445;
				    	return 1;
  					}
   					else if(phonenumb == 555)
   					{
   						ClearChatbox(playerid, 10);
	  			   		Message(playerid, COLOR_WHITE, "*** {117799}555 Servicio Mecánico {FFFFFF}***");
		   			   	Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Hola! ¿ Necesita un mecánico ?");
	   				    Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Recuerde venir al taller si necesita Tuning o arreglos menores!");
	   				    Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Si necesita asistencia urgente, diga ASISTENCIA.");
	   				    Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Si quiere anular la llamada diga NO.");
	   			    	PlayerInfo[playerid][pMinutes] -= 15;
	   			    	Mobile[playerid] = 556;
	   			    	return 1;
	   				}
					else if(phonenumb == 911)
					{
						ClearChatbox(playerid, 10);
						Message(playerid, COLOR_WHITE, "*** {004488}911 Servicio de Emergencias {FFFFFF}***");
						Message(playerid, COLOR_WHITE, "{004488}Operadora: {FFFFFF}Diga el servicio que necesita, gracias.");
						Message(playerid, COLOR_WHITE, "{004488}Operadora: {FFFFFF}Diga \"Policia\" para contactar con la autoridad.");
     					Message(playerid, COLOR_WHITE, "{004488}Operadora: {FFFFFF}Diga \"SAMUR\" para contactar con los servicios médicos.");
						Mobile[playerid] = 911;
						return 1;
					}
					else if(phonenumb == 111)
					{
					    format(string, sizeof(string), "{E1BB69}%s Necesita Una Pizza. (use {FF0A2F}/AceptarPizza {E1BB69}para aceptar la llamada)", PlayerName(playerid));
				    	SendJobMessage(6, -1, string);
				    	Message(playerid, -1, "   {FF0A2F}*** {FFFFFF}Pizza Stack Delivery {FF0A2F}***");
				    	Message(playerid, COLOR_WHITE, "Operadora: Bueno? Pizza Stack, que desea?");
				    	Message(playerid, COLOR_WHITE, "Operadora: Gracias, su pedido fue informado, si no responden intente más tarde.");
				    	Message(playerid, COLOR_WHITE, "Operadora: Hasta Luego.");
				    	PlayerInfo[playerid][pMinutes] -= 10;
				    	PizzaCall = playerid;
				    	return 1;
					}
					else if(phonenumb == PlayerInfo[playerid][pPnumber])
					{
						Message(playerid, COLOR_WHITE, "El número marcado correspode a su dispositivo móvil");
						return 1;
					}
					else if(Mobile[playerid] != 255)
					{
						Message(playerid, COLOR_WHITE, "¡Usted está en una llamada!");
						return 1;
					}
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
							{
								Mobile[playerid] = i;
								if(IsPlayerConnected(i))
								{
					   				if(giveplayerid != INVALID_PLAYER_ID)
								    {
				        				if(PhoneOnline[i] > 0) return Message(playerid, COLOR_GREY, "¡Fuera de cobertura!");

										if(Mobile[i] == 255)
										{
											format(string, sizeof(string), "{DD1111}iPhone{FFFFFF}: Tu teléfono está sonando #%d, utiliza {DD6611}/contestar", PlayerInfo[playerid][pPnumber]);
											Message(i, COLOR_WHITE, string);
											format(string, sizeof(string), "* El teléfono de %s está sonando.", PlayerName(i));
											ProxDetectorEx(30.0, i, string, COLOR_PURPLE);
											CellTime[playerid] = 1;
											return 1;
										}
									}
								}
							}
						}
					}
    			}
	    	}
		}
		case IPHONE_OPTIONS:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
			    	{
				        ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Llamar", "{DD1111}iPhone {FFFFFF}- Inserte el teléfono a llamar\n\n\n\t1\t2\t3\n\t4\t5\t6\n\t7\t8\t9\n\t#\t0\t*", "Enviar", "Cancelar");
						SetPVarInt(playerid, "TEL_INPUT_ID", 3);
						return 1;
				    }
				    case 1:
			    	{
				        ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Inserte el número del destino del mensaje", "Enviar", "Cancelar");
						SetPVarInt(playerid, "TEL_INPUT_ID", 1);
						return 1;
				    }
				    case 2:
			    	{
			        	ShowPlayerDialog(playerid, TEL_MSGBOX, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Buzón de entrada", "- \tBuzón de entrada 1\n- \tBuzón de entrada 2\n- \tBuzón de entrada 3\n- \tBuzón de entrada 4\n- \tBuzón de entrada 5", "Ver", "Borrar");
			        	return 1;
			    	}
				    case 3:
				    {
        	            ShowPlayerDialog(playerid, IPHONE_AGENDA, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Organizador", "- \t\tVer Nota\n- \t\tCrear Nota\n- \t\tBorrar Nota", "Aceptar", "Salir");
        	            return 1;
				    }
			    	case 4:
			    	{
				        new strsald[256];
				        format(strsald, sizeof(strsald), "{FFFFFF}Estimado cliente, usted cuenta con un saldo de $%d para llamadas a telefono celular\n\t\tEl saldo de su paquete de mensajes escritos es de %d\n\n\t\t\t\t{018CFE}Gracias por utilizar nuestros servicios!", PlayerInfo[playerid][pMinutes]/10, PlayerInfo[playerid][pMTexto]);
				        ShowPlayerDialog(playerid, 312, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Consulta de Saldo", strsald, "Ok", "");
				        return 1;
				    }
				    case 5:
				    {
				        SeeAds(playerid);
				        return 1;
        			}
				}
			}
		}
		case TEL_MSGBOX:
		{
			if(response)
			{
				switch(listitem)
				{
			    	case 0:
			    	{
				        ClearChatbox(playerid, 10);
				        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 1 =======================================================");
				        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pSMS_1]);
				    }
			    	case 1:
			    	{
				        ClearChatbox(playerid, 10);
				        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 2 =======================================================");
				        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pSMS_2]);
				    }
			    	case 2:
			    	{
				        ClearChatbox(playerid, 10);
				        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 3 =======================================================");
				        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pSMS_3]);
				    }
			    	case 3:
			    	{
				        ClearChatbox(playerid, 10);
				        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 4 =======================================================");
				        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pSMS_4]);
				    }
			    	case 4:
			    	{
				        ClearChatbox(playerid, 10);
				        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 5 =======================================================");
				        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pSMS_5]);
				    }
				}
			}
			else
			{
		    	switch(listitem)
				{
			    	case 0:
			    	{
				        format(PlayerInfo[playerid][pSMS_1], 8, "Vacío");
				        Message(playerid, COLOR_GRAD2, "Mensaje borrado.");
				    }
				    case 1:
			    	{
			        	format(PlayerInfo[playerid][pSMS_2], 8, "Vacío");
				        Message(playerid, COLOR_GRAD2, "Mensaje borrado.");
				    }
				    case 2:
				    {
			    	    format(PlayerInfo[playerid][pSMS_3], 8, "Vacío");
			        	Message(playerid, COLOR_GRAD2, "Mensaje borrado.");
			    	}
				    case 3:
				    {
				        format(PlayerInfo[playerid][pSMS_4], 8, "Vacío");
				        Message(playerid, COLOR_GRAD2, "Mensaje borrado.");
			    	}
				    case 4:
				    {
				        format(PlayerInfo[playerid][pSMS_5], 8, "Vacío");
				        Message(playerid, COLOR_GRAD2, "Mensaje borrado.");
			    	}
				}
			}
		}
		case IPHONE_AGENDA:
		{
 			if(response)
			{
				switch(listitem)
				{
	   				case 0:
				    {
       					ShowPlayerDialog(playerid, IPHONE_AGENDA_VB, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Visualizador de Notas", "- \t\tNota 1\n- \t\tNota 2\n- \t\tNota 3\n- \t\tNota 4\n- \t\tNota 5", "Ver", "Salir");
				        SetPVarInt(playerid, "TEL_INPUT_ID", 4);
			    	}
				    case 1:
				    {
       					ShowPlayerDialog(playerid, IPHONE_AGENDA_ESCRIBIR, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Crear nota", "{DD1111}iPhone {FFFFFF}- Escriba su nota", "Aceptar", "Salir");
				    }
			    	case 2:
			    	{
	       				ShowPlayerDialog(playerid, IPHONE_AGENDA_VB, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Borrador de Notas", "- \t\tNota 1\n- \t\tNota 2\n- \t\tNota 3\n- \t\tNota 4\n- \t\tNota 5", "Borrar", "Salir");
						DeletePVar(playerid, "TEL_INPUT_ID");
				    }
				}
			} return 1;
		}
		case IPHONE_AGENDA_ESCRIBIR:
		{
	 		if(response)
			{
  				if(StringOther(playerid, inputtext) == 1)
    			{
	     			if(strcmp(PlayerInfo[playerid][pNote1],"None",true) == 0)
					{
						format(PlayerInfo[playerid][pNote1], 80, inputtext);
	    				format(string, sizeof(string), "Nota1: %s", PlayerInfo[playerid][pNote1]);
					    Message(playerid, COLOR_GRAD2, string);
					}
					else if(strcmp(PlayerInfo[playerid][pNote2],"None",true) == 0)
					{
	   					format(PlayerInfo[playerid][pNote2], 80, inputtext);
		  				format(string, sizeof(string), "Nota2: %s", PlayerInfo[playerid][pNote2]);
					   	Message(playerid, COLOR_GRAD2, string);
					}
					else if(strcmp(PlayerInfo[playerid][pNote3],"None",true) == 0)
					{
	   					format(PlayerInfo[playerid][pNote3], 80, inputtext);
	   					format(string, sizeof(string), "Nota3: %s", PlayerInfo[playerid][pNote3]);
	   					Message(playerid, COLOR_GRAD2, string);
					}
					else if(strcmp(PlayerInfo[playerid][pNote4],"None",true) == 0)
					{
	   					format(PlayerInfo[playerid][pNote4], 80, inputtext);
	   					format(string, sizeof(string), "Nota4: %s", PlayerInfo[playerid][pNote4]);
	   					Message(playerid, COLOR_GRAD2, string);
					}
					else if(strcmp(PlayerInfo[playerid][pNote5],"None",true) == 0)
					{
	   					format(PlayerInfo[playerid][pNote5], 80, inputtext);
						format(string, sizeof(string), "Nota5: %s", PlayerInfo[playerid][pNote5]);
	   					Message(playerid, COLOR_GRAD2, string);
					}
					else Message(playerid, COLOR_GRAD2, "No tiene páginas libres en su agenda.");
				}
				else Message(playerid, COLOR_GRAD2, "* Has utilizado carácteres no permitidos.");
   			}
		}
		case IPHONE_AGENDA_VB:
		{
	 		if(response)
   			{
  				switch(listitem)
				{
   					case 0:
			    	{
			    	    if(GetPVarInt(playerid, "TEL_INPUT_ID") == 4)
				        {
				        	ClearChatbox(playerid, 10);
					        Message(playerid, 0xFF0000FF, "iPhone ======= Nota 1 =======================================================");
					        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pNote1]);
					        DeletePVar(playerid, "TEL_INPUT_ID");
						}
						else if(GetPVarInt(playerid, "TEL_INPUT_ID") == 0)
						{
	    					format(PlayerInfo[playerid][pNote1], 6, "None");
       						Message(playerid, COLOR_GRAD2, "Nota 1 borrada.");
						}
	    			}
				    case 1:
				    {
       					if(GetPVarInt(playerid, "TEL_INPUT_ID") == 4)
				        {
			    	    	ClearChatbox(playerid, 10);
				    	    Message(playerid, 0xFF0000FF, "iPhone ======= Nota 2 =======================================================");
				        	Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pNote2]);
				        	DeletePVar(playerid, "TEL_INPUT_ID");
						}
						else if(GetPVarInt(playerid, "TEL_INPUT_ID") == 0)
						{
	    					format(PlayerInfo[playerid][pNote2], 6, "None");
       						Message(playerid, COLOR_GRAD2, "Nota 2 borrada.");
						}
	    			}
				    case 2:
				    {
       					if(GetPVarInt(playerid, "TEL_INPUT_ID") == 4)
				        {
			    	    	ClearChatbox(playerid, 10);
				    	    Message(playerid, 0xFF0000FF, "iPhone ======= Nota 3 =======================================================");
				        	Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pNote3]);
				        	DeletePVar(playerid, "TEL_INPUT_ID");
						}
						else if(GetPVarInt(playerid, "TEL_INPUT_ID") == 0)
						{
	    					format(PlayerInfo[playerid][pNote3], 6, "None");
       						Message(playerid, COLOR_GRAD2, "Nota 3 borrada.");
						}
			   		}
				    case 3:
			    	{
				        if(GetPVarInt(playerid, "TEL_INPUT_ID") == 4)
			    	    {
			        		ClearChatbox(playerid, 10);
				        	Message(playerid, 0xFF0000FF, "iPhone ======= Nota 4 =======================================================");
				        	Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pNote4]);
				        	DeletePVar(playerid, "TEL_INPUT_ID");
						}
						else if(GetPVarInt(playerid, "TEL_INPUT_ID") == 0)
						{
	    					format(PlayerInfo[playerid][pNote4], 6, "None");
       						Message(playerid, COLOR_GRAD2, "Nota 4 borrada.");
						}
		    		}
				    case 4:
			    	{
				        if(GetPVarInt(playerid, "TEL_INPUT_ID") == 4)
			    	    {
			        		ClearChatbox(playerid, 10);
				        	Message(playerid, 0xFF0000FF, "iPhone ======= Nota 5 =======================================================");
				        	Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pNote5]);
				        	DeletePVar(playerid, "TEL_INPUT_ID");
						}
						else if(GetPVarInt(playerid, "TEL_INPUT_ID") == 0)
						{
	    					format(PlayerInfo[playerid][pNote5], 6, "None");
       						Message(playerid, COLOR_GRAD2, "Nota 5 borrada.");
						}
	    			}
				}
			} return 1;
		}
		case CONFIRM_DRUGS_DIALOG:
		{
		    if(response)
			{
				new drug[12];
				switch(GetPVarInt(playerid, "NarcoSellArm")){
				    case 1:		drug = "Speed";
				    case 2:		drug = "Extasis";
			    	case 3:		drug = "Ritalin";
			  	  	case 4:		drug = "Heroina";
			    	case 5:		drug = "Marihuana";
   				}
				format(string, sizeof(string), "* %s compró a %s %d gramos de %s por %d$", PlayerName(playerid), PlayerName(GetPVarInt(playerid, "BuyNarco")),GetPVarInt(playerid, "NarcoSellAmmo"),drug,GetPVarInt(playerid, "NarcoSellPrice"));
				MessageEx(playerid, GetPVarInt(playerid, "BuyNarco"), COLOR_WHITE, string);

				Bought(playerid, GetPVarInt(playerid, "NarcoSellPrice"));
				Earn(GetPVarInt(playerid, "BuyNarco"), GetPVarInt(playerid, "NarcoSellPrice"));

				switch(GetPVarInt(playerid, "NarcoSellArm")){
				    case 1:	{PlayerInfo[playerid][pSpeed] += GetPVarInt(playerid, "NarcoSellAmmo"); PlayerInfo[GetPVarInt(playerid, "BuyNarco")][pSpeed] -= GetPVarInt(playerid, "NarcoSellAmmo");}
				    case 2:	{PlayerInfo[playerid][pEctasy] += GetPVarInt(playerid, "NarcoSellAmmo"); PlayerInfo[GetPVarInt(playerid, "BuyNarco")][pEctasy] -= GetPVarInt(playerid, "NarcoSellAmmo");}
				    case 3:	{PlayerInfo[playerid][pRitalin] += GetPVarInt(playerid, "NarcoSellAmmo"); PlayerInfo[GetPVarInt(playerid, "BuyNarco")][pRitalin] -= GetPVarInt(playerid, "NarcoSellAmmo");}
			    	case 4:	{PlayerInfo[playerid][pHeroina] += GetPVarInt(playerid, "NarcoSellAmmo"); PlayerInfo[GetPVarInt(playerid, "BuyNarco")][pHeroina] -= GetPVarInt(playerid, "NarcoSellAmmo");}
			    	case 5:	{PlayerInfo[playerid][pMarihuana] += GetPVarInt(playerid, "NarcoSellAmmo"); PlayerInfo[GetPVarInt(playerid, "BuyNarco")][pMarihuana] -= GetPVarInt(playerid, "NarcoSellAmmo");}
				}
				DeletePVar(playerid, "BuyNarco");
				DeletePVar(playerid, "NarcoSellPrice");
				DeletePVar(playerid, "NarcoSellArm");
				DeletePVar(playerid, "NarcoSellAmmo");
				return 1;
	    	}
	    	else{
	    	    DeletePVar(playerid, "BuyNarco");
	    	    DeletePVar(playerid, "NarcoSellPrice");
	    	    DeletePVar(playerid, "NarcoSellArm");
	    	    DeletePVar(playerid, "NarcoSellAmmo");
				return 1;
			}
		}
		case DIALOG_HIT:
		{
	 	    if(response)
 		    {
 	    	    if(strval(inputtext) < 1 || strval(inputtext) > 299) return Message(playerid, COLOR_GRAD2, "ERROR! Skin de 1 a 299");
            	if(CheckMoney(playerid,200))
				{
	                PlayerInfo[playerid][pChar] = strval(inputtext);
    	            SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			    }
	    	} return 1;
		}
		/*case EQUIPO_HITMAN:
		{
	 	    if(response)
 		    {
 		        UsageTeam[playerid] = 5;
 	    	    SafeResetPlayerWeapons(playerid);
   	        	switch(listitem)
	        	{
			        case 0:
			        {
        	            SetHP(playerid, 100);
            	        SetPlayerArmour(playerid, 100);
                	    SafeGivePlayerWeapon(playerid, 4, 1);
						SafeGivePlayerWeapon(playerid, 23, 300);
						SafeGivePlayerWeapon(playerid, 43, 48);
		        	}
			        case 1:
			        {
        	            SetHP(playerid, 100);
            	        SetPlayerArmour(playerid, 100);
                	    SafeGivePlayerWeapon(playerid, 4, 1);
						SafeGivePlayerWeapon(playerid, 34, 300);
						SafeGivePlayerWeapon(playerid, 43, 48);
					}
					case 2:
					{
        	            SetHP(playerid, 100);
            	        SetPlayerArmour(playerid, 100);
                	    SafeGivePlayerWeapon(playerid, 4, 1);
						SafeGivePlayerWeapon(playerid, 24, 300);
						SafeGivePlayerWeapon(playerid, 43, 48);
					}
					case 3:
					{
        	            SetHP(playerid, 100);
            	        SetPlayerArmour(playerid, 100);
            	        SafeResetPlayerWeapons(playerid);
					}
				}
			}
			return 1;
		}*/
		case EQUIPO_TERROR:
		{
		    if(response)
		    {
				UsageTeam[playerid] = 5;
		        switch(listitem)
		        {
					case 0:
					{
					    SetHP(playerid, 100);
					    SetPlayerArmour(playerid, 100);
				    	SafeGivePlayerWeapon(playerid, 30, 500);
					    SafeGivePlayerWeapon(playerid, 4, 1);
					}
					case 1:
					{
					    SetHP(playerid, 100);
					    SetPlayerArmour(playerid, 100);
					    SafeGivePlayerWeapon(playerid, 16, 10);
				    	SafeGivePlayerWeapon(playerid, 24, 50);
					}
					case 2:
					{
					    SetHP(playerid, 100);
    					SetPlayerArmour(playerid, 100);
					}
				}
			}
			return 1;
		}
		case JOBSMENU:
		{
	 		if(response)
			{
			    if(listitem == 0)
				{
				   SetPlayerCheckpoint(playerid, 994.3785,-1296.4718,13.5469, 10.0); //Vendedor
					SendClientMessage(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 1)
				{
				   SetPlayerCheckpoint(playerid, 2205.9700,-1975.2352,13.5469, 5.0); // Basurero
				    SendClientMessage(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 2)
				{
				    SetPlayerCheckpoint(playerid, 1684.6482,-1944.7058,13.5469, 10.0); // Conductor Tren
				    SendClientMessage(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 3)
				{
				    SetPlayerCheckpoint(playerid, 1957.3217,-2183.6399,13.5469, 10.0); // Piloto
				    SendClientMessage(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 4)
				{
				    SetPlayerCheckpoint(playerid, 2275.2427,-1105.6196,37.9766, 10.0); //Ladrón
					SendClientMessage(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 5)
				{
				    SetPlayerCheckpoint(playerid, 2104.5273,-1806.6123,13.5547, 10.0); //Pizzero
					SendClientMessage(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 6)
				{
				    SetPlayerCheckpoint(playerid, 986.9383,-1937.5042,2835.0078, 5.0); //Pescador
					SendClientMessage(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
				if(listitem == 7)
				{
				   SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 10.0); //Camionero
					SendClientMessage(playerid, COLOR_WHITE, "Se marcó en el radar un checkpoint. (Marcado Rojo)");
				}
			}
		}
		case GOOGLE:
		{
		    if(response)
		    {
		        Bought(playerid, 20);
		        Till(12, 20);
	    	    if(strfind(inputtext, "Concesionario", true) != -1)
				{
			    	ClearChatbox(playerid,10);
				    Message(playerid, COLOR_BLUE, "www.mundoauto.com - Todo tipo de vehículos a tu alcanze!");
				    SetPlayerCheckpoint(playerid, 543.4833,-1283.1399,17.2422, 10.0);
				    Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
				    return 1;
				}
				else if(strfind(inputtext, "Ropa", true) != -1)
				{
				    ClearChatbox(playerid,10);
				    Message(playerid, COLOR_RED2, "www.victim.eu - Llévalo con orgullo");
			    	SetPlayerCheckpoint(playerid, 460.6988,-1501.1395,31.0564, 10.0);
			    	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    	return 1;
				}
				else if(strfind(inputtext, "Trabajo", true) != -1)
				{
				    ClearChatbox(playerid,10);
				    Message(playerid, COLOR_GREEN, "Trabajos disponibles en: www.amantedelparo.org");
			    	Message(playerid, COLOR_GRAD2, "- Vendedor moviles");
			    	Message(playerid, COLOR_GRAD2, "- Recogedor de Basura");
			    	Message(playerid, COLOR_GRAD2, "- Conductor de Tren");
			    	Message(playerid, COLOR_GRAD2, "- Piloto");
			    	Message(playerid, COLOR_GRAD2, "- Ladrón");
			    	Message(playerid, COLOR_GRAD2, "- Pizzero");
			    	Message(playerid, COLOR_GRAD2, "- Pescador");
		    		Message(playerid, COLOR_GRAD2, "- Camionero");
		    		return 1;
				}
				else if(strfind(inputtext, "Vendedor", true) != -1)
				{
				    ClearChatbox(playerid,10);
					Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
					SetPlayerCheckpoint(playerid, 994.3785,-1296.4718,13.5469, 10.0);
					return 1;
				}
				else if(strfind(inputtext, "Pizzero", true) != -1)
				{
        	        ClearChatbox(playerid,10);
            	    SetPlayerCheckpoint(playerid, 2104.5273,-1806.6123,13.5547, 10.0);
                	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
                	return 1;
				}
				else if(strfind(inputtext, "Camionero", true) != -1)
				{
        	        ClearChatbox(playerid,10);
            	    SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 10.0);
                	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
                	return 1;
				}
				else if(strfind(inputtext, "Recogedor", true) != -1)
				{
				    ClearChatbox(playerid,10);
					SetPlayerCheckpoint(playerid, 2205.9700,-1975.2352,13.5469, 5.0);
					Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
					return 1;
				}
				else if(strfind(inputtext, "Piloto", true) != -1)
				{
				    ClearChatbox(playerid,10);
            	    SetPlayerCheckpoint(playerid, 1957.3217,-2183.6399,13.5469, 10.0);
                	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
                	return 1;
				}
				else if(strfind(inputtext, "Tren", true) != -1)
				{
				    ClearChatbox(playerid,10);
					SetPlayerCheckpoint(playerid, 1684.6482,-1944.7058,13.5469, 10.0);
					Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
					return 1;
				}
				else if(strfind(inputtext, "Ladron", true) != -1)
				{
				    ClearChatbox(playerid,10);
					SetPlayerCheckpoint(playerid, 2275.2427,-1105.6196,37.9766, 10.0);
					Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
					return 1;
				}
				else if(strfind(inputtext, "Renta", true) != -1)
				{
				    ClearChatbox(playerid,10);
				    Message(playerid, COLOR_BLUE, "www.mecanico-ls.ls - Reparacion y alquiler de vehículos");
			    	SetPlayerCheckpoint(playerid, 1597.0762,-2194.6619,13.3750, 10.0);
			    	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    	return 1;
				}
				else if(strfind(inputtext, "Banco", true) != -1)
				{
			    	ClearChatbox(playerid,10);
				    Message(playerid, COLOR_GREEN, "www.dowjones.org - Banco central de Los Santos");
				    SetPlayerCheckpoint(playerid, 300.0895,-1611.6455,33.1248, 10.0);
				    Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
				    return 1;
				}
				else if(strfind(inputtext, "Ammunation", true) != -1)
				{
			    	ClearChatbox(playerid,10);
			    	Message(playerid, COLOR_RED, "www.armas-legales.com - Ammunation Roosevelt");
			    	SetPlayerCheckpoint(playerid, 1368.4303,-1280.0046,13.5469, 10.0);
			    	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    	return 1;
				}
	    	}
		}
		case BRILLO_GAFAS:
		{
		    if(response)
	        {
                if(!strcmp(inputtext, "Luminoso", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000025);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                        return 1;
                }
                if(!strcmp(inputtext, "Normal", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000040);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                        return 1;
                }
                if(!strcmp(inputtext, "Oscuro", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000055);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                        return 1;
                }
                if(!strcmp(inputtext, "MuyOscuro", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000065);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                        return 1;
                }
         	}
		}
		case PETITION_DIALOG:
		{
	    	if(response)
		    {
		        format(string, sizeof(string), "* %s acepta una petición.", PlayerName(playerid));
      			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
      			switch(GetPVarInt(playerid, "Petition_ID"))
      			{
	        		case 1:
	        		{
						format(string, sizeof(string), "* %s aceptó tu entrevista", PlayerName(playerid));
						Message(GetPVarInt(playerid, "LiveOffer"), 0x00FFFFFF, string);
						format(string, sizeof(string), "* Aceptaste la entrevista de %s", PlayerName(GetPVarInt(playerid, "LiveOffer")));
						Message(playerid, 0x00FFFFFF, string);
						Message(playerid, COLOR_YELLOW, "* Utiliza (/c) para hablar fuera de antena. Y (/centrevista) para salir de la entrevista.");
						Message(GetPVarInt(playerid, "LiveOffer"), COLOR_YELLOW, "* Utiliza (/c) para hablar fuera de antena. Y (/centrevista) para cancelar la entrevista.");
						SetPVarInt(playerid, "TalkingLive", 1);
						SetPVarInt(GetPVarInt(playerid, "TalkingLive"), "TalkingLive", 1);
						DeletePVar(playerid, "LiveOffer");
						DeletePVar(playerid, "Facturing");
						DeletePVar(playerid, "Petition_ID");
						return 1;
	        		}
	        		case 2:
	        		{
	    	        	if(CheckMoney(playerid, GetPVarInt(playerid, "NarcoSellPrice")))
	        	    	{
		        		    new gunname[12];
		            		GetWeaponName(GetPVarInt(playerid, "NarcoSellArm"), gunname, sizeof(gunname));
							format(string, sizeof(string), "* %s compra a %s una %s con %d balas por %d",PlayerName(playerid), PlayerName(GetPVarInt(playerid, "BuyNarco")),gunname,GetPVarInt(playerid, "NarcoSellAmmo"),GetPVarInt(playerid, "NarcoSellPrice"));
							MessageEx(playerid, GetPVarInt(playerid, "BuyNarco"), COLOR_WHITE, string);
							SafeGivePlayerWeapon(playerid,GetPVarInt(playerid, "NarcoSellArm"),GetPVarInt(playerid, "NarcoSellAmmo"));
							SafeGivePlayerWeapon(GetPVarInt(playerid, "BuyNarco"),GetPVarInt(playerid, "NarcoSellArm"),-GetPVarInt(playerid, "NarcoSellAmmo"));
							Bought(playerid, GetPVarInt(playerid, "NarcoSellPrice"));
							Earn(GetPVarInt(playerid, "BuyNarco"), GetPVarInt(playerid, "NarcoSellPrice"));
							DeletePVar(playerid, "Facturing");
							DeletePVar(playerid, "Petition_ID");
							DeletePVar(playerid, "BuyNarco");
							DeletePVar(playerid, "NarcoSellPrice");
							DeletePVar(playerid, "NarcoSellArm");
							DeletePVar(playerid, "NarcoSellAmmo");
							return 1;
						}
						else
						{
							Message(playerid, COLOR_GRAD2, "No tienes dinero suficiente!");
							Message(GetPVarInt(playerid, "BuyNarco"), COLOR_GRAD2, "El comprador no tiene suficiente dinero!");
							DeletePVar(playerid, "BuyNarco");
							DeletePVar(playerid, "NarcoSellPrice");
							DeletePVar(playerid, "NarcoSellArm");
							DeletePVar(playerid, "NarcoSellAmmo");
							DeletePVar(playerid, "Facturing");
							DeletePVar(playerid, "Petition_ID");
							return 1;
						}
	        		}
	        		case 3:
	        		{
		            	if(!IsPlayerConnected(GetPVarInt(playerid, "OwnableCarOffer"))) return Message(playerid, COLOR_GRAD2, "El jugador se ha desconectado.");
						CompraVentaVehiculo(playerid);
						DeletePVar(playerid, "Petition_ID");
						return 1;
	        		}
	        		case 4:
	        		{
		        	    new casa = PlayerInfo[GetPVarInt(playerid, "OwnableHousePlayer")][pPhousekey];
						PlayerInfo[playerid][pPhousekey] = casa;
						format(HouseInfo[casa][hOwner], 24, PlayerName(playerid));
						HouseInfo[casa][hTime] = gettime() + 2592000;
						PlayerInfo[GetPVarInt(playerid, "OwnableHousePlayer")][pPhousekey] = 9999;
						Message(playerid, COLOR_WHITE, "¡Felicidades! Tienes una nueva casa!");
				 		Message(GetPVarInt(playerid, "OwnableHousePlayer"), COLOR_WHITE, "Has vendido tu casa!");
						Earn(GetPVarInt(playerid, "OwnableHousePlayer"), GetPVarInt(playerid, "OwnableHousePrice"));
						Bought(playerid, GetPVarInt(playerid, "OwnableHousePrice"));
						DeletePVar(playerid, "OwnableHousePlayer");
						DeletePVar(playerid, "OwnableHousePrice");
						DeletePVar(playerid, "Petition_ID");
						return 1;
					}
				}
	    	}
		    else
		    {
	    	    format(string, sizeof(string), "* %s rechaza una petición.", PlayerName(playerid));
      			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
      			switch(GetPVarInt(playerid, "Petition_ID"))
      			{
      			    case 1:
      			    {
						format(string, sizeof(string), "* %s rechazó tu entrevista. Utiliza (/centrevista) para terminar la entrevista.", PlayerName(playerid));
						Message(GetPVarInt(playerid, "LiveOffer"), 0x00FFFFFF, string);
						format(string, sizeof(string), "* Rechazaste la entrevista de %s", PlayerName(GetPVarInt(playerid, "LiveOffer")));
						Message(playerid, 0x00FFFFFF, string);
						DeletePVar(playerid, "LiveOffer");
						DeletePVar(playerid, "Facturing");
						DeletePVar(playerid, "Petition_ID");
						return 1;
	        		}
	        		case 2:
	        		{
						format(string, sizeof(string), "* %s rechazó comprarte el arma.",PlayerName(playerid));
						Message(GetPVarInt(playerid, "BuyNarco"), COLOR_WHITE, string);
						DeletePVar(playerid, "BuyNarco");
						DeletePVar(playerid, "NarcoSellPrice");
						DeletePVar(playerid, "NarcoSellArm");
						DeletePVar(playerid, "NarcoSellAmmo");
						DeletePVar(playerid, "Facturing");
						DeletePVar(playerid, "Petition_ID");
						return 1;
	        		}
	        		case 3:
	        		{
						format(string, sizeof(string), "* %s rechazó comprarte el vehículo.",PlayerName(playerid));
						Message(GetPVarInt(playerid, "OwnableCarOffer"), COLOR_WHITE, string);
						DeletePVar(playerid, "Petition_ID");
						DeletePVar(playerid, "Facturing");
						DeletePVar(playerid, "OwnableCarOffer");
						DeletePVar(playerid, "OwnableCarID");
						DeletePVar(playerid, "OwnableCarPrice");
						return 1;
	        		}
	        		case 4:
	        		{
		        	    format(string, sizeof(string), "* %s rechazó comprarte la casa.", PlayerName(playerid));
		        	    Message(GetPVarInt(playerid, "OwnableHousePlayer"), COLOR_WHITE, string);
		        	    DeletePVar(playerid, "Petition_ID");
		        	    DeletePVar(playerid, "Facturing");
		        	    DeletePVar(playerid, "OwnableHousePlayer");
		        	    DeletePVar(playerid, "OwnableHousePrice");
	        	    	return 1;
     	    		}
    			}
	    	}
		}
		case DIALOG_SO:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
	                    format(string, sizeof(string), "{DC092F}M:RP{2471A3}: %s [%d] {FFFFFF}ha solicitado a un Ayudante.", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 1);
	                    SetPVarInt(playerid, "PlayerSol", 1);
	                    Message(playerid, -1, "{DC092F}M:RP{2471A3}: En breve un Ayudante le dará soporte");
	                    return 1;
					}
					case 1:
					{
	                    format(string, sizeof(string), "{DC092F}M:RP{2471A3}: %s [%d] {FFFFFF}ha solicitado a un Moderador.", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 2);
	                    SetPVarInt(playerid, "PlayerSol", 1);
	                    Message(playerid, -1, "{DC092F}M:RP{2471A3}: En breve un moderador le dará soporte");
	                    return 1;
					}
					case 2:
					{
	                    format(string, sizeof(string), "{DC092F}M:RP{2471A3}: %s [%d] {FFFFFF}ha solicitado a un Administrador.", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 4);
	                    SetPVarInt(playerid, "PlayerSol", 1);
	                    Message(playerid, -1, "{DC092F}M:RP{2471A3}: En breve un Administrador le dará soporte");
	                    return 1;
					}
					case 3:
					{
	                    format(string, sizeof(string), "{DC092F}M:RP{2471A3}: %s [%d] {FFFFFF}ha solicitado a un Técnico [2012].", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 2012);
	                    SetPVarInt(playerid, "PlayerSol", 1);
	                    Message(playerid, -1, "{DC092F}M:RP{2471A3}: En breve un Técnico le brindará ayuda en lo que necesite.");
	                    return 1;
					}
				}
			}
		}
		case DLOGIN:
		{
	        if (response)
    	    {
        		if(IsNull(inputtext))
            	{
	                ShowLoginDialog(playerid,DLOGIN);
    	            return 1;
				}
				new string2[128], PlayerPass[32], playername2[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playername2, sizeof(playername2));
				format(string2, sizeof(string2), "users/%s.ini", playername2);
				INI_ParseFile(string2, "GetPlayerPass", .bExtra = true,  .extra = playerid);
				GetPVarString(playerid, "pPassword", PlayerPass, 32);
				if(!strcmp(PlayerPass, inputtext))
				{
				    format(string2, sizeof(string2), "users/%s.ini", playername2);
  		    		INI_ParseFile(string2, "LoadUser", false, true, playerid, true, false );
    		    	OnPlayerLoginGM(playerid);
   	    		}
	            else
				{
					ClearChatbox(playerid, 10);
  					ShowLoginDialog(playerid,DLOGIN);
					Message(playerid, COLOR_WHITE, "{2471A3}Contraseña {DC092F}INCORRECTA");
					SetPVarInt(playerid, "gPlayerLogTries", GetPVarInt(playerid, "gPlayerLogTries")+1);
					if(GetPVarInt(playerid, "gPlayerLogTries") == 4) { KickTimer(playerid); }
				}
	        }
    	    else
			{
            	KickTimer(playerid);
        	}
	        return 1;
    	}
    	case DREGISTER:
    	{
	        if (response)
    	    {
        	    if(strlen(inputtext) > 20)
            	{
	                Message(playerid, COLOR_GRAD2, "¡Contraseña con un máximo de 20 carácteres!");
    	            ShowRegisterDialog(playerid,DREGISTER);
        	        return 1;
            	}
	            if(IsNull(inputtext))
    	        {
        	        ShowRegisterDialog(playerid,DREGISTER);
            	    return 1;
            	}
 				OnPlayerRegister(playerid,inputtext);
				ShowLoginDialog(playerid,DLOGIN);
				return 1;
        	}
	        else
    	    {
        	    KickTimer(playerid);
        	}
			return 1;
    	}
    	case DIALOG_REG_MSN:
    	{
	        if(response)
    	    {
        	    new str[2] = "@";
            	if(strfind(inputtext, str, true) != -1 && strfind(inputtext, "=", true) == -1)
				{
					format(PlayerInfo[playerid][pMSN], 32, inputtext);
					format(string,sizeof(string),"¿ Confirmas tu e-mail %s ?",PlayerInfo[playerid][pMSN]);
					ShowPlayerDialog(playerid, DIALOG_REG_MSNC, DIALOG_STYLE_MSGBOX, "Información", string, "Confirmar", "Cancelar");
					return 1;
				} else { ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Formato Inválido","Has insertado un formato inválido \n Ej: tuemail@hotmail.com","Registrar","Cancelar"); return 1; }
    	    } else { ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Rellena tus datos","Para poder jugar debes registrar tu e-mail","Registrar","Cancelar"); return 1; }
  }
  //Tuto.
		case DIALOG_REG_MSNC:
		{
		    if(response)
		    {
		        ShowPlayerDialog(playerid,DIALOG_REG_TUT,DIALOG_STYLE_MSGBOX,"{00DD00}Fin del registro",   \
				"{FFFFFF}Se bienvenido a Miami Roleplay\n\n\
				Da inicio a tu nueva vida y deja fluir tu imaginación.\n \
				Se te ha ingresado 5000$ en tu cuenta bancaria y se te ha dado 3000$ en mano","Ok","");
				return 1;
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Rellena tus datos","Para poder jugar debes registrar tu e-mail","Registrar","Cancelar");
				return 1;
			}
		}
		case DIALOG_REG_TUT:
		{
		    if(response)
		    {
		        ClearChatbox(playerid, 10);
	    	    Message(playerid, COLOR_WHITE, "Fin del registro.");
                SetPVarInt(playerid, "TutStep", 1);
				SetPVarInt(playerid, "TutTime", 1);
	        	Tutorial_Inside(playerid);
	        	return 1;
			}
		}
		case EQUIPO_PIZZA:
		{
		    if(response)
		    {
	    	    SafeResetPlayerWeapons(playerid);
	        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        	switch (listitem)
	        	{
	            	case 0:
	            	{
         				Skin(playerid, 155);
						format(string, sizeof(string), "* %s se viste con su ropa de pizzero.", PlayerName(playerid));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 1:
					{
						Skin(playerid, PlayerInfo[playerid][pChar]);
						format(string, sizeof(string), "* %s se viste con su ropa normal.", PlayerName(playerid));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
				}
			}
			return 1;
		}
		case EQUIPO_NG:{
		    if(response){
		        SafeResetPlayerWeapons(playerid);
	    	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    	    UsageTeam[playerid] = 5;
	        	switch (listitem){
	            	case 0:{
				                SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 31, 400);
								SafeGivePlayerWeapon(playerid, 46, 1);
								Skin(playerid, 179);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de entrenamiento.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
	            	case 1:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 50);
								SafeGivePlayerWeapon(playerid, 31, 350);
								SafeGivePlayerWeapon(playerid, 46, 1);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de Soldado.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
		            case 2:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 50);
								SafeGivePlayerWeapon(playerid, 34, 30);
								SafeGivePlayerWeapon(playerid, 46, 1);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se equipa con armas de Francotirador.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
	        	    case 3:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 50);
								SafeGivePlayerWeapon(playerid, 29, 500);
								SafeGivePlayerWeapon(playerid, 46, 1);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste y equipa con US Army Liviana.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
	            	case 4:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 50);
								SafeGivePlayerWeapon(playerid, 29, 500);
								SafeGivePlayerWeapon(playerid, 27, 100);
								SafeGivePlayerWeapon(playerid, 31, 500);
								SafeGivePlayerWeapon(playerid, 16, 8);
								SafeGivePlayerWeapon(playerid, 46, 1);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste y equipa con US Army Pesada.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
		            case 5:{
								Skin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con su ropa normal.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
	        	    case 6:{
				                SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s coje un chaleco antibalas.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
				}
			}
			return 1;
		}
		case EQUIPO_DIALOG:
		{
		    if(response)
		    {
	    	    SafeResetPlayerWeapons(playerid);
	        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        	UsageTeam[playerid] = 5;
	        	switch (listitem)
	        	{
	        	    case 0:
					{
				                if(GetPVarType(playerid, "OnDuty") == 0) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 300);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								if(PlayerInfo[playerid][pSex] == 2) Skin(playerid, 211);
								else Skin(playerid, 71);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de Cadete.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 1:
					{
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(GetPVarType(playerid, "OnDuty") == 0) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 50);
								SafeGivePlayerWeapon(playerid, 29, 500);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								Skin(playerid, 280);
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) { Skin(playerid, 280); }
								if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) { Skin(playerid, 282); }
								format(string, sizeof(string), "* %s se viste con uniforme de Agente.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 2:
					{
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(GetPVarType(playerid, "OnDuty") != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 50);
								SafeGivePlayerWeapon(playerid, 29, 500);
								Skin(playerid, 284);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de Motorista.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 3:{
				                if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No puedes utilizar esta opción!");
				                if(GetPVarType(playerid, "OnDuty") != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
				                SafeGivePlayerWeapon(playerid, 43, 100);
				                SafeGivePlayerWeapon(playerid, 24, 50);
								if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 286); }
								if(PlayerInfo[playerid][pSex] == 2) { Skin(playerid, 12); }
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se pone su uniforme de Investigador.", PlayerName(playerid));
								ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
					}
					case 4:
					{
				                if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(GetPVarType(playerid, "OnDuty") != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 17, 20);
								SafeGivePlayerWeapon(playerid, 29, 500);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								SafeGivePlayerWeapon(playerid, 27, 150);
								SafeGivePlayerWeapon(playerid, 34, 30);
								SafeGivePlayerWeapon(playerid, 31, 500);
								SetPlayerArmour(playerid, 200);
								SetHP(playerid, 100);
								Skin(playerid, 285);
								format(string, sizeof(string), "* %s se viste con equipo de Antidisturbio.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
								SetPlayerAttachedObject( playerid, 0, 18637, 5, -0.027496, -0.114117, -0.139993, 69.771209, 0.000000, 75.639694, 1.000000, 1.000000, 1.000000 );
								Att_Obj_Slot_0[playerid] = "Escudo Táctico";
								SetPlayerAttachedObject( playerid, 3, 368, 2, -0.012214, 0.055286, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
								Att_Obj_Slot_3[playerid] = "Vision Nocturna";
								SetPlayerAttachedObject( playerid, 4, 1672, 7, 0.000280, 0.024868, -0.122518, 103.762588, 274.482788, 268.962951, 1.000000, 1.000000, 1.000000 );
								Att_Obj_Slot_4[playerid] = "Granada gas";
					}
					case 5:
					{
				                if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(GetPVarType(playerid, "OnDuty") != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
				                SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 50);
								SafeGivePlayerWeapon(playerid, 29, 500);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								Skin(playerid, 265);
								format(string, sizeof(string), "* %s se viste con uniforme de Inspector.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 6:
					{
				                if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(GetPVarType(playerid, "OnDuty") != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 50);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								SafeGivePlayerWeapon(playerid, 43, 200);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								Skin(playerid, 217);
								format(string, sizeof(string), "* %s se viste con uniforme de Policía Científica.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 7:
					{
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 50);
								SafeGivePlayerWeapon(playerid, 29, 500);
								SetHP(playerid, 100);
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) { Skin(playerid, 283); }
								if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) { Skin(playerid, 288); }
								format(string, sizeof(string), "* %s se viste con el traje de Comisario.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 8:
					{
				                if(GetPVarType(playerid, "OnDuty") != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
								SetPlayerArmour(playerid, 100);
								SetHP(playerid, 100);
								format(string, sizeof(string), "* %s se coloca el chaleco antibalas.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 9:
					{
				                if(GetPVarType(playerid, "OnDuty") != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								format(string, sizeof(string), "* %s agarra su pistola & porra.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 10:
					{
								Skin(playerid, PlayerInfo[playerid][pChar]);
								SafeGivePlayerWeapon(playerid, 24, 175);
								format(string, sizeof(string), "* %s se viste con ropa normal.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
				}
			}
			return 1;
		}
		case EQUIPO_DIALOG4:
		{
		    if(response)
		    {
	    	    switch (listitem)
	        	{
	            	case 0:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 70);
								format(string, sizeof(string), "* %s se pone su bata blanca y se desinfecta sus manos.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 1:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 274);
								format(string, sizeof(string), "* %s se viste y guarda su radio.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 2:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 275);
								format(string, sizeof(string), "* %s se viste y guarda su radio.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 3:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 276);
								format(string, sizeof(string), "* %s se viste y guarda su radio.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 4:
					{
								if(GetPVarType(playerid, "OnDuty") == 1) {	SendClientMessage(playerid, COLOR_GRAD2, "Estás en labor! Termina tu turno!"); return 1;    }
								SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con ropa normal", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
				}
			}
			return 1;
		}
		case EQUIPO_DIALOG5:
		{
		    if(response)
		    {
	    	    switch (listitem)
	        	{
	            	case 0:
					{
								SetPlayerSkin(playerid, 253);
								format(string, sizeof(string), "* %s se pone su traje de chófer.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 1:
					{
								SetPlayerSkin(playerid, 255);
								format(string, sizeof(string), "* %s se pone su traje de chófer.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 2:
					{
								SetPlayerSkin(playerid, 261);
								format(string, sizeof(string), "* %s se pone su traje de chófer.", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					case 3:
					{
								SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con ropa normal", PlayerName(playerid));
								ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
				}
			}
			return 1;
		}
		case EQUIPO_MECANICO:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
		                Skin(playerid, 180);
		                SafeGivePlayerWeapon(playerid, 41, 1000);
		                SetPVarInt(playerid, "PickLock", 1);
	    	            format(string, sizeof(string), "* %s se viste con uniforme de ayudante.", PlayerName(playerid));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	            	}
		            case 1:
		            {
		                Skin(playerid, 50);
	    	            SafeGivePlayerWeapon(playerid, 41, 1000);
	    	            SetPVarInt(playerid, "PickLock", 1);
	        	        format(string, sizeof(string), "* %s se viste con uniforme de mecanico.", PlayerName(playerid));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	            	}
		            case 2:
		            {
	    	            Skin(playerid, 268);
	        	        SafeGivePlayerWeapon(playerid, 41, 1000);
	        	        SetPVarInt(playerid, "PickLock", 1);
	            	    format(string, sizeof(string), "* %s se viste con uniforme de ingeniero.", PlayerName(playerid));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	            	}
	    	        case 3:
		            {
		                Skin(playerid, 185);
	        	        format(string, sizeof(string), "* %s se viste con su uniforme de director.", PlayerName(playerid));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	            	}
		            case 4:
		            {
	    	            SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	        	        format(string, sizeof(string), "* %s se viste con su ropa normal.", PlayerName(playerid));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
						DeletePVar(playerid, "PickLock");
	            	}
	     		}
		    }
		    return 1;
		}
		case EQUIPO_GOBIERNO:
		{
		    if(response)
		    {
		        UsageTeam[playerid] = 5;
				switch(listitem)
				{
				    case 0:
			    	{
						Skin(playerid, 164);
						SetHP(playerid,100);
						SetPlayerArmour(playerid, 100);
						SafeGivePlayerWeapon(playerid, 41, 500);
						SafeGivePlayerWeapon(playerid, 24, 20);
						SafeGivePlayerWeapon(playerid, 34, 10);
						SafeGivePlayerWeapon(playerid, 31, 200);
						format(string, sizeof(string), "* %s se viste con su uniforme de guardaespaldas.", PlayerName(playerid));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			    	}
				    case 1:
				    {
				        SafeResetPlayerWeapons(playerid);
	        	        SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	            	    format(string, sizeof(string), "* %s se viste su ropa normal.", PlayerName(playerid));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			    	}
		        } return 1;
			}
		}
		case EQUIPO_JOURNALIST:
		{
		    if(response)
		    {
      			SetHP(playerid, 100);
           		SafeGivePlayerWeapon(playerid, 43, 46);
              	format(string, sizeof(string), "* %s toma una cámara fotográfica.", PlayerName(playerid));
				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			}
			return 1;
		}
		case D247_BUY:
		{
			if(response)
			{
			    switch(listitem)
		    	{
	         		case 0:
			        {
			            if(CheckMoney(playerid,5))
			            {
				            ShowPlayerDialog(playerid, LOTTO_BUY, DIALOG_STYLE_INPUT, "Lotería Nacional","Inserta un número entre 1 y 50. Mucha Suerte!","Comprar","Cancelar");
			    	        return 1;
						}
			        }
			         case 1:
			        {
		    	        if(CheckMoney(playerid,50))
		        	    {
	                        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
				            SafeGivePlayerWeapon(playerid, 41, 500);
				            Message(playerid, COLOR_WHITE, "Has comprado un Spray.");
				            Bought(playerid, 50);
				            if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 40);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 40);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 40);
			    	        return 1;
						}
			        }
		         	case 2:
			        {
		    	        if(CheckMoney(playerid,25))
		        	    {
			        	    ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            	PlayerInfo[playerid][pCigarettes] = 20;
			            	Message(playerid, COLOR_WHITE, "Has una cajetilla con 20 cigarros, utilza \"/cfumar\"");
			            	Bought(playerid, 25);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 15);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 15);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 15);
			            	return 1;
						}
			        }
		         	case 3:
			        {
						if(CheckMoney(playerid,10))
		    	        {
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    PlayerInfo[playerid][pLighter] = 30;
			            	SendClientMessage(playerid, COLOR_WHITE, "Compraste un encendedor.");
			            	Bought(playerid, 10);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 10);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 10);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 10);
			            	return 1;
						}
			        }
			        case 4:
			        {
						if(CheckMoney(playerid,100))
		        	    {
			        	    ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            	PlayerInfo[playerid][pGafas] = 1;
			            	SendClientMessage(playerid, COLOR_WHITE, "Compraste unas gafas, puedes utilizar: /gafas & /brillo");
			            	Bought(playerid, 100);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 80);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 80);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 80);
			            	return 1;
						}
		        	}
			        case 5:
			        {
						if(CheckMoney(playerid,150))
		    	        {
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    PlayerInfo[playerid][pMaleta] = 1;
			            	Message(playerid, COLOR_WHITE, "Compraste una maleta, puedes utilizar /maleta");
			            	Bought(playerid, 150);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 125);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 125);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 125);
			            	return 1;
						}
		        	}
			        case 6:
			        {
						if(CheckMoney(playerid,75))
		    	        {
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    PlayerInfo[playerid][pMochila] = 1;
			            	Message(playerid, COLOR_WHITE, "Compraste una mochila, utiliza /mochila");
			            	Bought(playerid, 75);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 55);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 55);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 55);
			            	return 1;
						}
		        	}
			        case 7:
			        {
						if(CheckMoney(playerid,100))
		    	        {
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    PlayerInfo[playerid][pCasco] = 1;
			            	Message(playerid, COLOR_WHITE, "Compraste un casco, utiliza /casco");
		            		Bought(playerid, 100);
		            		if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 80);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 80);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 80);
			            	return 1;
						}
			        }
			        case 8:
			        {
						if(CheckMoney(playerid,50))
		        	    {
			        	    ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            	SetPVarInt(playerid, "Skate", 1);
			            	Message(playerid, COLOR_WHITE, "Compraste unos patines, utiliza /patines");
			            	Bought(playerid, 50);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 50);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 50);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 50);
			            	return 1;
						}
					}
				}
			}
		}
		case LOTTO_BUY:
		{
			if(response)
			{
			    if(strval(inputtext) > 0 && strval(inputtext) < 51)
		    	{
					PlayerInfo[playerid][pLottoNr] = strval(inputtext);
					Message(playerid, COLOR_WHITE, "Lotería comprada!");
					Bought(playerid, 5);
					if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 5);
    				if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 5);
       				if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 5);
       				return 1;
				}
			}
		}
		case CAMEL_MENU:
		{
		    if(response)
    	 	{
     		    switch(listitem)
     	    	{
	     	        case 0:
    	 	        {
						if(GetPVarInt(playerid, "Delivery") < 1) return Message(playerid, COLOR_GRAD2, "No tienes ningún paquete para entregar.");
						new rec = GetPVarInt(playerid, "Delivery")*100;
						PlayerInfo[playerid][pMats] += rec;
						DeletePVar(playerid, "Delivery");
						format(string, sizeof(string), "* Entregaste el paquee con éxito, recibes a cambio %d materiales, ahora tienes %d", rec, PlayerInfo[playerid][pMats]);
						Message(playerid, COLOR_WHITE, string);
     	        	}
     		        case 1:
	     	        {
						if(GetPVarInt(playerid, "TelfRob") < 1) return Message(playerid, COLOR_GRAD2, "No tienes ningún teléfono para entregar.");
						new tefran = random(100);
						new robcash = tefran*GetPVarInt(playerid, "TelfRob");
						format(string, sizeof(string), "* Entregaste con éxito %d teléfono(s) robados, te dan a cambio %d$", GetPVarInt(playerid, "TelfRob"), robcash);
						Message(playerid, COLOR_WHITE, string);
						Earn(playerid, robcash);
						DeletePVar(playerid, "TelfRob");
     	        	}
     	        	case 2:
     	        	{
     	        	    if(CheckMoney(playerid,1000))
     	        	    {
     	        	        if(PlayerInfo[playerid][pLevel] < 5) return Message(playerid, COLOR_GRAD2, "Necesitas ser minimo nivel 5 para adquirir esto.");
     	        	        if(PlayerInfo[playerid][pDNIFalse] > 0) return Message(playerid, COLOR_GRAD2, "Ya posees un DNI Falso.");
     	        	    	ShowPlayerDialog(playerid,DNI_MENU,DIALOG_STYLE_INPUT,"Traficante - DNI Falso","Ingresa el nombre que quieres usar para el DNI Falso.","Aceptar","Salir");
     	        	    }
     	        	}
				} return 1;
			}
		}
		case DNI_MENU:
		{
		    if(response)
		    {
		        if(strlen(inputtext) < 1 || strlen(inputtext) > 32 || strfind(inputtext, "_", true) != -1)
		        {
		            ShowPlayerDialog(playerid,DNI_MENU,DIALOG_STYLE_INPUT,"Traficante - DNI Falso", "Ingresa el nombre que quieres usar, Ejemplo: Jonathan Torres", "Aceptar", "Cancelar");
		            return 1;
				}
          		else{
          		    if(StringOther(playerid, inputtext) == 1)
          		    {
	          		    SetPVarString(playerid, "DNIName", inputtext);
    	      			format(string, sizeof(string), "¿Estás seguro que quieres usar el nombre de\n\t%s en tu DNI falso?", inputtext);
						ShowPlayerDialog(playerid,DNI_CONFIRM,DIALOG_STYLE_MSGBOX,"Traficante - DNI Falso", string, "Aceptar", "Cancelar");
						return 1;
					} else Message(playerid, COLOR_GRAD2, "Evita poner caracteres maliciosos.");
				}
			}
  		}
  		case DNI_CONFIRM:
  		{
  		    if(response)
  		    {
  		        new Name_DNI[24];
  		        GetPVarString(playerid, "DNIName", Name_DNI, 24);
				format(PlayerInfo[playerid][pDNIName], 24, Name_DNI);
				new dni = 100000 + random(899999);  PlayerInfo[playerid][pDNIFalse] = dni;
				format(string, sizeof(string), "* Has obtenido una identificación falsa, con el nombre de {41FF2F}%s.", PlayerInfo[playerid][pDNIName]);
				Message(playerid, COLOR_WHITE, string);
				DeletePVar(playerid, "DNIName");
				Bought(playerid, 1000);
				return 1;
  		    }
  		    else {
  		        DeletePVar(playerid, "DNIName");
  		        return 1;
        	}
  		}
		case CREATE_WEAPON:
		{
		    if(response)
    	 	{
     		    switch(listitem)
     	    	{
     	        	case 0:
     	        	{
	     	            ShowPlayerDialog(playerid,CREATE_WEAPON,DIALOG_STYLE_LIST,"Fábrica de Armas",   \
						"Arma\tMateriales \tMunición/Unidades\n" \
						"Navaja 	\t25 \t1\n" \
						"Bate 		\t40 \t1\n" \
						"Katana		\t80 \t1\n" \
						"C.Molotov 	\t120 \t1\n" \
						"9mm 		\t200 \t140\n" \
						"D.Eagle 	\t300 \t140\n" \
						"S.Pistol 	\t280 \t140\n" \
						"Shotgun	\t450 \t60\n" \
						"SPAS12		\t500 \t60\n" \
						"MP5		\t190 \t150\n" \
						"AK47		\t200 \t150\n" \
						"M4			\t200 \t150\n" \
						"Rifle		\t420 \t45\n" \
						"Sniper		\t500 \t60\n" \
						"Chaleco    \t100 \t1\n"
						,"Aceptar","Salir");
     	        	}
	     	        case 1: MakeWeapon(playerid, 25, 4, 1);
    	 	        case 2: MakeWeapon(playerid, 40, 5, 1);
     		        case 3: MakeWeapon(playerid, 80, 8, 1);
     	    	    case 4: MakeWeapon(playerid, 120, 18, 1);
     	        	case 5: MakeWeapon(playerid, 200, 22, 140);
	     	        case 6: MakeWeapon(playerid, 300, 24, 140);
    	 	        case 7: MakeWeapon(playerid, 280, 23, 140);
     		        case 8: MakeWeapon(playerid, 450, 25, 60);
     	    	    case 9: MakeWeapon(playerid, 500, 27, 60);
     	        	case 10: MakeWeapon(playerid, 190, 29, 150);
	     	        case 11: MakeWeapon(playerid, 200, 30, 150);
    	 	        case 12: MakeWeapon(playerid, 200, 31, 150);
     		        case 13: MakeWeapon(playerid, 420, 33, 45);
     	    	    case 14: MakeWeapon(playerid, 500, 34, 60);
     	    	    case 15: MakeArmour(playerid);
				}
			}
			return 1;
		}
		case AMMUNATION_MENU:
		{
			if(response)
			{
			    switch(listitem)
		    	{
			        case 0:
			        {
			            ShowPlayerDialog(playerid,AMMUNATION_MENU_DEF,DIALOG_STYLE_LIST,"Defensa personal","Puño americano - (25$)\nNavaja - (45$)\nBate - (75$)\nPalo De Billar - (100$)","Comprar","Atras");
			            return 1;
		    	    }
					case 1:
					{
					    ShowPlayerDialog(playerid,AMMUNATION_MENU_PIS,DIALOG_STYLE_LIST,"Pistolas","9mm - (400$)\nDesert Eagle - (600$)","Aceptar","Atras");
					    return 1;
					}
					case 2:
					{
					    ShowPlayerDialog(playerid,AMMUNATION_MENU_ESC,DIALOG_STYLE_LIST,"Escopetas","Escopeta Caza - (800$)","Aceptar","Atras");
					    return 1;
					}
					case 3:
					{
					    ShowPlayerDialog(playerid,AMMUNATION_MENU_PRO,DIALOG_STYLE_LIST,"Protección","Chaleco - (400$)","Aceptar","Atras");
					    return 1;
					}
					case 4:
					{
					    ShowPlayerDialog(playerid,AMMUNATION_MENU_LEC,DIALOG_STYLE_LIST,"Lecciones","Ammunation's Weapon Guide (55$)\nGuía Desert Eagle(45$)\nLección Shotgun I(65$)\nLección Shotgun II(75$)\nSubFusil-MP5 Guía Toma I(82$)\nSubFusil-MP5 Guía Toma II(89$)\nRifles de Asalto AK47-M4 I(70$)\nRifles de Asalto AK47-M4 II(99$)\nRifles de Asalto AK47-M4 III(129$)","Aceptar","Atras");
					    return 1;
					}
				}
			}
		}
		case AMMUNATION_MENU_DEF:
		{
			if(response)
			{
        	    if(PlayerInfo[playerid][pLevel] < 2)
		    	{
	                Message(playerid, COLOR_GRAD2, " Debes ser mayor de nivel 2 para comprar armas.");
    	            return 1;
        	    }
		    	switch(listitem)
		    	{
			        case 0:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 3);
		        	        Bought(playerid, 15);
							SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
							SafeGivePlayerWeapon(playerid, 1, 1);
							return 1;
						}
						else
						{
						    Till(17, 5);
						    Bought(playerid, 25);
							SafeGivePlayerWeapon(playerid, 1,1);
							return 1;
						}
		        	}
			        case 1:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 5);
		        	        Bought(playerid, 25);
							SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
							SafeGivePlayerWeapon(playerid, 4,1);
							return 1;
						}
						else
						{
						    Till(17, 8);
						    Bought(playerid, 40);
							SafeGivePlayerWeapon(playerid, 4,1);
							return 1;
						}
		        	}
			        case 2:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 9);
		        	        Bought(playerid, 45);
							SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
							SafeGivePlayerWeapon(playerid, 5,1);
							return 1;
						}
						else
						{
						    Till(17, 12);
						    Bought(playerid, 60);
							SafeGivePlayerWeapon(playerid, 5,1);
							return 1;
						}
			        }
			        case 3:
					{
					    if(PlayerInfo[playerid][pGunLic] == 1)
					    {
					        Till(17, 18);
					        Bought(playerid, 90);
					        SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
					        SafeGivePlayerWeapon(playerid, 7, 1);
					        return 1;
						}
						else
						{
						    Till(17, 20);
						    Bought(playerid, 100);
						    SafeGivePlayerWeapon(playerid, 7, 1);
						    return 1;
						}
			        }
				}
			}
			else return ShowAmmunation(playerid);
		}
		case AMMUNATION_MENU_PIS:
		{
			if(response)
			{
        	    if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, " Debes ser mayor a nivel 2 para comprar armas.");
		    	switch(listitem)
		    	{
			        case 0:
			        {
						ShowPlayerDialog(playerid, AMMUNATION_9MM, DIALOG_STYLE_INPUT, "Ammunation - 9mm", "Ingrese el número de balas que desea (100max)", "Aceptar", "Cancelar");
						return 1;
		    	    }
		        	case 1:
		        	{
                        ShowPlayerDialog(playerid, AMMUNATION_DEAGLE, DIALOG_STYLE_INPUT, "Ammunation - D.Eagle", "Ingrese el número de balas que desea (100max)", "Aceptar", "Cancelar");
                        return 1;
			        }
				}
			}
			else return ShowAmmunation(playerid);
		}
		case AMMUNATION_9MM:
		{
		    if(response)
		    {
		        new balas = strval(inputtext);
		        if(balas < 1 || balas > 100) return Message(playerid, COLOR_GRAD2, "Mínimo 1 bala - Máximo 100 balas.");
		        new precio = balas*6;
		        if(PlayerInfo[playerid][pGunLic] == 1)
 	        	{
           			Till(17, 65);
     	        	Bought(playerid, (280+precio));
					SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
					SafeGivePlayerWeapon(playerid, 22, balas);
					return 1;
				}
				else
				{
    				Till(17, 85);
				    Bought(playerid, (400+precio));
					SafeGivePlayerWeapon(playerid,22,balas);
					return 1;
				}
			}
			return 1;
		}
		case AMMUNATION_DEAGLE:
		{
		    if(response)
		    {
		        new balas = strval(inputtext);
		        if(balas < 1 || balas > 100) return Message(playerid, COLOR_GRAD2, "Mínimo 1 bala - Máximo 100 balas.");
		        new precio = balas*10;
		        if(PlayerInfo[playerid][pGunLic] == 1)
          		{
            		Till(17, 85);
              		Bought(playerid, (400+precio));
					SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
					SafeGivePlayerWeapon(playerid, 24,balas);
					return 1;
				}
				else
				{
    				Till(17, 120);
			    	Bought(playerid, (600+precio));
					SafeGivePlayerWeapon(playerid, 24,balas);
					return 1;
				}
			}
			return 1;
		}
		case AMMUNATION_MENU_ESC:
		{
			if(response)
			{
        	    if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, " Debes ser mayor a nivel 2 para comprar armas.");
                ShowPlayerDialog(playerid, AMMUNATION_ESC_CAZ, DIALOG_STYLE_INPUT, "Ammunation - Escopeta", "Ingrese el número de balas que desea (100max)", "Aceptar", "Cancelar");
	            return 1;
			}
			else return ShowAmmunation(playerid);
		}
		case AMMUNATION_ESC_CAZ:
		{
			if(response)
			{
			    new balas = strval(inputtext);
		        if(balas < 1 || balas > 100) return Message(playerid, COLOR_GRAD2, "Mínimo 1 bala - Máximo 100 balas.");
		        new precio = balas*10;
	            if(PlayerInfo[playerid][pGunLic] == 1)
    	        {
	            	Till(17, 120);
     	        	Bought(playerid, (600+precio));
					SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%% por tener la licencia de armas.");
					SafeGivePlayerWeapon(playerid, 33,balas);
					return 1;
				}
				else
				{
    				Till(17, 180);
				    Bought(playerid, (800+precio));
					SafeGivePlayerWeapon(playerid, 33,balas);
					return 1;
				}
			}
			return 1;
		}
		case AMMUNATION_MENU_PRO:
		{
			if(response)
			{
  				if(PlayerInfo[playerid][pGunLic] == 1)
     			{
     			    Till(17, 65);
       				Bought(playerid, 300);
					SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%% por tener la licencia de armas.");
					SetPlayerArmour(playerid, 100);
					return 1;
				}
				else
				{
				    Till(17, 85);
	   				Bought(playerid, 400);
					SetPlayerArmour(playerid, 100);
					return 1;
				}
			}
			else return ShowAmmunation(playerid);
		}
		case AMMUNATION_MENU_LEC:
		{
			if(response)
			{
			    switch(listitem)
		    	{
		        	case 0:
		        	{
		        	    Till(17, 55);
			            Bought(playerid, 55);
			            Message(playerid, COLOR_WHITE, "Has comprado Ammunation's Weapon Guide, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 10;
                        return 1;
		    	    }
		        	case 1:
		        	{
		        	    Till(17, 45);
			            Bought(playerid, 45);
			            Message(playerid, COLOR_WHITE, "Has comprado Guía Desert Eagle, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 15;
			            return 1;
		    	    }
		        	case 2:
		        	{
		        	    Till(17, 60);
			            Bought(playerid, 60);
			            Message(playerid, COLOR_WHITE, "Has comprado Lección Shotgun I, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 20;
			            return 1;
		    	    }
		        	case 3:
		        	{
		        	    Till(17, 75);
			            Bought(playerid, 75);
			            Message(playerid, COLOR_WHITE, "Has comprado Lección Shotgun II, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 21;
			            return 1;
		    	    }
		        	case 4:
		        	{
		        	    Till(17, 82);
			            Bought(playerid, 82);
			            Message(playerid, COLOR_WHITE, "Has comprado SubFusil-MP5 Guía Toma I, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 30
			            return 1;
		    	    }
		        	case 5:
		        	{
		        	    Till(17, 89);
			            Bought(playerid, 89);
			            Message(playerid, COLOR_WHITE, "Has comprado SubFusil-MP5 Guía Toma II, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 31;
			            return 1;
		    	    }
		        	case 6:
		        	{
		        	    Till(17, 95);
			            Bought(playerid, 95);
			            Message(playerid, COLOR_WHITE, "Has comprado Rifles de Asalto AK47-M4 I, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 40;
			            return 1;
		    	    }
		        	case 7:
		        	{
		        	    Till(17, 99);
			            Bought(playerid, 99);
			            Message(playerid, COLOR_WHITE, "Has comprado Rifles de Asalto AK47-M4 II, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 41;
			            return 1;
		    	    }
		        	case 8:
		        	{
		        	    Till(17, 129);
			            Bought(playerid, 129);
			            Message(playerid, COLOR_WHITE, "Has comprado Rifles de Asalto AK47-M4 III, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 42;
			            return 1;
		    	    }
     			}
			}
			else return ShowAmmunation(playerid);
		}
		case FSTYLE_DIALOG:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
				        if(CheckMoney(playerid, 1500))
				        {
							Bought(playerid, 1500);
							Till(19, 750);
							PlayerInfo[playerid][pFStyle] = 7;
							SetPlayerStats(playerid);
							Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido Knee Head!");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
							return 1;
						}
					}
					case 1:
	    	        {
				        if(CheckMoney(playerid, 1000))
			    	    {
                    	    Bought(playerid, 1000);
                    	    Till(19, 500);
							PlayerInfo[playerid][pFStyle] = 6;
							SetPlayerStats(playerid);
							Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido Kung Fu!");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
							return 1;
						}
					}
					case 2:
	    	        {
				        if(CheckMoney(playerid, 800))
			    	    {
							Bought(playerid, 800);
							Till(19, 400);
							PlayerInfo[playerid][pFStyle] = 5;
							SetPlayerStats(playerid);
							Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido a Boxear!");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
							return 1;
						}
					}
				}
			}
		}
		case DIALOG_AMMU_MANAGER:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
		                new book[32];
					    if(PlayerInfo[playerid][pLeccion] == 10) {  book = "Ammunation's Weapon Guide"; }
					    if(PlayerInfo[playerid][pLeccion] == 15) {  book = "Guía Desert Eagle"; }
					    if(PlayerInfo[playerid][pLeccion] == 20) {  book = "Lección Shotgun I"; }
					    if(PlayerInfo[playerid][pLeccion] == 21) {  book = "Lección Shotgun II"; }
				    	if(PlayerInfo[playerid][pLeccion] == 30) {  book = "SubFusil-MP5 Guía Toma I"; }
					    if(PlayerInfo[playerid][pLeccion] == 31) {  book = "SubFusil-MP5 Guía Toma II"; }
					    if(PlayerInfo[playerid][pLeccion] == 40) {  book = "Rifles de Asalto AK47-M4 I"; }
					    if(PlayerInfo[playerid][pLeccion] == 41) {  book = "Rifles de Asalto AK47-M4 II"; }
					    if(PlayerInfo[playerid][pLeccion] == 42) {  book = "Rifles de Asalto AK47-M4 III"; }
					    format(string, sizeof(string), "%s", book)
						ShowPlayerDialog(playerid, DIALOG_LECCION,DIALOG_STYLE_LIST,"Lecciones disponibles", string, "Aprender", "Cancelar");
						return 1;
	            	}
		            case 1:
		            {
						new style[16];
					    ClearChatbox(playerid, 10);
						Message(playerid, COLOR_YELLOW, "-- Tus habilidades --");
						format(string, sizeof(string), "DEagle: (%d%%) - Shotgun: (%d%%) - MP5: (%d%%) - AK47: (%d%%) - M4: (%d%%) - Sniper: (%d%%)",
						PlayerInfo[playerid][pDEagle]/10,PlayerInfo[playerid][pShotgun]/10,PlayerInfo[playerid][pMP5]/10,PlayerInfo[playerid][pAK47]/10,PlayerInfo[playerid][pM4]/10,PlayerInfo[playerid][pSniper]/10)
						Message(playerid, COLOR_GRAD2, string);
						if(PlayerInfo[playerid][pFStyle] == 4) { style = "Normal"; 		}
						if(PlayerInfo[playerid][pFStyle] == 5) { style = "Boxing" ;		}
						if(PlayerInfo[playerid][pFStyle] == 6) { style = "Kung Fu" ;	}
						if(PlayerInfo[playerid][pFStyle] == 7) { style = "Kneehead" ;	}
						format(string, sizeof(string), "Estilo de lucha: %s", style)
						Message(playerid, COLOR_GRAD2, string);
					    return 1;
	    	        }
				}
			}
		}
		case DIALOG_LECCION:
		{
		    if(response)
		    {
	    	    if(PlayerInfo[playerid][pLeccion] == 10)
	        	{
	                if(PlayerInfo[playerid][pDEagle] > 189) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
    	            if(PlayerInfo[playerid][pShotgun] > 149) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
        	        if(PlayerInfo[playerid][pMP5] > 174) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
            	    if(PlayerInfo[playerid][pM4] > 174) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
                	if(PlayerInfo[playerid][pAK47] > 174) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	                if(PlayerInfo[playerid][pSniper] > 149) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
		           	PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pDEagle] += 90;
					PlayerInfo[playerid][pMP5] += 75;
					PlayerInfo[playerid][pM4] += 75;
					PlayerInfo[playerid][pAK47] += 75;
					PlayerInfo[playerid][pSniper] += 25;
					PlayerInfo[playerid][pShotgun] += 50;
					SetPlayerStats(playerid);
					return 1;
				}
				else if(PlayerInfo[playerid][pLeccion] == 15)
		        {
		            if(PlayerInfo[playerid][pDEagle] < 190) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	    	        if(PlayerInfo[playerid][pDEagle] > 289) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	        	   	PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pDEagle] += 100;
					SetPlayerStats(playerid);
					return 1;
				}
				else if(PlayerInfo[playerid][pLeccion] == 20)
		        {
	    	        if(PlayerInfo[playerid][pShotgun] < 150) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pShotgun] > 229) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           		PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pShotgun] += 80;
					SetPlayerStats(playerid);
					return 1;
				}
				else if(PlayerInfo[playerid][pLeccion] == 21)
		        {
	    	        if(PlayerInfo[playerid][pShotgun] < 150) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pShotgun] < 230) return Message(playerid, COLOR_GRAD2, "Debes leer la Toma I");
	            	if(PlayerInfo[playerid][pShotgun] > 349) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
		           	PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pShotgun] += 120;
					SetPlayerStats(playerid);
					return 1;
				}
				else if(PlayerInfo[playerid][pLeccion] == 30)
		        {
	    	        if(PlayerInfo[playerid][pMP5] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pMP5] > 274) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           		PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pMP5] += 100;
					SetPlayerStats(playerid);
					return 1;
				}
				else if(PlayerInfo[playerid][pLeccion] == 31)
		        {
	    	        if(PlayerInfo[playerid][pMP5] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pMP5] < 275) return Message(playerid, COLOR_GRAD2, "Debes leer la Toma I")
	            	if(PlayerInfo[playerid][pMP5] > 424) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           		PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pMP5] += 150;
					SetPlayerStats(playerid);
					return 1;
				}
				else if(PlayerInfo[playerid][pLeccion] == 40)
		        {
	    	        if(PlayerInfo[playerid][pAK47] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pM4] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            	if(PlayerInfo[playerid][pM4] > 249) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
		            if(PlayerInfo[playerid][pAK47] > 249) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
		           	PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pM4] += 75;
					PlayerInfo[playerid][pAK47] += 75;
					SetPlayerStats(playerid);
					return 1;
				}
				else if(PlayerInfo[playerid][pLeccion] == 41)
		        {
	    	        if(PlayerInfo[playerid][pAK47] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pM4] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            	if(PlayerInfo[playerid][pM4] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
	            	if(PlayerInfo[playerid][pAK47] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
            		if(PlayerInfo[playerid][pM4] > 339) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	            	if(PlayerInfo[playerid][pAK47] > 339) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           		PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pM4] += 90;
					PlayerInfo[playerid][pAK47] += 90;
					SetPlayerStats(playerid);
					return 1;
				}
				else if(PlayerInfo[playerid][pLeccion] == 42)
		        {
	    	        if(PlayerInfo[playerid][pAK47] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pM4] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            	if(PlayerInfo[playerid][pM4] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
	            	if(PlayerInfo[playerid][pAK47] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
	            	if(PlayerInfo[playerid][pAK47] < 340) return Message(playerid, COLOR_GRAD2, "Debes leer la toma II");
	            	if(PlayerInfo[playerid][pM4] < 340) return Message(playerid, COLOR_GRAD2, "Debes leer la toma II");
	            	if(PlayerInfo[playerid][pM4] > 514) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	            	if(PlayerInfo[playerid][pAK47] > 514) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           		PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pM4] += 175;
					PlayerInfo[playerid][pAK47] += 175;
					SetPlayerStats(playerid);
					return 1;
				}
			}
		}
		case DIALOG_LSPD_ELEVATOR:
		{
		    if(response)
		    {
				SetPlayerPos(playerid, 1526.5972,-1676.0651,5.8906);
				SetPlayerInterior(playerid,0);
				return 1;
			}
			else
			{
				SetPlayerPos(playerid, 1556.1990,-1671.6530,28.3956);
				SetPlayerInterior(playerid,0);
				return 1;
			}
		}
		case DIALOG_SAMUR_ELEVATOR:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0:	{ SetPosEx(playerid, 1144.9569,-1329.5032,13.5840,355.2150, 0, 0); return 1; }
					case 1:	{ SetPosEx(playerid, 1161.5015,-1330.0845,31.4937, 180, 0, 0); return 1; }
 				}
			}
		}
		case DIALOG_TAXI_RADAR:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
		                if(TaxiSlot1 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        GetPlayerPos(TaxiSlot1, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
				        Message(TaxiSlot1, COLOR_ORANGE, string);
			    	    format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot1));
       	 				SendJobMessage(9, TEAM_BLUE_COLOR, string);
       	 				DeletePVar(TaxiSlot1, "TaxiCalled");
			        	TaxiSlot1 = 999; SlotZone1 = "Sin Localizar"; TiempoSlot1 = 0;
			        	return 1;
					}
			 		case 1:
				    {
				        if(TaxiSlot2 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
			    	    Message(TaxiSlot2, COLOR_ORANGE, string);
			        	format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot2));
			        	SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot2, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	DeletePVar(TaxiSlot2, "TaxiCalled");
			        	TaxiSlot2 = 999; SlotZone2 = "Sin Localizar"; TiempoSlot2 = 0;
			        	return 1;
		 			}
		 			case 2:
			    	{
				        if(TaxiSlot3 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
				        Message(TaxiSlot3, COLOR_ORANGE, string);
				        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot3));
			    	    SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot3, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	DeletePVar(TaxiSlot3, "TaxiCalled");
			        	TaxiSlot3 = 999; SlotZone3 = "Sin Localizar"; TiempoSlot3 = 0;
			        	return 1;
		 			}
			 		case 3:
				    {
				        if(TaxiSlot4 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
			    	    Message(TaxiSlot4, COLOR_ORANGE, string);
			        	format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot4));
			        	SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot4, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	DeletePVar(TaxiSlot4, "TaxiCalled");
			        	TaxiSlot4 = 999; SlotZone4 = "Sin Localizar"; TiempoSlot4 = 0;
			        	return 1;
		 			}
		 			case 4:
			    	{
				        if(TaxiSlot5 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
				        Message(TaxiSlot5, COLOR_ORANGE, string);
				        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot5));
			    	    SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot5, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
						DeletePVar(TaxiSlot5, "TaxiCalled");
			        	TaxiSlot5 = 999; SlotZone5 = "Sin Localizar"; TiempoSlot5 = 0;
			        	return 1;
		 			}
		 			case 5:
			    	{
				        if(TaxiSlot6 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
				        Message(TaxiSlot6, COLOR_ORANGE, string);
				        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot6));
			    	    SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot6, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	DeletePVar(TaxiSlot6, "TaxiCalled");
			        	TaxiSlot6 = 999; SlotZone6 = "Sin Localizar"; TiempoSlot6 = 0;
			        	return 1;
		 			}
	                case 6:
				    {
				        if(TaxiSlot7 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
			    	    Message(TaxiSlot7, COLOR_ORANGE, string);
			        	format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot7));
                    	SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot7, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	DeletePVar(TaxiSlot7, "TaxiCalled");
			        	TaxiSlot7 = 999; SlotZone7 = "Sin Localizar"; TiempoSlot7 = 0;
			        	return 1;
		 			}
		 			case 7:
			    	{
				        if(TaxiSlot8 == 0) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
				        Message(TaxiSlot8, COLOR_ORANGE, string);
				        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot8));
			    	    SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot8, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	DeletePVar(TaxiSlot8, "TaxiCalled");
			        	TaxiSlot8 = 999; SlotZone8 = "Sin Localizar"; TiempoSlot8 = 0;
			        	return 1;
		 			}
			 		case 8:
				    {
				        return 1;
		 			}
				}
			}
			else
			{
			    switch(listitem)
		        {
	    	        case 0: { DeletePVar(TaxiSlot1, "TaxiCalled"), TaxiSlot1 = 999; SlotZone1 = "Sin Localizar"; TiempoSlot1 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot1"); return 1; }
	        	    case 1: { DeletePVar(TaxiSlot2, "TaxiCalled"), TaxiSlot2 = 999; SlotZone2 = "Sin Localizar"; TiempoSlot2 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot2"); return 1; }
	            	case 2: { DeletePVar(TaxiSlot3, "TaxiCalled"), TaxiSlot3 = 999; SlotZone3 = "Sin Localizar"; TiempoSlot3 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot3"); return 1; }
		            case 3: { DeletePVar(TaxiSlot4, "TaxiCalled"), TaxiSlot4 = 999; SlotZone4 = "Sin Localizar"; TiempoSlot4 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot4"); return 1; }
		            case 4: { DeletePVar(TaxiSlot5, "TaxiCalled"), TaxiSlot5 = 999; SlotZone5 = "Sin Localizar"; TiempoSlot5 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot5"); return 1; }
	    	        case 5: { DeletePVar(TaxiSlot6, "TaxiCalled"), TaxiSlot6 = 999; SlotZone6 = "Sin Localizar"; TiempoSlot6 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot6"); return 1; }
	        	    case 6: { DeletePVar(TaxiSlot7, "TaxiCalled"), TaxiSlot7 = 999; SlotZone7 = "Sin Localizar"; TiempoSlot7 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot7"); return 1; }
	            	case 7: { DeletePVar(TaxiSlot8, "TaxiCalled"), TaxiSlot8 = 999; SlotZone8 = "Sin Localizar"; TiempoSlot8 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot8"); return 1; }
	            	case 8: { return 1; }
				}
			}
		}
		case BAR_MENU:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
					case 0: { ShowPlayerDialog(playerid, BAR_MENU_TAPAS, DIALOG_STYLE_LIST, "Platos del Día", "Huevos con Chorizo (20$)\nJamón Ibérico (30$)\nSopa de Marisco (25$)\nMacarrones a la Bolognesa (15$)\nEnsalada (10$)", "Pedir", "Atrás"); return 1; }
					case 1: { ShowPlayerDialog(playerid, BAR_MENU_BEBIDAS, DIALOG_STYLE_LIST, "Bebidas y refrescos", "Cerveza (3$)\nVino tinto (5$)\nChampagne (6$)\nCoca-Cola (2$)\nAgua (1$)", "Pedir", "Atrás"); return 1; }
				}
			}
		}
		case BAR_MENU_TAPAS:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0:
		            {
        	     		new Float:Health;
					 	GetPlayerHealth(playerid, Health);
		        	    if(Health < 101)	{	SetHP(playerid, Health+20); 	}
         				format(string, sizeof(string), "* %s come un plato de Huevos con Chorizo", PlayerName(playerid));
		            	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		            	Bought(playerid, 20);
		            	CheckBizz(playerid, 20);
		            	PlayerInfo[playerid][pHambre] -= 10;
		            	SetProgressBarValue(Hambre[playerid], PlayerInfo[playerid][pHambre]);
						UpdateProgressBar(Hambre[playerid], playerid);
		            	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
		            	if(PlayerDrunk[playerid] > 6)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", PlayerName(playerid));
			                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
		            	    new INF = random(2);
		            	    if(INF == 1) PlayerInfo[playerid][pInfeccion] += 1;
						}
						else {
						    new INFR = random(6);
						    if(INFR == 3) PlayerInfo[playerid][pInfeccion] += 1;
		    			}
						return 1;
		            }
		            case 1:
	    	        {
	        	        new Float:Health;
	            	    GetPlayerHealth(playerid, Health);
	                	if(Health < 101)	{	SetHP(playerid, Health+30); 	}
	                	format(string, sizeof(string), "* %s come un plato de Jamón Ibérico", PlayerName(playerid));
	                	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	                	Bought(playerid, 30);
	                	CheckBizz(playerid, 30);
	                	PlayerInfo[playerid][pHambre] -= 10;
		            	SetProgressBarValue(Hambre[playerid], PlayerInfo[playerid][pHambre]);
						UpdateProgressBar(Hambre[playerid], playerid);
	                	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	                	if(PlayerDrunk[playerid] > 6)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", PlayerName(playerid));
			                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
		            	    new INF = random(2);
		            	    if(INF == 1) PlayerInfo[playerid][pInfeccion] += 1;
						}
						else {
						    new INFR = random(6);
						    if(INFR == 3) PlayerInfo[playerid][pInfeccion] += 1;
		    			}
						return 1;
	            	}
		            case 2:
		            {
	    	            new Float:Health;
	        	        GetPlayerHealth(playerid, Health);
	            	    if(Health < 101)	{	SetHP(playerid, Health+25); 	}
	                	format(string, sizeof(string), "* %s come un plato de Sopa de Marisco", PlayerName(playerid));
	                	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
						Bought(playerid, 25);
						CheckBizz(playerid, 25);
						PlayerInfo[playerid][pHambre] -= 10;
		            	SetProgressBarValue(Hambre[playerid], PlayerInfo[playerid][pHambre]);
						UpdateProgressBar(Hambre[playerid], playerid);
	                	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	                	if(PlayerDrunk[playerid] > 6)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", PlayerName(playerid));
			                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
		            	    new INF = random(2);
		            	    if(INF == 1) PlayerInfo[playerid][pInfeccion] += 1;
						}
						else {
						    new INFR = random(6);
						    if(INFR == 3) PlayerInfo[playerid][pInfeccion] += 1;
		    			}
						return 1;
		            }
		            case 3:
	    	        {
	        	        new Float:Health;
	            	    GetPlayerHealth(playerid, Health);
	                	if(Health < 101)	{	SetHP(playerid, Health+15); 	}
		                format(string, sizeof(string), "* %s come un plato de Macarrones a la Bolognesa", PlayerName(playerid));
		                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	    	            Bought(playerid, 15);
	    	            CheckBizz(playerid, 15);
	    	            PlayerInfo[playerid][pHambre] -= 10;
		            	SetProgressBarValue(Hambre[playerid], PlayerInfo[playerid][pHambre]);
						UpdateProgressBar(Hambre[playerid], playerid);
	        	        ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	        	        if(PlayerDrunk[playerid] > 6)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", PlayerName(playerid));
			                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
		            	    new INF = random(2);
		            	    if(INF == 1) PlayerInfo[playerid][pInfeccion] += 1;
						}
						else {
						    new INFR = random(6);
						    if(INFR == 3) PlayerInfo[playerid][pInfeccion] += 1;
		    			}
						return 1;
		            }
		            case 4:
	    	        {
	        	        new Float:Health;
	            	    GetPlayerHealth(playerid, Health);
	                	if(Health < 101)	{	SetHP(playerid, Health+10); 	}
		                format(string, sizeof(string), "* %s come un plato de Ensalada", PlayerName(playerid));
		                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	    	            Bought(playerid, 10);
	    	            CheckBizz(playerid, 10);
	    	            PlayerInfo[playerid][pHambre] -= 10;
		            	SetProgressBarValue(Hambre[playerid], PlayerInfo[playerid][pHambre]);
						UpdateProgressBar(Hambre[playerid], playerid);
	        	        ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	        	        if(PlayerDrunk[playerid] > 6)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", PlayerName(playerid));
			                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
		            	    new INF = random(2);
		            	    if(INF == 1) PlayerInfo[playerid][pInfeccion] += 1;
						}
						else {
						    new INFR = random(6);
						    if(INFR == 3) PlayerInfo[playerid][pInfeccion] += 1;
		    			}
						return 1;
		            }
			 	}
			}
		}
		case BAR_MENU_BEBIDAS:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0:
		            {
	    	            new Float:Health;
	        	        GetPlayerHealth(playerid, Health);
	            	    if(Health < 101)	{	SetHP(playerid, Health+3); 	}
	                	format(string, sizeof(string), "* %s se bebe una Cerveza.", PlayerName(playerid));
		                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		                Bought(playerid, 3);
		                CheckBizz(playerid, 3);
		                PlayerInfo[playerid][pSed] -= 10;
		                SetProgressBarValue(Sed[playerid], PlayerInfo[playerid][pSed]);
						UpdateProgressBar(Sed[playerid], playerid);
		                PlayerDrunk[playerid] = PlayerDrunk[playerid]+2;
	        	        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
	        	        if(PlayerDrunk[playerid] > 6)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha bebido.", PlayerName(playerid));
			                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		        	        PlayerDrunk[playerid] = PlayerDrunk[playerid]+1;
		                	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
			                new INF = random(2);
		            	    if(INF == 1) PlayerInfo[playerid][pInfeccion] += 1;
		            	    PlayerInfo[playerid][pGripe] += 1;
						}
						return 1;
	    	        }
	        	    case 1:
	            	{
		                new Float:Health;
		                GetPlayerHealth(playerid, Health);
	    	            if(Health < 101)	{	SetHP(playerid, Health+5); 	}
	        	        format(string, sizeof(string), "* %s se bebe una copa de Vino.", PlayerName(playerid));
	            	    ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	                	Bought(playerid, 5);
	                	CheckBizz(playerid, 5);
	                	PlayerInfo[playerid][pSed] -= 10;
		                SetProgressBarValue(Sed[playerid], PlayerInfo[playerid][pSed]);
						UpdateProgressBar(Sed[playerid], playerid);
	                	PlayerDrunk[playerid] = PlayerDrunk[playerid]+1;
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
		                if(PlayerDrunk[playerid] > 6)
		    	        {
			    	        SetHP(playerid, 20);
	               			format(string, sizeof(string), "* %s vomita lo que ha bebido.", PlayerName(playerid));
		                	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			                PlayerInfo[playerid][pEpilepsia] += 1;
			                PlayerDrunk[playerid] = PlayerDrunk[playerid]+1;
		    	            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		        	        ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
		        	        new INF = random(2);
		            	    if(INF == 1) PlayerInfo[playerid][pInfeccion] += 1;
		            	    PlayerInfo[playerid][pGripe] += 1;
						}
						return 1;
	            	}
		            case 2:
		            {
	    	            new Float:Health;
	        	        GetPlayerHealth(playerid, Health);
	            	    if(Health < 101)	{	SetHP(playerid, Health+6); 	}
	                	format(string, sizeof(string), "* %s se bebe una copa de Champagne.", PlayerName(playerid));
		                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		                Bought(playerid, 6);
		                CheckBizz(playerid, 6);
		                PlayerInfo[playerid][pSed] -= 10;
		                SetProgressBarValue(Sed[playerid], PlayerInfo[playerid][pSed]);
						UpdateProgressBar(Sed[playerid], playerid);
		                PlayerDrunk[playerid] = PlayerDrunk[playerid]+3;
	        	        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
	        	        if(PlayerDrunk[playerid] > 6)
		            	{
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha bebido.", PlayerName(playerid));
			                ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		        	        PlayerDrunk[playerid] = PlayerDrunk[playerid]+1;
		                	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
			                new INF = random(2);
		            	    if(INF == 1) PlayerInfo[playerid][pInfeccion] += 1;
		            	    PlayerInfo[playerid][pGripe] += 1;
						}
						return 1;
	    	        }
	        	    case 3:
	            	{
		                new Float:Health;
		                GetPlayerHealth(playerid, Health);
	    	            if(Health < 101)	{	SetHP(playerid, Health+2); 	}
	        	        format(string, sizeof(string), "* %s se bebe una Coca-Cola.", PlayerName(playerid));
	            	    ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	                	Bought(playerid, 2);
	                	CheckBizz(playerid, 2);
	                	PlayerInfo[playerid][pSed] -= 10;
		                SetProgressBarValue(Sed[playerid], PlayerInfo[playerid][pSed]);
						UpdateProgressBar(Sed[playerid], playerid);
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
		                if(PlayerDrunk[playerid] > 8)
			            {
				            SetHP(playerid, 20);
	            	   		format(string, sizeof(string), "* %s vomita lo que ha bebido.", PlayerName(playerid));
		            	    ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		            	    PlayerDrunk[playerid] = PlayerDrunk[playerid]+1;
			                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
			                new INF = random(2);
		            	    if(INF == 1) PlayerInfo[playerid][pInfeccion] += 1;
		            	    PlayerInfo[playerid][pGripe] += 1;
						}
						return 1;
	        	    }
	            	case 4:
	            	{
		                new Float:Health;
		                GetPlayerHealth(playerid, Health);
	    	            if(Health < 101)	{	SetHP(playerid, Health+1); 	}
	        	        format(string, sizeof(string), "* %s se bebe una botella pequeña de agua.", PlayerName(playerid));
	            	    ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	                	Bought(playerid, 1);
	                	CheckBizz(playerid, 1);
	                	PlayerInfo[playerid][pSed] -= 10;
		                SetProgressBarValue(Sed[playerid], PlayerInfo[playerid][pSed]);
						UpdateProgressBar(Sed[playerid], playerid);
	                	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
	                	if(PlayerDrunk[playerid] > 0)
		            	{
		            	    PlayerDrunk[playerid] = PlayerDrunk[playerid]-1;
						}
						return 1;
	    	        }
		 		}
			}
		}
		case DIALOG_FARMACIA:
		{
			if(response)
	    	{
	        	switch(listitem)
	        	{
		            case 0:
		            {
	    	            if(CheckMoney(playerid, 3))
	        	        {
							Message(playerid, COLOR_WHITE, "Has comprado un condon, utiliza /condon.");
							Bought(playerid, 3);
							Till(31, 3);
							SetPVarInt(playerid, "Condom", GetPVarInt(playerid, "Condom")+1);
						} return 1;
		            }
		            case 1:
	    	        {
	        	        if(CheckMoney(playerid, 10))
	            	    {
							Message(playerid, COLOR_WHITE, "Has comprado una caja con 3 pastillas para la gripe. Utiliza /pastilla.");
							Bought(playerid, 10);
							Till(31, 10);
							SetPVarInt(playerid, "Gripe", GetPVarInt(playerid, "Gripe")+3);
						} return 1;
		            }
		            case 2:
	    	        {
	        	        if(CheckMoney(playerid, 30))
	            	    {
							Message(playerid, COLOR_WHITE, "Has comprado una caja con 6 parches de nicotina, utiliza /pastilla.");
							Bought(playerid, 30);
							Till(31, 30);
							SetPVarInt(playerid, "Nicotina", GetPVarInt(playerid, "Nicotina")+6);
						} return 1;
		            }
		            case 3:
	    	        {
	        	        if(CheckMoney(playerid, 40))
	            	    {
							Message(playerid, COLOR_WHITE, "Has comprado una caja de 4 pastillas de Energysil. Utiliza /pastilla");
							Bought(playerid, 40);
							Till(31, 40);
							SetPVarInt(playerid, "Energysil", GetPVarInt(playerid, "Energysil")+4);
	                    } return 1;
		            }
	            	case 4:
	            	{
			            if(CheckMoney(playerid, 500))
    	                {
							Message(playerid, COLOR_WHITE, "Has comprado 5 pastillas anti epilépticas recetadas por el médico.");
							Bought(playerid, 500);
							Till(31, 100);
							PlayerInfo[playerid][pAntiEpilepsia] += 5;
                    	} return 1;
		        	}
		            case 5:
		            {
			            if(CheckMoney(playerid, 800))
		    	        {
							Message(playerid, COLOR_WHITE, "Has comprado 5 pastillas contra el cáncer recetadas por el médico.");
							Bought(playerid, 800);
							Till(31, 180);
							PlayerInfo[playerid][pAntiCancer] += 5;
						} return 1;
		            }
				}
			}
		}
		case MECANICO_MENU:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
					case 0:
					{
				        if(!IsAtTaller(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en el taller!");
	    				if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
						ShowPlayerDialog(playerid, MECANICO_MENU_REPARACION, DIALOG_STYLE_LIST, "-> Reparaciones <-", "Reparar Motor\nReparar Motor + Carrocería", "Reparar", "Atrás");
						return 1;
					}
					case 1:
					{
					    if(!IsAtTaller(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en el taller!");
					    if(IsPlayerInAnyVehicle(playerid))
				    	{
							format(string, sizeof(string), "* %s llena el depósito del vehículo.", PlayerName(playerid));
			      			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					  		Gas[idcar] = 100;
					  		return 1;
						}
						else { Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!"); return 1; }
					}
					case 2:
					{
        	            if(!IsAtTaller(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en el taller!");
	    				if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
						ShowPlayerDialog(playerid, MECANICO_MENU_TUNING, DIALOG_STYLE_LIST, "-> Tunear <-", "Tuning General\nTuning Específico\nCambiar Color\nCambiar Nombre Vehículo\nCambiar Motor\nBaterías\nNeones\nAlerones", "Aceptar", "Atrás");
						return 1;
					}
					case 3:
					{
				    	ShowPlayerDialog(playerid, MECANICO_MENU_EMBARGAR, DIALOG_STYLE_LIST, "-> Embargar <-", "Incrementar +1 Embargo\nDecrementar -1 Embargo\nMultar vehículo\nDesembargar vehículo", "Aceptar", "Atrás");
						return 1;
					}
					case 4:
					{
					    Remolcar(playerid);
					    return 1;
					}
					case 5:
					{
					    ShowPlayerDialog(playerid, MECANICO_MENU_OTROS, DIALOG_STYLE_LIST, "-> Otros <-", "Matricular Vehículo\nExaminar Vehículo\nInstalar alarma", "Aceptar", "Atrás");
						return 1;
					}
				}
			}
		}
		case MECANICO_MENU_REPARACION:
		{
			if(response)
		    {
        	 	GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
	        	{
		            case 0: {
					format(string, sizeof(string), "* %s arregla el motor del vehículo.", PlayerName(playerid));
      				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		  			SetVehicleHealth(idcar, 1000.0);
		  			VehicleDeath[idcar] = false;
					return 1; }
					case 1: {
					format(string, sizeof(string), "* %s coloca una carrocería nueva al vehículo y cambia el motor dañado.", PlayerName(playerid));
    	  			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
    	  			VehicleDeath[idcar] = false;
			  		RepairVehicle(idcar);
					return 1; }
				}
			}
		}
		case MECANICO_MENU_EMBARGAR:
		{
			if(response)
		    {
				switch(listitem)
				{
			    	case 0:
			    	{
				        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
					    if(!OwnableVehicle[idcar]) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
				        Message(playerid, COLOR_YELLOW, "¡Has agregado un embargo a este vehículo!");
				        PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvEmbargo] += 1;
			    	    return 1;
					}
					case 1:
					{
					    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
					    if(!OwnableVehicle[idcar]) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
				    	Message(playerid, COLOR_YELLOW, "¡Has quitado un embargo a este vehículo!");
      					PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvEmbargo] -= 1;
			        	return 1;
					}
					case 2:
					{
					    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
					    if(!OwnableVehicle[idcar]) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
					    ShowPlayerDialog(playerid, MECANICO_MENU_MULTAR, DIALOG_STYLE_INPUT, "-> Multar vehículo <-", "Estás a punto de multar un vehículo. Elige el precio que creas conveniente para sancionar el vehículo.\nRecuerda que el valor no debe sobrepasar los 3000$ de multa. Escribe el valor a multar:", "Multar", "Cancelar");
				    	return 1;
					}
					case 3:
					{
					    ShowPlayerDialog(playerid, MECANICO_MENU_DESEMBARGAR, DIALOG_STYLE_INPUT, "-> Desembargar vehículo <-", "Inserta el ID del vehículo para desembargar.", "Desembargar", "Cancelar");
					    return 1;
					}
				}
			}
		}
		case MECANICO_MENU_MULTAR:
		{
			if(response)
		    {
	    	    if(strval(inputtext) < 1 || strval(inputtext) > 3000) return Message(playerid, COLOR_GRAD2, "¡ Valor entre 1 - 3000$ !");
	    	    if(PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvEmbargo] > 2) return Message(playerid, COLOR_GRAD2, "¡ Este vehículo ya alcanzó el máximo de embargos y no puedes multarlo !");
		        if(PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvMulta] > 8999) return Message(playerid, COLOR_GRAD2, "¡ No puedes multar este vehículo. Muchas multas acumuladas !");
		        PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvMulta] += strval(inputtext);
				format(string, sizeof(string), "  Multaste al vehículo con %d$!", strval(inputtext));
				Message(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
		case MECANICO_MENU_DESEMBARGAR:
		{
			if(response)
		    {
	    	    if(!OwnableVehicle[strval(inputtext)]) return Message(playerid, COLOR_GRAD2, "No es un vehículo con embargos!");
	    	    PlayerVehicleInfo[VehicleOwner[strval(inputtext)]][VehicleSlot[strval(inputtext)]][pvMulta] = 0;
	    	    PlayerVehicleInfo[VehicleOwner[strval(inputtext)]][VehicleSlot[strval(inputtext)]][pvEmbargo] = 0;
				format(string, sizeof(string), "  Desembargaste al vehículo: %s cuyo dueño es %s !", PlayerVehicleInfo[VehicleOwner[strval(inputtext)]][VehicleSlot[strval(inputtext)]][pvName], PlayerName(VehicleOwner[strval(inputtext)]));
				Message(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
		case MECANICO_MENU_TUNING:
		{
			if(response)
		    {
		        new asd[256];
                strcat(asd, "{FFFFFF}Solo se le puede poner alerón a los siguientes coches: ");
		        strcat(asd, "\n{FFFFFF}Blista Compact | Intruder | Buccaneer | Cheetah | Emperor | Manana | Phoenix | Previon | Tampa ");
			    strcat(asd, "\n{FFFFFF}Sentinel | Stafford | Stallion | Sunrise | Vincent | Willard | Bravura | Premier | Cadrona");
	    	    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
	        	if(!OwnableVehicle[idcar]) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
	        	switch(listitem)
	        	{
					case 0:	{ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_global, DIALOG_STYLE_LIST, "-> Piezas Globales <-", "Nitro\nLlantas\nSuspensión\nGPS", "Aceptar", "Atrás"); return 1; }
					case 1:
					{
					    if(Boats(idcar)) return Message(playerid, COLOR_GRAD2, "¡No puedes ponerle esto a este tipo de vehiculo!");
						ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_SPECIAL, DIALOG_STYLE_LIST, "-> Tuning avanzado <-", "Piezas Wheel Arch Angels\nVinilo Alien\nVinilo Acces\nVinilo X-Flow", "Aceptar", "Atrás");
						return 1;
					}
					case 2: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_color, DIALOG_STYLE_LIST, "-> Cambiar Color <-", "Cambiar Color #1\nCambiar Color #2", "Aceptar", "Atrás"); return 1; }
					case 3: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_name, DIALOG_STYLE_INPUT, "-> Cambiar Nombre Modelo <-", "Introduce el nuevo nombre del vehículo, ejemplo: Mercedes\n\nMáximo 12 carácteres.", "Cambiar", "Salir"); return 1; }
					case 4: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_motor, DIALOG_STYLE_LIST, "-> Cambiar Motor <-", "Motor 95 \t(Capacidad gasolina: 100l)\nMotor 98 \t(Capacidad gasolina: 120l)\nMotor Diesel \t(Capacidad gasolina: 160l)\nMotor Biodiesel \t(Capacidad gasolina: 230l)", "Instalar","Salir"); return 1; }
					case 5: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_bateria, DIALOG_STYLE_LIST, "-> Baterías <-", "Batería Cyclon 6V\t(Calidad: Baja)\nBatería Duncan 8V\t(Calidad: Media)\nBatería Bosch 12V\t(Calidad: Óptima)", "Instalar","Salir"); return 1; }
					case 6: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_neon, DIALOG_STYLE_LIST, "{00F70C}Neones", "Azul\nVerde\nBlanco\nAmarillo\nRojo\nRosa","Colocar", "Atrás"); return 1; }
                    case 7: {ShowPlayerDialog(playerid, DIALOG_INFO_ALERON, DIALOG_STYLE_MSGBOX, "{00F70C}Info - Alerones", asd, "Aceptar", "Cancelar"); return 1; }
				}
			}
		}
		case DIALOG_INFO_ALERON:{
		    if(response == 1){
				ShowPlayerDialog(playerid, DIALOG_PONER_ALERON, DIALOG_STYLE_LIST, "Menu - Alerones", "Win\nFury", "Colocar", "Cancelar");
			}
		}
	case DIALOG_PONER_ALERON:
		{
			if(response == 1)
				{
		        switch(GetVehicleModel(idcar))
					{
		            case 405,410,415,496,518,529,540,546,550,585,603,580,401,426,436,439,527,549:{
		                switch(listitem)
							{
		                    case 0:
							{
                           PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] = 1001;
                           AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
							}
							case 1:
							{
                           PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] = 1023;
                           AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
							}
						}
					}
				}
			}
	    }
		case MECANICO_MENU_TUNING_SPECIAL:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
		                ShowPlayerDialog(playerid, TUNING_WAA, DIALOG_STYLE_LIST, "-> WAA <-", "Carrocería X-FLOW\nCarrocería Alien", "Aceptar", "Atrás");
		                return 1;
		            }
	    	        case 1:
	        	    {
	            	    if(!OwnableVehicle[idcar]) return Message(playerid, COLOR_GRAD2, "Vehículo sin dueño");
	                	if(IsLocolowVehicle(idcar) || IsWAAVehicle(idcar))
	                	{
		                    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvPaintjob] = 1;
		                    ChangeVehiclePaintjob(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvPaintjob]-1);
	    	                Message(playerid, COLOR_GRAD2, "Vinilo instalado!");
	        	        } else Message(playerid, COLOR_GRAD2, "Este vehículo no permite vinilos!");
	        	        return 1;
	            	}
		            case 2:
		            {
	    	            if(!OwnableVehicle[idcar]) return Message(playerid, COLOR_GRAD2, "Vehículo sin dueño");
	        	        if(IsLocolowVehicle(idcar) || IsWAAVehicle(idcar))
	            	    {
	                    	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvPaintjob] = 2;
		                    ChangeVehiclePaintjob(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvPaintjob]-1);
	                    	Message(playerid, COLOR_GRAD2, "Vinilo instalado!");
	                	} else Message(playerid, COLOR_GRAD2, "Este vehículo no permite vinilos!");
	                	return 1;
	            	}
		            case 3:
		            {
	    	            if(!OwnableVehicle[idcar]) return Message(playerid, COLOR_GRAD2, "Vehículo sin dueño");
	        	        if(IsLocolowVehicle(idcar) || IsWAAVehicle(idcar))
	            	    {
	                	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvPaintjob] = 3;
		                    ChangeVehiclePaintjob(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvPaintjob]-1);
	                    	Message(playerid, COLOR_GRAD2, "Vinilo instalado!");
	                	} else Message(playerid, COLOR_GRAD2, "Este vehículo no permite vinilos!");
	                	return 1;
					}
		        }
			}
		}
		case TUNING_WAA:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
	            	// XFLOW TUNING
		            case 0:
		            {
						switch(GetVehicleModel(idcar))
			    	    {
			        	    case 560:
			            	{
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1030;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1033;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1139;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1140;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1170;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1029;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
	                        	return 1;
			            	}
				            case 562:
				            {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1039;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1035;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1146;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1148;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1172;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1037;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
	                        	return 1;
			            	}
				            case 565:
				            {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1048;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1053;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1050;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1151;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1152;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1045;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
	                        	return 1;
			            	}
				            case 559:
				            {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1070;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1068;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1158;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1161;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1173;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1066;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
	                        	return 1;
			            	}
				            case 561:
				            {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1057;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1061;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1060;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1156;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1157;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1059;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
	                        	return 1;
			            	}
				            case 558:
				            {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1093;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1091;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1163;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1167;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1165;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1089;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
	                        	return 1;
			            	}
				            default: Message(playerid, COLOR_GRAD2, "Este vehículo no permite este tipo de tuning.");
				        }
	    	        }
	        	    // ALIEN TUNING
					case 1:
	            	{
						switch(GetVehicleModel(idcar))
				        {
				            case 560:
			    	        {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1026;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1032;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1138;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1141;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1169;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1028;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
            	   				Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
            	   				return 1;
			            	}
				            case 562:
				            {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1036;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1038;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1147;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1149;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1171;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1034;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
	                        	return 1;
			            	}
				            case 565:
				            {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1047;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1054;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1049;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1150;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1153;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1046;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
	                        	return 1;
			            	}
				            case 559:
				            {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1069;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1067;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1162;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1159;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1160;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1065;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
	                        	return 1;
				            }
				            case 561:
				            {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1056;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1055;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1058;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1154;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1153;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1064;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
	                        	return 1;
			            	}
				            case 558:
				            {
	                        	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt] = 	1094;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof] =        1088;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler] =     1164;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper] =  1168;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper] = 1166;
			            	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust] =     1092;
	                    	    AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSideskirt]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRoof]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSpoiler]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvRearBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvFrontBumper]);
	                        	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvExhaust]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
	                        	return 1;
			            	}
				            default: Message(playerid, COLOR_GRAD2, "Este vehículo no permite este tipo de tuning.");
				        }
	    	        }
	        	}
			}
		}
		case MECANICO_MENU_TUNING_global:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
					{
					    if(Boats(idcar)) return Message(playerid, COLOR_GRAD2, "¡No puedes ponerle esto a este tipo de vehiculo!");
						ShowPlayerDialog(playerid, TUNING_MENU_NITRO, DIALOG_STYLE_LIST, "-> Nitroso <-", "x2\nx5\nx10", "Tunear", "<<");
						return 1;
					}
	        	    case 1:
					{
					    if(Boats(idcar)) return Message(playerid, COLOR_GRAD2, "¡No puedes ponerle esto a este tipo de vehiculo!");
						ShowPlayerDialog(playerid, TUNING_MENU_RUEDAS, DIALOG_STYLE_LIST, "-> Menú Llantas <-", "OffRoad\nShadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAcces", "Tunear", "<<");
						return 1;
					}
	        	    case 2:
					{
					    if(Boats(idcar)) return Message(playerid, COLOR_GRAD2, "¡No puedes ponerle esto a este tipo de vehiculo!");
						ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_global_suspensionystereo, DIALOG_STYLE_LIST, "-> Supensión & Stereo <-", "Suspensión Hidráulica\nQuitar Suspension", "Tunear", "<<");
						return 1;
					}
	        	    case 3:
					{
						PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvGPS] = 1;
						Message(playerid, COLOR_WHITE, "* Has instalado un GPS en el vehículo.");
						return 1;
					}
				}
			}
		}
		case MECANICO_MENU_TUNING_color:
		{
			if(response)
		    {
	    	    switch(listitem)
				{
					case 0: { ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_color_1, DIALOG_STYLE_INPUT, "-> Cambiar Color #1 <-", "Inserta el ID del Color a pintar (0-255)", "Pintar", "Atrás"); return 1; }
					case 1: { ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_color_2, DIALOG_STYLE_INPUT, "-> Cambiar Color #2 <-", "Inserta el ID del Color a pintar (0-255)", "Pintar", "Atrás"); return 1; }
				}
			}
		}
		case MECANICO_MENU_TUNING_name:
		{
		    if(response)
		    {
        	    format(PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvName], 14, inputtext);
            	format(string, sizeof(string), "- Nuevo modelo: %s", PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvName]);
         		GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
         		return 1;
	    	}
		}
		case MECANICO_MENU_TUNING_motor:
		{
			if(response)
		    {
        		GetVehiclePos(idcar, cx, cy, cz);
        		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
				{
					case 0: { PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvGas] = 0; Message(playerid, COLOR_GRAD2, "Motor 95 instalado!"); return 1; }
					case 1: { PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvGas] = 1; Message(playerid, COLOR_GRAD2, "Motor 98 instalado!"); return 1; }
					case 2: { PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvGas] = 2; Message(playerid, COLOR_GRAD2, "Motor Diesel instalado!"); return 1; }
					case 3:	{ PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvGas] = 3; Message(playerid, COLOR_GRAD2, "Motor Biodiesel instalado!"); return 1; }
				}
				return 1;
			}
		}
		case MECANICO_MENU_TUNING_bateria:
		{
			if(response)
		    {
        		GetVehiclePos(idcar, cx, cy, cz);
        		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
				{
					case 0: { PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvBattery] = 1000; Message(playerid, COLOR_GRAD2, "Batería Cyclon 6V instalado!"); return 1; }
					case 1: { PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvBattery] = 5000; Message(playerid, COLOR_GRAD2, "Batería Duncan 8V instalado!"); return 1; }
					case 2: { PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvBattery] = 10000; Message(playerid, COLOR_GRAD2, "Batería Bosch 12V instalado!"); return 1; }
				}
			}
		}
		case MECANICO_MENU_TUNING_global_suspensionystereo:
		{
			if(response)
		    {
        	 	GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
	        	{
		            case 0: { Message(playerid, COLOR_WHITE, ">- Suspensión Hidráulica -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvHydraulics] = 1087; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvHydraulics]);  return 1; }
		            case 1: { Message(playerid, COLOR_WHITE, ">- Suspensión Quitada -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvHydraulics] = 0; return 1; }
				}
			}
		}
		case MECANICO_MENU_TUNING_color_1:
		{
			if(response)
		    {
	    	    if(strval(inputtext) < 0 || strval(inputtext) > 255) return Message(playerid, COLOR_GRAD2, "ID Incorrecto de Color (0-255)");
         		GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1134, cx, cy, cz);
         		PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSuciedad] = 0;
            	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvColorOne] = strval(inputtext);
            	ChangeVehicleColor(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvColorOne], PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvColorTwo]);
            	return 1;
			}
		}
		case MECANICO_MENU_TUNING_color_2:
		{
			if(response)
		    {
	    	    if(strval(inputtext) < 0 || strval(inputtext) > 255) return Message(playerid, COLOR_GRAD2, "ID Incorrecto de Color (0-255)");
         		GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1134, cx, cy, cz);
         		PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvSuciedad] = 0;
            	PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvColorTwo] = strval(inputtext);
            	ChangeVehicleColor(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvColorTwo], PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvColorTwo]);
            	return 1;
			}
		}
		case TUNING_MENU_RUEDAS:
		{
			if(response)
		    {
        	 	GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
	        	{
		            case 0: { Message(playerid, COLOR_WHITE, ">- Llantas OffRoad puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1025; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]); return 1; }
		            case 1: { Message(playerid, COLOR_WHITE, ">- Llantas Shadow puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1073; 	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	    	        case 2: { Message(playerid, COLOR_WHITE, ">- Llantas Mega puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1074; 	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]); return 1; }
	        	    case 3: { Message(playerid, COLOR_WHITE, ">- Llantas Rimshine puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1075; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 4: { Message(playerid, COLOR_WHITE, ">- Llantas Wires puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1076; 	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 5: { Message(playerid, COLOR_WHITE, ">- Llantas Classic puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1077; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 6: { Message(playerid, COLOR_WHITE, ">- Llantas Twist puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1078; 	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 7: { Message(playerid, COLOR_WHITE, ">- Llantas Cutter puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1079; 	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 8: { Message(playerid, COLOR_WHITE, ">- Llantas Switch puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1080; 	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 9: { Message(playerid, COLOR_WHITE, ">- Llantas Grove puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1081; 	AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 10: { Message(playerid, COLOR_WHITE, ">- Llantas Import puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1082; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 11: { Message(playerid, COLOR_WHITE, ">- Llantas Dollar puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1083; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 12: { Message(playerid, COLOR_WHITE, ">- Llantas Trance puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1084; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 13: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1085; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 14: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1096; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 15: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1097; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
	            	case 16: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel] = 1098; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvWheel]);  return 1; }
				}
			}
		}
		case TUNING_MENU_NITRO:{
			if(response)
		    {
        	 	GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
	        	{
		            case 0: { Message(playerid, COLOR_WHITE, "Nitro x2 Instalado."); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNitro] = 1009; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNitro]); return 1; }
		            case 1: { Message(playerid, COLOR_WHITE, "Nitro x5 Instalado."); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNitro] = 1008; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNitro]); return 1; }
	    	        case 2: { Message(playerid, COLOR_WHITE, "Nitro x10 Instalado."); PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNitro] = 1010; AddVehicleComponent(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNitro]); return 1; }
	        	}
			}
		}
		case MECANICO_MENU_TUNING_neon:
		{
			if(response)
			{
				if(IsAPlane(idcar) || IsABike(idcar)) return Message(playerid, 0xFFFFFFFF, "No puedes poner neon aquí!");
               {
					switch(listitem)
					{
						case 0:
						{
							PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNeon] = 2;
						}
						case 1:
						{
							PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNeon] = 3;
						}
						case 2:
						{
							PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNeon] = 4;
						}
						case 3:
						{
							PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNeon] = 5;
						}
						case 4:
						{
							PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNeon] = 6;
						}
						case 5:
						{
							PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNeon] = 7;
						}
				}
				Message(playerid, -1, "Neon instalado satisfactoriamente");
			}
    	}
  	}
		case MECANICO_MENU_OTROS:
		{
			if(response)
		    {
        	 	GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
	        	{
		            case 0:
					{
					    ShowPlayerDialog(playerid, MECANICO_MENU_OTROS_matricula, DIALOG_STYLE_INPUT, "-> Matricula <-", "Inserta una matrícula, de 5 carácteres numéricos", "Matricular", "Atrás");
					    return 1;
					}
					case 1:
					{
						KillTimer(mmtimer);
					    mmtimer = SetTimer("MM_Noise", 1000, true);
					    SetTimerEx("MM_Exam", 6000, false, "i", playerid);
					    Message(playerid, COLOR_WHITE, "* Examinando vehículo, espere");
					    return 1;
					}
					case 2:
					{
						PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvAlarm] = 1;
					    Message(playerid, COLOR_WHITE, "Alarma instalada!");
					    return 1;
					}
				}
			}
		}
		case MECANICO_MENU_OTROS_matricula:
		{
			if(response)
		    {
	    	    if(strval(inputtext) > 99999 || strval(inputtext) < 11111) return ShowPlayerDialog(playerid, MECANICO_MENU_OTROS_matricula, DIALOG_STYLE_INPUT, "-> Matricula <-", "Inserta una matrícula, de 5 carácteres numéricos", "Matricular", "Atrás");
	        	format(string, sizeof(string), "SA - %d", strval(inputtext));
	        	format(PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvPlate], 12, string);
	        	SetVehicleNumberPlate(idcar, PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvNitro]);
	        	Message(playerid, COLOR_WHITE, "Martrícula cambiada! Cuando respawnee el vehículo se verá la nueva matrícula!");
				return 1;
			}
		}
		case REQF_ACCEPT:
		{
		    if(response)
		    {
				new FactionNameGM[25];
		        GetPVarString(playerid, "ReqF_Name", FactionNameGM, 25);
	    	    format(string, sizeof(string), "¡Felicidades! Ahora trabajas en %s, aceptaste el contrato!",FactionNameGM);
	        	Message(playerid, COLOR_YELLOW, string);
	        	PlayerInfo[playerid][pMember]= GetPVarInt(playerid, "ReqF_Faction");
	        	PlayerInfo[playerid][pRank] = 1;
	        	UpdatePlayerStat(playerid);
	        	format(string, sizeof(string), "* %s acepta un contrato.", PlayerName(playerid));
      			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	        	DeletePVar(playerid, "ReqF_Name"); DeletePVar(playerid, "ReqF_Faction"); DeletePVar(playerid, "Facturing");
	        	return 1;
	    	}
		    else
			{
        	    Message(playerid, COLOR_GRAD2, "Rechazaste el contrato.");
            	format(string, sizeof(string), "* %s rechaza un contrato.", PlayerName(playerid));
      			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
				DeletePVar(playerid, "ReqF_Name"); DeletePVar(playerid, "ReqF_Faction"); DeletePVar(playerid, "Facturing");
				return 1;
			}
		}
		case ENTER_LSRTV:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
	                    LoadObjects(playerid);
		                SetPosEx(playerid, -2719.7854,519.2936,48.3752,0,0,0);
	    	            GText(playerid, "~g~~h~lsrtv", 5000, 1);
	    	            return 1;
	        	    }
	            	case 1:
	            	{
		                LoadObjects(playerid);
		                SetPosEx(playerid, 243.2710,302.7583,999.1343+1,0,0,0);
	    	            GText(playerid, "~g~~h~lsrtv", 5000, 1);
	    	            return 1;
	        	    }
		        }
		    }
		}
		case GASOLINA_DIALOG:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0: { FuelCar(playerid, 0); return 1; }
		            case 1: { FuelCar(playerid, 1); return 1; }
	    	        case 2: { FuelCar(playerid, 2); return 1; }
	        	    case 3: { FuelCar(playerid, 3); return 1; }
	        	}
		    }
		}
		case DIALOG_PAINTBALL:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
					case 0:
	            	{
	             		SetPosEx(playerid,-1410.72,1591.16,1052.53,0,14,0);
    	         		Bought(playerid, 1000);
        	       		Till(20, 250);
						ArmarPaintBall(playerid);
						PaintballType[playerid] = 1;
						SetPVarInt(playerid, "PaintballDMKills", 0);
						TotalDM += 1;
						return 1;
	            	}
		            case 1:
					{
					    format(string, sizeof(string), "{41FF2F} Equipo Verde (%d)\n{FF7617} Equipo Naranja (%d)", TTeamVerde, TTeamNaranja);
						ShowPlayerDialog(playerid, DIALOG_PAINTBALL_TVT, DIALOG_STYLE_LIST, "Team vs Team", string, "Aceptar", "Cancelar");
						return 1;
					}
					case 2:
		            {
	    	            LoadObjects(playerid);
            	 		SetPosEx(playerid,1975.8000,1619.4677,-11.8929,0,0,0);
               			Bought(playerid, 1000);
               			Till(20, 250);
						ArmarPaintBall(playerid);
						PaintballType[playerid] = 4;
						SetPVarInt(playerid, "PaintPvPKills", 0);
						TotalPlayer += 1;
						return 1;
	            	}
				}
			}
		}
		case DIALOG_PAINTBALL_TVT:
		{
			if(response)
    		{
        		switch(listitem)
        		{
     				case 0:
	       			{
    	      			SetPosEx(playerid,-1131.2336,1057.7888,1346.4170,0,10,0);
        	     		Bought(playerid, 1000);
        	     		Till(20, 250);
						ArmarPaintBall(playerid);
						PaintballType[playerid] = 3;
						TTeamVerde += 1;
						SetPlayerColor(playerid, VERDE_ADMIN);
						return 1;
	            	}
	     			case 1:
  		 			{
  	    				SetPosEx(playerid,-973.1844,1061.3037,1345.6699,0,10,0);
          				Bought(playerid, 1000);
          				Till(20, 250);
						ArmarPaintBall(playerid);
						PaintballType[playerid] = 2;
						TTeamNaranja += 1;
						SetPlayerColor(playerid, ORANGE_ADMIN);
						return 1;
	            	}
				}
			}
		}
		case ATTACKS_DIALOG:
		{
			if(response)
			{
			    ShowPlayerDialog(playerid, ATTACKS_ENTER, DIALOG_STYLE_INPUT, "Puntos de Ataques", "{FFFFFF}Ingresa el nombre que le quieras dar a este punto de ataque.", "Aceptar", "Cancelar");
			    switch(listitem)
			    {
				    case 0: { SetPVarInt(playerid, "Punto", 0); return 1; }
				    case 1: { SetPVarInt(playerid, "Punto", 1); return 1; }
				    case 2: { SetPVarInt(playerid, "Punto", 2); return 1; }
				    case 3: { SetPVarInt(playerid, "Punto", 3); return 1; }
			    	case 4: { SetPVarInt(playerid, "Punto", 4); return 1; }
				}
		    }
		}
		case ATTACKS_ENTER:
		{
		    if(response)
			{
			    if(strlen(inputtext) > 48 || strlen(inputtext) < 1)
      			{
      			    ShowPlayerDialog(playerid, ATTACKS_ENTER, DIALOG_STYLE_INPUT, "Puntos de Ataques", "{FFFFFF}Ingresa el nombre que le quieras dar a este punto de ataque.", "Aceptar", "Cancelar");
					return 1;
  			    }
			    GetPlayerPos(playerid, PointAttack[GetPVarInt(playerid, "Punto")][0], PointAttack[GetPVarInt(playerid, "Punto")][1], PointAttack[GetPVarInt(playerid, "Punto")][2]);
				switch(GetPVarInt(playerid, "Punto"))
				{
					case 0: format(StringPoint1, MAX_POINT_TEXT, inputtext);
					case 1: format(StringPoint2, MAX_POINT_TEXT, inputtext);
					case 2: format(StringPoint3, MAX_POINT_TEXT, inputtext);
					case 3: format(StringPoint4, MAX_POINT_TEXT, inputtext);
					case 4: format(StringPoint5, MAX_POINT_TEXT, inputtext);
				}
				TerroPoint[GetPVarInt(playerid, "Punto")] = 1;
				Message(playerid, COLOR_WHITE, "* Has MARCADO un blanco para detonar los misiles.");
				format(string, sizeof string, "PUNTOS: %s ha marcado un punto de ataque (%d)", PlayerName(playerid), GetPVarInt(playerid, "Punto")+1);
				SendRadioMessage(2, TEAM_RADIO_COLOR, string);
				DeletePVar(playerid, "Punto");
				return 1;
			}
			else
			{
			    DeletePVar(playerid, "Punto");
			    return 1;
   			}
		}
		case ATTACK_TERRO:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0: { SetPVarInt(playerid, "Ataque", 0); SetPVarString(playerid, "Localizacion", StringPoint1); }
					case 1: { SetPVarInt(playerid, "Ataque", 1); SetPVarString(playerid, "Localizacion", StringPoint2); }
					case 2: { SetPVarInt(playerid, "Ataque", 2); SetPVarString(playerid, "Localizacion", StringPoint3); }
					case 3: { SetPVarInt(playerid, "Ataque", 3); SetPVarString(playerid, "Localizacion", StringPoint4); }
					case 4: { SetPVarInt(playerid, "Ataque", 4); SetPVarString(playerid, "Localizacion", StringPoint5); }
				}
				if(TerroPoint[GetPVarInt(playerid, "Ataque")] == 0) return Message(playerid, COLOR_GRAD2, "* No hay ningun punto de ataque definido.");
			    SetTimerEx("AtaqueTerrorista", 15000, false, "dd", playerid, GetPVarInt(playerid, "Ataque"));
			    SendRadioMessage(2, TEAM_RADIO_COLOR, "** AVISO DE ATAQUE ENVIADO **");
				new Location[48];
			    GetPVarString(playerid, "Localizacion", Location, 48);
       			format(string, sizeof(string), "* Lanzamiento de misil %d - Destino: %s", GetPVarInt(playerid, "Ataque")+1, Location);
            	SendRadioMessage(2, TEAM_RADIO_COLOR, string);
            	Message(playerid, COLOR_WHITE, "* Has enviado un MISIL el cual llegará a su destino en 15 segundos.");
            	DeletePVar(playerid, "Ataque");
            	AtaqueRealizado = 1;
            	return 1;
		    }
		}
		case RENTA_VEHICULOS:
		{
		    if(response)
		    {
		        if(HireKey[playerid] != 999) return Message(playerid, COLOR_GREY, "Ya has rentado un vehículo, usa /desrentarveh");
				new carprice;
          switch(idcar)
    {
					case 1..30: { carprice = 50; }
				}
				if(GetPlayerMoney(playerid) > carprice)
				{
				    Message(playerid, COLOR_WHITE, "Has rentado un vehículo por 10 minutos, puedes renovarlo usando /renovarrenta");
					Message(playerid, COLOR_WHITE, "Utiliza /desrentarveh cuando no lo necesites (Devolución: 30$)");
					HireMinutes[playerid] = 10;
					HireKey[playerid] = idcar;
		            HireState[idcar] = true;
		            Bought(playerid, carprice);
              switch(idcar)
     {
			    		case 1..30: { Till(14, (carprice/2)); return 1; }
   					}
				 		   }
     		   else {
		            Message(playerid, COLOR_GRAD2, "No tienes suficiente dinero para pagar la renta de esta moto.");
		            RemovePlayerFromVehicle(playerid);
		            return 1;
          		}
     		}
	    	else
		    {
   				RemovePlayerFromVehicle(playerid);
		    	return 1;
		    }
		}
		case RECARGA_PHONE:
		{
		    if(response)
		    {
	    	    if(DetectNumber(inputtext))
				{
	                SetPVarInt(playerid, "RecNumber", strval(inputtext));
					format(string,sizeof(string),"{FFFFFF}¿Confirmas tu numero celular: %d?", GetPVarInt(playerid, "RecNumber"));
					ShowPlayerDialog(playerid, OTECEL_CONFIRM, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL", string, "Confirmar", "Cancelar");
					return 1;
				}
				else { ShowPlayerDialog(playerid, RECARGA_PHONE, DIALOG_STYLE_INPUT, "{018CFE}OTECEL - Operadora", "{FFFFFF}Solo se permite ingresar números, mínimo 4 digitos\nIngrese su numero nuevamente:", "Aceptar", "Cancelar"); return 1; }
			}
		}
		case OTECEL_CONFIRM:
		{
		    if(response)
		    {
	    	    if(GetPVarInt(playerid, "RecNumber") == PlayerInfo[playerid][pPnumber])
        		{
		        	ShowPlayerDialog(playerid, OTECEL_PAQUETES, DIALOG_STYLE_LIST, "{018CFE}Paquetes OTECEL", " 60$ Llamadas - 15 Mensajes\t $100\n 120$ LLamadas - 30 Mensajes\t $200\n 60$ LLamadas\t\t\t $60\n 120$ Llamadas\t\t\t $120\n 15 Mensajes\t\t\t $45\n 30 Mensajes\t\t\t $90", "Seleccionar", "Cancelar");
		        	DeletePVar(playerid, "RecNumber");
		        	return 1;
				}
				else { ShowPlayerDialog(playerid, RECARGA_PHONE, DIALOG_STYLE_INPUT, "{018CFE}OTECEL - Operadora", "{FFFFFF}Segun nuestro sistema ese numero esta a nombre\nde otra persona, ingrese nuevamente su número:", "Aceptar", "Cancelar"); return 1; }
   			}
		    else { ShowPlayerDialog(playerid, RECARGA_PHONE, DIALOG_STYLE_INPUT, "{018CFE}Operadora de Telefonia Celular OTECEL", "{FFFFFF}Ingresa tu numero celular para realizar la recarga", "Aceptar", "Cancelar"); return 1; }
		}
		case OTECEL_PAQUETES:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0: {
		                Till(13, 100);
		                Bought(playerid, 100);
	    	            PlayerInfo[playerid][pMinutes] += 600;
	        			PlayerInfo[playerid][pMTexto] += 15;
	        			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 60$ Llamadas - 15 Mensajes", "Aceptar", "");
	        			return 1;
					}
					case 1: {
					    Till(13, 200);
					    Bought(playerid, 200);
					    PlayerInfo[playerid][pMinutes] += 1200;
	        			PlayerInfo[playerid][pMTexto] += 30;
	        			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 120$ Llamadas - 30 Mensajes", "Aceptar", "");
	        			return 1;
					}
					case 2: {
					    Till(13, 60);
						Bought(playerid, 60);
					    PlayerInfo[playerid][pMinutes] += 600;
            			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 60$ Llamadas", "Aceptar", "");
            			return 1;
                	}
	                case 3: {
						Till(13, 120);
    	                Bought(playerid, 120);
        	            PlayerInfo[playerid][pMinutes] += 1200;
            			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 120$ Llamadas", "Aceptar", "");
            			return 1;
                	}
	                case 4: {
	                    Till(13, 45);
    	                Bought(playerid, 45);
        	            PlayerInfo[playerid][pMTexto] += 15;
	        			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 15 Mensajes", "Aceptar", "");
	        			return 1;
	        		}
		        	case 5: {
		        	    Till(13, 90);
		        	    Bought(playerid, 90);
	    	    	    PlayerInfo[playerid][pMTexto] += 30;
	        			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 30 Mensajes", "Aceptar", "");
	        			return 1;
	        		}
				}
		    }
		}
		case MATRIMONIO_DIALOG:
		{
		    if(response)
		    {
        	    if(!IsPlayerConnected(strval(inputtext))) return Message(playerid, COLOR_GRAD2, "Jugador no conectado");
            	if(!ProxDetectorS(5.0,playerid,strval(inputtext))) return Message(playerid, COLOR_GRAD2, "Estan demasiado lejos.");
            	if(PlayerInfo[strval(inputtext)][pMarried] == 1) return Message(playerid, COLOR_GRAD2, "¡Esa persona ya esta casada!");
            	if(PlayerInfo[strval(inputtext)][pSex] == 1) return Message(playerid, COLOR_GRAD2, "¡Solo se permiten matrimonio entre hombre y mujer!");
            	if(strval(inputtext) == playerid) return Message(playerid, COLOR_GRAD2, "¡No te puedes casar contigo mismo!");
            	SetPVarInt(playerid, "Matrimonio", strval(inputtext));
				SetPVarInt(strval(inputtext), "Matrimonio", playerid);
            	ShowPlayerDialog(GetPVarInt(strval(inputtext), "Matrimonio"), MATRIMONIO_CONFIRM, DIALOG_STYLE_MSGBOX,"{018CFE}Iglesia", "{FFFFFF}Por favor selecione su respuesta","SI Acepto","NO Acepto");
            	return 1;
         	}
		}
		case MATRIMONIO_CONFIRM:
		{
		    if(response)
		    {
            	ShowPlayerDialog(GetPVarInt(playerid, "Matrimonio"), MATRIMONIO_CONFIRM2, DIALOG_STYLE_MSGBOX,"{018CFE}Iglesia", "{FFFFFF}Por favor selecione su respuesta","SI Acepto","NO Acepto");
            	return 1;
			}
			else
			{
			    format(string, sizeof(string), "%s ha rechazado la peticion de boda.", PlayerName(playerid));
            	ProxDetectorEx(20.0, playerid, string,COLOR_PURPLE);
            	DeletePVar(GetPVarInt(playerid, "Matrimonio"), "Matrimonio");
            	DeletePVar(playerid, "Matrimonio");
            	return 1;
			}
		}
		case MATRIMONIO_CONFIRM2:
		{
		    if(response)
		    {
            	format(string, sizeof(string), "%s y %s firman en un libro y se casan.", PlayerName(playerid), PlayerName(GetPVarInt(playerid, "Matrimonio")));
            	ProxDetectorEx(20.0, playerid, string,COLOR_PURPLE);
            	format(PlayerInfo[playerid][pMarriedTo], 24, PlayerName(GetPVarInt(playerid, "Matrimonio")));
            	format(PlayerInfo[GetPVarInt(playerid, "Matrimonio")][pMarriedTo], 24, PlayerName(playerid));
            	Bought(playerid, 8000);
            	PlayerInfo[playerid][pMarried] = 1;
            	PlayerInfo[GetPVarInt(playerid, "Matrimonio")][pMarried] = 1;
            	DeletePVar(GetPVarInt(playerid, "Matrimonio"), "Matrimonio");
            	DeletePVar(playerid, "Matrimonio");
            	return 1;
     		}
	     	else
    	 	{
        	    format(string, sizeof(string), "%s ha rechazado la peticion de boda.", PlayerName(playerid));
            	ProxDetectorEx(20.0, playerid, string,COLOR_PURPLE);
            	DeletePVar(GetPVarInt(playerid, "Matrimonio"), "Matrimonio");
            	DeletePVar(playerid, "Matrimonio");
            	return 1;
			}
		}
		case DIVORCIO_DIALOG:
		{
		    if(response)
		    {
	    	    Message(playerid, COLOR_GRAD2, "* Ahora debes esperar su respuesta.");
	        	format(string, sizeof(string), "{FFFFFF}%s ha hecho una peticion de divorcio, ¿aceptas firmar el divorcio?", PlayerName(playerid));
	        	ShowPlayerDialog(GetPVarInt(playerid, "Divorciar"), DIVORCIO_CONFIRM, DIALOG_STYLE_MSGBOX, "{018CFE}Iglesia - Divorcio", string, "Aceptar", "Cancelar");
	        	return 1;
     		}
	 	}
	 	case DIVORCIO_CONFIRM:
	 	{
		    if(response)
		    {
	    	    format(PlayerInfo[playerid][pMarriedTo], 24, "Nadie");
            	format(PlayerInfo[GetPVarInt(playerid, "Divorciar")][pMarriedTo], 24, "Nadie");
            	PlayerInfo[playerid][pMarried] = 0;
            	PlayerInfo[GetPVarInt(playerid, "Divorciar")][pMarried] = 0;
            	format(string, sizeof(string), "* Te has divorciado de %s, ahora eres libre.", PlayerName(GetPVarInt(playerid, "Divorciar")));
            	Message(playerid, COLOR_GRAD4, string);
	        	format(string, sizeof(string), "* Te has divorciado de %s, ahora eres libre.", PlayerName(playerid));
            	Message(GetPVarInt(playerid, "Divorciar"), COLOR_GRAD4, string);
            	DeletePVar(GetPVarInt(playerid, "Divorciar"), "Divorciar");
            	DeletePVar(playerid, "Divorciar");
            	return 1;
     		}
	     	else
 			{
 			    Message(playerid, COLOR_GRAD2, "* Rechazaste la peticion de divorcio.");
				format(string, sizeof(string), "%s no ha aceptado la peticion de divorcio", PlayerName(playerid));
				Message(GetPVarInt(playerid, "Divorciar"), COLOR_GRAD2, string);
				DeletePVar(GetPVarInt(playerid, "Divorciar"), "Divorciar");
            	DeletePVar(playerid, "Divorciar");
            	return 1;
 			}
		}
		case HOUSE_IMPUESTOS:
		{
		    if(response)
		    {
		        if(strlen(inputtext) < 1) return ShowPlayerDialog(playerid, HOUSE_IMPUESTOS, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Por favor ingrese su numero de DNI", "Aceptar", "Cancelar");
		        if(strval(inputtext) != PlayerInfo[playerid][pDNI]) return ShowPlayerDialog(playerid, HOUSE_IMPUESTOS, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Nuestro sistema ha detectado que ninguna propiedad se encuentra\nrelacionada con ese numero de DNI, por favor revise bien.", "Aceptar", "Cancelar");
				HouseInfo[PlayerInfo[playerid][pPhousekey]][hTime] = gettime() + 2592000;
				Message(playerid, COLOR_WHITE, "{FF7617}Casa de Impuestos: {FFFFFF}Ha realizado su pago de impuestos, recuerde acercarse el próximo mes.");
				Bought(playerid, 10000);
				Tax += 10000;
				return 1;
			}
		}
		case VEHICLE_INFO:
		{
		    if(response)
		    {
		        if(GetPVarInt(playerid, "FreeNo") == 0) return Message(playerid, COLOR_GRAD2, "No hay vehiculos de este tipo disponibles.");
		        if(CheckMoney(playerid, GetPVarInt(playerid, "PriceID")))
		        {
			        new Seleccion[120], SlotUsado[10], SlotUsado2[10], SlotUsado3[10], SlotUsado4[10];
					if(PlayerVehicleInfo[playerid][0][pvModel] == 0) SlotUsado = "Libre";
					else SlotUsado = "Ocupado";
            		if(PlayerVehicleInfo[playerid][1][pvModel] == 0) SlotUsado2 = "Libre";
					else SlotUsado2 = "Ocupado";
					if(PlayerVehicleInfo[playerid][2][pvModel] == 0) SlotUsado3 = "Libre";
					else SlotUsado3 = "Ocupado";
					if(PlayerVehicleInfo[playerid][3][pvModel] == 0) SlotUsado4 = "Libre";
					else SlotUsado4 = "Ocupado";
					format(Seleccion, sizeof Seleccion, "Slot Vehiculo (%s)\nSlot Vehiculo Premium1 (%s)\nSlot Vehiculo Premium2 (%s)\nSlot Vehiculo Premium3 (%s)", SlotUsado, SlotUsado2, SlotUsado3, SlotUsado4);
					ShowPlayerDialog(playerid, SELECCION_SLOT, DIALOG_STYLE_LIST, "Seleccione un Slot", Seleccion, "Aceptar", "Cancelar");
					return 1;
				}
		    }
		    else {
				DeletePVar(playerid, "ModelID");
				DeletePVar(playerid, "PriceID");
				DeletePVar(playerid, "FreeNo");
				return 1;
		    }
		}
		case SELECCION_SLOT:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:{
					    if(PlayerVehicleInfo[playerid][0][pvModel] == 0)
					    {
					        if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, "Debes ser mínimo nivel 2.");
					        SetPVarInt(playerid, "CVSlot", 1);
					        CrearCarroVenta(playerid, GetPVarInt(playerid, "PriceID"), GetPVarInt(playerid, "ModelID"));
					        return 1;
						} else return Message(playerid, COLOR_GRAD2, "Tienes tu primero slot ocupado.");
					}
					case 1:{
					    if(PlayerInfo[playerid][pDonateT] > 0){
					    	if(PlayerVehicleInfo[playerid][1][pvModel] == 0)
					    	{
					        	SetPVarInt(playerid, "CVSlot", 2);
					        	CrearCarroVenta(playerid, GetPVarInt(playerid, "PriceID"), GetPVarInt(playerid, "ModelID"));
		                    	return 1;
         					} else return Message(playerid, COLOR_GRAD2, "Ya tienes un vehículo en tu slot premium.");
     					} else return Message(playerid, COLOR_GRAD2, "No eres usuario Premium.");
         			}
         			case 2:{
						if(PlayerInfo[playerid][pDonateT] == 3){
						    if(PlayerVehicleInfo[playerid][2][pvModel] == 0)
						    {
						        SetPVarInt(playerid, "CVSlot", 3);
						        CrearCarroVenta(playerid, GetPVarInt(playerid, "PriceID"), GetPVarInt(playerid, "ModelID"));
						        return 1;
		        			} else return Message(playerid, COLOR_GRAD2, "Ya tienes un vehículo en tu slot premium2.");
       					} else return Message(playerid, COLOR_GRAD2, "No eres usuario Premium Oro.");
 					}
 					case 3:{
 					    if(PlayerInfo[playerid][pDonateT] == 4){
 					        if(PlayerVehicleInfo[playerid][3][pvModel] == 0)
 					        {
 					            SetPVarInt(playerid, "CVSlot", 4);
 					            CrearCarroVenta(playerid, GetPVarInt(playerid, "PriceID"), GetPVarInt(playerid, "ModelID"));
 					            return 1;
		            		} else return Message(playerid, COLOR_GRAD2, "Ya tienes un vehículo en tu slot premium3.");
            			} else return Message(playerid, COLOR_GRAD2, "No eres usuario Premium Definitivo.");
      				}
      			}
		    }
		    else {
		        DeletePVar(playerid, "ModelID");
				DeletePVar(playerid, "PriceID");
				DeletePVar(playerid, "FreeNo");
				return 1;
			}
   		}
		case COMPRAR_JOYAS:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
						if(CheckMoney(playerid, 25000))
						{
						    Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Anillo de Compromiso valorado en 25000$.");
						    PlayerInfo[playerid][pAnilloCom] += 1;
						    Bought(playerid, 25000);
						    Till(29, 2500);
						    return 1;
		                }
		            }
		            case 1:
		            {
		                if(CheckMoney(playerid, 50000))
		                {
		                    Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Anillo de Oro valorado en 50000$.");
		                    PlayerInfo[playerid][pAnilloOro] += 1;
		                    Bought(playerid, 50000);
		                    Till(29, 5000);
		                    return 1;
                  		}
            		}
            		case 2:
            		{
            		    if(CheckMoney(playerid, 100000))
            		    {
            		        Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Collar de Perlas valorado en 100000$.");
		                    PlayerInfo[playerid][pCollar] += 1;
		                    Bought(playerid, 100000);
		                    Till(29, 10000);
		                    return 1;
                  		}
            		}
            		case 3:
            		{
            		    if(CheckMoney(playerid, 140000))
            		    {
            		        Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Anillo de de Diamantes valorado en 140000$.");
            		        PlayerInfo[playerid][pAnilloDia] += 1;
            		        Bought(playerid, 140000);
            		        Till(29, 14000);
            		        return 1;
        		        }
    		        }
    		        case 4:
    		        {
    		            if(CheckMoney(playerid, 80000))
    		            {
    		                Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir una Pulsera de Oro valorada en 80000$.");
            		        PlayerInfo[playerid][pPulsera] += 1;
            		        Bought(playerid, 80000);
            		        Till(29, 8000);
            		        return 1;
        		        }
					}
					case 5:
					{
					    if(CheckMoney(playerid, 18000))
					    {
					        Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Arete de Diamantes valorado en 18000$.");
					        PlayerInfo[playerid][pAretes] += 1;
					        Bought(playerid, 18000);
					        Till(29, 1800);
					        return 1;
	        			}
      				}
      				case 6:
      				{
      				    if(CheckMoney(playerid, 46000))
      				    {
      				        Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Reloj de Oro valorado en 46000$.");
					        PlayerInfo[playerid][pReloj] += 1;
					        Bought(playerid, 46000);
					        Till(29, 4600);
					        return 1;
		        		}
					}
				}
			}
			return 1;
		}
		case VENDER_JOYAS:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(PlayerInfo[playerid][pAnilloCom] < 1) return Message(playerid, COLOR_GRAD2, "No tienes una anillo de compromiso para vender.");
		                Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de vender un anillo de compromiso por 20000$.");
                        PlayerInfo[playerid][pAnilloCom] -= 1;
						Earn(playerid, 20000);
						return 1;
		            }
		            case 1:
		            {
		                if(PlayerInfo[playerid][pAnilloOro] < 1) return Message(playerid, COLOR_GRAD2, "No tienes una anillo de oro para vender.");
		                Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de vender un anillo de oro por 42000$.");
                        PlayerInfo[playerid][pAnilloOro] -= 1;
						Earn(playerid, 42000);
						return 1;
		            }
		            case 2:
		            {
		                if(PlayerInfo[playerid][pCollar] < 1) return Message(playerid, COLOR_GRAD2, "No tienes un collar de perlas para vender.");
		                Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de vender un collar de perlas por 90000$.");
                        PlayerInfo[playerid][pCollar] -= 1;
						Earn(playerid, 90000);
						return 1;
		            }
		            case 3:
		            {
		                if(PlayerInfo[playerid][pAnilloDia] < 1) return Message(playerid, COLOR_GRAD2, "No tienes una anillo de diamantes para vender.");
		                Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de vender un anillo de diamantes por 125000$.");
                        PlayerInfo[playerid][pAnilloDia] -= 1;
						Earn(playerid, 125000);
						return 1;
		            }
		            case 4:
		            {
		                if(PlayerInfo[playerid][pPulsera] < 1) return Message(playerid, COLOR_GRAD2, "No tienes una pulsera de oro para vender.");
		                Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de vender una pulsera de oro por 71000$.");
                        PlayerInfo[playerid][pPulsera] -= 1;
						Earn(playerid, 71000);
						return 1;
		            }
		            case 5:
		            {
		                if(PlayerInfo[playerid][pAretes] < 1) return Message(playerid, COLOR_GRAD2, "No tienes aretes de diamantes para vender.");
		                Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de vender un conjunto de aretes de diamantes por 16000$.");
                        PlayerInfo[playerid][pAretes] -= 1;
						Earn(playerid, 16000);
						return 1;
		            }
		            case 6:
		            {
		                if(PlayerInfo[playerid][pReloj] < 1) return Message(playerid, COLOR_GRAD2, "No tienes una anillo de compromiso para vender.");
		                Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de vender un anillo de compromiso por 36400$.");
                        PlayerInfo[playerid][pReloj] -= 1;
						Earn(playerid, 36400);
						return 1;
		            }
    			}
			}
		    return 1;
		}
		case CARGAR_CAMION:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0:
		            {
	    	            Mercancia[playerid] = 1;
	        	        PlayerIsRuta[playerid] = 1;
	            		SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
            			return 1;
					}
					case 1:
					{
					    Mercancia[playerid] = 2;
					    PlayerIsRuta[playerid] = 1;
						SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
            			return 1;
      				}
	      			case 2:
    	  			{
      				    Mercancia[playerid] = 3;
      				    PlayerIsRuta[playerid] = 1;
      				    SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
            			return 1;
      				}
	      			case 3:
    	  			{
      				    Mercancia[playerid] = 4;
      				    PlayerIsRuta[playerid] = 1;
      				    SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
            			return 1;
           			}
	           		case 4:
    	       		{
        	   		    Mercancia[playerid] = 5;
           			    PlayerIsRuta[playerid] = 1;
           			    SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
            			return 1;
           			}
	 			}
			}
			else { SetVehicleToRespawn(GetPVarInt(playerid, "Camion")); RemovePlayerFromVehicle(playerid); DeletePVar(playerid, "Camion"); return 1; }
 		}
 		case BASURA:
 		{
 		    if(response)
 		    {
	      		SetPlayerCheckpoint(playerid, 2333.0420,-2053.1934,13.1128, 5.0);
	      		Message(playerid, COLOR_WHITE, "Dirígete a los Checkpoints.");
	      		BasuraPunto[playerid] = 1;
	      		return 1;
     		}
     		else { SetVehicleToRespawn(GetPVarInt(playerid, "Basurero")); RemovePlayerFromVehicle(playerid); DeletePVar(playerid, "Basurero"); return 1; }
 		}
 		case DROGAS_BANDAS:
 		{
 		    if(response)
 		    {
				if(GetPVarInt(playerid, "RecogiendoDrogas") > 0) return Message(playerid, COLOR_GRAD2, "* Aun estas recogiendo, si quieres cancelar usa /terminar.");
 		        new number = random(sizeof(PuntosDrogas));
           		SetPlayerCheckpoint(playerid, PuntosDrogas[number][0], PuntosDrogas[number][1], PuntosDrogas[number][2], 2.0);
				Message(playerid, COLOR_WHITE, "* {FFFF00}Granja: {FFFFFF}Dirigete a los checkpoints para recoger las drogas.");
				SetPVarInt(playerid, "RecogiendoDrogas", 1);
 		        switch(listitem)
				{
				    case 0:{    SetPVarInt(playerid, "TipoDroga", 1);	return 1;	}
				    case 1:{    SetPVarInt(playerid, "TipoDroga", 2);  	return 1;	}
				    case 2:{    SetPVarInt(playerid, "TipoDroga", 3);  	return 1;   }
				    case 3:{    SetPVarInt(playerid, "TipoDroga", 4);  	return 1;   }
				    case 4:{    SetPVarInt(playerid, "TipoDroga", 5);	return 1;   }
    			}
 			}
		}
 		case DIALOG_PUERTO:
 		{
	 	    if(response)
 		    {
 	    	    switch(listitem)
 	        	{
 	            	case 0:
 	            	{
	 	                if(CheckMoney(playerid,300))
			            {
 	    	            	PlayerInfo[playerid][pImplementos] = 1;
 	        	        	Message(playerid, COLOR_GRAD2, "* Has comprado los implementos necesarios para la pesca.");
 	            	    	Bought(playerid, 300);
 	            	    	Till(15, 300);
 	            	    	return 1;
 	                	}
 	            	}
	 	            case 1:
 		            {
						if(CheckMoney(playerid, 20))
						{
						    Till(15, 20);
						    Bought(playerid, 20);
						    PlayerInfo[playerid][pCarnada] += 500;
						    Message(playerid, COLOR_GRAD2, "* Has comprado carnada, te servira para realizar 5 tiros de redes.");
						    return 1;
 	                	}
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pPeces] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes nada para vender!");
						new ganado = PlayerInfo[playerid][pPeces]*15;
				    	PlayerInfo[playerid][pCheques] += ganado;
						format(string, sizeof(string), "* Has ganado %d$ vendiendo los peces a Roberto.", ganado);
						Message(playerid, YELLOW, string);
                    	PlayerInfo[playerid][pPeces] = 0;
                    	return 1;
					}
				}
			}
 		}
		case GPS_DIALOG:
		{
	 	    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0: { ShowPlayerDialog(playerid, BARES, DIALOG_STYLE_LIST, "{DC092F}Bares/Discotecas:", "{2471A3}- {FFFFFF}Alhambra\n{2471A3}- {FFFFFF}Club VIP\n{2471A3}- {FFFFFF}Bar Groove", "Marcar", "Atrás"); return 1; }
		            case 1: { ShowPlayerDialog(playerid, EMERGENCIAS, DIALOG_STYLE_LIST, "{DC092F}Emergencias:", "{2471A3}- {FFFFFF}LSMD\n{2471A3}- {FFFFFF}LSPD\n{2471A3}- {FFFFFF}SAEM", "Marcar", "Atrás"); return 1; }
		            case 2: { ShowPlayerDialog(playerid, NEGOCIOS, DIALOG_STYLE_LIST, "{DC092F}Negocios:", "{2471A3}- {FFFFFF}24/7 Ayuntamiento\n{2471A3}- {FFFFFF}24/7 Unity\n{2471A3}- {FFFFFF}24/7 Vinewood\n{2471A3}- {FFFFFF}Pizza Stark\n{2471A3}- {FFFFFF}Ammunation\n{2471A3}- {FFFFFF}Binco\n{2471A3}- {FFFFFF}Gimnasio\n{2471A3}- {FFFFFF}Victim\n{2471A3}- {FFFFFF}Lavanderia", "Marcar", "Atrás"); return 1; }
	    	        case 3: { ShowPlayerDialog(playerid, LUGARPUBLICO, DIALOG_STYLE_LIST, "{DC092F}Lugares Públicos:", "{2471A3}- {FFFFFF}Ayuntamiento\n{2471A3}- {FFFFFF}Banco\n{2471A3}- {FFFFFF}Gasolinera\n{2471A3}- {FFFFFF}Grotti\n{2471A3}- {FFFFFF}Cyber\n{2471A3}- {FFFFFF}CNN\n{2471A3}- {FFFFFF}Biblioteca\n{2471A3}- {FFFFFF}Paintball\n{2471A3}- {FFFFFF}Bowling\n{2471A3}- {FFFFFF}Iglesia", "Marcar", "Atrás"); return 1; }
	        	    case 4: { ShowPlayerDialog(playerid, SERVICIOS, DIALOG_STYLE_LIST, "{DC092F}Servicios:", "{2471A3}- {FFFFFF}Mecánicos\n{2471A3}- {FFFFFF}Taxistas\n{2471A3}- {FFFFFF}AutoLavado", "Marcar", "Atrás"); return 1; }
				}
		    }
 		}
 		case BARES:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0: SetPlayerCheckpoint(playerid, 1828.7018,-1682.9352,13.5469, 3.0);
		            case 1: SetPlayerCheckpoint(playerid, 1805.9573,-1576.6815,13.4496, 3.0);
		            case 2: SetPlayerCheckpoint(playerid, 2305.5979,-1652.2327,14.4630, 3.0);
        	 	} Message(playerid, COLOR_WHITE, "{018CFE}GPS: {FFFFFF}Ubicacion establecida en el mapa.");
        	 	return 1;
	    	} else { ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{2471A3}Mapa LS - Miami RP", "{DC092F}- {FFFFFF}Bares\n{DC092F}- {FFFFFF}Emergencias\n{DC092F}- {FFFFFF}Negocios\n{DC092F}- {FFFFFF}Lugares Públicos\n{DC092F}- {FFFFFF}Servicios", "Aceptar", "Salir"); return 1; }
		}
		case EMERGENCIAS:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0: SetPlayerCheckpoint(playerid, 1186.7639,-1324.5430,13.5593, 3.0);
		            case 1: SetPlayerCheckpoint(playerid, 1545.0645,-1675.4355,13.5596, 3.0);
	        	    case 2: SetPlayerCheckpoint(playerid, 2610.6838,-2396.7205,13.6252, 3.0);
         		} Message(playerid, COLOR_WHITE, "{018CFE}GPS: {FFFFFF}Ubicacion establecida en el mapa.");
         		return 1;
	    	} else { ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{2471A3}Mapa LS - Miami RP", "{DC092F}- {FFFFFF}Bares\n{DC092F}- {FFFFFF}Emergencias\n{DC092F}- {FFFFFF}Negocios\n{DC092F}- {FFFFFF}Lugares Públicos\n{DC092F}- {FFFFFF}Servicios", "Aceptar", "Salir"); return 1; }
		}
		case NEGOCIOS:
		{
		    if(response)
		    {
        	    switch(listitem)
				{
	                case 0: SetPlayerCheckpoint(playerid, 1352.7506,-1754.8582,13.3568, 3.0);
    	            case 1: SetPlayerCheckpoint(playerid, 1829.0416,-1843.0101,13.5781, 3.0);
        	        case 2: SetPlayerCheckpoint(playerid, 1315.1741,-900.1744,39.5781, 3.0);
            	    case 3: SetPlayerCheckpoint(playerid, 2101.3071,-1806.8872,13.5547, 3.0);
                	case 4: SetPlayerCheckpoint(playerid, 1363.2135,-1279.6903,13.5469, 3.0);
                	case 5: SetPlayerCheckpoint(playerid, 2245.0457,-1661.8610,15.4690, 3.0);
					case 6: SetPlayerCheckpoint(playerid, 2225.8884,-1724.2968,13.5599, 3.0);
					case 7: SetPlayerCheckpoint(playerid, 454.6484,-1503.0116,30.8653, 3.0);
					case 8: SetPlayerCheckpoint(playerid, 2013.4031,-1272.8674,23.8203, 3.0);
				} Message(playerid, COLOR_WHITE, "{018CFE}GPS: {FFFFFF}Ubicacion establecida en el mapa.");
				return 1;
	    	} else { ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{2471A3}Mapa LS - Miami RP", "{DC092F}- {FFFFFF}Bares\n{DC092F}- {FFFFFF}Emergencias\n{DC092F}- {FFFFFF}Negocios\n{DC092F}- {FFFFFF}Lugares Públicos\n{DC092F}- {FFFFFF}Servicios", "Aceptar", "Salir"); return 1; }
		}
		case LUGARPUBLICO:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0: SetPlayerCheckpoint(playerid, 1480.0077,-1739.7684,13.5469, 3.0);
		            case 1: SetPlayerCheckpoint(playerid, 305.5959,-1612.1421,33.2421, 3.0);
	    	        case 2: SetPlayerCheckpoint(playerid, 1003.5906,-940.7248,42.1797, 3.0);
	        	    case 3: SetPlayerCheckpoint(playerid, 555.1510,-1260.8953,17.2422, 3.0);
	            	case 4: SetPlayerCheckpoint(playerid, 1094.3595,-1390.4651,13.7299, 3.0);
	            	case 5: SetPlayerCheckpoint(playerid, 776.8192,-1389.5275,13.6205, 3.0);
	            	case 6: SetPlayerCheckpoint(playerid, 1560.0825,-1093.1130,23.6643, 3.0);
	            	case 7: SetPlayerCheckpoint(playerid, 2781.5659,-1814.6296,11.8438, 3.0);
	            	case 8: SetPlayerCheckpoint(playerid, 1714.1112,-1776.6904,13.6397, 3.0);
	            	case 9: SetPlayerCheckpoint(playerid, 2264.9971,-1339.5735,23.9818, 3.0);
         		} Message(playerid, COLOR_WHITE, "{018CFE}GPS: {FFFFFF}Ubicacion establecida en el mapa.");
         		return 1;
	    	} else { ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{2471A3}Mapa LS - Miami RP", "{DC092F}- {FFFFFF}Bares\n{DC092F}- {FFFFFF}Emergencias\n{DC092F}- {FFFFFF}Negocios\n{DC092F}- {FFFFFF}Lugares Públicos\n{DC092F}- {FFFFFF}Servicios", "Aceptar", "Salir"); return 1; }
		}
		case SERVICIOS:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: SetPlayerCheckpoint(playerid, 1602.6504,-2169.1699,13.6598, 3.0);
				    case 1: SetPlayerCheckpoint(playerid, 1814.0922,-1889.2008,13.4141, 3.0);
				    case 2: SetPlayerCheckpoint(playerid, 2527.5513,-1470.3193,23.6844, 3.0);
				} Message(playerid, COLOR_WHITE, "{018CFE}GPS: {FFFFFF}Ubicacion establecida en el mapa.");
				return 1;
	    	} else { ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{2471A3}Mapa LS - Miami RP", "{DC092F}- {FFFFFF}Bares\n{DC092F}- {FFFFFF}Emergencias\n{DC092F}- {FFFFFF}Negocios\n{DC092F}- {FFFFFF}Lugares Públicos\n{DC092F}- {FFFFFF}Servicios", "Aceptar", "Salir"); return 1; }
		}
		case DIALOG_ESTADO:
		{
			if(response)
			{
  				switch(listitem)
	        	{
	            	case 0:
	            	{
	                    ShowPlayerDialog(playerid,DIALOG_REG_ESTADO,DIALOG_STYLE_INPUT,"{FFFFFF}Escribe tu estado","{FFFFFF}Como máximo puedes escribir 17 carácteres","Aceptar","Cancelar");
	                    return 1;
    	         	}
					case 1:
					{
					    if(GetPVarInt(playerid, "EstadoON") == 0)
						{
							Delete3DTextLabel(Estado[playerid]);
							Estado[playerid] = Create3DTextLabel(PlayerInfo[playerid][pEstado], COLOR_ESTADO, 1.0, 1.0, 1.0, 15.0, 0,1);
							Attach3DTextLabelToPlayer(Estado[playerid], playerid, 0.0, 0.0, 0.3);
							SetPVarInt(playerid, "EstadoON", 1);
							DialogoEstado(playerid);
							return 1;
						}
						else if(GetPVarInt(playerid, "EstadoON") == 1)
						{
							Delete3DTextLabel(Estado[playerid]);
							DeletePVar(playerid, "EstadoON");
							DialogoEstado(playerid);
							return 1;
						}
					}
				}
			}
		}
		case DIALOG_REG_ESTADO:
		{
			if(response)
			{
        	    if(!DetectarSPAM(inputtext) && strlen(inputtext) < 18 && strlen(inputtext) > 0 && strfind(inputtext, "=", true) == -1 && strfind(inputtext, "\n", true) == -1)
				{
					format(PlayerInfo[playerid][pEstado], 18, inputtext);
					DialogoEstado(playerid);
					return 1;
				}
				else { ShowPlayerDialog(playerid,DIALOG_REG_ESTADO,DIALOG_STYLE_INPUT,"{FFFFFF}Formato Inválido","{FFFFFF}Has insertado un formato inválido. Límite 17 carácteres.\n Ej: Triste","Aceptar","Cancelar"); return 1; }
	        }
    	}
    	case DELE_BUY_SEX:
    	{
    	    if(response)
    	    {
    	        switch(listitem)
    	        {
					case 0:{
                        if(CheckMoney(playerid,150))
		            	{
							ShowPlayerDialog(playerid, DELE_BUY_SEXF, DIALOG_STYLE_LIST, "{DD1111}Tienda Sexual {FFFFFF}- Ropa De Mujer", "Ropa de Sexo 1\nRopa de Sexo 2\nRopa de Sexo 3\nRopa de Sexo 4\nRopa de Sexo 5\nRopa de Sexo 6\nRopa de Sexo 7\nRopa de Sexo 8", "Aceptar", "Salir");
							return 1;
						}
					}
					case 1:{
						if(CheckMoney(playerid,150))
		            	{
							ShowPlayerDialog(playerid, DELE_BUY_SEXM, DIALOG_STYLE_LIST, "{DD1111}Tienda Sexual {FFFFFF}- Ropa De Hombre", "Ropa de Sexo 1\nRopa de Sexo 2\nRopa de Sexo 3\nRopa de Sexo 4", "Aceptar", "Salir");
							return 1;
						}
					}
					case 2:{
					    if(CheckMoney(playerid,350))
					    {
							ShowPlayerDialog(playerid, DELE_BUY_SEXJ, DIALOG_STYLE_LIST, "{DD1111}Tienda Sexual {FFFFFF}- Juguetes De Diversion", "Juguete 1\nJuguete 2\nJuguete 3\nJuguete 4", "Aceptar", "Salir");
							return 1;
						}
					}
				}
			}
		}
    	case DELE_BUY_SEXF:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:	Skin(playerid, 63);
					case 1:	Skin(playerid, 75);
					case 2: Skin(playerid, 85);
         			case 3: Skin(playerid, 87);
            		case 4: Skin(playerid, 152);
		            case 5: Skin(playerid, 178);
		            case 6: Skin(playerid, 256);
		            case 7: Skin(playerid, 257);
            	}
             	ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
	            Message(playerid, COLOR_WHITE, "Has comprado un Traje de Sexo Femenino.");
	            Bought(playerid, 100);
	            Till(23, 100);
	            return 1;
           	}
    	}
    	case DELE_BUY_SEXM:
    	{
    	    if(response)
    	    {
    	        switch(listitem)
    	        {
    	            case 0: Skin(playerid, 18);
	            	case 1: Skin(playerid, 97);
		            case 2: Skin(playerid, 154);
		            case 3: Skin(playerid, 252);
				}
    			ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
       			Message(playerid, COLOR_WHITE, "Has comprado un Traje de Sexo Masculino.");
          		Bought(playerid, 100);
            	Till(23, 100);
	            return 1;
         	}
    	}
    	case DELE_BUY_SEXJ:
    	{
    	    if(response)
    	    {
    	        switch(listitem)
    	        {
    	            case 0: SafeGivePlayerWeapon(playerid, 10, 1);
	            	case 1: SafeGivePlayerWeapon(playerid, 11, 1);
		            case 2: SafeGivePlayerWeapon(playerid, 12, 300);
		            case 3: SafeGivePlayerWeapon(playerid, 13, 300);
				}
    			ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
       			Message(playerid, COLOR_WHITE, "Has comprado un Objeto De Diversion.");
          		Bought(playerid, 120);
            	Till(23, 120);
	            return 1;
         	}
    	}
    	case QUIT_EXTORTION:
    	{
    	    if(response)
    	    {
    	    	format(BizzInfo[GetPVarInt(playerid, "QuitExtortion")][bExtortion], 24, "Nadie");
    	    	format(string, sizeof(string), "Has dejado de ser el extorcionista del negocio de {FF7617}%s", PlayerName(GetPVarInt(playerid, "ExtortionID")));
    	        Message(playerid, COLOR_WHITE, string);
    	        format(string, sizeof(string), "* %s ha aceptado dejar de ser el extorcionista de tu negocio.", PlayerName(playerid));
    	        Message(GetPVarInt(playerid, "ExtortionID"), COLOR_GRAD2, string);
				OnBizzTextdrawUpdate(GetPVarInt(playerid, "QuitExtortion"));
				DeletePVar(playerid, "QuitExtortion");
				DeletePVar(playerid, "ExtortionID");
				UpdateBizz();
    	        return 1;
    	    }
    	    else
    	    {
    	        format(string, sizeof(string), "* %s no ha aceptado dejar de ser el extorcionista de tu negocio.", PlayerName(playerid));
    	        Message(GetPVarInt(playerid, "ExtortionID"), COLOR_GRAD2, string);
    	        Message(playerid, COLOR_GRAD2, "* Has rechazado una peticion.");
    	        DeletePVar(playerid, "QuitExtortion");
				DeletePVar(playerid, "ExtortionID");
    	        return 1;
    	    }
    	}
    	case ELECTRONIC_BUY:
    	{
    	    if(response)
    	    {
    	        switch(listitem)
    	        {
    	            case 0:
    	            {
    	        		if(CheckMoney(playerid,200))
		            	{
		                	new randphone = 100000 + random(899999);
							PlayerInfo[playerid][pPnumber] = randphone;
							format(string, sizeof(string), "Has comprado un nuevo teléfono cuyo número es: %d",PlayerInfo[playerid][pPnumber]);
				            Message(playerid, COLOR_WHITE, string);
							Bought(playerid, 400);
							Till(24, 85);
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    return 1;
						}
					}
  					case 1:
  					{
  					    if(CheckMoney(playerid,100))
		        	    {
			        	    ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            	SafeGivePlayerWeapon(playerid, 43, 36);
		            		Message(playerid, COLOR_WHITE, "Has comprado una cámara de fotos.");
			            	Bought(playerid, 120);
			                Till(24, 25);
			            	return 1;
						}
					}
					case 2:
					{
					    if(CheckMoney(playerid,260))
		    	        {
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    PlayerInfo[playerid][pWalkie] = 1;
				            Message(playerid, COLOR_WHITE, "Compraste el Walkie-Talkie - /walkie - /frecuencia - /wt");
				            Bought(playerid, 260);
							Till(24, 50);
				            return 1;
						}
					}
				}
    	    }
    	}
	}
	return 0;
}

UpdateHouses()
{
    new idx, File: file2, coordsstring[300];
	while (idx < sizeof(HouseInfo))
	{
	    HouseInfo[idx][hWorld] = idx;
	
		format(coordsstring, sizeof(coordsstring), "%d,%s,%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLevel],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hRooms],
		HouseInfo[idx][hRent],
		HouseInfo[idx][hRentabil],
		HouseInfo[idx][hWep],
		HouseInfo[idx][hAmmo],
		HouseInfo[idx][hMats],
		HouseInfo[idx][hDrugs],
		HouseInfo[idx][hSpeed],
		HouseInfo[idx][hEctasy],
		HouseInfo[idx][hRitalin],
		HouseInfo[idx][hHeroina],
		HouseInfo[idx][hMarihuana],
		HouseInfo[idx][hWorld],
		HouseInfo[idx][hTime]);

		if(idx == 0)	file2 = fopen("property.cfg", io_write);
		else			file2 = fopen("property.cfg", io_append);
		
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
}

UpdateBizz()
{
	new idx, File: file2, coordsstring[256];
	while (idx < sizeof(BizzInfo))
	{
		format(coordsstring, sizeof(coordsstring), "%d,%s,%s,%s,%f,%f,%f,%d,%d,%d,%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bName],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntrancex],
		BizzInfo[idx][bEntrancey],
		BizzInfo[idx][bEntrancez],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bTillEx]);

		if(idx == 0)	file2 = fopen("bizz.cfg", io_write);
		else			file2 = fopen("bizz.cfg", io_append);

		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
}

ABroadCast(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdminCP] >= level && AdminChat[i] == 0)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}

A_Info(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdminCP] >= 1 && AdminChat[i] == 0)
			{
				SendClientMessage(i, 0xFF9562FF, string);
			}
		}
	}
}

stock OOCOff(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gOoc[i] == 0)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

stock OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gNew[i] == 0)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

stock SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
		    {
                if(RadioOn[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	return 1;
}

stock SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
		    {
                if(gFam[i] == 0)
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	return 1;
}

	// zcmd:nps/anims ============================================================================================================================
    zcmd(ayudarol, playerid, params[])
	{
	    return ShowPlayerDialog(playerid, AYUDA_DIALOG, DIALOG_STYLE_LIST, "{FF0D00}>{2471A3}Miami Roleplay{FFFFFF}-{9024D3}Reglas de Rol", " {00FF00}>{FFFFFF}CarJack \n {00FF00}>{FFFFFF}DeathMatch \n {00FF00}>{FFFFFF}MetaGaming \n {00FF00}>{FFFFFF}PowerGaming \n {00FF00}>{FFFFFF}Badly Parked Car \n {00FF00}>{FFFFFF}Bad Driving \n {00FF00}>{FFFFFF}Revenge Kill \n {00FF00}>{FFFFFF}Noob Abuser", "Ver", "Salir");
	}
	zcmd(estilocaminar, playerid, params[])
    {
        if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /estilocaminar <1-13>");
        if(params[0] > 0 && params[0] < 14)
        {
        	PlayerInfo[playerid][pWalk] = params[0];
         	SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
          	Message(playerid, COLOR_GRAD2, "* Estilo de caminar ha sido cambiado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /estilocaminar <1-13>");
		return 1;
    }
	zcmd(apelear, playerid, params[]){
        if(PlayerToPoint(10, playerid, 767.6719,13.6320,1000.7010)){
	        ShowPlayerDialog(playerid, FSTYLE_DIALOG, DIALOG_STYLE_LIST, " Que le gustaria aprender?", "Me gustaría aprender Knee Head\t 1500$\nMe gustaría aprender Kung Fu\t 1000$\nMe gustaría aprender Boxeo\t 800$", "Sí", "No");
		} else Message(playerid, COLOR_GRAD2, "¡No estas en el GYM!");
		return 1;
	}
	zcmd(talk, playerid, params[])
	{
	    if(PlayerToPoint(5, playerid, 2611.4368,-2202.0574,-0.2188)){
	        CamelMenu(playerid);
			return 1;
		}
		else if(PlayerToPoint(5, playerid, 1489.5238,854.0300,-68.4357)){
	        if(GetPlayerMoney(playerid) < 8000) return Message(playerid, COLOR_GRAD2, "¡No tienes dinero para pagar el valor de la ceremonia!");
		    if(PlayerInfo[playerid][pMarried] == 1) return Message(playerid, COLOR_GRAD2, "¡Estas casado, no puedes usar este comando ahora!");
		    if(PlayerInfo[playerid][pSex] == 2) return Message(playerid, COLOR_GRAD2, "¡No puedes usar este comando siendo mujer!");
		    ShowPlayerDialog(playerid, MATRIMONIO_DIALOG, DIALOG_STYLE_INPUT,"{018CFE}Iglesia", "{FFFFFF}Por favor, ingrese la ID de la persona con\n la que quieres contraer matrimonio.","Aceptar","Cancelar");
	        return 1;
      	}
		else if(PlayerToPoint(5, playerid, 991.3137,-1941.4115,2835.0078)){
		    ShowPlayerDialog(playerid,DIALOG_PUERTO,DIALOG_STYLE_LIST,"Puerto de Los Santos","{FFFFFF}Implementos de Pesca\nComprar Carnada\nVender Peces","Aceptar","Cancelar");
            return 1;
      	}
      	else if(PlayerToPoint(5, playerid, 308.1695,-143.0952,999.6016)){
      	    if(CheckMoney(playerid, 10))
	        {
				ShowAmmunation(playerid);
				return 1;
			}
		}
		else if(PlayerToPoint(5, playerid, 316.1078,-133.5995,999.6016)){
			ShowPlayerDialog(playerid, DIALOG_AMMU_MANAGER,DIALOG_STYLE_LIST,"Ammunation", "Deseo mejorar mis habilidades a través de libros comprados\nQuiero informarme sobre mis habilidades con las diferentes armas", "Aceptar", "Cancelar");
		}
		else Message(playerid, COLOR_GRAD2, "No estas en un lugar donde puedas usar este comando.");
		return 1;
	}
    zcmd(trajepizza, playerid, params[])
    {
  		if(PlayerInfo[playerid][pJob] != 6) return Message(playerid, COLOR_GRAD2, " Usted no trabaja de Pizzero");
		if(PlayerToPoint(5, playerid, 369.0226,-114.5778,1001.4995)){
			ShowPlayerDialog(playerid,EQUIPO_PIZZA,DIALOG_STYLE_LIST,">> Equipo {FF0400}Pizza {D6D300}Stack {FFFFFF}<<","Ropa de Trabajo\nRopa Normal","Usar","Salir");
   		}
   		return 1;
    }
    zcmd(cfumar, playerid, params[])
    {
        if(cNicotina[playerid] == 1) 					return Message(playerid, COLOR_GRAD2, 		"¡No tienes ganas de fumar!");
    	else if(PlayerInfo[playerid][pCigarettes] == 0) return Message(playerid, COLOR_GRAD2, 		"¡No tienes cigarros!");
	    else if(PlayerInfo[playerid][pLighter] == 0) 	return Message(playerid, COLOR_GRAD2, 		"¡No tienes encendedor!");
	    else if(GetPVarInt(playerid, "IsSmoking") > 0) 	return Message(playerid, COLOR_GRAD2, 		"¡Ya estas fumando!");
	    else
	    {
	        new randsmoke = random(6);
	        if(randsmoke < 5)
	        {
				new string[72];
	            PlayerInfo[playerid][pLighter] -= 1;	PlayerInfo[playerid][pCigarettes] -= 1;
	    		format(string, sizeof(string), "* %s abre su cajetilla y enciende un cigarro.", PlayerName(playerid));
			    ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			    SetPVarInt(playerid, "IsSmoking", 60);
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
				Message(playerid, COLOR_WHITE, "(Fumando) Ahora puedes utilizar /dfumar (para dejar de fumar).");
                new timer = SetTimerEx("SmokingCigarette", 1000, true, "i", playerid);
                SetPVarInt(playerid, "SmokeTimer", timer);
			}
	        else
	        {
	            PlayerInfo[playerid][pLighter] -= 1;
    			Message(playerid, COLOR_GRAD2, "¡Fallaste al encender el cigarro!");
	        }
	    }
	    return 1;
	}
    zcmd(dfumar, playerid, params[]){
        if(GetPVarInt(playerid, "IsSmoking") > 0){
            new string[64];
        	DeletePVar(playerid, "IsSmoking");
         	format(string, sizeof(string), "* %s tira el cigarro al suelo y lo pisa.", PlayerName(playerid));
         	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
          	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
          	KillTimer(GetPVarInt(playerid, "SmokeTimer"));
          	ClearAnimations(playerid);
        } else Message(playerid, COLOR_GREY, "¡No está fumando!");
        return 1;
    }
	zcmd(comer, playerid, params[]){
        if(!IsAtBar(playerid)) return Message(playerid, COLOR_GRAD2, "  No estas en un lugar donde beber!");
        if(GetPlayerMoney(playerid) < 0) return Message(playerid, COLOR_FADE2, "Camarero dice: Vete a otro lugar a comer gratis!");
	    if(IsPlayerConnected(playerid)){
		    ShowPlayerDialog(playerid, BAR_MENU, DIALOG_STYLE_LIST, "Menú del Día", "Platos Combinados & Tapas\nRefrescos & Bebidas & Vinos", "Ver", "Salir");
	    } else Message(playerid, COLOR_GRAD2, " Usted no esta conectado! ");
	    return 1
	}
	zcmd(lockhq, playerid, params[])
	{
	    if(IsPlayerConnected(playerid)){
         	if(Team_Groove(playerid)){
				if(hqlock[GS] == 0) {hqlock[GS] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
				else if(hqlock[GS] == 1) {hqlock[GS] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
			}
    		else if(Team_LK(playerid)){
				if(hqlock[LK] == 0) {hqlock[LK] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[LK] == 1) {hqlock[LK] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	else if(Mafia_Italiana(playerid)){
				if(hqlock[ITA] == 0) {hqlock[ITA] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[ITA] == 1) {hqlock[ITA] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	else if(Mafia_Rusa(playerid)){
				if(hqlock[RUS] == 0) {hqlock[RUS] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[RUS] == 1) {hqlock[RUS] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  /*	else if(Hitman(playerid)){
				if(hqlock[HIT] == 0) {hqlock[HIT] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[HIT] == 1) {hqlock[HIT] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}*/
		  	else if(Terroristas(playerid)){
		  	    if(hqlock[TER] == 0) {hqlock[TER] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
		  	    else if(hqlock[TER] == 1) {hqlock[TER] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
	    	} else { Message(playerid, COLOR_GREY, "No tienes las llaves del HQ!"); return 1; }
	    }
	    return 1;
	}
	//zcmd: Evento
    new Float:xe, Float:ye, Float:ze;
    zcmd(evento, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(EventoOn != 1){
            EventoOn = 1;
			new string[128];
            GlobalMsg(-1, " {CDE8F0}Atención <<");
            format(string, sizeof(string), "{FFFFFF}El modo evento ha sido activado por {CDE878}%s, {FFFFFF}usa {519760}/participar {FFFFFF}para entrar.", PlayerName(playerid));
            GlobalMsg(-1, string);
            GlobalMsg(-1, "{FFFFFF}Recuerde que al entrar al evento perderá sus armas. Si entra siga las indicaciones de los administradores.");
            GetPlayerPos(playerid,xe,ye,ze);
		}else{
            EventoOn = 0;
            GlobalMsg(-1, "{FFFFFF}El modo evento ha sido {F80F60}desactivado.");
        }
        return 1;
	}
	zcmd(participar, playerid, params[]){
        if(EventoOn == 1){
            SetPlayerPos(playerid,xe,ye,ze);
            SetPlayerArmour(playerid, 100);
            SafeResetPlayerWeapons(playerid);
            SetHP(playerid, 100);
            GText(playerid, "~g~Entraste al modo evento~n~~w~Sigue las instrucciones del organizador", 7000, 4);
		} else Message(playerid, COLOR_GRAD2, "No está activado el modo evento");
		return 1;
	}
	zcmd(neon,playerid, params[]){
	if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_RED, "Tienes que estar en un vehículo!");
	new veh = GetPlayerVehicleID(playerid), choice[32];  new slotveh = GetVehicleSlot(playerid, veh);
	if(PlayerVehicleInfo[playerid][slotveh][pvNeon] <= 1) return Message(playerid, COLOR_GREY, "No tienes un Neon en este vehiculo");
	if(GetVehicleOwner(veh) == playerid){
		if(sscanf(params, "s[32]", choice)) return Message(playerid, COLOR_GREY, "/Neon [Prender / Apagar]");{
		    if(strcmp(choice,"prender",true) == 0){
				 if(mostrandoneon[veh] == true) return Message(playerid, COLOR_RED, "Ya tienes el neon encendido!");
			 	 ShowNeon(playerid, veh);
				 Message(playerid, -1, "Encendiste el neon, cuando quieras apagarlo usa [/neon apagar]");
				 mostrandoneon[veh] = true;
			}
     else if(strcmp(choice,"apagar",true) == 0 && mostrandoneon[veh] == true){
				 DestruirNeon(veh);
				 Message(playerid, -1, "Apagaste el neon, cuando quieras volverlo a encender usa [/neon prender]");
				 mostrandoneon[veh] = false;
			}
		}
	}
	return 1;
}
	// zcmd:info ============================================================================================================================
	zcmd(soporte, playerid, params[])
	{
        ClearChatbox(playerid, 8);
	    Message(playerid, -1, "{C8D228}-= {00B39D}Centro de Soporte {FFFFFF}Miami Roleplay {C8D228}=-");
	    Message(playerid, -1, "{FFFFFF}- Dudas sobre terminos de juego - {FF0828}/duda");
	    Message(playerid, -1, "{FFFFFF}- Reportar a un jugador por infringir las normas - {46ED8F}/re");
	    Message(playerid, -1, "{FFFFFF}- ¿Necesistas asistencia? - {00A400}/solicitaradmin");
	    return 1;
 	}
	zcmd(info, playerid, params[]){
		new ver[700];
		strcat(ver, "{FFFF00}Aqui te mostramos los detalles mas importantes de la versión 1.0 Beta del servidor:\n\n");
		strcat(ver, "\t{FFFFFF}- Agregado la combinación de teclas 'Espacio + Y' para quitar y colocar seguro del coche.\n\t{FFFFFF}- Reemplazados los comandos '/comer', '/comprar', '/catalogo' y '/talk' por la tecla 'Y'.");
		strcat(ver, "\n\t{FFFFFF}- Agregado el comando /emisoras para el coche.");
		strcat(ver, "\n\t- Pronto la version 1.0 Alpha del Servidor\n\n\t\t\t\t{429EE6}Miami Roleplay 2022");ShowPlayerDialog(playerid,512,DIALOG_STYLE_MSGBOX, "{FF231D}Versión del Servidor", ver, "Ok", "");
        return 1;
	}
	zcmd(redes, playerid, params[]){
	    new string[350];
	    strcat(string, "{21bea7}Aqui se muestran las redes sociales del servidor:\n");
		strcat(string, "\n\n Discord: https://discord.gg/AN2cy7FFT8");
		strcat(string, "\n\n Instagram: -Proximamente-");
		strcat(string, "\n\n Facebook: -Proximamente-");
	    ShowPlayerDialog(playerid,1203,DIALOG_STYLE_MSGBOX, "{FF231D}Links", string, "Ok", "");
	    return 1;
  	}
	zcmd(servicios, playerid, params[]){
        ClearChatbox(playerid, 10);
	    Message(playerid, -1, " {FFFFFF}* {658EBB}Números de Servicios {FFFFFF}*");
	 	Message(playerid, -1, " {FFFFFF}* Emergencias - {65BD7D}# 911");
	 	Message(playerid, -1, " {FFFFFF}* Mecanicos - {65BD7D}# 555");
	 	Message(playerid, -1, " {FFFFFF}* Pizza Stack - {65BD7D}# 111");
	 	Message(playerid, -1, " {FFFFFF}* Taxi Cab Company - {65BD7D}# 444");
	 	return 1;
	}
    zcmd(facciones, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] >= 2012 || PlayerInfo[playerid][pFacciones] == 1){
			Message(playerid, COLOR_BLUE, "= ID'S de Facciones =");
			Message(playerid, -1, "1. LSPD - 2.Al-Qaeda - 3. SAEM - 4. LSMC - 5. Hitman (Desactivada) - 6. CNN");
			Message(playerid, -1, "7. Mecanicos - 8. Gobierno - 9. Groove - 10. LK - 11. Rusos - 12. LCN");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
	zcmd(discord, playerid, params[]){
        Message(playerid, -1, " {2471a3}- https://discord.gg/Gp3jWfqB6Z -");
		return 1;
	}
	//Canales
	zcmd(togac, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] > 0){
            if(AdminChat[playerid] == 0){
		        AdminChat[playerid] = 1;
		        Message(playerid, COLOR_GRAD2, "- Canal de administración desactivado");
		    }
		    else{
		        AdminChat[playerid] = 0;
		        Message(playerid, COLOR_GRAD2, "- Canal de administración activado");
		    }
        } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        return 1;
    }
   	zcmd(togooc, playerid, params[]){
		if (gOoc[playerid] == 0){
		    gOoc[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "    Desactivaste el chat de ayuda.");
		}
		else{
			gOoc[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "    Activaste el chat de ayuda.");
		}
		return 1;
	}
 	zcmd(togfam, playerid, params[]){
        if(gFam[playerid] == 0){
            gFam[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Chat de Facción desactivado.");
		}
		else{
		    gFam[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Chat de Facción activado.");
		}
        return 1;
    }
    zcmd(tognews, playerid, params[]){
        if(gNew[playerid] == 0){
            gNew[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Chat de Radio/Ads desactivado.");
		}
		else{
		    gNew[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Chat de Radio/Ads activado.");
		}
        return 1;
    }
    zcmd(togb, playerid, params[]){
        if(gBcmd[playerid] == 0)
        {
            gBcmd[playerid] = 1;
            Message(playerid, COLOR_GRAD2, "Chat de comando /b desactivado.");
        }
        else{
            gBcmd[playerid] = 0;
            Message(playerid, COLOR_GRAD2, "Chat de comando /b activado.");
        }
        return 1;
    }
	zcmd(togphone, playerid, params[]){
        if (PhoneOnline[playerid] == 0){
			PhoneOnline[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Teléfono apagado.");
		}
		else{
			PhoneOnline[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Teléfono encendido.");
		}
        return 1;
    }
    zcmd(id, playerid, params[]){
        if(!sscanf(params, "u", params[0])){
            new string[32];
            format(string, sizeof(string), "(%d) - %s",params[0], PlayerName(params[0]));
			Message(playerid, COLOR_GRAD2, string);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /id <NombreJugador>");
        return 1;
    }
    zcmd(clientes, playerid, params[]){
  		if(PlayerInfo[playerid][pJob] != 9) return Message(playerid, COLOR_GRAD2, "¡No eres Taxista!");
		if(TransportDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No estás en servicio!");
		if(!Taxi_Vehicle(GetPlayerVehicleID(playerid))) return Message(playerid, COLOR_GRAD2, "¡No estás en un taxi!");
		TaxiRadar(playerid);
		return 1;
	}
    zcmd(removegps, playerid, params[]){
    	if(IsPlayerConnected(playerid)){
			DisablePlayerCheckpoint(playerid);
		}
		return 1;
	}
	zcmd(notuto, playerid, params[]){
	    if(GetPVarInt(playerid, "TutTime") > 0){
			SetPVarInt(playerid, "TutTime", 12);
   			Tutorial_Inside(playerid);
		} else Message(playerid, COLOR_GRAD2, "¡Usted no está en el tutorial!");
		return 1;
	}
	zcmd(apeaje, playerid, params[])
	{
	    if(PlayerToPoint(10.0,playerid,60.1758,-1525.3137,4.9496))
	    {
	        if(CheckMoney(playerid, 30))
	        {
	            Message(playerid, COLOR_WHITE, "{DC092F}PEAJE: {FFFFFF}Gracias por colaborar, que tenga un buen viaje.");
	            SetDynamicObjectRot(pea1,  1.00, 25.00, 83.00);
				SetTimer("BajarBarra", 4000, false);
	            Bought(playerid, 30);
	            return 1;
 			}
		}
		else if(PlayerToPoint(10.0,playerid,42.3647,-1538.4790,5.2062))
		{
		    if(CheckMoney(playerid, 30))
		    {
		        Message(playerid, COLOR_WHITE, "{DC092F}PEAJE: {FFFFFF}Gracias por colaborar, sea bienvenido a Los Santos.");
	            SetDynamicObjectRot(pea2, -3.00, -33.00, 83.00);
				SetTimer("BajarBarra2", 4000, false);
	            Bought(playerid, 30);
	            return 1;
			}
	    } else Message(playerid, COLOR_GRAD2, "No estas en el peaje.");
	    return 1;
	}
	zcmd(hidetaxi, playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			TextDrawHideForPlayer(playerid, Taximeter[playerid]);
		}
		return 1;
    }
    zcmd(eject, playerid, params[])
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            new State = GetPlayerState(playerid), string[90];
            if(State!=PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GRAD2, "¡No eres conductor!");
            if(!sscanf(params, "u", params[0]))
            {
                if(IsPlayerConnected(params[0]))
				{
    				if(params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No te puedes echar ati mismo!");
        			if(IsPlayerInAnyVehicle(params[0]))
			        {
						if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(params[0]))
						{
	      					format(string, sizeof(string), "* %s agarra fuertemente a %s y lo expulsa del vehículo.", PlayerName(playerid), PlayerName(params[0]));
					    	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
				    	    RemovePlayerFromVehicle(params[0]);
						} else Message(playerid, COLOR_GRAD2, "El jugador no está en tu vehículo");
					} else Message(playerid, COLOR_GRAD2, "El jugador no está en un vehículo");
				} else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
            } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /eject <ID>");
        } else Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
        return 1;
    }
    //zcmd [Cmd's Houses]
    zcmd(vendercasa, playerid, params[])
    {
        if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_RED, "No posees una propiedad.");
        if(PlayerToPoint(3.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex],HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey],HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez]))
		{
			if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
			    new string[60], IP[18];
			    new sell = (HouseInfo[PlayerInfo[playerid][pPhousekey]][hValue]/4)*3;
				new total = sell+HouseInfo[PlayerInfo[playerid][pPhousekey]][hRentabil];
				GetPlayerIp(playerid, IP, 18);
				Earn(playerid, total);
				format(string, sizeof(string), "Has vendido tu propiedad. Has recuperado %d$(3/4)",total);
				Message(playerid, COLOR_WHITE, string);
				format(string, sizeof string, "* %s(%s) ha vendido la casa ID %d", PlayerName(playerid), IP, PlayerInfo[playerid][pPhousekey]);
				Log("Logs/Propiedades.log", string);
				SellHouse(playerid, PlayerInfo[playerid][pPhousekey]);
				PlayerInfo[playerid][pPhousekey] = 9999;
			} else Message(playerid, COLOR_RED, "No posees una propiedad.");
		} else Message(playerid, COLOR_RED, "¡Debes estar cerca de tu casa para venderla!");
        return 1;
    }
    zcmd(ofrecercasa, playerid, params[])
    {
        if(sscanf(params, "ud", params[0], params[1])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /ofrecercasa <PlayerID> <Precio>");
        if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_RED, "No posees una propiedad.");
        if(PlayerToPoint(3.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex],HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey],HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez]))
		{
            if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
			    if(PlayerInfo[params[0]][pLevel] >= HouseInfo[PlayerInfo[playerid][pPhousekey]][hLevel])
			    {
			        new string[128];
			        SetPVarInt(params[0], "OwnableHousePlayer", playerid);
			        SetPVarInt(params[0], "OwnableHousePrice", params[0]);
				    SetPVarInt(params[0], "Petition_ID", 4);
				    SetPVarInt(params[0], "Facturing", 1);
                	format(string, sizeof(string), "Ofreciste a %s tu casa por %d$", PlayerName(params[0]), params[1]);
     				Message(playerid, COLOR_WHITE, string);
      				format(string, sizeof(string), "\t\t-- Adquirir Propiedad --\t\t\n\t* %s te ofrece su casa a %d$, ¿acepta?", PlayerName(playerid), params[1]);
       				SendRequest(params[0],  string);
                	return 1;
          		} else Message(playerid, COLOR_GRAD2, "El jugador no tiene el nivel que requiere la casa.");
            } else Message(playerid, COLOR_RED, "No posees una propiedad.");
        } else Message(playerid, COLOR_RED, "¡Debes estar cerca de tu casa para venderla!");
        return 1;
    }
    zcmd(rcuarto, playerid, params[])
    {
        for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
			{
   				if(HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRent] > 0)
			    {
			        new string[64];
					if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
     					Message(playerid, COLOR_RED2, "Tú posees una propiedad. No hace falta que rentes una.");
          				return 1;
					}
					if(HouseInfo[h][hRooms] < 1) return Message(playerid, COLOR_RED2, "¡No hay habitaciones disponibles!");
					if(PlayerInfo[playerid][pRent] > 0) return Message(playerid, COLOR_RED2, "¡Ya estás pagando una renta!");
					if(GetPlayerMoney(playerid) >= HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPhousekey] = h;
      					PlayerInfo[playerid][pEntered] = h;
						PlayerInfo[playerid][pRent] = HouseInfo[PlayerInfo[playerid][pPhousekey]][hRent];
						Bought(playerid, HouseInfo[h][hRent]);
						HouseInfo[PlayerInfo[playerid][pPhousekey]][hRentabil] = HouseInfo[PlayerInfo[playerid][pPhousekey]][hRentabil]+HouseInfo[h][hRent];
						Message(playerid, COLOR_WHITE, "Has rentado esta casa. Ahora podrás vivir aquí.");
						format(string, sizeof(string), "Cada PayDay, pagarás %d$ de Renta.", PlayerInfo[playerid][pRent]);
						Message(playerid, COLOR_WHITE, string);
						Message(playerid, COLOR_WHITE, "Utiliza /desrentar para cancelar la renta.");
						HouseInfo[PlayerInfo[playerid][pPhousekey]][hRooms] -= 1;
						OnPropTextdrawUpdate(PlayerInfo[playerid][pPhousekey]);
					} else Message(playerid, COLOR_RED2, "No tienes suficientes fondos para rentar esta casa.");
				} else Message(playerid, COLOR_RED2, "Esta casa no se encuentra disponible para alquilarla.");
			}
		}
        return 1;
    }
    zcmd(emisoras, playerid, params[])
	{
 	if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "{00FF00}*Sube A Un Vehiculo Para Usar Este Comando.");
    ShowPlayerDialog(playerid, RadioFixFlow_., DIALOG_STYLE_LIST, "Elije Tu Radio","Europa Plus\nRadio Record\nApagar Radio","Seleccionar","Salir");
    return 1;
	}
    // zcmd:puente
    zcmd(puente, playerid, params[])
	{
	    new string[68], idcar = GetPlayerVehicleID(playerid);
    	if(GetPVarInt(playerid, "Ganzuas") == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes ganzúas!");
    	if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
    	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GRAD2, "No eres el conductor.");
    	if(gEngine[playerid] == 1 || IsABike(idcar)) { return 1; }
		if(NoBattery(idcar)) return Message(playerid, COLOR_GRAD2, "¡Vehículo sin batería!");
		if(VehicleDeath[idcar]) return Message(playerid, COLOR_GRAD2, "Este vehículo está dañado, no puedes volverlo a prender.");
		if(OwnableVehicle[idcar]) { if(PlayerVehicleInfo[playerid][0][pvID] == idcar || PlayerVehicleInfo[playerid][1][pvID] == idcar || PlayerVehicleInfo[playerid][2][pvID] == idcar || PlayerVehicleInfo[playerid][3][pvID] == idcar) { return 1; } }
		if(HireKey[playerid] == idcar) { return 1; }
		
		format(string, sizeof(string), "* %s utiliza unas ganzúas y cruza los cables.", PlayerName(playerid));
		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
        SetTimerEx("StartingTheVehicle",2500,false,"i",playerid);
		GameTextForPlayer(playerid, "~w~haciendo puente.",2500,3);
		gEngine[playerid] = 1;
		return 1;
	}
 	zcmd(tlc, playerid, params[])
    {
        if(Team_LSPD(playerid))
        {
        	if(pdtrace != 0 || pdtrace_x != 0 || pdtrace_y != 0 || pdtrace_z != 0)
         	{
                Message(playerid, 0xFF8080FF, ">><<>><<>> Estableciendo contacto ... >><<>><<>>");
	            Message(playerid, COLOR_WHITE, "GPS: Contacto establecido, ubicación marcada en el mapa.");
				SetPlayerCheckpoint(playerid,pdtrace_x,pdtrace_y,pdtrace_z,8.0);
	        }
	        else Message(playerid, COLOR_WHITE, "Error en la localizacion de la persona que llama.");
		}
	    else if(Team_SAMUR(playerid))
        {
        	if(emdtrace != 0 || emdtrace_x != 0 || emdtrace_y != 0 || emdtrace_z != 0)
         	{
	            Message(playerid, COLOR_WHITE, "Ultima llamada del lugar marcados en rojo en el mapa");
	            Message(playerid, COLOR_WHITE, "Utiliza: /removegps para remover el checkpoint");
				SetPlayerCheckpoint(playerid,emdtrace_x,emdtrace_y,emdtrace_z,8.0);
	        } else Message(playerid, COLOR_WHITE, "Error al localizar!");
		} else Message(playerid, COLOR_WHITE, "{DC092F}No Autorizado.");
        return 1;
    }
	zcmd(desalojar, playerid, params[]){
        if(!sscanf(params, "u", params[0])){
            new bouse = PlayerInfo[playerid][pPhousekey], string[64];
			if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0){
			    if(IsPlayerConnected(params[0]) || params[0] == playerid){
			        if(PlayerInfo[params[0]][pPhousekey] == PlayerInfo[playerid][pPhousekey]){
	    				format(string,sizeof(string), "Desalojaste a %s", PlayerName(params[0]));
		    			Message(playerid, COLOR_WHITE, string);
						Message(params[0], COLOR_RED2, "No tienes casa, tu amo canceló la renta.");
						PlayerInfo[params[0]][pPhousekey] = 9999;
						PlayerInfo[params[0]][pRent] = 0;
						HouseInfo[bouse][hRooms] += 1;
						OnPropTextdrawUpdate(bouse);
					} else Message(playerid, COLOR_RED2, "El jugador no te ha alquilado la casa.");
			    } else Message(playerid, COLOR_RED2, "Jugador no conectado.");
			} else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /desalojar <PlayerID>");
        return 1;
    }
	zcmd(desrentar, playerid, params[])
    {
		if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			Message(playerid, COLOR_RED2, "No puedes desrentar tu propia casa.");
			return 1;
		}

		if(PlayerInfo[playerid][pRent] < 1 || PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_RED2, "¡No has rentado nada!");

		HouseInfo[PlayerInfo[playerid][pPhousekey]][hRooms] += 1;
		OnPropTextdrawUpdate(PlayerInfo[playerid][pPhousekey]);
		PlayerInfo[playerid][pPhousekey] = 9999;
		PlayerInfo[playerid][pRent] = 0;
		Message(playerid, COLOR_WHITE, "Dejaste de rentar una casa. Ahora eres un sin-techo.");
		return 1;
    }
	zcmd(cinfo, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x[64];
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
			    if(PlayerToPoint(3.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
				{
				    if(HouseInfo[h][hOwned] == 0)
				    {
				        Message(playerid, COLOR_GREEN, "- Propiedad en Venta - Información");
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Valor: %d   -   Nivel: %d", HouseInfo[h][hValue],HouseInfo[h][hLevel]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "ID: %d", HouseInfo[h][hWorld]);
				        Message(playerid, COLOR_WHITE, x);
				        Message(playerid, COLOR_YELLOW2, "- Utiliza /comprarcasa, para comprar la casa");
				        return 1;
					}
					if(PlayerInfo[playerid][pPhousekey] == h)
				    {
				        Message(playerid, COLOR_RED, "- Propiedad Privada -");
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Valor: %d   -   Nivel: %d", HouseInfo[h][hValue],HouseInfo[h][hLevel]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones Disponibles: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Armario: (Wep: %d - Ammo: %d)", HouseInfo[h][hWep],HouseInfo[h][hAmmo]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Bloqueada: %d", HouseInfo[h][hLock]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "ID: %d", HouseInfo[h][hWorld]);
				        Message(playerid, COLOR_WHITE, x);
				        return 1;
					}
					if(HouseInfo[h][hRent] > 0 && PlayerInfo[playerid][pPhousekey] != h)
				    {
				        Message(playerid, COLOR_YELLOW, "- Propiedad en Renta - Información");
				        format(x, sizeof(x), "Dueño: %s", HouseInfo[h][hOwner]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Renta: %d$", HouseInfo[h][hRent]);
				        Message(playerid, COLOR_WHITE, x);
				        Message(playerid, COLOR_YELLOW2, "- Utiliza /rcuarto, para rentar una habitación");
				        return 1;
					} else { Message(playerid, COLOR_GRAD2, "No hay información disponible para esta propiedad!"); return 1; }
				}
			}
		} else Message(playerid, COLOR_GRAD2, "¡Necesitas estar conectado!");
		return 1;
	}
    zcmd(houseid, playerid, params[])
    {
        new string[32];
        for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(1.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
			{
   				format(string, sizeof(string), "Casa ID: %d", h);
			    Message(playerid, COLOR_GRAD2,string);
			    break;
			}
		}
		return 1;
    }
    zcmd(vercasa, playerid, params[])
   	{
   	    if(LookHouse[playerid] > 3) return Message(playerid, COLOR_GRAD2, "No puedes volver a ver mas casas hasta el proximo PayDay.");
    	for(new h = 0; h < sizeof(HouseInfo); h++)
		{
  			if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
	    	{
      			if(HouseInfo[h][hOwned] == 1) return Message(playerid, COLOR_RED2, "¡No puedes ver una casa con dueño!");
				if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
				{
    				new string[64];
			    	format(string, sizeof string, "Esta propiedad requiere nivel %d para verla.", HouseInfo[h][hLevel]);
				    Message(playerid, COLOR_RED2, string);
				    return 1;
				}
				SetPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],0,HouseInfo[h][hInt],(playerid+1000));
				Message(playerid, COLOR_WHITE, "Tienes 25 segundos para ver esta casa.");
				new timer = SetTimerEx("OutHouse", 25000, false, "i", playerid);
				SetPVarInt(playerid, "TimerHouse", timer);
				SetPVarInt(playerid, "IDHouse", h);
				LookHouse[playerid]++;
				return 1;
			}
		}
		return 1;
	}
    zcmd(comprarcasa, playerid, params[])
    {
        for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
			{
   				if(HouseInfo[h][hOwned] == 1) return Message(playerid, COLOR_RED2, "¡Esta casa ya tiene dueño!");
				if(PlayerInfo[playerid][pPhousekey] != 9999) return Message(playerid, COLOR_RED2, "¡Ya posees una propiedad!");
				if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
				{
				        new string[52];
						format(string, sizeof(string), "Esta propiedad requiere que seas nivel %d", HouseInfo[h][hLevel]);
						Message(playerid, COLOR_RED2, string);
						return 1;
				}
				if(GetPlayerMoney(playerid) >= HouseInfo[h][hValue])
				{
				    new string[60];
					PlayerInfo[playerid][pPhousekey] = h;
					HouseInfo[h][hOwned] = 1;
					HouseInfo[h][hTime] = gettime() + 2592000;
					PlayerInfo[playerid][pEntered] = h;
					format(HouseInfo[h][hOwner], 24, PlayerName(playerid));
					Bought(playerid, HouseInfo[h][hValue]);
					SetPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],0,HouseInfo[h][hInt],HouseInfo[h][hWorld]);
					Message(playerid, COLOR_WHITE, "Felicidades por comprar esta casa. Utiliza /ayuda casa");
					format(string, sizeof string, "* %s ha comprado la casa ID %d", PlayerName(playerid), h);
					Log("Logs/Propiedades.log", string);
					OnPropTextdrawUpdate(h);
					UpdateHouses();
					return 1;
				}
				else Message(playerid, COLOR_RED2, "No tienes fondos suficientes para comprarte esta propiedad.");
			}
		}
 		return 1;
    }
	zcmd(comprarvip, playerid, params[])
	{
	    if(PlayerInfo[playerid][pDonateT] > 2)
	    {
	        for(new h = 0; h < MAX_HOUSES; h++)
	        {
	            if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
	            {
	                if(HouseInfo[h][hOwned] == 1) return Message(playerid, COLOR_RED2, "¡Esta casa ya tiene dueño!");
	                if(PlayerInfo[playerid][pPhousevip] != 9999) return Message(playerid, COLOR_RED2, "¡Ya posees una propiedad!");
	                PlayerInfo[playerid][pPhousevip] = h;
	                HouseInfo[h][hOwned] = 1;
					PlayerInfo[playerid][pEntered] = h;
					format(HouseInfo[h][hOwner], 24, PlayerName(playerid));
	                SetPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],0,HouseInfo[h][hInt],HouseInfo[h][hWorld]);
	                Message(playerid, COLOR_GRAD2, "Acabas de adquirir esta casa premium. Utiliza /ayuda casa");
					OnPropTextdrawUpdate(h);
					UpdateHouses();
					return 1;
				}
			}
   		} else Message(playerid, COLOR_GRAD2, "* No eres Premium Oro.");
		return 1;
	}
	zcmd(quitarvip, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] > 2013)
	    {
	        if(!sscanf(params, "u", params[0]))
	        {
	            if(IsPlayerConnected(params[0]))
	            {
		            if(PlayerInfo[playerid][pDonateT] > 2)
		            {
		                new string[100];
	                    SellHouse(params[0], PlayerInfo[params[0]][pPhousevip]);
						format(string, sizeof string, "* Has vendido la  casa premium ID %d de %s.", PlayerInfo[params[0]][pPhousevip], PlayerName(params[0]));
						Message(playerid, COLOR_WHITE, string);
						PlayerInfo[params[0]][pPhousevip] = 9999;
	                } else Message(playerid, COLOR_GRAD2, "* Ese usuario no es premium oro.");
      			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /quitarvip <PlayerID>");
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
 	zcmd(houseint, playerid, params[])
	{
 		if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
 		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
   		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /houseint <Casa ID>");
		if(params[0] < 0 || params[0] >= MAX_HOUSES) return Message(playerid, COLOR_GRAD2, "¡ID de casa errónea!");
			PlayerInfo[playerid][pEntered] = HouseInfo[params[0]][hWorld];
			SetPosEx(playerid,HouseInfo[params[0]][hExitx],HouseInfo[params[0]][hExity],HouseInfo[params[0]][hExitz],0,HouseInfo[params[0]][hInt],HouseInfo[params[0]][hWorld]);
			Message(playerid, COLOR_GRAD1, "¡Teleportado!");
			return 1;
	}
 	zcmd(timehouse, playerid, params[])
	{
	    new h = PlayerInfo[playerid][pPhousekey], string[128];
	    if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "No posees una propiedad.");
	    if(!PlayerToPoint(3.0, playerid, HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez])) return Message(playerid, COLOR_GRAD2, "No estas cerca de tu casa.");
	    new
	        TimeHouse = HouseInfo[h][hTime] - gettime(),
            dias = TimeHouse/60/60/24,
			horas = TimeHouse/60/60 - dias*24,
			minutos = TimeHouse/60 - dias*24*60 - horas*60;
   		format(string, sizeof(string), "{FF8000}%d {FFFFFF}Dias, {FF8000}%d {FFFFFF}Horas, {FF8000}%d {FFFFFF}Minutos para pagar impuestos.", dias, horas, minutos);
		Message(playerid, COLOR_WHITE, string);
		return 1;
	}
	zcmd(pagarimpuestos, playerid, params[])
	{
		if(!PlayerToPoint(5.0,playerid,358.3462,186.2765,1008.3828)) return Message(playerid, COLOR_GRAD2, "No estas en la recaudadora de impuestos.");
		if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes una casa.");
		if(CheckMoney(playerid, 10000)){
			ShowPlayerDialog(playerid, HOUSE_IMPUESTOS, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Por favor ingrese su numero de DNI", "Aceptar", "Cancelar");
		}
		return 1;
	}
	zcmd(house, playerid, params[])
	{
 		if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
 		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
   		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /house <Casa ID>");
		if(params[0] < 0 || params[0] >= MAX_HOUSES) return Message(playerid, COLOR_GRAD2, "¡ID de casa errónea!");
			SetPlayerPos(playerid,HouseInfo[params[0]][hEntrancex],HouseInfo[params[0]][hEntrancey],HouseInfo[params[0]][hEntrancez]);
			Message(playerid, COLOR_GRAD1, "¡Teleportado!");
			return 1;
	}
	zcmd(houseentrance, playerid, params[])
	{
   		if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
 		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /houseentrace <Casa ID>");
        if(params[0] < 0 || params[0] >= MAX_HOUSES) return Message(playerid, COLOR_GRAD2, "¡ID de casa errónea!");
			new string[80];
			new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid,X,Y,Z);
		    format(string,sizeof(string),"Entrada de Casa %d movido a %f - %f - %f", params[0],X,Y,Z);
			Message(playerid,COLOR_YELLOW2,string);
			HouseInfo[params[0]][hEntrancex] = X;
			HouseInfo[params[0]][hEntrancey] = Y;
			HouseInfo[params[0]][hEntrancez] = Z;
			OnPropTextdrawUpdate(params[0]);
			UpdateHouses();
			return 1;
	}
	zcmd(houseexit, playerid, params[])
	{
   		if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
 		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /houseexit <Casa ID>");
        if(params[0] < 0 || params[0] >= MAX_HOUSES) return Message(playerid, COLOR_GRAD2, "¡ID de casa errónea!");
			new string[80];
			new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid,X,Y,Z);
		    format(string,sizeof(string),"Interior de Casa %d puesto en %f - %f - %f", params[0],X,Y,Z);
   			Message(playerid,COLOR_YELLOW2,string);
			HouseInfo[params[0]][hExitx] = X;
			HouseInfo[params[0]][hExity] = Y;
			HouseInfo[params[0]][hExitz] = Z;
			HouseInfo[params[0]][hInt] = GetPlayerInterior(playerid);
			UpdateHouses();
			return 1;
	}
 	zcmd(sarma, playerid, params[])
    {
        if(PlayerInfo[playerid][pPhousekey] != 9999)
		{
  			if(PlayerToPoint(20.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitx],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExity],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hWorld])
	    	{
      			if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] != 0)
	        	{
                    SafeGivePlayerWeapon(playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep], HouseInfo[PlayerInfo[playerid][pPhousekey]][hAmmo]);
	            	HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] = 0;
              		HouseInfo[PlayerInfo[playerid][pPhousekey]][hAmmo] = 0;
                	Message(playerid, COLOR_YELLOW, "Sacaste tu arma de tu armario. Utiliza /garma para volverla a guardar.");
	        	}
          		else Message(playerid, COLOR_GRAD2, "¡No tienes un arma en tu armario!");
			}
			else Message(playerid, COLOR_RED2, "¡No estás en tu casa!");
		}
		else Message(playerid, COLOR_RED2, "¡No tienes casa!");
        return 1;
    }
    zcmd(garma, playerid, params[])
    {
        if(PlayerInfo[playerid][pPhousekey] != 9999)
		{
  			if(PlayerToPoint(20.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitx],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExity],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hWorld])
	    	{
      			if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] > 0) return Message(playerid, COLOR_RED2, "¡Tu armario está lleno!");

				new gunID = GetPlayerWeapon(playerid);
				new gunAmmo = GetPlayerAmmo(playerid);
				if(gunID != 0 && gunAmmo != 0)
				{
					HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] = gunID;
					HouseInfo[PlayerInfo[playerid][pPhousekey]][hAmmo] = gunAmmo;
					RemovePlayerWeapon(playerid, gunID);
     				Message(playerid, COLOR_YELLOW, "Guardaste tu arma en tu armario. Utiliza /sarma para removerla.");
      			}
      			else Message(playerid, COLOR_RED2, "¡No tienes arma!");
			}
			else Message(playerid, COLOR_RED2, "¡No estás en tu casa!");
		}
		else Message(playerid, COLOR_RED2, "¡No tienes casa!");
        return 1;
    }
    zcmd(gbodega, playerid, params[])
    {
        new string[64], item[12], houseid = PlayerInfo[playerid][pPhousekey];
	   	if(!sscanf(params,"s[12]d",item,params[1]))
	    {
     		if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "¡No tienes una casa!");
    		if(PlayerToPoint(20.0, playerid, HouseInfo[houseid][hExitx],HouseInfo[houseid][hExity],HouseInfo[houseid][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[houseid][hWorld])
    		{
                if(strcmp(item,"materiales",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pMats])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de materiales!");
					HouseInfo[houseid][hMats] += params[1];
					PlayerInfo[playerid][pMats] -= params[1];
					format(string, sizeof(string), "* Guardaste %d materiales en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
     			else if(strcmp(item,"speed",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pSpeed])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de speed!");
					HouseInfo[houseid][hSpeed] += params[1];
					PlayerInfo[playerid][pSpeed] -= params[1];
					format(string, sizeof(string), "* Guardaste %d speed en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
     			else if(strcmp(item,"ectasy",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pEctasy])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ectasy!");
					HouseInfo[houseid][hEctasy] += params[1];
					PlayerInfo[playerid][pEctasy] -= params[1];
					format(string, sizeof(string), "* Guardaste %d ectasy en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
     			else if(strcmp(item,"ritalin",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pRitalin])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ritalin!");
					HouseInfo[houseid][hRitalin] += params[1];
					PlayerInfo[playerid][pRitalin] -= params[1];
					format(string, sizeof(string), "* Guardaste %d ritalin en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
     			else if(strcmp(item,"heroina",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pHeroina])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de heroina!");
					HouseInfo[houseid][hHeroina] += params[1];
					PlayerInfo[playerid][pHeroina] -= params[1];
					format(string, sizeof(string), "* Guardaste %d heroina en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
  				}
     			else if(strcmp(item,"marihuana",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pMarihuana])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de marihuana!");
					HouseInfo[houseid][hMarihuana] += params[1];
					PlayerInfo[playerid][pMarihuana] -= params[1];
					format(string, sizeof(string), "* Guardaste %d marihuana en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
  			} else Message(playerid, COLOR_GRAD2, "¡No estás en tu casa!");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /gbodega <materiales, droga, speed, ectasy, ritalin, heroina, marihuana> <Cantidad>");
		return 1;
    }
    zcmd(sbodega, playerid, params[])
    {
        new string[64], item[12], houseid = PlayerInfo[playerid][pPhousekey];
	   	if(!sscanf(params,"s[12]d",item,params[1]))
	    {
     		if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "¡No tienes una casa!");
    		if(PlayerToPoint(20.0, playerid, HouseInfo[houseid][hExitx],HouseInfo[houseid][hExity],HouseInfo[houseid][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[houseid][hWorld])
    		{
                if(strcmp(item,"materiales",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hMats])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de materiales guardados!");
					HouseInfo[houseid][hMats] -= params[1];
					PlayerInfo[playerid][pMats] += params[1];
					format(string, sizeof(string), "* Sacaste %d materiales de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
     			else if(strcmp(item,"speed",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hSpeed])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de speed guardada!");
					HouseInfo[houseid][hSpeed] -= params[1];
					PlayerInfo[playerid][pSpeed] += params[1];
					format(string, sizeof(string), "* Sacaste %d speed de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
     			else if(strcmp(item,"ectasy",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hEctasy])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ectasy guardada!");
					HouseInfo[houseid][hEctasy] -= params[1];
					PlayerInfo[playerid][pEctasy] += params[1];
					format(string, sizeof(string), "* Sacaste %d ectasy de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
     			else if(strcmp(item,"ritalin",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hRitalin])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ritalin guardada!");
					HouseInfo[houseid][hRitalin] -= params[1];
					PlayerInfo[playerid][pRitalin] += params[1];
					format(string, sizeof(string), "* Sacaste %d ritalin de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
     			else if(strcmp(item,"heroina",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hHeroina])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de heroina guardada!");
					HouseInfo[houseid][hHeroina] -= params[1];
					PlayerInfo[playerid][pHeroina] += params[1];
					format(string, sizeof(string), "* Sacaste %d heroina de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
     			else if(strcmp(item,"marihuana",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hMarihuana])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de marihuana guardada!");
					HouseInfo[houseid][hMarihuana] -= params[1];
					PlayerInfo[playerid][pMarihuana] += params[1];
					format(string, sizeof(string), "* Sacaste %d marihuana de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
                    return 1;
     			}
  			} else Message(playerid, COLOR_GRAD2, "¡No estás en tu casa!");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /sbodega <materiales, droga, speed, ectasy, ritalin, heroina, marihuana> <Cantidad>");
		return 1;
    }
    zcmd(bodega, playerid, params[])
    {
        new string[128], houseid = PlayerInfo[playerid][pPhousekey];
        if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "¡Usted no tiene una casa!");
        if(PlayerToPoint(20.0, playerid, HouseInfo[houseid][hExitx],HouseInfo[houseid][hExity],HouseInfo[houseid][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[houseid][hWorld])
        {
            Message(playerid, COLOR_YELLOW, "============================== Inventario =============================");
            format(string, sizeof(string), "Materiales: %d - Drogas: %d - Speed: %d - Ectasy: %d - Ritalin: %d - Heroina: %d - Marihuana: %d", HouseInfo[houseid][hMats],
			HouseInfo[houseid][hDrugs], HouseInfo[houseid][hSpeed], HouseInfo[houseid][hEctasy], HouseInfo[houseid][hRitalin], HouseInfo[houseid][hHeroina], HouseInfo[houseid][hMarihuana]);
            Message(playerid, COLOR_WHITE, string);
            return 1;
   		} else Message(playerid, COLOR_GRAD2, "¡No estás en tu casa!");
   		return 1;
    }
    zcmd(allanarcasa, playerid, params[])
    {
        new string[128];
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
        if(sscanf(params, "d", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /allanarcasa <HouseID>");
    	if(PlayerToPoint(3.0, playerid, HouseInfo[params[0]][hEntrancex], HouseInfo[params[0]][hEntrancey], HouseInfo[params[0]][hEntrancez]))
		{
  			format(string, sizeof(string), "* %s coje saca un C4, lo activa y lo coloca en la puerta de la casa.", PlayerName(playerid));
	    	ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
	    	ProxDetectorEx(20.0, playerid, "* C4 (( Bip Bip Bip ))", 0xB6DB22FF);
			ProxDetector(20.0, playerid, "¡La bomba esta a punto de explotar, cubranse!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
   			SetTimerEx("TumbarPuerta", 10000, false, "id", playerid, params[0]);
		    return 1;
	 	}
		return 1;
    }
    zcmd(revisarcasa, playerid, params[])
    {
        new string[128];
		if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
        for(new i = 0; i < sizeof(HouseInfo); i++)
		{
            if(PlayerToPoint(20.0,playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]))
  			{
  			    format(string, sizeof(string), "* %s revisa la casa en busca de materiales/drogas.", PlayerName(playerid));
  			    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
  			    Message(playerid, COLOR_YELLOW, "============================== Inventario =============================");
            	format(string, sizeof(string), "Materiales: %d - Drogas: %d - Speed: %d - Ectasy: %d - Ritalin: %d - Heroina: %d - Marihuana: %d", HouseInfo[i][hMats],
				HouseInfo[i][hDrugs], HouseInfo[i][hSpeed], HouseInfo[i][hEctasy], HouseInfo[i][hRitalin], HouseInfo[i][hHeroina], HouseInfo[i][hMarihuana]);
            	Message(playerid, COLOR_WHITE, string);
            	return 1;
   			}
		}
  		return 1;
    }
    zcmd(incautar, playerid, params[])
    {
        new string[110];
        if(!Team_LSPD(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
        for(new i = 0; i < sizeof(HouseInfo); i++)
		{
            if(PlayerToPoint(20.0,playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]))
  			{
  			    if(HouseInfo[i][hMats] == 0 && HouseInfo[i][hDrugs] == 0 && HouseInfo[i][hSpeed] == 0 && HouseInfo[i][hEctasy] == 0 && HouseInfo[i][hRitalin] == 0 && HouseInfo[i][hHeroina] == 0 && HouseInfo[i][hMarihuana] == 0) return Message(playerid, COLOR_GRAD2, "¡Esta casa no tiene nada para incautar!");
  			    format(string, sizeof(string), "* %s toma la evidencia y las guarda.", PlayerName(playerid));
  			    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				HouseInfo[i][hMats] = 0;
				HouseInfo[i][hDrugs] = 0;
				HouseInfo[i][hSpeed] = 0;
				HouseInfo[i][hEctasy] = 0;
				HouseInfo[i][hRitalin] = 0;
				HouseInfo[i][hHeroina] = 0;
				HouseInfo[i][hMarihuana] = 0;
                format(string, sizeof(string), "* Central: %s ha incautado drogas/materiales en una casa de Los Santos.", PlayerName(playerid));
    			SendRadioMessage(1, TEAM_RADIO_COLOR, string);
    			return 1;
   			}
		}
		return 1;
  	}
	zcmd(heal, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new bouse = PlayerInfo[playerid][pPhousekey], hid = PlayerInfo[playerid][pPhousevip];
	        if(bouse != 9999 || hid != 9999)
	        {
		        if(bouse != 9999 && PlayerToPoint(20.0,playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
		        {
		            SetHP(playerid, 100.0);
		            PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
		            return 1;
		        }
                if(hid != 9999 || PlayerToPoint(20.0,playerid,HouseInfo[hid][hExitx],HouseInfo[hid][hExity],HouseInfo[hid][hExitz]))
		        {
		            SetHP(playerid, 100.0);
		            PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
		            return 1;
		        }
			} else	Message(playerid, COLOR_RED2, "No posees una propiedad.");
		} else Message(playerid, COLOR_RED2, "! Primero Conectate !");
		return 1;
	}
    zcmd(renta, playerid, params[])
    {
        if(!sscanf(params, "i", params[0]))
        {
            new bouse = PlayerInfo[playerid][pPhousekey], hid = PlayerInfo[playerid][pPhousevip], string[30];
			if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[bouse][hOwner], true) == 0)
			{
				if(params[0] < 0 || params[0] > 1000) return Message(playerid, COLOR_GRAD2, "Valor entre 1 - 1000$; 0 = No rentable");

				HouseInfo[bouse][hRent] = params[0];
				OnPropTextdrawUpdate(bouse);
				format(string, sizeof(string), "Renta de la propiedad: %d", HouseInfo[bouse][hRent]);
				Message(playerid, COLOR_WHITE, string);
			}
			else if(hid != 9999 && strcmp(PlayerName(playerid), HouseInfo[hid][hOwner], true) == 0)
			{
			    if(params[0] < 0 || params[0] > 1000) return Message(playerid, COLOR_GRAD2, "Valor entre 1 - 1000$; 0 = No rentable");

				HouseInfo[hid][hRent] = params[0];
				OnPropTextdrawUpdate(hid);
				format(string, sizeof(string), "Renta de la propiedad: %d", HouseInfo[hid][hRent]);
				Message(playerid, COLOR_WHITE, string);
			} else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /renta <Precio>");
        return 1;
    }
    zcmd(abrir, playerid, params[])
    {
        new x = PlayerInfo[playerid][pPhousekey];
        if(x == 9999) return Message(playerid, COLOR_RED2, "No posees una propiedad.");
        if(PlayerToPoint(3, playerid,HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez]) || PlayerToPoint(3, playerid, HouseInfo[x][hExitx], HouseInfo[x][hExity], HouseInfo[x][hExitz]))
		{
			if(HouseInfo[x][hLock] == 1)
			{
				HouseInfo[x][hLock] = 0;
				GameTextForPlayer(playerid, "~w~Puerta ~g~Abierta", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				return 1;
			}
			else
			{
				HouseInfo[x][hLock] = 1;
				GameTextForPlayer(playerid, "~w~Puerta ~r~cerrada", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				return 1;
			}
		} else Message(playerid, COLOR_GRAD2, "¡No estás en la puerta de tu casa!");
        return 1;
    }
    zcmd(abrirvip, playerid, params[])
    {
        new b = PlayerInfo[playerid][pPhousevip];
        if(b == 9999) return Message(playerid, COLOR_RED2, "No posees una propiedad vip.");
        if(PlayerToPoint(3, playerid, HouseInfo[b][hEntrancex], HouseInfo[b][hEntrancey], HouseInfo[b][hEntrancez]) || PlayerToPoint(3, playerid, HouseInfo[b][hExitx], HouseInfo[b][hExity], HouseInfo[b][hExitz]))
		{
		    if(HouseInfo[b][hLock] == 1)
			{
				HouseInfo[b][hLock] = 0;
				GameTextForPlayer(playerid, "~w~Puerta ~g~Abierta", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				return 1;
			}
			else
			{
				HouseInfo[b][hLock] = 1;
				GameTextForPlayer(playerid, "~w~Puerta ~r~cerrada", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				return 1;
			}
		} else Message(playerid, COLOR_GRAD2, "¡No estás en la puerta de tu casa!");
        return 1;
    }
    zcmd(cajafuerte, playerid, params[])
    {
        new bouse = PlayerInfo[playerid][pPhousekey], string[100];
		if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
		    if(!sscanf(params, "i", params[0]))
		    {
		        if(PlayerToPoint(20.0,playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
			    {
					if (params[0] >  HouseInfo[bouse][hRentabil] || params[0] < 1) return Message(playerid, COLOR_RED2, "No dispones de esa cantidad.");
					else
					{
						GivePlayerMoney(playerid,params[0]);
						HouseInfo[bouse][hRentabil]=HouseInfo[bouse][hRentabil]-params[0];
						format(string, sizeof(string), "Extraiste %d$ de tu caja fuerte. Te quedan: %d$", params[0],HouseInfo[bouse][hRentabil]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						format(string, 100, "%s ha sacado %d$ de la casa ID %d", PlayerName(playerid),params[0],bouse);
				 		Log("Logs/DineroCasa.log", string);
						return 1;
					}
				}
				else Message(playerid, COLOR_RED2, "No estás en tu casa.");
		    }
		    else
			{
				format(string, sizeof(string), "{DC092F}Utilize:{2471A3} /cajafuerte <$> (Tiene %d$ de dinero guardado)", HouseInfo[bouse][hRentabil]);
				Message(playerid, COLOR_GRAD2, string);
				return 1;
			}
		}
		else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        return 1;
    }
    zcmd(guardardinero, playerid, params[])
    {
        new bouse = PlayerInfo[playerid][pPhousekey];
        if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
            if(!sscanf(params, "i", params[0]))
		    {
                if(PlayerToPoint(20.0,playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
			    {
			        if(GetPlayerMoney(playerid) > params[0] )
			        {
						if(params[0] < 1) return Message(playerid, COLOR_GRAD2, "No puedes guardar menos de 1.");
						new string[100], MoneyHouse = HouseInfo[bouse][hRentabil]+params[0];
						if(MoneyHouse > 100000) return Message(playerid, COLOR_GRAD2, "* No puedes guardar mas de 100mil en tu casa.");
			            HouseInfo[bouse][hRentabil] += params[0];
			            Bought(playerid, params[0]);
			            format(string, sizeof string, "Guardaste %d$ en tu caja fuerte. Tienes %d$", params[0], HouseInfo[bouse][hRentabil]);
			            Message(playerid, COLOR_YELLOW, string);
			            format(string, 100, "%s ha guardado %d$ en la casa ID %d", PlayerName(playerid),params[0],bouse);
				 		Log("Logs/DineroCasa.log", string);
			            return 1;
           			} else Message(playerid, COLOR_GRAD2, "No tienes esa cantidad de dinero para guardar.");
    			} else Message(playerid, COLOR_GRAD2, "No estas en tu casa.");
   			} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /guardardinero <Monto>");
		} else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        return 1;
    }
	//zcmd (CMD's Bizzes)
    zcmd(bizz, playerid, params[])
	{
 		if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
 		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
   		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /bizz <Bizz ID>");
		if(params[0] < 0 || params[0] >= MAX_BIZZ) return Message(playerid, COLOR_GRAD2, "¡ID de negocio errónea!");
			SetPlayerPos(playerid,BizzInfo[params[0]][bEntrancex],BizzInfo[params[0]][bEntrancey],BizzInfo[params[0]][bEntrancez]);
			Message(playerid, COLOR_GRAD2, "¡Teleportado!");
			return 1;
	}
	zcmd(comprarnegocio, playerid, params[])
	{
	    for(new b = 0; b < sizeof(BizzInfo); b++)
		{
		    if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
			{
		        if(BizzInfo[b][bOwned] == 1) return Message(playerid, COLOR_RED2, "¡Este negocio ya tiene dueño!");
		        if(PlayerInfo[playerid][pPbizzkey] != 9999) return Message(playerid, COLOR_RED2, "¡Ya posees un negocio!");
		        if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
		        {
		            new string[45];
		            format(string, sizeof(string), "Este negocio requiere que seas nivel %d", BizzInfo[b][bLevelNeeded]);
					Message(playerid, COLOR_RED2, string);
					return 1;
				}
				if(GetPlayerMoney(playerid) >= BizzInfo[b][bBuyPrice])
				{
				    new string[60];
					PlayerInfo[playerid][pPbizzkey] = b;
					BizzInfo[b][bOwned] = 1;
					format(BizzInfo[b][bOwner], 24, PlayerName(playerid));
					Bought(playerid, BizzInfo[b][bBuyPrice]);
					Message(playerid, COLOR_WHITE, "Felicidades, has adquirido este negocio. Utiliza /ayuda negocio");
                    format(string, sizeof string, "* %s ha comprado el negocio ID %d", PlayerName(playerid), b);
					Log("Logs/Propiedades.log", string);
					OnBizzTextdrawUpdate(b);
					UpdateBizz();
					return 1;
				} else Message(playerid, COLOR_RED2, "No tienes los fondos necesarios para adquirir este negocio.");
			}
		}
		return 1;
	}
	zcmd(vendernegocio, playerid, params[])
	{
	    new bid = PlayerInfo[playerid][pPbizzkey];
	    if(PlayerInfo[playerid][pPbizzkey] == 9999) return Message(playerid, COLOR_RED2, "No tienes un negocio.");
	    if(PlayerToPoint(3.0, playerid, BizzInfo[bid][bEntrancex],BizzInfo[bid][bEntrancey],BizzInfo[bid][bEntrancez]))
		{
			if(PlayerInfo[playerid][pPbizzkey] != 9999 && strcmp(PlayerName(playerid), BizzInfo[bid][bOwner], true) == 0)
			{
			    new string[76], IP[18];
	            new money = BizzInfo[bid][bBuyPrice]+BizzInfo[bid][bTill]+BizzInfo[bid][bTillEx];
	            GetPlayerIp(playerid, IP, 18);
				Earn(playerid, money);
				format(string, sizeof(string), "Has vendido tu negocio. Has recuperado %d$",money);
				Message(playerid, COLOR_WHITE, string);
				format(string, sizeof string, "* %s(%s) ha vendido el negocio ID %d", PlayerName(playerid), IP, bid);
				Log("Logs/Propiedades.log", string);
				SellBizz(bid);
				PlayerInfo[playerid][pPbizzkey] = 9999;
			} else Message(playerid, COLOR_RED2, "Este negocio no está a tu nombre.");
		} else Message(playerid, COLOR_RED2, "¡Debes estar cerca de tu negocio para vernderlo!");
	    return 1;
	}
	zcmd(sganancias, playerid, params[])
	{
	    new string[60], bid = PlayerInfo[playerid][pPbizzkey];
	    if(PlayerInfo[playerid][pPbizzkey] == 9999) return Message(playerid, COLOR_RED, "No tienes un negocio.");
	    if(PlayerToPoint(3.0, playerid, BizzInfo[bid][bEntrancex],BizzInfo[bid][bEntrancey],BizzInfo[bid][bEntrancez]))
		{
		    if(!sscanf(params,"d",params[0])){
				if(params[0] < 1 || params[0] > BizzInfo[bid][bTill]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
		    	if(PlayerInfo[playerid][pPbizzkey] != 9999 && strcmp(PlayerName(playerid), BizzInfo[bid][bOwner], true) == 0)
				{
				
			    	Earn(playerid, params[0]);
			    	format(string, sizeof(string), "Has retirado %d$ de la caja fuerte de tu negocio.", params[0]);
			    	Message(playerid, COLOR_GRAD4, string);
	            	BizzInfo[bid][bTill] -= params[0];
	        	} else Message(playerid, COLOR_GRAD4, "Este negocio no está a tu nombre.");
       		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /sganancias <Cantidad>");
  		} else Message(playerid, COLOR_GRAD4, "¡Debes estar cerca de tu negocio para retirar dinero de la caja!");
		return 1;
  	}
  	zcmd(binfo, playerid, params[])
  	{
  	    new string[64];
  	    for(new b = 0; b < sizeof(BizzInfo); b++)
		{
		    if(PlayerToPoint(3.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
			{
		        if(BizzInfo[b][bOwned] == 0)
                {
		        	Message(playerid, 0xAAAAFFFF, "- Negocio en Venta - Información");
		        	format(string, sizeof(string), "Nombre: %s", BizzInfo[b][bName]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Valor: %d   -   Nivel: %d", BizzInfo[b][bBuyPrice],BizzInfo[b][bLevelNeeded]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Negocio ID: %d", b);
			        Message(playerid, COLOR_WHITE, string);
			        Message(playerid, AMARILLO_ADMIN, "- Utiliza /comprarnegocio, para comprar este negocio.");
			        return 1;
				}
				if(PlayerInfo[playerid][pPbizzkey] == b)
    			{
				    Message(playerid, 0xAAAAFFFF, "- Propiedad Privada -");
        			format(string, sizeof(string), "Nombre: %s", BizzInfo[b][bName]);
		        	Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Valor: %d   -   Nivel: %d", BizzInfo[b][bBuyPrice],BizzInfo[b][bLevelNeeded]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Ganancias: %d", BizzInfo[b][bTill]);
			        Message(playerid, COLOR_WHITE, string);
			        return 1;
				} else Message(playerid, COLOR_GRAD2, "No hay información disponible para este negocio.");
			}
		}
		return 1;
	}
	zcmd(extorcion, playerid, params[]){
	    new string[110], bkey = PlayerInfo[playerid][pPbizzkey];
	    if(PlayerInfo[playerid][pPbizzkey] == 9999) return Message(playerid, COLOR_RED2, "¡No tienes un negocio!");
		if(!sscanf(params,"u",params[0])){
		    if(PlayerToPoint(4.0, playerid, BizzInfo[bkey][bEntrancex], BizzInfo[bkey][bEntrancey], BizzInfo[bkey][bEntrancez])){
		        if(IsPlayerConnected(params[0])){
		            if(params[0] != playerid){
		       	 		if(ProxDetectorS(5.0, playerid, params[0])){
							if(strcmp("Nadie", BizzInfo[bkey][bExtortion], true) == 0){
            	    			format(BizzInfo[bkey][bExtortion], 24, PlayerName(params[0]));
								format(string, sizeof(string), "Desde ahora {FF4FD4}%s {FFFFFF}será el extorcionista de tu negocio.", PlayerName(params[0]));
								Message(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "%s te ha puesto como extorcionista de su negocio, ahora puedes usar {FF4FD4}/recaudar.", PlayerName(playerid));
								Message(params[0], COLOR_WHITE, string);
								OnBizzTextdrawUpdate(bkey);
								UpdateBizz();
				        	} else Message(playerid, COLOR_GRAD2, "* Tu negocio ya tiene un extorcionista, primero usa /qextorcion.");
                        } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				   	} else Message(playerid, COLOR_GRAD2, "¡No te puedes poner como extorcionista tu mismo!");
  				} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
			} else Message(playerid, COLOR_GRAD2, "¡Debes estar cerca de tu negocio!");
    	} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /extorcion <PlayerID>");
	    return 1;
	}
	zcmd(qextorcion, playerid, params[]){
	    new string[128], bkey = PlayerInfo[playerid][pPbizzkey];
	    if(PlayerInfo[playerid][pPbizzkey] == 9999) return Message(playerid, COLOR_RED2, "¡No tienes un negocio!");
	    if(!sscanf(params,"u",params[0])){
	        if(PlayerToPoint(4.0, playerid, BizzInfo[bkey][bEntrancex], BizzInfo[bkey][bEntrancey], BizzInfo[bkey][bEntrancez])){
	            if(IsPlayerConnected(params[0])){
                    if(params[0] != playerid){
                        if(ProxDetectorS(5.0, playerid, params[0])){
                            if(strcmp(PlayerName(params[0]), BizzInfo[bkey][bExtortion], true) == 0){
                                format(string, sizeof(string), "{FFFFFF}%s ha dedicido quitarte como extorcionista de su negocio.\n\t¿Estás de acuerdo con esta decisión?",PlayerName(playerid));
                                ShowPlayerDialog(params[0], QUIT_EXTORTION, DIALOG_STYLE_MSGBOX, "Confirmacion Negocios", string, "Si", "No");
                                Message(playerid, COLOR_GRAD4, "* La solicitud fue enviada, espera su respuesta.");
                                SetPVarInt(params[0], "QuitExtortion", bkey);
                                SetPVarInt(params[0], "ExtortionID", playerid);
                            } else Message(playerid, COLOR_GRAD2, "* Esa persona no es extorcionista de tu negocio.");
                        } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
                    } else Message(playerid, COLOR_GRAD2, "¡No puedes usar este comando contigo mismo!");
	            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
			} else Message(playerid, COLOR_GRAD2, "¡Debes estar cerca de tu negocio!");
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /qextorcion <PlayerID>");
	    return 1;
	}
	zcmd(recaudar, playerid, params[])
	{
		for(new b = 0; b < sizeof(BizzInfo); b++)
		{
		    if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
			{
	            if(strcmp(PlayerName(playerid), BizzInfo[b][bExtortion], true) == 0){
	                if(BizzInfo[b][bTillEx] > 0){
	                	new string[90];
	                	Earn(playerid, BizzInfo[b][bTillEx]);
						format(string, sizeof(string), "Has recaudado {DC092F}%d$ {FFFFFF}de este negocio del cual eres extorcionista.", BizzInfo[b][bTillEx]);
						Message(playerid, COLOR_WHITE, string);
						BizzInfo[b][bTillEx] = 0;
					} else Message(playerid, COLOR_GRAD2, "* No hay dinero para recaudar.");
				} return 1;
			}
		}
		return 1;
	}
	zcmd(vernegocio, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] > 2011)
	    {
	        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
	        new string[64];
            for(new b = 0; b < sizeof(BizzInfo); b++)
			{
                if(PlayerToPoint(3.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
				{
	                Message(playerid, 0xAAAAFFFF, "- Propiedad Privada -");
        			format(string, sizeof(string), "Nombre: %s", BizzInfo[b][bName]);
		        	Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Valor: %d   -   Nivel: %d", BizzInfo[b][bBuyPrice],BizzInfo[b][bLevelNeeded]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Ganancias: %d", BizzInfo[b][bTill]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Extorcion: %d", BizzInfo[b][bTillEx]);
			        Message(playerid, COLOR_WHITE, string);
			        return 1;
    			}
			}
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
    //zcmd [Sell Adm]
 	zcmd(asellcar, playerid, params[]){
	    new vehid = GetPlayerVehicleID(playerid);
	    if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
     	if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
       	if(!OwnableVehicle[vehid]) return Message(playerid, COLOR_GRAD2, "¡No es un vehículo de venta!");
       		RemovePlayerFromVehicle(playerid);
       		if(!IsPlayerConnected(VehicleOwner[vehid])) return Message(playerid, COLOR_GRAD2, "Un error ha ocurrido, el dueño del vehiculo no está conectado, contacta con un 2014.");
			ResetearVariablesAuto(VehicleOwner[vehid], VehicleSlot[vehid]);
			DestroyVehicle(vehid);
			Message(playerid, COLOR_GRAD2, "¡Has vendido el vehículo!");
			VehicleOwner[vehid] = 999;
			VehicleSlot[vehid] = 999;
			VehicleSpawned[vehid] = false;
			OwnableVehicle[vehid] = false;
			return 1;
 	}
 	zcmd(asellhouse, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "i", params[0]))
        {
        	new string[30];
            if(params[0] >= MAX_HOUSES || params[0] < 0) return Message(playerid, COLOR_GRAD2, "ID incorrecto.");
            else{
				SellHouse(playerid, params[0]);
            	format(string, sizeof(string), "Propiedad %d vendida.", params[0]);
				Message(playerid, COLOR_GRAD2, string);
			}
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /asellhouse <HouseID>");
        return 1;
    }
    zcmd(asellbizz, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "i", params[0]))
        {
        	new string[30];
            if(params[0] >= MAX_BIZZ || params[0] < 0) return Message(playerid, COLOR_GRAD2, "ID incorrecto.");
            else{
				SellBizz(params[0]);
            	format(string, sizeof(string), "Negocio %d vendido.", params[0]);
				Message(playerid, COLOR_GRAD2, string);
			}
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /asellbizz <BizzID>");
        return 1;
   	}
    /*zcmd(hitman, playerid, params[])
    {
        if(PlayerInfo[playerid][pLevel] < 3) return Message(playerid, COLOR_GRAD2, "Necesitas ser mínimo nivel 3 para usar este comando.");
        if(!PlayerToPoint(5.0, playerid, 1425.2998,-1291.2107,13.5560)) return Message(playerid, COLOR_GRAD2, "¡No estás en el lugar!");
        if(Hitman(playerid)) return Message(playerid, COLOR_GRAD2, "No puedes contratar siendo un hitman!");
    	if(!sscanf(params, "ud", params[0], params[1]))
    	{
			if(params[1] < 1000 || params[1] > 20000) return Message(playerid, COLOR_GRAD2, "Máx: 20,000$ || Mín: 1000$");
			if(IsPlayerConnected(params[0]))
			{
    			if(Hitman(params[0])) return Message(playerid, COLOR_GRAD2, "¡No puedes exterminar a un hitman!");
    			if(CheckMoney(playerid,params[1]))
				{
	  				new string[128];
					Bought(playerid, params[1]);
					PlayerInfo[params[0]][pHead] += params[1];
					SendRadioMessage(23, TEAM_RADIO_COLOR, "** Atención - Hay un objetivo nuevo! **");
					format(string, sizeof(string), "[Cliente: %s] - [Objectivo: %s] - [Recompensa: %d$]",PlayerName(playerid), PlayerName(params[0]), params[1], PlayerInfo[params[0]][pHead]);
					SendRadioMessage(23, TEAM_RADIO_COLOR, string);
					format(string, sizeof(string), "* ¡%s está ahora en la lista de objetivos con una recompensa de %d!",PlayerName(params[0]), PlayerInfo[params[0]][pHead]);
					Message(playerid, COLOR_WHITE, string);
					return 1;
				}
			}
			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
    	}
    	else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /hitman <PlayerID> <recompensa>");
        return 1;
    }*/
	zcmd(disfraz, playerid, params[])
	{
        if(Hitman(playerid)){
	    	if(PlayerToPoint(5, playerid, 1487.4659,2873.0540,10.8806)){
            	ShowPlayerDialog(playerid, DIALOG_HIT, DIALOG_STYLE_INPUT, "> Disfraz <", "{78F700}Escribe el ID del que desees\n{FFFFFF}Skin's libres para hitman's.\nTIP <1 - 299>\n", "Ok", "Salir");
            	return 1;
			}
		}
		else if(Terroristas(playerid)){
		    if(PlayerToPoint(5, playerid, 1114.2040,-316.3322,74.0447)){
		        ShowPlayerDialog(playerid, DIALOG_HIT, DIALOG_STYLE_INPUT, "> Disfraz <", "{78F700}Escribe el ID del que desees\n{FFFFFF}Skin's libres para terroristas.\nTIP <1 - 299>\n", "Ok", "Salir");
		        return 1;
      		}
		} else Message(playerid, COLOR_GRAD2, "No perteneces a la faccion Hitman o Al Qaeda.");
		return 1;
	}
	zcmd(amascara, playerid, params[]){
        if(PlayerInfo[playerid][pMask] == 1) return Message(playerid, COLOR_GRAD2, " Ya tienes una máscara.");
        if(Hitman(playerid)){
	    	if(PlayerToPoint(5, playerid, 1487.4659,2873.0540,10.8806)){
            	Message(playerid, COLOR_LIGHTBLUE, "Cogiste una máscara, /mascara para ponertela.");
            	PlayerInfo[playerid][pMask] = 1;
			}
		}
		else Message(playerid, COLOR_GRAD2, " No eres hitman.");
		return 1;
	}
	zcmd(radio, playerid, params[]){
        if(GetPVarType(playerid, "OnDuty") == 0) return Message(playerid, COLOR_GRAD2, "¡No estás en servicio!");
        if(!RadioOn[playerid]){
			RadioOn[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Prendiste tu radio.");
		}
		else{
			RadioOn[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Apagaste tu radio.");
		}
        return 1;
    }
    zcmd(dutytaxi, playerid, params[]){
        new string[64];
        if(PlayerInfo[playerid][pJob] == 9){
        	if(TransportDuty[playerid] == 0){
                TransportDuty[playerid] = 1;
				TarifaTaxi[playerid] = 1;
				format(string, sizeof(string), "** El taxista %s está en servicio.", PlayerName(playerid));
				OOCNews(COLOR_DUTY, string);
 		    	Message(playerid, COLOR_WHITE, "* Recibirás llamadas, estás de servicio.");
      		}
      		else{
				TransportDuty[playerid] = 0;
				TarifaTaxi[playerid] = 0;
 		    	Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no recibirás llamadas.");
     		}
  		}else Message(playerid, COLOR_GRAD2, "¡No eres taxista!");
  		return 1;
	}
	zcmd(duty, playerid, params[]){
        new string[128];
        if(IsACop(playerid)){
            if(PlayerToPoint(5, playerid,255.3,77.4,1003.6) || PlayerToPoint(12,playerid,248.4493,2031.7960,-6.7623) || PlayerToPoint(10,playerid,197.0950,168.6891,1003.0234) || PlayerToPoint(10,playerid,222.6635,186.8341,1003.0313) || PlayerToPoint(10, playerid, 1566.2216,-1672.1409,1723.1050)){
                if(GetPVarType(playerid, "OnDuty") == 0){
        		    format(string, sizeof(string), "* %s coge su placa y su radio.", PlayerName(playerid));
        		    ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
        		    SetPVarInt(playerid, "OnDuty", 1);
        		}
        		else{
        		    format(string, sizeof(string), "* %s deja su placa y su radio.", PlayerName(playerid));
        		    ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
        		    SafeResetPlayerWeapons(playerid);
        		    DeletePVar(playerid, "OnDuty");
        		}
            }
            else    Message(playerid, COLOR_GRAD2, "No estás en el lugar adecuado.");
        }
  		else if(Team_SAMUR(playerid) || Team_Mecanicos(playerid)){
            if(GetPVarType(playerid, "OnDuty") == 0){
   				SetPVarInt(playerid, "OnDuty", 1);
 		    	Message(playerid, COLOR_WHITE, "* Recibirás llamadas, estás de servicio.");
      		}
      		else{
    			DeletePVar(playerid, "OnDuty");
 		    	Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no recibirás llamadas.");
      		}
        }
        else if(Gobierno(playerid) || Journalist(playerid) || Hitman(playerid) || Terroristas(playerid)){
			if(GetPVarType(playerid, "OnDuty") == 0)
			{
			        SetPVarInt(playerid, "OnDuty", 1);
					Message(playerid, COLOR_WHITE, "* Estas de servicio, puedes encender tu radio.");
			}
			else{
			        DeletePVar(playerid, "OnDuty");
			        Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no puedes usar tu radio.");
   			}
		}
      	else Message(playerid, COLOR_GRAD2, "¡No puedes usar este comando!");
        return 1;
    }
    // Walkie Talkie
    zcmd(walkie, playerid, params[]){
        if(!sscanf(params, "s[32]", params[0])){
			if(PlayerInfo[playerid][pWalkie] == 0)    return Message(playerid, COLOR_GRAD2, "No tiene un Walkie Talkie.");
            if(strcmp(params[0],"prender",true) == 0){
			    if(!RadioOn[playerid]){
			    	return RadioOn[playerid] = 1,
				    Message(playerid, COLOR_GREEN, "* Walkie-Talkie encendido.");
			    }
				else Message(playerid, COLOR_GRAD2, "* Ya está prendido.");
			}
			else if(strcmp(params[0],"apagar",true) == 0){
			    if(RadioOn[playerid]){
			    	return RadioOn[playerid] = 0,
			    	PFrecuencia[playerid] = 0,
			    	Message(playerid, COLOR_RED, "* Walkie-Talkie fue apagado.");
			    }
				else Message(playerid, COLOR_GRAD2, "* Ya está apagado.");
			}
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /walkie <prender, apagar>");
        return 1;
    }
    zcmd(frecuencia, playerid, params[]){
        if(PlayerInfo[playerid][pWalkie] > 0 && RadioOn[playerid]){
            new string[40];
            if(!sscanf(params, "i", params[0])){
					if(params[0] < 1 || params[0] > 9999)
						return Message(playerid, TEAM_RADIO_COLOR, "* Conéctese a un canal entre '1' y '9999'.");
						PFrecuencia[playerid] = params[0],
						format(string, sizeof string, "* Ahora tu frecuencia es: '%d'", params[0]),
						Message(playerid, COLOR_GREEN, string);
            }
            else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /frecuencia <Nro> entre 1 - 9999");
        }
        else Message(playerid, COLOR_GRAD2, "* No tienes una radio con la que hablar / o está apagada.");
        return 1;
    }
    zcmd(wt, playerid, params[])
	{
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!RadioOn[playerid]) return Message(playerid, COLOR_GRAD2, "* Radio apagada. {DC092F}Utilize:{2471A3} '/walkie prender'");
       	if(PFrecuencia[playerid] == 0) return Message(playerid, COLOR_GRAD2, "* No estás en ninguna frecuencia. {DC092F}Utilize:{2471A3} '/frecuencia'");
		if(!sscanf(params, "s[128]", params[0]))
		{
		    new string[128];
			format(string, sizeof string, "* (F#%d) %s: %s", PFrecuencia[playerid], PlayerName(playerid), params[0]);
			RadioMsg(PFrecuencia[playerid], string);
			format(string, sizeof(string), "* (WT) %s: %s", PlayerName(playerid), params[0]);
            ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /wt <Mensaje>");
        return 1;
    }
	zcmd(d, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(RadioOn[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡Tu radio está apagada!");
        if(!sscanf(params, "s[128]", params[0]))
        {
			if(IsACop(playerid) || Team_SAMUR(playerid) || Gobierno(playerid))
			{
			    if(PlayerInfo[playerid][pRank] > 1)
			    {
				    new string[128];
		    		format(string, sizeof(string), "** %s %s: %s **", PlayerStatInfo[playerid][4], PlayerName(playerid), params[0]);
					SendRadioMessage(1, COLOR_ALLDEPT, string);
					SendRadioMessage(3, COLOR_ALLDEPT, string);
					SendRadioMessage(4, COLOR_ALLDEPT, string);
					SendRadioMessage(8, COLOR_ALLDEPT, string);
					format(string, sizeof(string), "* %s habla por su radio.", PlayerName(playerid));
     				ProxDetectorEx(25.0, playerid, string, COLOR_PURPLE);
 				} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
			} else Message(playerid, COLOR_GRAD2, "¡No eres parte de un equipo!");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /d <Texto>");
        return 1;
    }
	zcmd(f, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            if(PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pMember] == 0) 	return Message(playerid, COLOR_GRAD2, "No perteneces a ninguna facción.");
            new string[128];
    		format(string, sizeof(string), "** (( %s %s: %s )) **", PlayerStatInfo[playerid][4], PlayerName(playerid), params[0]);
		    if(PlayerInfo[playerid][pLeader] > 0) 	SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
	   		else 									SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} (/f)accion <texto>");
        return 1;
    }
    zcmd(r, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!FacRadio(playerid)) return Message(playerid, COLOR_GRAD2, "¡Tu facción no tiene una radio!");
        if(RadioOn[playerid] == 0) return Message(playerid, COLOR_GRAD2, " Tu radio está apagada.");
        if(!sscanf(params, "s[128]", params[0]))
		{
			new string[128];
			format(string, sizeof string, "** %s %s: %s", PlayerStatInfo[playerid][4], PlayerName(playerid), params[0]);
			if(PlayerInfo[playerid][pLeader] > 0) 	SendRadioMessage(PlayerInfo[playerid][pLeader], TEAM_RADIO_COLOR, string);
	   		else 									SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_RADIO_COLOR, string);
	   		format(string, sizeof(string), "* %s habla por su radio.", PlayerName(playerid));
     		ProxDetectorEx(25.0, playerid, string, COLOR_PURPLE);
		}
		else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /r <Texto>");
        return 1;
    }
	zcmd(contratar, playerid, params[])
    {
        if(PlayerInfo[playerid][pLeader] > 0)
    	{
        	if(!sscanf(params, "u", params[0]))
        	{
        	    if(IsPlayerConnected(params[0]))
        	    {
        	        if(ProxDetectorS(8.0, playerid, params[0]))
	            	{
	            	    if(params[0] == playerid) 		return	Message(playerid, COLOR_GRAD2, "¡No puedes invitarte ati mismo!");
	            	    if(GetPVarInt(params[0], "Facturing") > 0)    return 	Message(playerid, COLOR_GRAD2, "Este jugador está en otra tarea, espera.");
	            	    if(PlayerInfo[params[0]][pMember] > 0 || PlayerInfo[params[0]][pLeader] > 0) return 	Message(playerid, COLOR_GRAD2, "Este jugador ya tiene facción.");

	            	    new string[186], Faction[25];
	            	    switch(PlayerInfo[playerid][pLeader])
	            	    {
						    case 1: 	SetPVarString(params[0], "ReqF_Name", "Policía Local LS");
						    case 2:     SetPVarString(params[0], "ReqF_Name", "Al-Qaeda");
						    case 3: 	SetPVarString(params[0], "ReqF_Name", "San Andreas Ejercito M.");
						    case 4: 	SetPVarString(params[0], "ReqF_Name", "LS Medical Center");
						    case 5:     SetPVarString(params[0], "ReqF_Name", "Hitman Agency");
						    case 6:     SetPVarString(params[0], "ReqF_Name", "CNN");
						    case 7: 	SetPVarString(params[0], "ReqF_Name", "Mecánico Los Santos");
						    case 8:     SetPVarString(params[0], "ReqF_Name", "Gobierno");
						    case 9: 	SetPVarString(params[0], "ReqF_Name", "Groove Street");
						    case 10:    SetPVarString(params[0], "ReqF_Name", "Latin Kings");
						    case 11:    SetPVarString(params[0], "ReqF_Name", "Família Korsakova");
						    case 12:    SetPVarString(params[0], "ReqF_Name", "La Cosa Nostra");
						    case 15:    SetPVarString(params[0], "ReqF_Name", FactionInfo[0][fName]);
						    case 16:    SetPVarString(params[0], "ReqF_Name", FactionInfo[1][fName]);
						    case 17:    SetPVarString(params[0], "ReqF_Name", FactionInfo[2][fName]);
						    case 18:    SetPVarString(params[0], "ReqF_Name", FactionInfo[3][fName]);
						    case 19:    SetPVarString(params[0], "ReqF_Name", FactionInfo[4][fName]);
						}
						SetPVarInt(params[0], "ReqF_Faction", PlayerInfo[playerid][pLeader]);
 						SetPVarInt(params[0], "Facturing", 1);
 						GetPVarString(params[0], "ReqF_Name", Faction, 25);
						format(string, sizeof(string), "\t\t----- OFERTA DE TRABAJO -----\n\n\t%s te ofrece contrato a la facción %s\n\t¿ Quieres aceptarlo y pertenecer a esta facción ?", PlayerName(playerid), Faction);
						ShowPlayerDialog(params[0], REQF_ACCEPT, DIALOG_STYLE_MSGBOX, "Contrato de Trabajo", string, "Aceptar", "Rechazar");
						return 1;
	            	}
	            	else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        	    }
        	    else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        	}
        	else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /contratar <PlayerID>");
		 }
		 else Message(playerid, COLOR_GRAD2, "Usted no es lider de facción.");
        return 1;
	}
	zcmd(despedir, playerid, params[])
    {
        if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "Usted no es lider de facción.");
		if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /despedir <PlayerID>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        if(PlayerInfo[playerid][pLeader] == PlayerInfo[params[0]][pMember])
		{
			new string[80];
			format(string, sizeof(string), "  Tu líder %s te ha despedido", PlayerName(playerid));
			Message(params[0], COLOR_RED2, "--- [ Contrato de Trabajo Terminado ] --");
			Message(params[0], COLOR_WHITE, string);
			format(string, sizeof(string), "  Despediste a %s", PlayerName(params[0]));
			Message(playerid, COLOR_WHITE, string);
			PlayerInfo[params[0]][pMember] = 0;
			PlayerInfo[params[0]][pRank] = 0;
			UpdatePlayerStat(params[0]);
			SetPlayerSkin(params[0], 299);
		} else Message(playerid, COLOR_GRAD2, "El jugador no pertenece a tu facción.");
        return 1;
    }
    zcmd(despediroff, playerid, params[])
    {
        if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "Usted no es lider de faccion.");
        if(sscanf(params, "s[30]", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /despediroff <Nombre_Apellido>");
        if(strfind(params[0], "_" , true) != -1){
            new string[100], account[64];
            format(account, sizeof(account), "users/%s.ini", params[0]);
            if(INI_Exist(account))
            {
                INI_ParseFile(account, "GetPlayerFaction", false, true, playerid, true, false );
                if(MemberFactionID[playerid] == PlayerInfo[playerid][pLeader])
                {
                    new INI:ini = INI_Open(account);
					INI_WriteInt(ini, "Dismissed", 1);
					INI_Close(ini);
					format(string, sizeof string, "Has despedido correctamente al miembro de tu faccion (%s).", params[0]);
					Message(playerid, COLOR_GRAD4, string);
					MemberFactionID[playerid] = 0;
                } else Message(playerid, COLOR_GRAD2, "Ese usuario no consta como miembro de tu faccion.");
  		 	} else Message(playerid, COLOR_GRAD2, "Ese usuario no consta como registrado.");
        } else Message(playerid, COLOR_GRAD2, "Ejemplo de Uso: /despediroff Maria_Socola");
        return 1;
    }
    zcmd(advermember, playerid, params[])
	{
		if(PlayerInfo[playerid][pLeader] > 0) {
	    	if(!sscanf(params, "us[30]", params[0], params[1])) {
	        	if(IsPlayerConnected(params[0])) {
					if(PlayerInfo[params[0]][pMember] == PlayerInfo[playerid][pLeader])
					{
						new string[120];
				    	PlayerInfo[params[0]][pAdverFaccion] += 1;
				    	format(string, sizeof string, "Tu líder(%s) te ha dado una advertencia, Razón: %s", PlayerName(playerid), params[1]);
						Message(params[0], COLOR_RED2, string);
						if(PlayerInfo[params[0]][pAdverFaccion] == 3)
						{
					    	PlayerInfo[params[0]][pAdverFaccion] = 0;
					    	PlayerInfo[params[0]][pMember] = 0;
					    	PlayerInfo[params[0]][pRank] = 0;
					    	Message(params[0], COLOR_WHITE, "Fuiste expulsado de tu facción por acumular mas de 2 advertencias.");
						}
					} else Message(playerid, COLOR_GRAD2, "Ese usuario no pertenece a tu faccion.");
				} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
			} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /advertirm <PlayerID> <Razon>");
		} else Message(playerid, COLOR_GRAD2, "No eres lider de una faccion.");
		return 1;
	}
	zcmd(giverank, playerid, params[])
    {
        if(!sscanf(params, "ui", params[0], params[1]))
		{
            if(params[1] > 8 || params[1] < 0) { SendClientMessage(playerid, COLOR_GREY, " No hay rango tan alto!"); return 1; }
		    if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "No eres líder de facción.");
		    if(IsPlayerConnected(params[0]))
		    {
		        if(PlayerInfo[params[0]][pLeader] > 0) return Message(playerid, COLOR_GRAD2, "¡No puedes asignar rango a un líder!");
          		if(PlayerInfo[playerid][pLeader] == PlayerInfo[params[0]][pMember])
            	{
            	    new string[100];
            	    PlayerInfo[params[0]][pRank] = params[1];
            	    UpdatePlayerStat(params[0]);
            	    format(string, sizeof(string), "Líder %s asignó rango %d al miembro %s", PlayerName(playerid), PlayerInfo[params[0]][pRank], PlayerName(params[0]));
					Message(params[0], COLOR_LIGHTBLUE, string);
					Message(playerid, COLOR_LIGHTBLUE, string);
            	}
            	else Message(playerid, COLOR_GRAD2, "¡Este miembro no es de tu facción!");
		    }
		    else Message(playerid, COLOR_GREY, "Jugado desconectado.");
		}
		else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /giverank <PlayerID> <Rango>");
        return 1;
    }
	zcmd(equipo, playerid, params[]){
	    if(UsageTeam[playerid] > 0) return Message(playerid, COLOR_GRAD2, "No puedes volver a usar este comando hasta 5 minutos despues de su ultimo uso.");
        if(Team_LSPD(playerid)){
	    	if(PlayerToPoint(5, playerid, 255.0014,74.5900,1003.6406)){
            	new eq[] = "Cadete\nAgente\nMotorista\nInvestigador\nAntidisturbio\nInspector\nPolicía Científica\nTraje de Comisario\nChaleco + Salud\nPistola + Porra\nRopa Normal";
            	ShowPlayerDialog(playerid,EQUIPO_DIALOG,DIALOG_STYLE_LIST,">> Equipo Policía <<",eq,"Equipar","Cancelar");
			}
		}
        else if(Team_NG(playerid)){
	    	if(PlayerToPoint(20, playerid, 258.3126,2028.1844,-6.7623) || PlayerToPoint(5.0, playerid, 243.0874,2030.2115,-6.7553)){
            	new eq1[] = "Entrenamiento\nSoldado\nFrancotirador\nUS Army Liviana\nUS Army Pesada\nNormal\nChaleco+Salud";
            	ShowPlayerDialog(playerid,EQUIPO_NG,DIALOG_STYLE_LIST,">> Equipo SAEM <<",eq1,"Equipar","Cancelar");
			}
		}
		else if(Team_SAMUR(playerid)){
			if(PlayerToPoint(5, playerid, 842.6531,-1222.9293,1195.2655)){
			    new eq[] = "Traje Doctor\nTraje Médico Blanco\nTraje Médico Azul\nTraje Médico Verde\nIndumentario Normal";
			    ShowPlayerDialog(playerid,EQUIPO_DIALOG4,DIALOG_STYLE_LIST,">> Equipo SAMUR <<",eq,"Equipar","Cancelar");
			}
		}
        else if(Team_Mecanicos(playerid)){
			if(PlayerToPoint(5, playerid, 2125.4524,-2278.0686,20.6709))
			{   new mec[] = "Ayudante\nMecanico\nIngeniero\nDirector\nRopa Normal";
			    ShowPlayerDialog(playerid,EQUIPO_MECANICO,DIALOG_STYLE_LIST,">> Equipo Mecánico <<",mec,"Equipar","Cancelar");
   			}
		}
		else if(Gobierno(playerid)){
		    if(PlayerToPoint(5, playerid, 366.6122,158.6483,1008.3828)){
		        new gob[] = "Equipo Guardaespaldas\nRopa Normal";
		        ShowPlayerDialog(playerid,EQUIPO_GOBIERNO,DIALOG_STYLE_LIST,">> Equipo Gobierno <<",gob,"Equipar","Cancelar");
      		}
		}
		else if(Journalist(playerid)){
			if(PlayerToPoint(5, playerid, -2705.0156,522.8817,49.1778)){
			    ShowPlayerDialog(playerid, EQUIPO_JOURNALIST, DIALOG_STYLE_LIST, ">> Equipo LSRTV <<", "Camara + Vida", "Equipar", "Cancelar");
			}
		}
        /*else if(Hitman(playerid)){
            if(PlayerToPoint(5, playerid, 1487.4659,2873.0540,10.8806)){
                new hit[] = "Pistol SD + Cuchillo + Camara\nSniper + Cuchillo + Camara\nD. Eagle + Cuchillo + Camara\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_HITMAN,DIALOG_STYLE_LIST,">> Equipo Hitman <<",hit,"Equipar","Cancelar");
            }
        }*/
        else if(Terroristas(playerid)){
			if(PlayerToPoint(5, playerid, 1114.2040,-316.3322,74.0447)){
				new ter[] = "Ak47 + Cuchillo\nGranadas + D. Eagle\nVida + Chaleco";
				ShowPlayerDialog(playerid,EQUIPO_TERROR,DIALOG_STYLE_LIST,">> Equipo Al-Qaeda <<",ter,"Equipar","Cancelar");
			}
		}
	    else if(PlayerInfo[playerid][pJob] == 9){
            if(PlayerToPoint(5, playerid, -1825.4268,137.4265,18.9315)){
                new eq[] = "Traje I\nTraje II\nTraje III\nIndumentario Normal";
                ShowPlayerDialog(playerid,EQUIPO_DIALOG5,DIALOG_STYLE_LIST,">> Equipo Taxi <<",eq,"Equipar","Cancelar");
            }
        }
	    return 1;
	}
	zcmd(moneda, playerid, params[])
	{
	    new coin = random(2)+1, string[90], coinname[10];
	    if(coin == 1) 	coinname = "cara";
	    else 			coinname = "cruz";
	    format(string, sizeof(string), "*** %s lanza una moneda al aire y cae %s.", PlayerName(playerid), coinname);
	    ProxDetectorEx(10.0, playerid, string, COLOR_PURPLE);
	    return 1;
	}
	zcmd(ven, playerid, params[])
	{
	    if(IsPlayerInAnyVehicle(playerid))
		{
			new string[56];
            if(VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
	        {
		       VehicleWindows[GetPlayerVehicleID(playerid)] = 1;
		       format(string, sizeof(string), "* %s baja la ventana.", PlayerName(playerid));
		       ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		       return 1;
	        }
            else if(VehicleWindows[GetPlayerVehicleID(playerid)] == 1)
	        {
		       VehicleWindows[GetPlayerVehicleID(playerid)] = 0;
		       format(string, sizeof(string), "* %s sube la ventanilla.", PlayerName(playerid));
		       ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		       return 1;
	        }
	    }
	    else Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
        return 1;
	}
    zcmd(limpiar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(GetPVarType(playerid, "OnDuty") == 0 && IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "ui", params[0], params[1]))
        {
            if(IsPlayerConnected(params[0]))
		  	{
		  	    new string[128];
				switch(params[1])
				{
				    case 0:
				    {
				        format(PlayerInfo[params[0]][pAntecedente1], 64, "None");
           				format(PlayerInfo[params[0]][pAntecedente2], 64, "None");
              			format(PlayerInfo[params[0]][pAntecedente3], 64, "None");
                		PlayerInfo[params[0]][pBusqueda] = 0;
                 		SetPlayerWantedLevel(params[0], 0);
                  		format(string, sizeof(string), "* %s limpió los antecedentes y la búsqueda de %s", PlayerName(playerid), PlayerName(params[0]));
                   		Message(playerid, COLOR_GREEN, string);
                    	Message(params[0], COLOR_GREEN, string);
                    	return 1;
				    }
				    case 1:
				    {
				        if(strcmp("None", PlayerInfo[params[0]][pAntecedente1], true) == 0) return Message(playerid, COLOR_GRAD2, "Slot#1 Sin antecedentes!");
            			else
               			{
                 			format(PlayerInfo[params[0]][pAntecedente1], 64, "None");
                   			format(string, sizeof(string), "* %s limpió el antecedente 1º de %s", PlayerName(playerid), PlayerName(params[0]));
                     		Message(playerid, COLOR_GREEN, string);
                      		Message(params[0], COLOR_GREEN, string);
                  		}
                  		return 1;
				    }
				    case 2:
				    {
				        if(strcmp("None", PlayerInfo[params[0]][pAntecedente2], true) == 0) return Message(playerid, COLOR_GRAD2, "Slot#2 Sin antecedentes!");
            			else
               			{
                 			format(PlayerInfo[params[0]][pAntecedente2], 64, "None");
                   			format(string, sizeof(string), "* %s limpió el antecedente 2º de %s", PlayerName(playerid), PlayerName(params[0]));
                     		Message(playerid, COLOR_GREEN, string);
                      		Message(params[0], COLOR_GREEN, string);
                  		}
                  		return 1;
				    }
				    case 3:
				    {
				        if(strcmp("None", PlayerInfo[params[0]][pAntecedente3], true) == 0) return Message(playerid, COLOR_GRAD2, "Slot#3 Sin antecedentes!");
            			else
               			{
                 			format(PlayerInfo[params[0]][pAntecedente3], 64, "None");
                   			format(string, sizeof(string), "* %s limpió el antecedente 3º de %s", PlayerName(playerid), PlayerName(params[0]));
                     		Message(playerid, COLOR_GREEN, string);
                      		Message(params[0], COLOR_GREEN, string);
                  		}
                  		return 1;
				    }
				    case 4:
				    {
				        PlayerInfo[params[0]][pBusqueda] = 0;
           				SetPlayerWantedLevel(playerid, 0);
              			format(string, sizeof(string), "* %s canceló el nivel de búsqueda de %s", PlayerName(playerid), PlayerName(params[0]));
                		Message(playerid, COLOR_GREEN, string);
                 		Message(params[0], COLOR_GREEN, string);
                 		return 1;
				    }
				}
		  	}
		  	else Message(playerid, COLOR_GRAD2, "Error de ID - Jugador OffLine.");
        }
        else
        {
			ClearChatbox(playerid, 5);
            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /limpiar <ID> <item> 0 [Todos] 1 [Antecedente] 2 [Antecedente] 3 [Antecedente] 4 [N. Busqueda]");
        }
        return 1;
    }
	zcmd(ant, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(GetPVarType(playerid, "OnDuty") == 0) return  Message(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "us[64]", params[0], params[1]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if(StringOther(playerid, params[1]) == 1)
            	{
	                if (IsACop(params[0])) return Message(playerid, COLOR_GRAD2, "No puedes acusar a un policía.");
	                if(strcmp("None", PlayerInfo[params[0]][pAntecedente1], true) == 0 || strcmp("None", PlayerInfo[params[0]][pAntecedente2], true) == 0 || strcmp("None", PlayerInfo[params[0]][pAntecedente3], true) == 0)
	    			{
							if(strcmp("None", PlayerInfo[params[0]][pAntecedente1], true) == 0)  	format(PlayerInfo[params[0]][pAntecedente1], 64, params[1]);
							else if(strcmp("None", PlayerInfo[params[0]][pAntecedente2], true) == 0) format(PlayerInfo[params[0]][pAntecedente2], 64, params[1]);
							else if(strcmp("None", PlayerInfo[params[0]][pAntecedente3], true) == 0) format(PlayerInfo[params[0]][pAntecedente3], 64, params[1]);

							new string[128];
							MessageEx(playerid, params[0], COLOR_RED,  "_________| Antecedentes Policiales |_________");
			    			format(string, sizeof(string), "- %s", PlayerInfo[params[0]][pAntecedente1]);    	Message(playerid, COLOR_YELLOW, string);    Message(params[0], COLOR_YELLOW, string);
						    format(string, sizeof(string), "- %s", PlayerInfo[params[0]][pAntecedente2]);    	Message(playerid, COLOR_YELLOW, string);    Message(params[0], COLOR_YELLOW, string);
						    format(string, sizeof(string), "- %s", PlayerInfo[params[0]][pAntecedente3]);   	Message(playerid, COLOR_YELLOW, string);    Message(params[0], COLOR_YELLOW, string);
						    MessageEx(playerid, params[0], COLOR_RED,  "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
						    format(string, sizeof(string), "* El oficial %s escribe en el historial de %s", PlayerName(playerid), PlayerName(params[0]));
						    ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
					else Message(playerid, COLOR_GRAD2, "Ha alcanzado el límite de Antecedentes");
				}
				else Message(playerid, COLOR_GRAD2, "* Has utilizado carácteres no permitidos.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /ant <PlayerID> <Antecedente>");
        return 1;
    }
	zcmd(expediente, playerid, params[])
	{
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡Primero conectate!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /expediente <PlayerID>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		if(ProxDetectorS(8.0, playerid, params[0]))
		{
		    new string[64];
			Message(params[0], COLOR_GREEN,"______-= Expediente policial =-_______");
            format(string, sizeof(string),"  Nombre: %s", PlayerName(playerid));
            Message(params[0], COLOR_WHITE,string);
			Message(params[0], COLOR_YELLOW2,"  Antecedentes:");
            format(string, sizeof(string), "  - %s", PlayerInfo[playerid][pAntecedente1]);
            Message(params[0], WANTED_COLOR, string);
            format(string, sizeof(string), "  - %s", PlayerInfo[playerid][pAntecedente2]);
   			Message(params[0], WANTED_COLOR, string);
            format(string, sizeof(string), "  - %s", PlayerInfo[playerid][pAntecedente3]);
            Message(params[0], WANTED_COLOR, string);
            Message(params[0], COLOR_GREEN,"_______________________________________");
            format(string, sizeof(string), "* %s le muestra a %s su expediente.", PlayerName(playerid), PlayerName(params[0]));
            ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		}
		else Message(playerid, COLOR_GRAD2, "Jugador está lejos de ti.");
		return 1;
	}
   	zcmd(nokear, playerid, params[])
	{
	    if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /nokear <ID>");
        if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, "Usted debe ser mayor al nivel 2.");
		if(GetPVarInt(playerid, "KnockedDown") == 0 || IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0]))
		{
			if(ProxDetectorS(3.0, playerid, params[0]))
			{
				new rands = random(2)+1, string[128];
				format(string, sizeof(string), "* %s agarra una piedra.", PlayerName(playerid));
            	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
            	ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
            	SetPVarInt(playerid, "KnockedDown", 1);
            	SetTimerEx("ClearKnock", 60000, false, "i", playerid);

            	if(rands == 1)
				{
					ApplyAnimation(params[0], "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
					SetTimerEx("ClearKnock", 60000, false, "i", params[0]);
					SetPVarInt(params[0], "KnockedDown", 1);
                    format(string, sizeof(string), "* %s intenta noquear a %s con la piedra y lo consige.", PlayerName(playerid), PlayerName(params[0]));
					ProxDetectorEx(20.0, playerid, string, 0x00BF60FF);
					format(string, sizeof(string), "* %s queda inconsciente.", PlayerName(params[0]));
            		ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
            		return 1;
				}
				else
				{
					format(string, sizeof(string), "* %s intenta noquear a %s con la piedra y le da muy suave.", PlayerName(playerid), PlayerName(params[0]));
					ProxDetectorEx(20.0, playerid, string, 0xB90000FF);
					return 1;
				}
			}
			else Message(playerid, COLOR_GRAD2, "El jugador está muy lejos de usted.");
		}
		else Message(playerid, COLOR_GRAD2, "Usted no puede utilizar este comando ahora.");
		return 1;
	}
	//SAEM
 	zcmd(misil, playerid, params[])
	{
	    new Float:M_X, Float:M_Y, Float:M_Z, Float:radius;
	    if(Team_NG(playerid))
	    {
	        if(Misile_Launcher < 3)
	        {
	            new string[128];
		        if(PlayerToPoint(1.0,playerid,2793.0981,-2505.6426,14.9223))
		        {
			        if(!sscanf(params, "fffiii",M_X,M_Y,M_Z,radius,params[1],params[2]))
			        {
			            if(PlayerInfo[playerid][pRank] > 3)
			            {
			                if(radius > 500 || radius < 0) return Message(playerid, COLOR_GRAD2, "Radio máximo 500");
			                if(params[1] > 13  || params[1] < 0) return Message(playerid, COLOR_GRAD2, "Tipo explosión 0-13");
			                if(params[2] > 60  || params[2] < 0) return Message(playerid, COLOR_GRAD2, "Tiempo máximo 60 segundos");
			            	SetTimerEx("MissileLaunchEx", params[2]*1000, false, "fffii", M_X,M_Y,M_Z,radius,params[1]);
							Misile_Launcher ++;
							SendRadioMessage(3, TEAM_RADIO_COLOR, "** AVISO DE LANZAMIENTO DE MISIL **");
                            format(string, sizeof(string), "* Lanzamiento de misil en %d segundos, destino: %0.2f - %0.2f - %0.2f, radio: %d",
                            params[2],M_X,M_Y,M_Z,radius,params[1]);
                            SendRadioMessage(3, TEAM_RADIO_COLOR, string);
                            return 1;
						}
						else Message(playerid, COLOR_GRAD2, "Necesitas ser mayor de rango 3.");
			        }
			        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /misil <coordenada X> <coordenada Y> <coordenada Z> <radio> <tipo> <tiempo>");
				}
				else if(PlayerToPoint(1.0,playerid,2728.9238,-2384.4739,14.9300))
				{
				    if(!sscanf(params, "id",params[0], params[1]))
			        {
			            if(PlayerInfo[playerid][pRank] > 3)
			            {
			                if(params[0] > MAX_VEHICLES || params[0] < 0) return Message(playerid, COLOR_GRAD2, "Vehículo incorrecto.");
							if(!VehicleSpawned[params[0]]) return Message(playerid, COLOR_GRAD2, "Vehículo no spawneado.");
			                if(params[1] > 60  || params[1] < 0) return Message(playerid, COLOR_GRAD2, "Tiempo máximo 60 segundos");
			                SetTimerEx("MissileLaunch", params[1]*1000, false, "i", params[0]);
			                Misile_Launcher ++;
							SendRadioMessage(3, TEAM_RADIO_COLOR, "** AVISO DE LANZAMIENTO DE MISIL **");
                            format(string, sizeof(string), "* Lanzamiento de misil en %d segundos, objetivo vehículo %d.", params[1], params[0]);
                            SendRadioMessage(3, TEAM_RADIO_COLOR, string);
                            return 1;
			            }
			            else Message(playerid, COLOR_GRAD2, "Necesitas ser mayor de rango 3.");
			        }
			        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /misil <vehículo> <tiempo>");
				}
				else Message(playerid, COLOR_GRAD2, "No estás en ningún lanzamisiles.");
			}
			else Message(playerid, COLOR_GRAD2, "Aún no han detonado los otros misiles.");
	    }
	    else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
 	}
    zcmd(arrestar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(!sscanf(params, "uiii", params[0], params[1], params[2], params[3]))
        {
            if(PlayerToPoint(4.0, playerid, 267.5095,87.0759,1001.0391)) //LSPD
            {
                if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GREY, "¡Jugador muy lejos!");
                if(params[1] < 0 || params[1] > 60) return Message(playerid, COLOR_GREY, "El máximo de minutos es 60.");
                if(params[2] < 0 || params[2] > 12000) return Message(playerid, COLOR_GREY, "El máximo de precio es 12,000$");
                if(params[3] < 0 || params[3] > 9999999) return Message(playerid, COLOR_GREY, "Máximo fianza: 9,999,999$ (Sin fianza)");

                new wantedlevel = GetPlayerWantedLevel(params[0]), string[128];
          		if(wantedlevel < 1) return SendClientMessage(playerid, COLOR_GREY, "¡Este jugador no tiene nivel de búsqueda!");

				SetPlayerWantedLevel(params[0], 0);
				GameTextForPlayer(params[0], "ENCARCELADO", 5000, 5);
				Bought(params[0], params[2]);
				SafeResetPlayerWeapons(params[0]);
				PlayerInfo[params[0]][pJailTime] = params[1] * 60;
				PlayerInfo[params[0]][pJailed] = 3;
				format(string, sizeof(string), "{FFFFFF}Noticias {EE0000}SA {00B546}CNN+{FFFFFF} \"Sospechoso {FF9900}%s {FFFFFF}ha sido arrestado por %d años\"",PlayerName(params[0]), params[1]);
				GlobalMsg(-1, string);
				format(string, sizeof(string), "[ Sospechoso %s encarcelado por %d minutos, multa %d$, fianza %d$ - Oficial: %s ]", PlayerName(params[0]),params[1],params[2],params[3],PlayerName(playerid));
				MessageEx(playerid, params[0], COLOR_WHITE, string);
				if(GetPlayerInterior(playerid) == 3 || GetPlayerInterior(params[0]) == 3)
				{
				    PlayerInfo[params[0]][pJailed] = 3;
					new cellran = random(3);
					switch(cellran)
					{
						case 0: SetPosEx(params[0], 197.5159,174.6245,1003.0234,3.1802,3,0);
						case 1: SetPosEx(params[0], 193.3041,175.5405,1003.0234,355.6601,3,0);
						case 2: SetPosEx(params[0], 198.3940,161.4172,1003.0300,176.7217,3,0);
					}
				}
				return 1;
            }
            else if(PlayerToPoint(4.0, playerid, 625.9482,854.0344,-90.2031)) //SAEM
            {
                if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GREY, "¡Jugador muy lejos!");
                if(params[1] < 0 || params[1] > 60) return Message(playerid, COLOR_GREY, "El máximo de minutos es 60.");
                if(params[2] < 0 || params[2] > 120000) return Message(playerid, COLOR_GREY, "El máximo de precio es 120,000$");
                if(params[3] < 0 || params[3] > 9999999) return Message(playerid, COLOR_GREY, "Máximo fianza: 9,999,999$ (Sin fianza)");

                new wantedlevel = GetPlayerWantedLevel(params[0]), string[128];
          		if(wantedlevel < 1) return SendClientMessage(playerid, COLOR_GREY, "¡Este jugador no tiene nivel de búsqueda!");

				SetPlayerWantedLevel(params[0], 0);
				GameTextForPlayer(params[0], "ENCARCELADO", 5000, 5);
				Bought(params[0], params[2]);
				SafeResetPlayerWeapons(params[0]);
				PlayerInfo[params[0]][pJailTime] = params[1] * 60;
				PlayerInfo[params[0]][pJailed] = 5;
				format(string, sizeof(string), "{FFFFFF}Noticias {EE0000}SA {00B546}CNN+{FFFFFF} \"Sospechoso {FF9900}%s {FFFFFF}ha sido arrestado por %d años\"",PlayerName(params[0]), params[1]);
				GlobalMsg(-1, string);
				format(string, sizeof(string), "[ Sospechoso %s encarcelado por %d minutos, multa %d$, fianza %d$ - Oficial: %s ]", PlayerName(params[0]),params[1],params[2],params[3],PlayerName(playerid));
				MessageEx(playerid, params[0], COLOR_WHITE, string);
				return 1;
            }
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /arrestar <PlayerID> <Minutos> <Multa$> <Fianza$>");
        return 1;
    }
    zcmd(su, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(GetPVarType(playerid, "OnDuty") == 0 && IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "us[64]", params[0], params[1]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if (IsACop(params[0])) return Message(playerid, COLOR_GRAD2, "No puedes acusar a un policía.");
                if (PlayerInfo[params[0]][pBusqueda] == 6)
				{
					ClearChatbox(playerid, 5);
					Message(playerid, WANTED_COLOR, "Este jugador ha alcanzado el nivel de búsqueda máximo");
	    			return Message(playerid, WANTED_COLOR, "Nivel de búsqueda: 6/6");
				}
				else
				{
    				if(PlayerInfo[params[0]][pBusqueda] < 1)
				    {
        				SendRadioMessage(1, TEAM_RADIO_COLOR, "** Central: se ha encontrado un nuevo sospechoso, para más información miren sus ordenadores.")
				    }
				    new string[64];
				    ClearChatbox(playerid, 10);
    				PlayerInfo[params[0]][pBusqueda] ++;
    				format(string, sizeof(string), "** Acusaste a %s: %s", PlayerName(params[0]), params[1])
				    Message(playerid, WANTED_COLOR, string);
			    	format(string, sizeof(string), "Nivel de búsqueda: %d/6", PlayerInfo[params[0]][pBusqueda])
				    Message(playerid, WANTED_COLOR, string);
				    SetPlayerWantedLevel(params[0], PlayerInfo[params[0]][pBusqueda]);
				}
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} (/su)spect <PlayerID> <crimen>");
        return 1;
    }
    zcmd(esposar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(!sscanf(params, "u", params[0]))
        {
            if (params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No puedes esposarte ati mismo!");
            if (ProxDetectorS(8.0, playerid, params[0]))
			{
				new string[100];
				if(GetPVarType(params[0], "PlayerCuffed") == 0)
				{
					format(string, sizeof(string), "* Oficial %s esposa al sospechoso %s", PlayerName(playerid), PlayerName(params[0]));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					GameTextForPlayer(params[0], "~r~ESPOSADO", 2500, 3);
					SetPVarInt(params[0], "PlayerCuffed", 1);
                    SetPlayerSpecialAction(params[0], 24);
                    SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
					return 1;
				}
				else
				{
				    format(string, sizeof(string), "* Oficial %s desesposa a %s", PlayerName(playerid), PlayerName(params[0]));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					GameTextForPlayer(params[0], "~g~LIBRE", 2500, 3);
					DeletePVar(params[0], "PlayerCuffed");
					SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(params[0], 0);
					return 1;
				}
			} else Message(playerid, COLOR_GREY, "El jugador está muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /esposar <PlayerID>");
        return 1;
    }
    zcmd(sospechosos, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(GetPVarInt(playerid, "OnDuty") == 1)
        {
            if(!sscanf(params, "i", params[0]))
            {
                if(params[0] < 1 || params[0] > 6) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /sospechosos < Nivel Búsqueda: 1-6 >");
                new string[64];
                ClearChatbox(playerid, 10);
                Message(playerid, WANTED_COLOR, "> Sospechosos más buscados <");
				for(new i=0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
						if(params[0] == 1 && PlayerInfo[i][pBusqueda] == 1){ 		 format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 1", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
						else if(params[0] == 2 && PlayerInfo[i][pBusqueda] == 2){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 2", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
						else if(params[0] == 3 && PlayerInfo[i][pBusqueda] == 3){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 3", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
						else if(params[0] == 4 && PlayerInfo[i][pBusqueda] == 4){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 4", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
						else if(params[0] == 5 && PlayerInfo[i][pBusqueda] == 5){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 5", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
						else if(params[0] == 6 && PlayerInfo[i][pBusqueda] == 6){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 6", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					}
				}
            } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /sospechosos < Nivel Búsqueda: 1-6 >");
        } else Message(playerid, COLOR_GRAD2, "¡No estas OnDuty!");
        return 1;
    }
    zcmd(bk, playerid, params[]){
        if(GetPVarInt(playerid, "RequestingBackup") == 1) return Message(playerid, COLOR_GRAD2, "Ya tienes un pedido de ayuda.");
        if(IsACop(playerid)){
            new Float:px,Float:py,Float:pz,string[128]; GetPlayerPos(playerid, px, py, pz);
            SetPVarInt(playerid, "RequestingBackup", 1);
			if(Team_LSPD(playerid)){
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", PlayerName(playerid));
			    SendRadioMessage(1, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++){
					if(IsPlayerConnected(i)){
						if(Team_LSPD(i)){
						    if(GetPVarType(i, "OnDuty") == 1){
								SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
								if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
							}
						}
					}
				}
			}
            else if(Team_NG(playerid)){
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", PlayerName(playerid));
			    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++){
					if(IsPlayerConnected(i)){
						if(Team_NG(i)){
						    if(GetPVarType(i, "OnDuty") == 1){
								SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
								if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
							}
						}
					}
				}
			}
			SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
        } else Message(playerid, COLOR_WHITE, "{DC092F}No Autorizado.");
        return 1;
    }
    zcmd(bkc, playerid, params[]){
		if(IsACop(playerid)) BackupClear(playerid, 0);
        else Message(playerid, COLOR_WHITE, "{DC092F}No Autorizado.");
        return 1;
	}
    zcmd(ta, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        new string[50];
        if(GetPVarType(playerid, "Tazer") == 0){
	        format(string, sizeof(string), "* %s carga su tazer", PlayerName(playerid));
			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			SetPlayerAttachedObject(playerid, 0, 18642, 6, 0.070212, 0.017647, 0.065603, 0.000000, 185.632217, 264.085418, 1.000000, 1.000000, 1.000000 );
			Att_Obj_Slot_0[playerid] = "Tazer";
			SetPVarInt(playerid, "Tazer", 1);
		}
		else{
		    format(string, sizeof(string), "* %s guarda su tazer", PlayerName(playerid));
			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			DeletePVar(playerid, "Tazer");
			RemoveHand(playerid);
		}
        return 1;
    }
    zcmd(bar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(GetPVarType(playerid, "OnDuty") == 0 && IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "i", params[0]))
        {
            new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
        	GetPlayerPos(playerid, plocx, plocy, plocz);
	        GetPlayerFacingAngle(playerid,ploca);
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            switch(params[0])
            {
                case 1: CreateRoadblock(1459,plocx,plocy,plocz,ploca);
                case 2: CreateRoadblock(978,plocx,plocy,plocz+0.6,ploca);
                case 3: CreateRoadblock(981,plocx,plocy,plocz+0.9,ploca+180);
                case 4: CreateRoadblock(1238,plocx,plocy,plocz+0.2,ploca);
                case 5: CreateRoadblock(1425,plocx,plocy,plocz+0.3,ploca);
                case 6: CreateRoadblock(3265,plocx,plocy,plocz-0.5,ploca);
                case 7: CreateRoadblock(3091,plocx,plocy,plocz+0.5,ploca+180);
                default: Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} (/bar)rera <ID:1-7>");
            }
            GameTextForPlayer(playerid,"~r~barrera ~w~puesta!",3000,1);
        }
        else
		{
            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} (/bar)rera <ID>");
            Message(playerid, COLOR_GRAD2, "IDs: 1. Pequeña | 2. Mediana | 3. Grande");
            Message(playerid, COLOR_GRAD2, "IDs: 4. Cono | 5. Desvío | 6. Prohibido | 7.Cierre");
            Message(playerid, COLOR_GRAD2, "Utiliza: /qb para quitar la barrera más cercana");
		}
        return 1;
    }
    zcmd(qb, playerid, params[])
    {
        if(IsACop(playerid) || PlayerInfo[playerid][pAdminCP] > 3)
     	{
        	DeleteClosestRoadblock(playerid);
	        GameTextForPlayer(playerid,"~r~barrera ~w~eliminada!",3000,1);
		}
        return 1;
    }
    zcmd(qbs, playerid, params[])
	{
	    if(IsACop(playerid)  || PlayerInfo[playerid][pAdminCP] >= 3)
     	{
			if(PlayerInfo[playerid][pRank] >= 6 || PlayerInfo[playerid][pAdminCP] >= 3)
			{
        		DeleteAllRoadblocks(playerid);
	        	return GameTextForPlayer(playerid,"~w~barreras ~r~eliminadas",3000,1);
			}
		}
	    return 1;
	}
    zcmd(multar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(GetPVarType(playerid, "OnDuty") == 0 && !Team_NG(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "uis[64]", params[0], params[1], params[2]))
        {
            if(params[1] < 0 || params[1] > 6000) return Message(playerid, COLOR_GREY, "El máximo de multa son 6000$");
            if(IsPlayerConnected(params[0]))
			{
			    if(GetPVarInt(params[0], "Facturing") > 0) return Message(playerid, COLOR_GRAD2, "Este jugador ya tiene una petición pendiente");
			    if(!ProxDetectorS(8.0,playerid,params[0])) return Message(playerid, COLOR_GRAD2, "Muy lejos de el jugador.");
			    new string[100];
			    if(GetPlayerMoney(params[0]) < params[1])
				{
    				format(string, sizeof(string), "* El infractor no tiene %d$ para pagar la multa.", params[1]);
					return Message(playerid, COLOR_GRAD2, string);
				}
				else
				{
				    ClearChatbox(playerid, 10);
				    Message(params[0], -1, "  {1A5FFF}Estado de San Andreas");
				    format(string, sizeof(string), "  {89CBC1}Demandante: {FFFFFF}%s", PlayerName(playerid));
					Message(params[0], -1, string);
					format(string, sizeof(string), "  {89CBC1}Infracción: {FFFFFF}%s", params[2]);
					Message(params[0], -1, string);
					format(string, sizeof(string), "  {FF1700}Multa: {FFFFFF}%d$", params[1]);
					Message(params[0], -1, string);
					Message(playerid, COLOR_WHITE, "* Espere la respuesta del sujeto");
					Message(params[0], COLOR_WHITE, "Lo han multado. Utilize [/aceptar multa ó /cancelar multa] para pagar la multa.");
					SetPVarInt(params[0], "TicketOffer", playerid);
					SetPVarInt(params[0], "TicketMoney", params[1]);
					SetPVarInt(params[0], "Facturing", 1);
				}
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /multar <ID> <precio> <razón>");
        return 1;
    }
    zcmd(darlicencia, playerid, params[0])
    {
        new string[86], item[12];
        if(!Team_LSPD(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
        if(!sscanf(params, "us[12]", params[0], item)){
			if(IsPlayerConnected(params[0])){
			    if(ProxDetectorS(5.0,playerid, params[0])){
			    	if(strcmp(item,"conduccion",true) == 0)
        			{
        			    PlayerInfo[params[0]][pCarLic] = 1;
                        format(string, sizeof(string), "* %s le da una licencia de conduccion a %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
            			Message(params[0], COLOR_YELLOW, "* Has obtenido la licencia de conduccion.");
				        return 1;
					}
                    else if(strcmp(item,"arma",true) == 0)
				    {
						PlayerInfo[params[0]][pGunLic] = 1;
			    		format(string, sizeof(string), "* %s le da una licencia de arma a %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
                    	Message(playerid, COLOR_YELLOW, "* Has obtenido la licencia de armas.");
                    	return 1;
              		} else Message(playerid, COLOR_GRAD2, "Nombre incorrecto.");
              	} else Message(playerid, COLOR_GRAD2, "Jugador demasiado lejos.");
       		} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
 		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /darlicencia <PlayerID> <Conduccion - Arma>");
 		return 1;
    }
    zcmd(licencia, playerid, params[])
    {
        new string[86], item[12];
        if(!Team_NG(playerid)) return Message(playerid, COLOR_GRAD2, "No eres militar.");
        if(!sscanf(params, "us[12]", params[0], item)){
			if(IsPlayerConnected(params[0])){
				if(ProxDetectorS(5.0, playerid, params[0])){
				    if(strcmp(item,"aviacion",true) == 0)
				    {
				        PlayerInfo[params[0]][pFlyLic] = 1;
        				format(string, sizeof(string), "* %s le da una licencia de aviacion a %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
            			Message(playerid, COLOR_YELLOW, "* Has obtenido la licencia de aviacion.");
				        return 1;
				    }
				    else if(strcmp(item,"navegacion",true) == 0)
				    {
                        PlayerInfo[params[0]][pBoatLic] = 1;
        				format(string, sizeof(string), "* %s le da una licencia de navegacion a %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
            			Message(playerid, COLOR_YELLOW, "* Has obtenido la licencia de navegacion.");
				        return 1;
				    } else Message(playerid, COLOR_GRAD2, "Nombre incorrecto.");
    			} else Message(playerid, COLOR_GRAD2, "Muy lejos del comprador.");
			} else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /licencia <PlayerID> <Aviacion - Navegacion>");
        return 1;
    }
    zcmd(m, playerid, params[])
    {
        if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /m <texto>");
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!")
		if(Team_SAMUR(playerid) || IsACop(playerid))
        {
			new string[128];
			format(string, sizeof(string), "(Megáfono) %s: %s",PlayerName(playerid), params[0]);
			ProxDetectorEx(60.0, playerid, string,COLOR_MEGAPHONE);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        return 1;
    }
    zcmd(aceptar, playerid, params[])
	{
        if(!sscanf(params,"s[64]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"telefono",true) == 0)
            {
                if(GetPVarInt(playerid, "NumBuy") == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un número!");
                if(GetPVarInt(playerid, "NumPrice") > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "¡No tienes suficiente dinero!");
                format(string, sizeof(string), "* %s compra un número de teléfono", PlayerName(playerid));
                ProxDetectorEx(30.0,playerid, string, COLOR_PURPLE);
                PlayerInfo[playerid][pPnumber] = GetPVarInt(playerid, "NumBuy");
                Earn(GetPVarInt(playerid, "NumSeller"), GetPVarInt(playerid, "NumPrice"));
                Bought(playerid, GetPVarInt(playerid, "NumPrice"));
                DeletePVar(playerid, "NumBuy");
                DeletePVar(playerid, "NumPrice");
                DeletePVar(playerid, "NumSeller");
                DeletePVar(playerid, "Facturing");
                return 1;
            }
			else if(strcmp(params[0],"multa",true) == 0)
			{
			    if(GetPVarType(playerid, "TicketOffer") == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te multado!");
			    format(string, sizeof(string), "* %s paga una multa.", PlayerName(playerid));
   				ProxDetectorEx(30.0,playerid, string, COLOR_PURPLE);
   				format(string, sizeof(string), " {FFC990}%s {FFFFFF}pagó una multa de {3E9EEA}%d$.", PlayerName(playerid), GetPVarInt(playerid, "TicketMoney"));
				MessageEx(playerid, GetPVarInt(playerid, "TicketOffer"), -1, string);
   				Bought(playerid, GetPVarInt(playerid, "TicketMoney"));
   				Earn(GetPVarInt(playerid, "TicketOffer"), GetPVarInt(playerid, "TicketMoney"));
   				DeletePVar(playerid, "TicketOffer");
   				DeletePVar(playerid, "TicketMoney");
				DeletePVar(playerid, "Facturing");
				return 1;
			}
			else if(strcmp(params[0],"saludo",true) == 0)
			{
			    if(GetPVarType(playerid, "Saludo_ID") == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un saludo!");
				format(string, sizeof string, "* %s saluda y le da un abrazo a %s.", PlayerName(GetPVarInt(playerid, "Saludo_ID")), PlayerName(playerid));
			    ProxDetectorEx(20.0,playerid, string, COLOR_PURPLE);
			    ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
			    ApplyAnimation(GetPVarInt(playerid, "Saludo_ID"),"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
			    DeletePVar(playerid, "Saludo_ID");
			    return 1;
			}
			else if(strcmp(params[0],"beso",true) == 0)
			{
			    if(GetPVarType(playerid, "Beso_ID") == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un beso!");
                ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);
                ApplyAnimation(GetPVarInt(playerid, "Beso_ID"), "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);
                DeletePVar(playerid, "Beso_ID");
			    return 1;
			}
			else if(strcmp(params[0],"regalo",true) == 0)
			{
			    if(GetPVarType(playerid, "Regalo_ID") == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un regalo!");
				switch(GetPVarInt(playerid, "Regalo_ITEM"))
				{
				    case 1:{
				        PlayerInfo[playerid][pAnilloCom] += 1;
				        PlayerInfo[GetPVarInt(playerid, "Regalo_ID")][pAnilloCom] -= 1;
				        Message(playerid, COLOR_GRAD4, "* Has recibido un anillo de compromiso.");
        			}
        			case 2:{
        			    PlayerInfo[playerid][pAnilloOro] += 1;
        			    PlayerInfo[GetPVarInt(playerid, "Regalo_ID")][pAnilloOro] -= 1;
        			    Message(playerid, COLOR_GRAD4, "* Has recibido un anillo de oro.");
    			    }
    			    case 3:{
						PlayerInfo[playerid][pCollar] += 1;
						PlayerInfo[GetPVarInt(playerid, "Regalo_ID")][pCollar] -= 1;
						Message(playerid, COLOR_GRAD4, "* Has recibido un collar de perlas.");
					}
					case 4:{
					    PlayerInfo[playerid][pAnilloDia] += 1;
					    PlayerInfo[GetPVarInt(playerid, "Regalo_ID")][pAnilloDia] -= 1;
					    Message(playerid, COLOR_GRAD4, "* Has recibido un anillo de diamantes.");
	    			}
	    			case 5:{
	    			    PlayerInfo[playerid][pPulsera] += 1;
	    			    PlayerInfo[GetPVarInt(playerid, "Regalo_ID")][pPulsera] -= 1;
	    			    Message(playerid, COLOR_GRAD4, "* Has recibido una pulsera de oro.");
 			    	}
 			    	case 6:{
 			    	    PlayerInfo[playerid][pAretes] += 1;
 			    	    PlayerInfo[GetPVarInt(playerid, "Regalo_ID")][pAretes] -= 1;
 			    	    Message(playerid, COLOR_GRAD4, "* Has recibido un conjunto de aretes de oro.");
    	    		}
    	    		case 7:{
    	    		    PlayerInfo[playerid][pReloj] += 1;
    	    		    PlayerInfo[GetPVarInt(playerid, "Regalo_ID")][pReloj] -= 1;
    	    		    Message(playerid, COLOR_GRAD4, "* Has recibido un reloj de oro puro.");
					}
				}
				format(string, sizeof string, "* %s le da un regalo a %s.",PlayerName(GetPVarInt(playerid, "Regalo_ID")), PlayerName(playerid));
				ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				DeletePVar(GetPVarInt(playerid, "Regalo_ID"), "Regalo_Offer");
				DeletePVar(playerid, "Regalo_ID");
				DeletePVar(playerid, "Regalo_ITEM");
				return 1;
			}
		}
        else
        {
            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /aceptar <item>");
            Message(playerid, COLOR_GRAD2, "Items: telefono, multa, saludo, regalo");
        }
        return 1;
    }
    zcmd(cancelar, playerid, params[])
    {
        if(!sscanf(params,"s[64]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"telefono",true) == 0)
            {
			    if(GetPVarInt(playerid, "NumBuy") == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un número!");
                format(string, sizeof(string), "* %s cancela la compra del número de teléfono", PlayerName(playerid));
                ProxDetectorEx(30.0,playerid, string, COLOR_PURPLE);
                DeletePVar(playerid, "NumBuy");
                DeletePVar(playerid, "NumPrice");
                DeletePVar(playerid, "NumSeller");
                DeletePVar(playerid, "Facturing");
                return 1;
			}
			else if(strcmp(params[0],"taxi",true) == 0)
		    {
                if(GetPVarInt(playerid, "TaxiCalled") > 0)
                {
     				switch(GetPVarInt(playerid, "TaxiCalled"))
					{
						case 1: { TaxiSlot1 = 999; SlotZone1 = "Sin Localizar"; TiempoSlot1 = 0; }
						case 2: { TaxiSlot2 = 999; SlotZone2 = "Sin Localizar"; TiempoSlot2 = 0; }
						case 3: { TaxiSlot3 = 999; SlotZone3 = "Sin Localizar"; TiempoSlot3 = 0; }
						case 4: { TaxiSlot4 = 999; SlotZone4 = "Sin Localizar"; TiempoSlot4 = 0; }
						case 5: { TaxiSlot5 = 999; SlotZone5 = "Sin Localizar"; TiempoSlot5 = 0; }
						case 6: { TaxiSlot6 = 999; SlotZone6 = "Sin Localizar"; TiempoSlot6 = 0; }
						case 7: { TaxiSlot7 = 999; SlotZone7 = "Sin Localizar"; TiempoSlot7 = 0; }
						case 8: { TaxiSlot8 = 999; SlotZone8 = "Sin Localizar"; TiempoSlot8 = 0; }
					}
			    	Message(playerid, -1, "{FFFFFF}* Has cancelado el servicio de {FFEC1C}taxi.");
			    	format(string, sizeof(string), "Central: %s canceló el servicio de taxi.", PlayerName(playerid));
                	SendJobMessage(9, TEAM_BLUE_COLOR, string);
                	DeletePVar(playerid, "TaxiCalled");
                	return 1;
       			}
       			else
       			{
       				Message(playerid, COLOR_GRAD2, "¡No has pedido un taxi!");
       				return 1;
 				}
		    }
		    else if(strcmp(params[0],"multa",true) == 0)
		    {
			    if(GetPVarType(playerid, "TicketOffer") == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te multado!");
                format(string, sizeof(string), "* %s se niega a pagar una multa.", PlayerName(playerid));
                ProxDetectorEx(30.0,playerid, string, COLOR_PURPLE);
                format(string, sizeof(string), "* {FFC990}%s {FFFFFF}canceló el pago de una multa de {3E9EEA}%d$.", PlayerName(playerid), GetPVarInt(playerid, "TicketMoney"));
                Message(playerid, -1, string);
                Message(GetPVarInt(playerid, "TicketOffer"), -1, string);
                DeletePVar(playerid, "TicketOffer");
                DeletePVar(playerid, "TicketMoney");
                DeletePVar(playerid, "Facturing");
			    return 1;
			}
			else if(strcmp(params[0],"saludo",true) == 0)
			{
			    if(GetPVarType(playerid, "Saludo_ID") == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie ha ofrecido saludarte!");
			    MessageEx(GetPVarInt(playerid, "Saludo_ID"), playerid, COLOR_GRAD2, "* El saludo ha sido cancelado.");
			    DeletePVar(playerid, "Saludo_ID");
			    return 1;
			}
			else if(strcmp(params[0],"beso",true) == 0)
			{
			    if(GetPVarType(playerid, "Beso_ID") == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un beso!");
			    MessageEx(GetPVarInt(playerid, "Beso_ID"), playerid, COLOR_GRAD2, "* El beso ha sido cancelado.");
			    DeletePVar(playerid, "Beso_ID");
			    return 1;
   			}
			else if(strcmp(params[0],"regalo",true) == 0)
			{
			    if(GetPVarType(playerid, "Regalo_ID") == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un regalo!");
			    MessageEx(GetPVarInt(playerid, "Regalo_ID"), playerid, COLOR_GRAD2, "* El regalo ha sido rechazado.");
			    DeletePVar(GetPVarInt(playerid, "Regalo_ID"), "Regalo_Offer");
			    DeletePVar(playerid, "Regalo_ID");
				DeletePVar(playerid, "Regalo_ITEM");
				return 1;
   			}
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /cancelar <item>");
            Message(playerid, COLOR_GRAD2, "Items: telefono, multa, taxi, saludo");
        }
        return 1;
    }
    zcmd(dni, playerid, params[])
    {
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /dni <PlayerID>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        if(ProxDetectorS(8.0, playerid, params[0]))
        {
	        new string[90];
	        ShowDNI(playerid, params[0]);
	        format(string, sizeof(string), "* %s le muestra su DNI a %s.", PlayerName(playerid), PlayerName(params[0]));
			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
		return 1;
    }
    zcmd(dnifalso, playerid, params[])
    {
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /dnifalso <PlayerID>");
        if(!IsPlayerConnected(params[0]))  return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        if(PlayerInfo[playerid][pDNIFalse] == 0)    return Message(playerid, COLOR_GRAD2, "No posees un DNI falso.");
        if(ProxDetectorS(8.0, playerid, params[0]))
        {
            new string[90];
            ShowDNIFalse(playerid, params[0]);
            format(string, sizeof(string), "* %s le muestra su DNI a %s.", PlayerName(playerid), PlayerName(params[0]));
            ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        return 1;
    }
    zcmd(quitardni, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /quitardni <PlayerID>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        if(PlayerInfo[params[0]][pDNIFalse] != 0)
        {
            new string[128];
	        PlayerInfo[params[0]][pDNIFalse] = 0;
    	    format(PlayerInfo[params[0]][pDNIName], 24, "Ninguno");
            format(string, sizeof(string), "* Le has quitado el DNI Falso a %s.", PlayerName(params[0]));
            Message(playerid, COLOR_GRAD2, string);
        } else Message(playerid, COLOR_GRAD2, "Esa persona no tiene un DNI Falso.");
        return 1;
    }
    zcmd(encontrar, playerid, params[])
    {
        if(!Hitman(playerid)) return Message(playerid, COLOR_GRAD2, "¡No perteneces a esta organización!");
        if(GetPVarInt(playerid, "Trailer_Route") > 0) return Message(playerid, COLOR_GRAD2, "No puedes usar este comando si estas en una ruta.");
        if(UsedFind[playerid] > 0) return Message(playerid, TEAM_RADIO_COLOR, "** Información: El Satélite está ocupado, pruebe de aquí unos segundos");
		if(!sscanf(params, "u", params[0]))
		{
		    if(IsPlayerConnected(params[0]))
			{
                new string[128];
			    new sat = random(30), luck = random(20), reuse_time = (sat+luck)*2;
			    Message(playerid, TEAM_RADIO_COLOR, "<< ... Estableciendo conexión ... >>");
			    format(string, sizeof(string), "Conectado con Satélite #%d Cobertura(%d)", sat,luck);
			    Message(playerid, COLOR_WHITE,string);
			    format(string, sizeof(string), "Persona a buscar: %s", PlayerName(params[0]));
			    Message(playerid, COLOR_WHITE,string);
				if(luck > 10 && PlayerInfo[params[0]][pSex] == 1) 		Message(playerid, COLOR_WHITE,"Sexo: Masculino");
				if(luck > 10 && PlayerInfo[params[0]][pSex] == 2) 		Message(playerid, COLOR_WHITE,"Sexo: Femenino");
				if(luck > 13 && IsPlayerInAnyVehicle(params[0])) 		Message(playerid, COLOR_WHITE,"Estado: En Automóvil");
				if(luck > 17 && PlayerInfo[params[0]][pPnumber] != 0)	format(string, sizeof(string), "Teléfono: %d", PlayerInfo[params[0]][pPnumber]); Message(playerid, COLOR_WHITE,string);
    			Message(playerid, TEAM_RADIO_COLOR, "_____________________________________");
    			UsedFind[playerid] = reuse_time;
       			SetPVarInt(playerid, "WhoFind", params[0]);
				format(string, sizeof(string), "La información se marcara en el mapa en: %d segundos.", sat+luck);
    			Message(playerid, COLOR_YELLOW,string);
    			format(string, sizeof(string), "El satélite volverá a estar disponible en: %d segundos.", reuse_time);
    			Message(playerid, COLOR_YELLOW,string);
    			SetTimerEx("Detective_FindPerson", sat+luck*1000, false, "i", playerid);
			} else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /encontrar <PlayerID>");
        return 1;
    }
    zcmd(gpsveh, playerid, params[])
    {
		if(PlayerToPoint(6.0,playerid, 1258.3003,-1246.8680,-0.9000))
		{
		    if(GetPVarInt(playerid, "Searching") > 0) return Message(playerid, COLOR_GRAD2, "* Espera unos segundos para volver a usar el comando.");
            if(GetPlayerMoney(playerid) < 1000) return Message(playerid, COLOR_GRAD2, "Este servicio tiene un valor de 1000$.");
			ShowPlayerDialog(playerid, SEGURO_GPS, DIALOG_STYLE_INPUT, "Seguro de Autos - GPS", "{FFFFFF}Ingresa la ID del auto que quieras localizar", "Aceptar", "Cancelar");
		} else Message(playerid, COLOR_GRAD2, "No estas en Seguro S.A.");
        return 1;
    }
    zcmd(seguroveh, playerid, params[])
    {
        if(PlayerToPoint(6.0,playerid, 1258.3003,-1246.8680,-0.9000))
		{
		    if(GetPVarInt(playerid, "Searching") > 0) return Message(playerid, COLOR_GRAD2, "* Espera unos segundos para volver a usar el comando.");
            if(GetPlayerMoney(playerid) < 5000) return Message(playerid, COLOR_GRAD2, "Este servicio tiene un valor de 5000$.");
            ShowPlayerDialog(playerid, SEGURO_VEH, DIALOG_STYLE_INPUT, "Seguro de Autos - Vehículo", "{FFFFFF}Ingresa la ID del auto que quieras recuperar", "Aceptar", "Cancelar");
        } else Message(playerid, COLOR_GRAD2, "No estas en Seguro S.A.");
    	return 1;
    }
    zcmd(papeles, playerid, params[])
    {
        if(PlayerVehicleInfo[playerid][0][pvModel] == 0) return Message(playerid, COLOR_GRAD2, "No tienes vehículo.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V_Documents(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /papeles <PlayerID>");
        return 1;
    }
    zcmd(papeles2, playerid, params[])
    {
        if(PlayerVehicleInfo[playerid][1][pvModel] == 0) return Message(playerid, COLOR_GRAD2, "No tienes vehículo.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V_Documents2(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /papeles2 <PlayerID>");
        return 1;
    }
    zcmd(papeles3, playerid, params[])
    {
        if(PlayerVehicleInfo[playerid][2][pvModel] == 0) return Message(playerid, COLOR_GRAD2, "No tienes vehículo premium.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V_Documents3(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /papeles3 <PlayerID>");
        return 1;
    }
    zcmd(papeles4, playerid, params[])
    {
        if(PlayerVehicleInfo[playerid][3][pvModel] == 0) return Message(playerid, COLOR_GRAD2, "No tienes vehículo premium en el slot2.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V_Documents4(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /papeles4 <PlayerID>");
        return 1;
    }
	// zcmd:admin ============================================================================================================================
    zcmd(conse, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(GetPlayerState(playerid) == 2) {
			return SetVehiclePos(GetPlayerVehicleID(playerid), 552.4600,-1275.2721,17.2482);
		}
		else {
			SetPosEx(playerid, 552.4600,-1275.2721,17.2482, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(healcar, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "i", params[0]))
		{
		    SetVehicleHealth(GetPlayerVehicleID(playerid), params[0] * 10);
		    VehicleDeath[params[0]] = false;
		    return 1;
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /healcar <HP>");
        return 1;
    }
	zcmd(aengineon, playerid, params[]){
		if(PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
  		new engine,lights,alarm,doors,bonnet,boot,objective;
    	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	    engineOn[GetPlayerVehicleID(playerid)] = true;
		return SetVehicleParamsEx(GetPlayerVehicleID(playerid),1,lights,alarm,doors,bonnet,boot,objective);
	}
	zcmd(carstat, playerid, params[])
	{
	    new string[64], idcar = GetPlayerVehicleID(playerid);
	    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
		format(string, sizeof(string), "Modelo: %s - Dueño: %s - ID: %d", PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvName], PlayerName(VehicleOwner[idcar]), idcar);
		return Message(playerid, COLOR_GRAD2, string);
	}
	zcmd(buscarphone, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
	    if(!sscanf(params, "d", params[0])){
			if(strlen(params[0]) > 3 && strlen(params[0]) < 7){
			    new string[62];
			    for(new i = 0; i < MAX_PLAYERS; i++)
			    {
			        if(IsPlayerConnected(i))
			        {
	                    if(PlayerInfo[i][pPnumber] == params[0])
	                    {
							format(string, sizeof(string), "* El número %d pertenece a %s.", params[0], PlayerName(i));
							Message(playerid, COLOR_GRAD2, string);
						}
	                }
	            }
      		} else Message(playerid, COLOR_GRAD2, "Número entre 4 y 6 cifras.");
 		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /buscarphone <Número>");
 		return 1;
	}
    zcmd(changeit, playerid, params[]){
	    new idcar = GetPlayerVehicleID(playerid),Float:x,Float:y,Float:z,Float:a;
		if(PlayerInfo[playerid][pAdminCP] >= 5 || Team_Mecanicos(playerid) || Mafioso(playerid) || GetPlayerFactionType(playerid) == 1)
		{
			if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
			if(!OwnableVehicle[idcar]) return Message(playerid, COLOR_GRAD2, "¡No es un vehículo de venta!");
			GetVehiclePos(idcar, x, y, z);
			GetVehicleZAngle(idcar, a);
			PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvLocationx] = x;
			PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvLocationy] = y;
			PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvLocationz] = z;
			PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvAngle] = a;
			Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora el vehículo aparecerá aqui!");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
 	}
    zcmd(pagar, playerid, params[])
    {
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(!sscanf(params, "ui", params[0], params[1])){
            if(params[1] > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "No posees esa cantidad.");
            if(params[1] < 1 || params[1] > 5000) return Message(playerid, COLOR_GRAD2, "Máx: 5000$");
            if(IsPlayerConnected(params[0])){
                if(ProxDetectorS(5.0, playerid, params[0])){
                    new string[100];
					Bought(playerid, params[1]);
					Earn(params[0], params[1]);
					format(string, sizeof(string), "* %s saca su billetera y paga %d$ a %s", PlayerName(playerid), params[1], PlayerName(params[0]));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					format(string, sizeof string, "* %s ha pagado %d$ a %s.", PlayerName(playerid), params[1], PlayerName(params[0]));
					Log("Logs/Dinero.log", string);
                } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /pagar <PlayerID> <Cantidad>");
        return 1;
    }
    zcmd(llenar, playerid, params[])
    {
        if(GetPlayerMoney(playerid) < 1) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
        if(Refueling[playerid] > -1) return Message(playerid, COLOR_GRAD2, "Ya está llenando el vehículo o el tanque.");
        if(IsAtGasStation(playerid))
		{
		    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo.");
  			if(Gas[GetPlayerVehicleID(playerid)] < 230)
	    	{
      			return ShowPlayerDialog(playerid,GASOLINA_DIALOG,DIALOG_STYLE_LIST,"Gasolinera - Tipo de gasolina","Sin Plomo 95\nSin Plomo 98\nGasoil\nBiodiesel","Comprar","Atras");
			}
			else GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~Vehiculo LLenado",2000,3);
		}
		else Message(playerid,COLOR_GREY,"¡No estás en una estación de gasolina!");
        return 1;
    }
    zcmd(llenartanque, playerid, params[])
 	{
		if(GetPlayerMoney(playerid) < 1) return Message(playerid, COLOR_GRAD2, "No tienes dinero.");
		if(Refueling[playerid] > -1) return Message(playerid, COLOR_GRAD2, "Ya está llenando el vehículo o el tanque.");
		if(IsAtGasStation(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo.");
			new idcar = GetPlayerVehicleID(playerid);
			if(!OwnableVehicle[idcar]) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo de compra/venta");
			if(PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvTanque] > 0)
			{
			    new string[90];
				if(PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvTanque] >= 50) return Message(playerid, COLOR_GRAD2, "Tanque de gasolina lleno.")
                format(string, sizeof(string), "* %s agarra la mangera y la introduce en el tanque de gasolina.", PlayerName(playerid));
                ProxDetectorEx(20.0,playerid, string, COLOR_PURPLE);
                Message(playerid, COLOR_WHITE, "  El tanque de gasolina del vehículo se está llenando.");
				Refueling[playerid] = PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvGas];
				SetTimerEx("LlenarTanque", 5000, false, "ii", playerid, idcar);
				TogglePlayerControllable(playerid, 0);
			} else Message(playerid, COLOR_GRAD2, "No tienes un tanque adicional de gasolina para llenar.");
		} else Message(playerid, COLOR_GRAD2, "No estás en una gasolinera.");
 	    return 1;
 	}
 	zcmd(llenarvehiculo, playerid, params[])
 	{
		if(!sscanf(params, "d", params[0]))
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
		        new idcar = GetPlayerVehicleID(playerid), string[100];
		        if(OwnableVehicle[idcar])
		        {
		            if(PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvTanque] >= (params[0]+1))
 	                {
 	                    RemovePlayerFromVehicle(playerid);
 	                    format(string, sizeof(string), "* %s abre el tanque de gasolina y pone un poco en el deposito del vehículo.", PlayerName(playerid));
						ProxDetectorEx(20.0,playerid, string, COLOR_PURPLE);
 	                    Message(playerid, COLOR_WHITE, "  El deposito de gasolina del vehículo se está llenando con gasolina del tanque.");
 	                    SetTimerEx("VaciarDeposito", 5000, false, "iid", playerid, idcar, params[0]);
 	                    TogglePlayerControllable(playerid, 0);
 	                    return 1;
      				}
				  	else
				  	{
  						format(string, sizeof string, "No tienes suficiente gasolina en el tanque (%d).", PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvTanque]);
					  	Message(playerid, COLOR_GRAD2, string);
					  	return 1;
				  	}
 	            } else Message(playerid, COLOR_GRAD2, "No estás en un vehículo de compra y venta.");
 	        } else Message(playerid, COLOR_GRAD2, "No estás en un vehículo.");
      	} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /llenarvehiculo <Cantidad>");
 	    return 1;
 	}
    zcmd(pcu, playerid, params[]){
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehiculo!");
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
			SetTimerEx("MM_Exam", 3000, false, "i", playerid);
			Message(playerid, -1, "* {4C9CB6}Prendiendo PCU del Vehiculo.");
		} else Message(playerid, COLOR_GREY, "No eres el conductor.");
		return 1;
	}
	zcmd(gps, playerid, params[])
	{
	    new idcar = GetPlayerVehicleID(playerid)
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehiculo!");
        if(!OwnableVehicle[idcar]) return 1;
		if(OwnableVehicle[idcar]) { if(PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvGPS] == 0) return Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene un GPS!"); }
		ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{018CFE}Control GPS", "{FFFFFF}Bares\nEmergencias\nNegocios\nLugares Públicos\nServicios", "Aceptar", "Salir");
		return 1;
	}
	zcmd(mapa, playerid, params[])
	{
	    if (!maps(playerid)) return Message(playerid, 0xFFFFFFFF, "No estás frente aun mapa!");
		ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{2471A3}Mapa LS - Miami RP", "{DC092F}- {FFFFFF}Bares\n{DC092F}- {FFFFFF}Emergencias\n{DC092F}- {FFFFFF}Negocios\n{DC092F}- {FFFFFF}Lugares Públicos\n{DC092F}- {FFFFFF}Servicios", "Aceptar", "Salir");
		return 1;
	}
    zcmd(vertrabajos, playerid, params[])
	{
        ShowPlayerDialog(playerid, JOBSMENU, DIALOG_STYLE_LIST, "{2471A3}Trabajos - Miami RP","{DC092F}- {FFFFFF}Vendedor moviles\n{DC092F}- {FFFFFF}Recogedor de Basura\n{DC092F}- {FFFFFF}Conductor de Tren\n{DC092F}- {FFFFFF}Piloto\n{DC092F}- {FFFFFF}Ladrón\n{DC092F}- {FFFFFF}Pizzero\n{DC092F}- {FFFFFF}Pescador\n{DC092F}- {FFFFFF}Camionero", "Ok", "Cancelar");
		return 1;
	}
	zcmd(v, playerid, params[])
    {
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[128], idcar = GetPlayerVehicleID(playerid), Float:x, Float:y, Float:z, Float:a;
            new engine,lights,alarm,doors,bonnet,boot,objective;
            GetVehicleParamsEx(idcar, engine,lights,alarm,doors,bonnet,boot,objective);
            if(strcmp(params[0],"motor",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	            if(gEngine[playerid] == 1 || IsABike(idcar)) { return 1; }
	            if(Gas[GetPlayerVehicleID(playerid)] <= 0) return Message(playerid, COLOR_GREY, "Vehiculo sin Gasolina.");
				if(OwnableVehicle[idcar] && NoBattery(idcar)) return Message(playerid, COLOR_GRAD2, "¡Vehículo sin batería!");
				if(VehicleDeath[idcar]) return Message(playerid, COLOR_GRAD2, "Este vehículo está dañado, no puedes volverlo a prender.");
				if(Hire_Vehicle(idcar) && HireKey[playerid] != idcar) { return 1; }
				if(OwnableVehicle[idcar]) { if(PlayerVehicleInfo[playerid][0][pvID] == idcar || PlayerVehicleInfo[playerid][1][pvID] == idcar || PlayerVehicleInfo[playerid][2][pvID] == idcar || PlayerVehicleInfo[playerid][3][pvID] == idcar || GetPVarInt(playerid, "Llave_ID") == idcar) { } else { return 1; } }
				if(engineOn[idcar] == 0)
				{
					format(string, sizeof(string), "* %s gira la llave del vehículo.", PlayerName(playerid));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                    SetTimerEx("StartingTheVehicle",2500,false,"i",playerid);
					GameTextForPlayer(playerid, "~w~Encendiendo motor",2500,3);
					gEngine[playerid] = 1;
					return 1;
				}
				else if(engineOn[idcar] == 1)
				{
					format(string, sizeof(string), "* %s apaga el motor del vehículo.", PlayerName(playerid));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					SetVehicleParamsEx(idcar,0,lights,alarm,doors,bonnet,boot,objective);
					engineOn[idcar] = false;
					gEngine[playerid] = 0;
					return 1;
				}
	        }
	        else if(strcmp(params[0],"luces",true) == 0)
			{
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	            if(LightsOn[idcar] == 0)
	            {
	                SetVehicleParamsEx(idcar,engine,1,alarm,doors,bonnet,boot,objective);
	                LightsOn[idcar] = 1;
	            }
	            else if(LightsOn[idcar] == 1)
	            {
                    SetVehicleParamsEx(idcar,engine,0,alarm,doors,bonnet,boot,objective);
                    LightsOn[idcar] = 0;
	            }
	            return 1;
	        }
	        else if(strcmp(params[0],"capo",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	            if(IsABike(idcar) || IsATrain(idcar) || IsAPizzabike(idcar) || IsABasurero(idcar) || IsAPlane(idcar)) { return 1; }
	            if(BonnetOpen[idcar] == 0)
	            {
	                SetVehicleParamsEx(idcar,engine,lights,alarm,doors,1,boot,objective);
	                BonnetOpen[idcar] = 1;
	            }
	            else if(BonnetOpen[idcar] == 1)
	            {
                    SetVehicleParamsEx(idcar,engine,lights,alarm,doors,0,boot,objective);
                    BonnetOpen[idcar] = 0;
	            }
                return 1;
	        }
	        else if(strcmp(params[0],"maletero",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	            if(IsABike(idcar) || IsATrain(idcar) || IsAPizzabike(idcar) || IsABasurero(idcar) || IsAPlane(idcar)) { return 1; }
	            if(BootOpen[idcar] == 0)
	            {
	                SetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,1,objective);
	                BootOpen[idcar] = 1;
	            }
	            else if(BootOpen[idcar] == 1)
	            {
                    SetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,0,objective);
                    BootOpen[idcar] = 0;
	            }
	            return 1;
	        }
 	        else if(strcmp(params[0],"estacionar",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
				if(OwnableVehicle[idcar])
				{
				    if(PlayerVehicleInfo[playerid][0][pvModel] == 0) return Message(playerid, COLOR_GRAD2, "Usted no tiene un coche.");
					if(idcar == PlayerVehicleInfo[playerid][0][pvID])
					{
						GetVehiclePos(idcar, x, y, z);
						GetVehicleZAngle(idcar, a);
						PlayerVehicleInfo[playerid][0][pvLocationx] = x;
						PlayerVehicleInfo[playerid][0][pvLocationy] = y;
						PlayerVehicleInfo[playerid][0][pvLocationz] = z;
						PlayerVehicleInfo[playerid][0][pvAngle] = a;
						Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora el vehículo aparecerá aqui!");
 					}
 					else { Message(playerid, COLOR_GREY, "¡No estás en tu vehículo!"); return 1; }
				}
	        }
	        else if(strcmp(params[0],"estacionar2",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
				if(OwnableVehicle[idcar])
				{
				    if(PlayerVehicleInfo[playerid][1][pvModel] == 0) return Message(playerid, COLOR_GRAD2, "Usted no tiene un coche premium.");
					if(idcar == PlayerVehicleInfo[playerid][1][pvID])
					{
						GetVehiclePos(idcar, x, y, z);
						GetVehicleZAngle(idcar, a);
						PlayerVehicleInfo[playerid][1][pvLocationx] = x;
						PlayerVehicleInfo[playerid][1][pvLocationy] = y;
						PlayerVehicleInfo[playerid][1][pvLocationz] = z;
						PlayerVehicleInfo[playerid][1][pvAngle] = a;
						Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora el vehículo aparecerá premium aqui!");
 					}
 					else { Message(playerid, COLOR_GREY, "¡No estás en tu vehículo!"); return 1; }
				}
				return 1;
	        }
	        else if(strcmp(params[0],"estacionar3",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	         	if(OwnableVehicle[idcar])
	         	{
	         	    if(PlayerVehicleInfo[playerid][2][pvModel] == 0) return Message(playerid, COLOR_GREY, "Usted no tiene un coche premium.");
					if(idcar == PlayerVehicleInfo[playerid][2][pvID])
	         	    {
						GetVehiclePos(idcar, x, y, z);
						GetVehicleZAngle(idcar, a);
						PlayerVehicleInfo[playerid][2][pvLocationx] = x;
						PlayerVehicleInfo[playerid][2][pvLocationy] = y;
						PlayerVehicleInfo[playerid][2][pvLocationz] = z;
						PlayerVehicleInfo[playerid][2][pvAngle] = a;
						Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora su vehículo premium aparecerá aqui!");
 					}
 					else { Message(playerid, COLOR_GREY, "No estás en tu vehículo!"); return 1; }
				}
				return 1;
	        }
	        else if(strcmp(params[0],"estacionar4",true) == 0)
	        {
	            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
	         	if(OwnableVehicle[idcar])
	         	{
	         	    if(PlayerVehicleInfo[playerid][3][pvModel] == 0) return Message(playerid, COLOR_GREY, "Usted no tiene un coche premium premium.");
					if(idcar == PlayerVehicleInfo[playerid][3][pvID])
	         	    {
						GetVehiclePos(idcar, x, y, z);
						GetVehicleZAngle(idcar, a);
						PlayerVehicleInfo[playerid][3][pvLocationx] = x;
						PlayerVehicleInfo[playerid][3][pvLocationy] = y;
						PlayerVehicleInfo[playerid][3][pvLocationz] = z;
						PlayerVehicleInfo[playerid][3][pvAngle] = a;
						Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora su vehículo premium aparecerá aqui!");
 					}
 					else { Message(playerid, COLOR_GREY, "No estás en tu vehículo!"); return 1; }
				}
				return 1;
	        }
	        else if(strcmp(params[0],"seguro",true) == 0)
	        {
	            new keycar = PlayerVehicleInfo[playerid][0][pvID];
                if(PlayerVehicleInfo[playerid][0][pvModel] != 0)
                {
                    GetVehiclePos(keycar, x, y, z);
                    if(PlayerToPoint(20.0,playerid, x, y, z))
                    {
                   		if(PlayerVehicleInfo[playerid][0][pvLock] == 1)
                    	{
							SetVehicleParamsEx(keycar,engine,lights,alarm,0,bonnet,boot,objective);
							GameTextForPlayer(playerid, "~w~vehiculo ~g~abierto", 3000, 3);
							PlayerVehicleInfo[playerid][0][pvLock] = 0;
							ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF);
							format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), PlayerVehicleInfo[playerid][0][pvName]);
							ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
							return 1;
						}
						else if(PlayerVehicleInfo[playerid][0][pvLock] == 0)
						{
	    					SetVehicleParamsEx(keycar,engine,lights,alarm,1,bonnet,boot,objective);
							GameTextForPlayer(playerid, "~w~vehiculo ~r~cerrado", 3000, 3);
							PlayerVehicleInfo[playerid][0][pvLock] = 1;
							ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF);
							format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), PlayerVehicleInfo[playerid][0][pvName]);
							ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
							return 1;
						}
					}
                }
	        }
	        else if(strcmp(params[0],"seguro2",true) == 0)
	        {
	            new keycar2 = PlayerVehicleInfo[playerid][1][pvID];
                if(PlayerVehicleInfo[playerid][1][pvModel] != 0)
                {
                    GetVehiclePos(keycar2, x, y, z);
                    if(PlayerToPoint(20.0,playerid, x, y, z))
                    {
                   		if(PlayerVehicleInfo[playerid][1][pvLock] == 1)
                    	{
							SetVehicleParamsEx(keycar2,engine,lights,alarm,0,bonnet,boot,objective);
							GameTextForPlayer(playerid, "~w~vehiculo ~g~abierto", 3000, 3);
							PlayerVehicleInfo[playerid][1][pvLock] = 0;
							ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF);
							format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), PlayerVehicleInfo[playerid][1][pvName]);
							ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
							return 1;
						}
						else if(PlayerVehicleInfo[playerid][1][pvLock] == 0)
						{
	    					SetVehicleParamsEx(keycar2,engine,lights,alarm,1,bonnet,boot,objective);
							GameTextForPlayer(playerid, "~w~vehiculo ~r~cerrado", 3000, 3);
							PlayerVehicleInfo[playerid][1][pvLock] = 1;
							ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF);
							format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), PlayerVehicleInfo[playerid][1][pvName]);
							ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
							return 1;
						}
					}
                }
	        }
     		else if(strcmp(params[0],"seguro3",true) == 0)
	        {
	            new keycar3 = PlayerVehicleInfo[playerid][2][pvID];
				if(PlayerVehicleInfo[playerid][2][pvModel] != 0)
	            {
					GetVehiclePos(keycar3, x, y, z);
	                if(PlayerToPoint(20.0,playerid, x, y, z))
	                {
                		if(PlayerVehicleInfo[playerid][2][pvLock] == 1)
                 		{
                 			SetVehicleParamsEx(keycar3,engine,lights,alarm,0,bonnet,boot,objective);
                  			GameTextForPlayer(playerid, "~w~vehiculo ~g~abierto", 3000, 3);
                   			PlayerVehicleInfo[playerid][2][pvLock] = 0;
                   			ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF);
                    		format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), PlayerVehicleInfo[playerid][2][pvName]);
                    		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                    		return 1;
						}
						else if(PlayerVehicleInfo[playerid][2][pvLock] == 0)
						{
	    					SetVehicleParamsEx(keycar3,engine,lights,alarm,1,bonnet,boot,objective);
							GameTextForPlayer(playerid, "~w~vehiculo ~r~cerrado", 3000, 3);
							PlayerVehicleInfo[playerid][2][pvLock] = 1;
							ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF);
							format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), PlayerVehicleInfo[playerid][2][pvName]);
							ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
							return 1;
						}
					}
                }
	        }
	        else if(strcmp(params[0],"seguro4",true) == 0)
	        {
	            new keycar4 = PlayerVehicleInfo[playerid][3][pvID];
				if(PlayerVehicleInfo[playerid][3][pvModel] != 0)
	            {
					GetVehiclePos(keycar4, x, y, z);
	                if(PlayerToPoint(20.0,playerid, x, y, z))
	                {
                		if(PlayerVehicleInfo[playerid][3][pvLock] == 1)
                 		{
                 			SetVehicleParamsEx(keycar4,engine,lights,alarm,0,bonnet,boot,objective);
                  			GameTextForPlayer(playerid, "~w~vehiculo ~g~abierto", 3000, 3);
                   			PlayerVehicleInfo[playerid][3][pvLock] = 0;
                   			ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF);
                    		format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), PlayerVehicleInfo[playerid][3][pvName]);
                    		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                    		return 1;
						}
						else if(PlayerVehicleInfo[playerid][3][pvLock] == 0)
						{
	    					SetVehicleParamsEx(keycar4,engine,lights,alarm,1,bonnet,boot,objective);
							GameTextForPlayer(playerid, "~w~vehiculo ~r~cerrado", 3000, 3);
							PlayerVehicleInfo[playerid][3][pvLock] = 1;
							ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF);
							format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), PlayerVehicleInfo[playerid][3][pvName]);
							ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
							return 1;
						}
					}
                }
	        }
	        else if(strcmp(params[0],"seguroveh",true) == 0)
	        {
	            if(GetPVarType(playerid, "Llave_ID") == 1)
	            {
					new keyveh = GetPVarInt(playerid, "Llave_ID");
					GetVehiclePos(keyveh, x, y, z);
	                if(PlayerToPoint(20.0, playerid, x, y, z))
	                {
	                    if(PlayerVehicleInfo[VehicleOwner[keyveh]][VehicleSlot[keyveh]][pvLock] == 1)
						{
						    SetVehicleParamsEx(keyveh,engine,lights,alarm,0,bonnet,boot,objective);
                  			GameTextForPlayer(playerid, "~w~vehiculo ~g~abierto", 3000, 3);
                   			PlayerVehicleInfo[VehicleOwner[keyveh]][VehicleSlot[keyveh]][pvLock] = 0;
                   			ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF);
                    		format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), PlayerVehicleInfo[VehicleOwner[keyveh]][VehicleSlot[keyveh]][pvName]);
                    		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                    		return 1;
	                    }
	                    else if(PlayerVehicleInfo[VehicleOwner[keyveh]][VehicleSlot[keyveh]][pvLock] == 0)
						{
						    SetVehicleParamsEx(keyveh,engine,lights,alarm,1,bonnet,boot,objective);
                  			GameTextForPlayer(playerid, "~w~vehiculo ~r~cerrado", 3000, 3);
                   			PlayerVehicleInfo[VehicleOwner[keyveh]][VehicleSlot[keyveh]][pvLock] = 1;
                   			ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF);
							format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), PlayerVehicleInfo[VehicleOwner[keyveh]][VehicleSlot[keyveh]][pvName]);
                    		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                    		return 1;
	                    }
					}
   				}
	        }
	        else if(strcmp(params[0],"segurorenta",true) == 0)
	        {
	            new keyrent = HireKey[playerid];
	            if(HireKey[playerid] != 999)
	            {
					GetVehiclePos(keyrent, x, y, z);
	                if(PlayerToPoint(20.0, playerid, x, y, z))
	                {
	                    if(HireCarLock[keyrent] == 1)
						{
						    SetVehicleParamsEx(keyrent,engine,lights,alarm,0,bonnet,boot,objective);
                  			GameTextForPlayer(playerid, "~w~vehiculo ~g~abierto", 3000, 3);
                   			HireCarLock[keyrent] = 0;
                   			ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF);
                    		format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), GetVehicleFriendlyName(keyrent));
                    		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                    		return 1;
	                    }
	                    else if(HireCarLock[keyrent] == 0)
						{
						    SetVehicleParamsEx(keyrent,engine,lights,alarm,1,bonnet,boot,objective);
                  			GameTextForPlayer(playerid, "~w~vehiculo ~r~cerrado", 3000, 3);
                  			HireCarLock[keyrent] = 1;
                   			ProxDetectorEx(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF);
							format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), GetVehicleFriendlyName(keyrent));
                    		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                    		return 1;
	                    }
					}
   				}
	        }
	        else if(strcmp(params[0],"vender",true) == 0)
	        {
	            if(IsAtDealership(playerid))
	            {
	                if(GetPlayerVehicleID(playerid) == PlayerVehicleInfo[playerid][0][pvID])
	                {
	                    if(PlayerVehicleInfo[playerid][0][pvModel] == 0) return Message(playerid, COLOR_GRAD2,"¡No tienes vehículo!");
	                    if(VehicleOwner[idcar] == playerid)
	                    {
                            VenderVehiculo(playerid, idcar);
	                        return 1;
	                    } else { Message(playerid, COLOR_GRAD2,"Este vehículo no está a tu nombre!"); return 1; }
	                } else { Message(playerid, COLOR_GREY, "  Usted tiene que sentarse en su propio coche para venderlo! "); return 1; }
	            } else { Message(playerid, COLOR_GREY, "¡No estás en un concesionario!"); return 1; }
			}
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /v <Item>");
            Message(playerid, COLOR_GRAD2, "Item: motor, luces, capo, maletero, seguro, vender, estacionar, seguroveh, segurorenta");
            return 1;
        }
        return 1;
    }
    zcmd(darllaves, playerid, params[])
    {
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /darllaves <PlayerID>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        if(params[0] == playerid) return Message(playerid, COLOR_GRAD2, "* No puedes prestarte el vehículo a ti mismo.");
        if(ProxDetectorS(8.0, playerid, params[0]))
       	{
       	    if(GetPVarType(params[0], "Llave_ID") != 0) return Message(playerid, COLOR_GRAD2, "El usuario ya tiene una llave prestada.");
			if(PlayerVehicleInfo[playerid][0][pvModel] != 0)
  			{
	    		if(GetPVarType(playerid, "Llave_Prestada") != 0) return Message(playerid, COLOR_GRAD2, "Ya has prestado tu vehículo a alguien mas.");
  	    		new string[128];
				format(string, sizeof string, "* %s le entrega las llaves de su vehículo a %s.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
				SetPVarInt(params[0], "Llave_ID", PlayerVehicleInfo[playerid][0][pvID]);
				SetPVarInt(playerid, "Llave_Prestada", params[0]);
				SetPVarInt(params[0], "Llave_Recibida", playerid);
				return 1;
			} else return Message(playerid, COLOR_GRAD2, "No tienes un vehículo para prestar.");
		} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        return 1;
    }
    zcmd(quitarllaves, playerid, params[])
    {
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /quitarllaves <PlayerID>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        if(params[0] == playerid) return Message(playerid, COLOR_GRAD2, "* No puedes usar este comando contigo mismo.");
        if(ProxDetectorS(8.0, playerid, params[0]))
        {
            if(GetPVarType(params[0], "Llave_ID") == 1)
            {
   	        	if(GetPVarInt(params[0], "Llave_ID") == PlayerVehicleInfo[playerid][0][pvID])
       	    	{
        	    	new string[128];
           			format(string, sizeof string, "* %s le quita las llaves de su vehículo a %s.", PlayerName(playerid), PlayerName(params[0]));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					DeletePVar(params[0], "Llave_ID");
					DeletePVar(params[0], "Llave_Recibida");
					DeletePVar(playerid, "Llave_Prestada");
					return 1;
				} else return Message(playerid, COLOR_GRAD2, "El jugador no tiene las llevas de tu vehículo.");
			} else return Message(playerid, COLOR_GRAD2, "El jugador no tiene ninguna llave prestada.");
        } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
       	return 1;
    }
	zcmd(venderveh, playerid, params[])
	{
	    if(GetPlayerVehicleID(playerid) == PlayerVehicleInfo[playerid][0][pvID])
	    {
            new idcar = GetPlayerVehicleID(playerid);
	        if(VehicleOwner[idcar] == playerid)
	        {
				if(!sscanf(params, "ud", params[0],params[1],params[2]))
				{
					if(IsPlayerConnected(params[0]))
    				{
        				if(ProxDetectorS(8.0, playerid, params[0]))
            			{
			            	if(GetPlayerMoney(params[0]) >= params[1])
				            {
								if(PlayerVehicleInfo[params[0]][0][pvModel] == 0)
								{
									SetPVarInt(params[0], "OwnableCarOffer", playerid);
									SetPVarInt(params[0], "OwnableCarID", idcar);
									SetPVarInt(params[0], "OwnableCarPrice", params[1]);
									SetPVarInt(params[0], "Petition_ID", 3);
									SetPVarInt(params[0], "Facturing", 1);
									new string[128];
									format(string, sizeof(string), "Ofreciste a %s tu vehículo por %d$", PlayerName(params[0]), params[1]);
       								SendClientMessage(playerid, COLOR_WHITE, string);
					        		format(string, sizeof(string), "\t\t-- Compra de Vehículo --\t\t\n\t* %s te ofrece su %s a %d$, ¿acepta?", PlayerName(playerid), GetVehicleFriendlyName(PlayerVehicleInfo[playerid][0][pvID]), params[1]);
					        		SendRequest(params[0],  string);
					        		return 1;
                                } else Message(playerid, COLOR_GRAD2, "El jugador ya tiene un vehículo.");
							} else Message(playerid, COLOR_GRAD2, "El jugador no tiene fondos suficientes.");
						} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
	    			} else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
				} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /venderveh <PlayerID> <Cantidad>");
	        } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    return 1;
 	}
    zcmd(desrentarveh, playerid, params[])
    {
        if(HireKey[playerid] == 999) return Message(playerid, COLOR_GRAD2, "No has rentado ningún vehículo!");
  			SetVehicleToRespawn(HireKey[playerid]);
  			HireState[HireKey[playerid]] = false;
  			Earn(playerid, 30);
	    	SetVehicleParamsEx(HireKey[playerid],0,0,0,0,0,0,0);
			engineOn[HireKey[playerid]] = false;
			HireMinutes[playerid] = 0;
  			switch(HireKey[playerid]){
	    		case 26..29,83..90:  Till(14, -30);
			    case 174..177: Till(15, -30);
  			}
  			HireKey[playerid] = 999;
        return 1;
    }
    zcmd(renovarrenta, playerid, params[])
    {
        if(HireKey[playerid] == 999) return Message(playerid, COLOR_GRAD2, "No has rentado ningun vehículo.");
		if(HireMinutes[playerid] < 3)
		{
		    new carprice;
		    switch(HireKey[playerid])
			{
				case 26..29,83..90: { carprice = 50; }
				case 91..100: { carprice = 100; }
   				case 174,175: { carprice = 120; }
      			case 176,177: { carprice = 150; }
			}
			HireMinutes[playerid] = HireMinutes[playerid]+10;
			Message(playerid, COLOR_WHITE, "Has renovado la renta de tu vehículo por 10 minutos mas.");
			Bought(playerid, carprice);
			switch(HireKey[playerid])
			{
			    case 26..29,83..100: { Till(14, (carprice/2)); return 1; }
			    case 174..177: { Till(15, (carprice/2)); return 1; }
   			}
        } else Message(playerid, COLOR_GRAD2, "Solo puedes renovar si faltan menos de 3 minutos para expirar el tiempo de renta.");
        return 1;
    }
	zcmd(subirnivel, playerid, params[]){
	    if(PlayerInfo[playerid][pLevel] >= 0){
			new nxtlevel = PlayerInfo[playerid][pLevel]+1, expamount = nxtlevel*levelexp, infostring[128];
			if(PlayerInfo[playerid][pExp] < expamount){
				format(infostring, 128, "Necesitas %d/%d puntos de respeto para subir de nivel.",expamount,PlayerInfo[playerid][pExp]);
				Message(playerid, COLOR_GRAD1, infostring);
			}
			else{
				format(infostring, sizeof(infostring), "~w~Felicidades!! ~n~~n~Ahora eres nivel ~g~%d", nxtlevel);
				GameTextForPlayer(playerid, infostring, 5000, 3);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				PlayerInfo[playerid][pLevel]++;
				PlayerInfo[playerid][pExp] = 0;
			}
		}
	    return 1;
 	}
    zcmd(revisar, playerid, params[]){
		if(!sscanf(params, "u", params[0])){
		    if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policia.");
            if(IsPlayerConnected(params[0]) && ProxDetectorS(8.0,playerid,params[0])){
				new wh_q,sweapon,sammo,drugs,string[128];
    			for (new i=0; i<9; i++){
       				GetPlayerWeaponData(params[0], i, sweapon, sammo);
			        if(sweapon != 0 && sammo != 0)  wh_q ++;
			    }
       			if(wh_q > 0) Message(playerid, COLOR_GRAD2, "El sujeto va armado.");
		        else 		Message(playerid, COLOR_GRAD2, "El sujeto no porta armas.");

		        if(PlayerInfo[params[0]][pSpeed] > 0)    drugs++;
		        if(PlayerInfo[params[0]][pEctasy] > 0)   drugs++;
		        if(PlayerInfo[params[0]][pRitalin] > 0)  drugs++;
		        if(PlayerInfo[params[0]][pHeroina] > 0)  drugs++;
		        if(PlayerInfo[params[0]][pMarihuana] > 0)  drugs++;

		        if(drugs > 0) Message(playerid, COLOR_GRAD2, "El sujeto contiene drogas.");
		        else 		Message(playerid, COLOR_GRAD2, "El sujeto no porta drogas.");

		        if(PlayerInfo[params[0]][pMats] > 0) Message(playerid, COLOR_GRAD2, "El sujeto porta material armamentístico.");
		        else 		Message(playerid, COLOR_GRAD2, "El sujeto no porta material armamentístico.");

				format(string, sizeof(string), "* %s revisa a %s en busca de objetos.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado o muy lejos.");
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /revisar <PlayerID>");
        return 1;
    }
   	zcmd(cinturon, playerid, params[]){
        if(IsPlayerInAnyVehicle(playerid)){
   			if(!BikeModel(playerid)){
			    new string[90];
   				if(GetPVarInt(playerid, "UsingBelt") == 0){
       				format(string, sizeof(string), "* %s se abrocha el cinturón.", PlayerName(playerid));
			        ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			        SetPVarInt(playerid, "UsingBelt", 1);
				}
				else{
    				format(string, sizeof(string), "* %s se desabrocha el cinturón.", PlayerName(playerid));
        			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					DeletePVar(playerid, "UsingBelt");
				}
			}
		} else Message(playerid, COLOR_GRAD2, "No estás en un vehículo.");
        return 1;
    }
    zcmd(vercinturon, playerid, params[]){
        if(!Team_LSPD(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres policía!");
        if(!sscanf(params, "u", params[0])){
            if(!IsPlayerConnected(params[0])) 				return Message(playerid, COLOR_GREY, "Jugador desconectado.");
            if(!IsPlayerInAnyVehicle(params[0]))            return Message(playerid, COLOR_GREY, "El jugador no está en un vehículo.");
            if(!ProxDetectorS(5.0, playerid, params[0]))    return Message(playerid, COLOR_GREY, "Jugador muy lejos.");
            new string[90];
            if(GetPVarInt(params[0], "UsingBelt") == 1){
   				format(string, sizeof(string), "* %s tiene el cinturón abrochado.",PlayerName(params[0]));
				Message(playerid, COLOR_GREEN, string);
			}
			else{
   				format(string, sizeof(string), "* %s no tiene el cinturón abrochado.",PlayerName(params[0]));
			    Message(playerid, COLOR_RED, string);
			}
	 		format(string, sizeof(string), "* %s revisa el cinturón de %s", PlayerName(playerid), PlayerName(params[0]));
			ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /vercinturon <PlayerID>");
        return 1;
    }
    zcmd(revisarcarga, playerid, params[])
    {
        if(!IsACop(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No perteneces a un cuerpo de justicia!");
        if(!sscanf(params, "u", params[0])){
        	if(!IsPlayerConnected(params[0])) 				return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        	if(!ProxDetectorS(5.0, playerid, params[0]))    return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        	new string[100], Carga[25];
        	switch(Mercancia[params[0]])
        	{
        	    case 0: Carga = "Nada";
            	case 1: Carga = "Prendas de Vestir";
            	case 2: Carga = "Comida y Accesorios";
            	case 3: Carga = "Medicamentos";
            	case 4: Carga = "Materiales Legales";
            	case 5: Carga = "Materiales Ilegales";
        	}
        	if(PlayerIsRuta[params[0]] == 3) format(string, sizeof(string), "* El camión de %s esta vacio.",PlayerName(params[0]));
			else format(string, sizeof(string), "* El camión de %s va cargado con %s.",PlayerName(params[0]), Carga);
			Message(playerid, COLOR_GREEN, string);
        	format(string, sizeof(string), "* %s revisa el camión de %s", PlayerName(playerid), PlayerName(params[0]));
			ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /revisarcarga <PlayerID>");
		return 1;
    }
    zcmd(quitarcarga, playerid, params[])
    {
        if(!Team_LSPD(playerid) && !Team_NG(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No perteneces a un cuerpo de justicia!");
        if(!sscanf(params, "u", params[0])){
            if(!IsPlayerConnected(params[0])) 				return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        	if(!ProxDetectorS(5.0, playerid, params[0]))    return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        	if(Mercancia[params[0]] == 0 || PlayerIsRuta[params[0]] == 3)   return Message(playerid, COLOR_GRAD2, "El jugador no tiene ninguna carga.");
            new string[100];
            format(string, sizeof(string), "* %s incauta la mercancia del camión de %s", PlayerName(playerid), PlayerName(params[0]));
			ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
			Message(playerid, COLOR_GRAD2, "* Tu faccion ha ganado {FF4564}2000$ {FFFFFF}gracias a la carga incautada.");
            Message(params[0], COLOR_GRAD2, "* Han incautado la mercancia que debias entregar.");
			SetVehicleToRespawn(GetPVarInt(params[0], "Camion"));
			DeletePVar(params[0], "Camion");
       		Mercancia[params[0]] = 0;
       		PlayerIsRuta[params[0]] = 0;
       		PlayerCargando[params[0]] = 0;
       		PlayerDescargando[params[0]] = 0;
       		DisablePlayerCheckpoint(params[0]);
 		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /quitarcarga <PlayerID>");
 		return 1;
    }
    zcmd(remolcar, playerid, params[])
	{
	    if(!Team_LSPD(playerid) && !Team_Mecanicos(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia ni Mecanico!");
        Remolcar(playerid);
        return 1;
	}
    zcmd(hits, playerid, params[])
    {
        if(Hitman(playerid)) SearchHit(playerid);
		else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        return 1;
    }
    zcmd(quitar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No puedes hacer esto!");
        new item[32], string[128];
        if(!sscanf(params, "s[32]u", item, params[1]))
        {
            if(!IsPlayerConnected(params[1]))               return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(strcmp(item,"lconduccion",true) == 0)
			{
			    PlayerInfo[params[1]][pCarLic] = 0;
			    format(string, sizeof(string), "* Oficial %s quita la licencia de conducción a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetectorEx(30.0,playerid,string,COLOR_PURPLE);
				return 1;
			}
			else if(strcmp(item,"lvuelo",true) == 0)
			{
			    PlayerInfo[params[1]][pFlyLic] = 0;
			    format(string, sizeof(string), "* Oficial %s quita la licencia de vuelo a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetectorEx(30.0,playerid,string,COLOR_PURPLE);
			    return 1;
			}
			else if(strcmp(item,"larma",true) == 0)
			{
			    PlayerInfo[params[1]][pGunLic] = 0;
		        format(string, sizeof(string), "* Oficial %s quita la licencia de armas a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetectorEx(30.0,playerid,string,COLOR_PURPLE);
			    return 1;
			}
			else if(strcmp(item,"drogas",true) == 0)
			{
                PlayerInfo[params[1]][pHeroina] = 0;
                PlayerInfo[params[1]][pMarihuana] = 0;
                PlayerInfo[params[1]][pRitalin] = 0;
                PlayerInfo[params[1]][pEctasy] = 0;
                PlayerInfo[params[1]][pSpeed] = 0;
			    format(string, sizeof(string), "* Oficial %s quita las drogas a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetectorEx(30.0,playerid,string,COLOR_PURPLE);
			    return 1;
			}
			else if(strcmp(item,"materiales",true) == 0)
			{
                PlayerInfo[params[1]][pMats] = 0;
			    format(string, sizeof(string), "* Oficial %s quita los materiales a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetectorEx(30.0,playerid,string,COLOR_PURPLE);
			    return 1;
			}
			else if(strcmp(item,"telefono",true) == 0)
			{
                PlayerInfo[params[1]][pPnumber] = 0;
			    format(string, sizeof(string), "* Oficial %s quita el teléfono %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetectorEx(30.0,playerid,string,COLOR_PURPLE);
			    return 1;
			}
			else if(strcmp(item,"armas",true) == 0)
			{
			    SafeResetPlayerWeapons(params[1]);
       			format(string, sizeof(string), "* Oficial %s le quita las armas a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetectorEx(30.0,playerid,string,COLOR_PURPLE);
       			return 1;
			}
			else Message(playerid, COLOR_GRAD2, "Item incorrecto.");
		}
		else
		{
		    Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /quitar <item> <PlayerID>");
		    Message(playerid, COLOR_GRAD2, "Items: lconduccion, lvuelo, larma, drogas, materiales, telefono, armas");
		}
        return 1;
	}
    zcmd(drag, playerid, params[])
    {
        new carid = GetPlayerVehicleID(playerid);
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(!LSPD_IsACopCar(carid) && !SAEM_Vehicle(carid)) return Message(playerid, COLOR_GREY, "¡No estás en una patrulla!");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
    		{
    		    if(!ProxDetectorS(8.0,playerid,params[0])) return Message(playerid, COLOR_GREY, "¡Demasiado lejos!");
    		    new Float:x, Float:y, Float:z, string[128];
          		GetPlayerPos(params[0],x,y,z);
          		PutPlayerInVehicle(params[0],GetPlayerVehicleID(playerid),1);
          		format(string, sizeof(string), "Oficial %s sube forzosamente a %s a la patrulla", PlayerName(playerid), PlayerName(params[0]));
				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
				return 1;
    		}
    		else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /drag <PlayerID>");
        return 1;
    }
 	zcmd(rendirse, playerid, params[])
 	{
 	    if(PlayerDrunk[playerid] > 9) return Message(playerid, COLOR_GRAD2, "No puedes usar este comando ahora.");
 	    if(GetPVarInt(playerid, "Freezed") > 0) return Message(playerid, COLOR_GRAD2, "Estás congelado por un administrador!");
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && ForbidHandsUp[playerid] == 0)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
  	  		return 1;
		} else { Message(playerid, COLOR_GRAD2, "  No puedes usar este comando ahora."); return 1; }
	}
    zcmd(getip, playerid, params[])
    {
		if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GREY, "{DC092F}No Autorizado.");
		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "u", params[0]))
        {
            new ip[20], string[64];
            GetPlayerIp(params[0],ip,sizeof(ip));
            format(string, sizeof(string), "* Player: %s IP: %s", PlayerName(params[0]), ip);
            Message(playerid, COLOR_GRAD2, string);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /getip <PlayerID>");
        return 1;
    }
    zcmd(unbanip, playerid, params[])
    {
    	if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
    	if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[90];
            format(string,sizeof(string),"unbanip %s",params[0]);
            SendRconCommand(string);
			SendRconCommand("reloadbans");
			format(string, sizeof(string), "IP desbaneada por %s (%s)", PlayerName(playerid), params[0]);
			A_Info(string);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /unbanip <IP>");
        return 1;
    }
   	zcmd(unban, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "s[32]", params[0])){
        	if(strfind(params[0], "_" , true) != -1){
        		new string3[64], string[128];
    			format(string3,sizeof(string3),"users/%s.ini",params[0]);
    			if(INI_Exist(string3)){
    				new INI:ini = INI_Open(string3);
   					INI_WriteInt(ini, "Locked", 0);
   					INI_WriteInt(ini, "Advertencias", 0);
   					INI_Close(ini);
   					format(string, sizeof(string), "%s desbaneó a %s",PlayerName(playerid), params[0]);
   					A_Info(string);
   				} else Message(playerid, COLOR_GRAD2, "¡Esa cuenta no existe!");
			} else Message(playerid, COLOR_GRAD2, "Ejemplo de Uso: /unban Juan_Perez");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /unban <Nombre_Jugador>");
    	return 1;
   	}
   	zcmd(cuenta, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid);
			}
		}
		return 1;
	}
	zcmd(changepass, playerid, params[])
	{
		new string[128];
  		if(sscanf(params, "s[20]", params[0])) return Message(playerid,COLOR_GRAD2, "Utiliza: /changepass <Contraseña>");
        if(strlen(params[0]) > 20) return Message(playerid, COLOR_GRAD2, "* Máximo 20 carácteres.");
   		format(PlayerInfo[playerid][pKey], 24, params[0]);
		format(string, sizeof(string), "Nueva Contraseña: %s", params[0]);
		Message(playerid, COLOR_GRAD1, string);
		OnPlayerUpdateTime(playerid);
		return 1;
	}
	zcmd(gob, playerid, params[])
	{
		new string[128], prank[64];
	    if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /gob <Texto>");
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
    	if(PlayerInfo[playerid][pLeader] == 1)
		{
 			format(string, sizeof(string), "[LSPD] Comisario %s: %s", PlayerName(playerid), params[0]);
			GlobalMsg(0x00ACFFFF, string);
			return 1;
		}
  		else if(PlayerInfo[playerid][pLeader] == 3)
   		{
    		format(string, sizeof(string), "[GNSA] Coronel %s: %s", PlayerName(playerid), params[0]);
	    	GlobalMsg(0x00ACFFFF, string);
	    	return 1;
		}
		else if(Gobierno(playerid))
		{
			switch(PlayerInfo[playerid][pRank])
  			{
				case 7:     prank = "Presidente";
				case 6:     prank = "Vice-Presidente";
				case 5:     prank = "Alcalde";
      		}
			if(PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
			format(string, sizeof(string), "[GOBIERNO] %s %s: %s", prank, PlayerName(playerid), params[0]);
			GlobalMsg(0x00ACFFFF, string);
			return 1;
		}
		else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
 	zcmd(impuesto, playerid, params[])
	{
	    if(Presidente(playerid))
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if(params[0] < 0 || params[0] > 100) return Message(playerid, COLOR_GRAD2, "Valor entre 1 - 100");

	            new string[90];
	            TaxValue = params[0];
				SaveStuff();
				format(string, sizeof(string), "* [GOBIERNO] El impuesto por ciudano se ha establecido en %d$.", TaxValue);
				GlobalMsg(0x00ACFFFF, string);

	        }
	        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /impuesto <cantidad>");
	    }
	    else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
 	}
 	zcmd(fondoestado, playerid, params[])
	{
	    new string[90];
	    if(Presidente(playerid))
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if (params[0] > Tax || params[0] < 1) return Message(playerid, COLOR_GRAD2, "Cantidad erróena.");

				PlayerInfo[playerid][pAccount] += params[0];    Tax -= params[0];

				format(string, sizeof(string), "Extraiste %d$ de los fondos del estado (%d$)", params[0],Tax);
				Message(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "Los fondos extraídos pasaron a tu cuenta bancaria (%d$)", PlayerInfo[playerid][pAccount]);
				Message(playerid, COLOR_YELLOW2, string);
				format(string, sizeof string, "* %s ha sacado %d$ de los fondos.", PlayerName(playerid), params[0]);
				Log("Logs/Dinero.log", string);
				SaveStuff();
				return 1;
	        }
	        else
	        {
	            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /fondoestado <cantidad>");
	            format(string, 90, "* Hay %d de fondos.", Tax);
	            Message(playerid, COLOR_GRAD2, string);
	        }
		}
		else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
	zcmd(altavoz, playerid, params[])
	{
        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GRAD2, "Usted no tiene un telefono.");
        if(Mobile[playerid] == 255) return Message(playerid, COLOR_GREY, "Usted no esta en una llamada telefonica.");
        if(IsPlayerConnected(playerid))
        {
            if(GetPVarInt(playerid, "Speaker") == 0)
			{
				Message(playerid, COLOR_YELLOW2, "* Beep * El altavoz esta conectado.");
				SetPVarInt(playerid, "Speaker", 1);
				return 1;
			}
			else
			{
				Message(playerid, COLOR_YELLOW2, "* Beep * El altavoz se a desconectado.");
				DeletePVar(playerid, "Speaker");
				return 1;
			}
		}
		return 1;
	}
    zcmd(miranda, playerid, params[])
    {
        if(IsACop(playerid))
        {
            new string[128];
	        format(string, sizeof(string),"* %s lee los 'Derechos Miranda'",PlayerName(playerid));
	        ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	        format(string, sizeof(string),"%s dice: Tienes derecho a guardar silencio, todo lo que diga puede usarse en su contra.",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: Tiene derecho a un abogado, si no puede pagar uno, se le asignará uno a costas del Estado.",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: Tiene derecho a una llamada por teléfono.",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: ¿De acuerdo señor?",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        }
        return 1;
    }
    zcmd(timbre, playerid, params[])
    {
        for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
			    new string[76];
   				format(string, sizeof(string), "* %s toca el timbre.", PlayerName(playerid));
				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
				ProxDetectorEx(20.0, playerid, "Diiing Doooong ... Diiing Doooong", COLOR_YELLOW);
				for(new p = 0; p < MAX_PLAYERS; p++)
				{
				    if(IsPlayerConnected(p))
				    {
					    if(PlayerToPoint(30, p, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					    {
    						ProxDetectorEx(30.0, p, "Diiing Doooong ... Diiing Doooong", COLOR_YELLOW);
    					}
   					}
				}
			}
		}
		return 1;
    }
	zcmd(robar, playerid, params[])
    {
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(Pandilleros(playerid) || PlayerInfo[playerid][pJob] == 5 || GetPlayerFactionType(playerid) == 2)
		{
		    if(!sscanf(params, "s[32]", params[0]))
		    {
		        new string[128];
		        if(strcmp(params[0],"persona",true) == 0)
		        {
		            if(PlayerInfo[playerid][pRob] > 4) return Message(playerid, COLOR_GRAD2, "¡Ya has robado 5 veces, espera al próximo PayDay!");
		            new victim = GetClosestPlayer(playerid);
		            if(ProxDetectorS(2.0,playerid, victim))
		            {
                        if(GetPlayerWeapon(victim) == 41)
		    			{
	        				format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y falla", PlayerName(playerid), PlayerName(victim));
							ProxDetectorEx(30.0, playerid, string, COLOR_RED);
       						format(string, sizeof(string), "* %s le rocía la cara con un spray anti-ladrones a %s.", PlayerName(victim), PlayerName(playerid));
							ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
							PlayerInfo[playerid][pRob] += 1;
							Message(victim, COLOR_YELLOW2, "-> ¡Evitaste que te robaran!");
							return 1;
					    }
					    new rob = random(2);
					    if(rob == 1)
					    {
	        				PlayerInfo[victim][pPnumber] = 0;
					        format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y lo logra", PlayerName(playerid) ,PlayerName(victim));
							ProxDetectorEx(30.0, playerid, string, COLOR_GREEN);
       						format(string, sizeof(string), "* %s se acerca hacia %s y le roba su teléfono.", PlayerName(playerid) ,PlayerName(victim));
							ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
							Message(victim, COLOR_YELLOW2, "-> ¡Te han robado el teléfono!");
							Message(playerid, COLOR_YELLOW2, "-> ¡Has robado un teléfono! Entregalo en el mercado negro.");
							PlayerInfo[playerid][pRob] += 1;
							SetPVarInt(playerid, "TelfRob", GetPVarInt(playerid, "TelfRob")+1);
							return 1;
						}
						else
						{
      						format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y falla", PlayerName(playerid), PlayerName(victim));
							ProxDetectorEx(30.0, playerid, string, COLOR_RED);
       						format(string, sizeof(string), "* %s se da cuenta y le da un golpe de puño a %s.", PlayerName(victim), PlayerName(playerid));
							ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
							Message(victim, COLOR_GREEN, "-> Has evitado que te roben!");
							Message(playerid, COLOR_YELLOW, "Te han pillado! Menudo ostión te has llevado! Corre!");
							PlayerInfo[playerid][pRob] += 1;
							return 1;
						}
		            }
		        }
		        else if(strcmp(params[0],"24-7",true) == 0)
		        {
		            if(!IsAt247(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en el 24/7!");
		            if(PlayerInfo[playerid][pRob] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya robaste, espera al próximo PayDay!");
		            else
		            {
		            	new robmoney = random(1000);
			            Earn(playerid, robmoney);
						ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 4000); // Rob
						PlayerInfo[playerid][pRob] += 1;
						format(string, sizeof(string), "* %s amenaza con un arma al vendedor", PlayerName(playerid));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
						return 1;
		            }
				}
		        else if(strcmp(params[0],"propiedad",true) == 0)
		        {
		            if(GetPVarType(playerid, "PickLock") == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes con que forzar la cerradura!");
		            if(PlayerInfo[playerid][pRob] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya robaste, espera al próximo PayDay!");
		            for(new i = 0; i < sizeof(HouseInfo); i++)
					{
						if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
						{
						    new Float:cx,Float:cy,Float:cz;
							GetPlayerPos(playerid, cx, cy, cz);
						    new luck = random(8)
							if(luck == 3 || luck == 7)
							{
							    format(string, sizeof(string), "* %s fuerza la cerradura de la casa, entra y roba todo lo que puede.", PlayerName(playerid));
					      		ProxDetectorEx(8.0, playerid, string, COLOR_PURPLE);
					      		new cash = random(800);
								PlayerInfo[playerid][pRob] = 1;
								SendRadioMessage(1, TEAM_BLUE_COLOR, "** Central: Atención se ha producido un robo en una casa de LS, acudan lo antes posible!");
								for(new x = 0; x < MAX_PLAYERS; x++)
								{
									if(IsPlayerConnected(x))
									{
					    				if(Team_LSPD(playerid))
									    {
											SetPlayerCheckpoint(x, cx, cy, cz, 3.0);
										}
									}
								}
						        Earn(playerid, cash);
				  				ProxDetectorEx(30.0, playerid, "* Piiiiiiiiiiiiiiii Piiiiiiiiiiiiiiiii (( Alarma Sonando ))", COLOR_YELLOW);
				 	            return 1;
							}
							else
							{
							    format(string, sizeof(string), "* %s rompe su alambre al intentar forzar la cerradura.", PlayerName(playerid));
					      		ProxDetectorEx(8.0, playerid, string, COLOR_PURPLE);
					      		SendClientMessage(playerid, COLOR_YELLOW2, "Fallaste al abrir la casa ...");
					      		PlayerInfo[playerid][pRob] = 1;
					      		return 1;
							}
						}
						else Message(playerid, COLOR_GRAD2, "¡No estás cerca de una casa!");
					}
		        }
		    }
		    else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /robar <24-7> <Persona> <Propiedad>");
		}
		return 1;
	}
	zcmd(robarbanco, playerid, params[])
	{
	    if(PlayerInfo[playerid][pLeader] < 1) return Message(playerid, COLOR_GRAD2, "¡No eres lider de una faccion!");
        if(PlayerToPoint(10.0,playerid,265.3353,-1590.6843,-72.1891) || PlayerToPoint(10.0,playerid,2396.8611,2492.6538,-19.0217))
		{
		    if(PlayerInfo[playerid][pLeader] == 11 && RRusos <= gettime())
			{
		    	RobarBanco(playerid);
		    	RRusos = gettime() + 345600;
		    	return 1;
  			}
			else if(PlayerInfo[playerid][pLeader] == 12 && RLCN <= gettime())
			{
		    	RobarBanco(playerid);
		    	RLCN = gettime() + 345600;
		    	return 1;
			}
    		else Message(playerid, COLOR_GRAD2, "¡No eres lider de una faccion ilegal o aun no puedes usar este comando, usa /timerob!");
   		} else Message(playerid, COLOR_GRAD2, "¡No estás en el banco!");
		return 1;
	}
	zcmd(timerob, playerid, params[])
	{
	    new string[128], facrob;
	    if(PlayerInfo[playerid][pLeader] < 1) return Message(playerid, COLOR_GRAD2, "¡No eres lider de una faccion ilegal!");
        switch(PlayerInfo[playerid][pLeader])
        {
            case 11:    facrob = RRusos;
            case 12:    facrob = RLCN;
            default:    facrob = 9999;
       	}
		if(facrob == 9999) return Message(playerid, COLOR_GRAD2, "¡No eres lider de una faccion ilegal!");
		if(facrob == 0) return Message(playerid, COLOR_GRAD2, "* Tu faccion ya puede realizar un robo.");
		new TiempoRob = facrob - gettime(),
  		dias = TiempoRob/60/60/24,
		horas = TiempoRob/60/60 - dias*24,
		minutos = TiempoRob/60 - dias*24*60 - horas*60;
		format(string, sizeof(string), "* Faltan %d dias, %d horas, %d minutos para poder realizar un robo al banco.", dias, horas, minutos);
		Message(playerid, COLOR_GRAD4, string);
		return 1;
	}
    zcmd(ayuda, playerid, params[])
    {
        if(!sscanf(params, "s[32]", params[0]))
        {
            if		(strcmp(params[0],	"faccion",	true) == 0)   				Ayuda(playerid, 0);
            else if	(strcmp(params[0],	"chat",		true) == 0)   				Ayuda(playerid, 1);
            else if	(strcmp(params[0],	"general",		true) == 0)   			Ayuda(playerid, 2);
            else if	(strcmp(params[0],	"lider",		true) == 0)   			Ayuda(playerid, 3);
            else if	(strcmp(params[0],	"trabajo",		true) == 0)   			Ayuda(playerid, 4);
            else if	(strcmp(params[0],	"telefono",		true) == 0)   			Ayuda(playerid, 5);
            else if	(strcmp(params[0],	"casa",			true) == 0)   			Ayuda(playerid, 6);
            else if	(strcmp(params[0],	"vehiculo",		true) == 0)   			Ayuda(playerid, 7);
            else if	(strcmp(params[0],	"banco",		true) == 0)   			Ayuda(playerid, 8);
            else if	(strcmp(params[0],	"premium",		true) == 0)   			Ayuda(playerid, 9);
            else if (strcmp(params[0],  "negocio",      true) == 0)             Ayuda(playerid, 10);
        }
        else
		{
            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /ayuda <nombre>");
   			Message(playerid, COLOR_GRAD2, "General, Chat, Casa, Lider, Faccion, Trabajo, Banco, Teléfono, Premium, Vehiculo, Negocio");
		}
        return 1;
    }
	zcmd(makeleader, playerid, params[])
	{
        new ftext[30], string[128];
        if(PlayerInfo[playerid][pAdminCP] < 2012 && PlayerInfo[playerid][pFacciones] != 1) 	return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		if(sscanf(params, "ui", params[0], params[1])) 		return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /makeleader <PlayerID> <Facción>");
  		if(params[1] < 0 || params[1] > 12) 		return Message(playerid, COLOR_GREY, "ID facción incorrecto.");
    	if(!IsPlayerConnected(params[0]))                   return Message(playerid, COLOR_GREY, "Jugado desconectado.");
     	switch(params[1])
      	{
       		case 0: 	{PlayerInfo[params[0]][pChar] = 299; PlayerInfo[params[0]][pRank] = 0; ftext = "Ninguna"; }
         	case 1: 	{PlayerInfo[params[0]][pChar] = 283; PlayerInfo[params[0]][pRank] = 8; ftext = "Policía Local LS"; }
         	case 2:     {PlayerInfo[params[0]][pChar] = 221; PlayerInfo[params[0]][pRank] = 6; ftext = "Al-Qaeda"; }
           	case 3: 	{PlayerInfo[params[0]][pChar] = 287; PlayerInfo[params[0]][pRank] = 9; ftext = "SAEM"; }
           	case 4: 	{PlayerInfo[params[0]][pChar] = 228; PlayerInfo[params[0]][pRank] = 6; ftext = "Medical Center LS"; }
           	case 5:     {PlayerInfo[params[0]][pChar] = 176; PlayerInfo[params[0]][pRank] = 6; ftext = "Hitman"; }
           	case 6:     {PlayerInfo[params[0]][pRank] = 6; ftext = "Radio-Television"; }
            case 7:     {PlayerInfo[params[0]][pChar] = 268; PlayerInfo[params[0]][pRank] = 6; ftext = "Mecanicos LS"; }
            case 8:     {PlayerInfo[params[0]][pChar] = 295; PlayerInfo[params[0]][pRank] = 7; ftext = "Gobierno"; }
            case 9:     {PlayerInfo[params[0]][pChar] = 270; PlayerInfo[params[0]][pRank] = 6; ftext = "Groove"; }
            case 10:    {PlayerInfo[params[0]][pChar] = 110; PlayerInfo[params[0]][pRank] = 6; ftext = "Latin Kings"; }
            case 11:    {PlayerInfo[params[0]][pChar] = 290; PlayerInfo[params[0]][pRank] = 7; ftext = "Familia Korsakova"; }
            case 12:    {PlayerInfo[params[0]][pChar] = 113; PlayerInfo[params[0]][pRank] = 9; ftext = "LCN"; }
            default:    return Message(playerid, COLOR_GRAD2, "¡Escogiste un item incorrecto!");
       	}
       	PlayerInfo[params[0]][pMember] = 0;
       	PlayerInfo[params[0]][pLeader] = params[1];
       	SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);
       	UpdatePlayerStat(params[0]);
       	format(string, sizeof(string), "Administrador %s asignó el líder de la facción %s a %s.", PlayerName(playerid), ftext, PlayerName(params[0]));
       	MessageEx(playerid, params[0], 0x6ADFFFFF, string);
		return 1;
    }
	zcmd(anuncio, playerid, params[])
	{
	    if(PlayerToPoint(5.0,playerid,2065.6050,-2218.2114,2664.6157))
	    {
		    if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, "¡Necesitas ser mínimo nivel 2!");
		    if(PlayerInfo[playerid][pADTime] > 0) return Message(playerid, COLOR_GRAD2, "Aun no puedes volver a poner anuncios.");
	        if(CheckMoney(playerid, 150))
	        {
	            ShowPlayerDialog(playerid, CENTRODE_ANUNCIOS, DIALOG_STYLE_INPUT, "{2471A3}Centro de Publicidad de Los Santos", "{FFFFFF}Ingresa el anuncio que desees colocar en nuestro bloque de publicidad:", "Aceptar", "Cancelar");
				return 1;
			}
	    } else Message(playerid, COLOR_GRAD2, "No estás en el Centro de Publicidad.");
		return 1;
	}
	zcmd(borrarad, playerid, params[])
	{
		if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
	    if(!sscanf(params, "u", params[0]))
		{
		    new string[80];
			format(PlayerInfo[params[0]][pAnuncio], 90, "Ninguno");
			PlayerInfo[params[0]][pADSent] = 0;
			format(string, sizeof string, "%s borró el anuncio de %s", PlayerName(playerid), PlayerName(params[0]));
	        A_Info(string);
	        return 1;
   		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /borrarad <PlayerID>");
   		return 1;
	}
	zcmd(eliminaranuncio, playerid, params[])
	{
	    if(PlayerInfo[playerid][pADSent] > 0)
	    {
	        format(PlayerInfo[playerid][pAnuncio], 90, "Ninguno");
	        PlayerInfo[playerid][pADSent] = 0;
	        Message(playerid, COLOR_GRAD2, "Has borrado tu anuncio del periódico.");
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "No tienes un anuncio en el periódico.");
		return 1;
 	}
	zcmd(rr, playerid, params[])
	{
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
	    if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /rr <PlayerID>");
     	if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no está conectado.");
     	if(GetPVarInt(params[0], "PlayerNeedsHelp") == 1)
     	{
      		new string[128];
        	format(string, sizeof(string), "{DC092F}M:RP: {2471A3}%s {FFFFFF}ha rechazado el reporte de [ID:%d] {DC092F}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
         	ABroadCast(-1, string, 1);
          	format(string, sizeof(string), "{DC092F}M:RP: {FFFFFF}Administrador {2471A3}%s [ID:%d] {FFFFFF}ha rechazado su reporte.", PlayerName(playerid), playerid);
           	Message(params[0], -1, string);
           	DeletePVar(params[0], "PlayerNeedsHelp");
        }
        else Message(playerid, COLOR_GREY, "El jugador no ha enviado ningún reporte.");
		return 1;
    }
    zcmd(ar,playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /ar <PlayerID>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no está conectado.");
		if(GetPVarInt(params[0], "PlayerNeedsHelp") == 1)
 		{
   			new string[128];
			format(string, sizeof(string), "{DC092F}M:RP: {80FF00}%s {FFFFFF}ha aceptado el reporte de [ID:%d] {FF0000}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
			ABroadCast(-1, string, 1);
			format(string, sizeof(string), "{DC092F}M:RP: {FFFFFF}Administrador {FF0000}%s [ID:%d] {FFFFFF}ha aceptado su reporte porfavor espere.", PlayerName(playerid), playerid);
			Message(params[0], -1, string);
			DeletePVar(params[0], "PlayerNeedsHelp");
		}
		else Message(playerid, COLOR_GREY, "El jugador no ha enviado ningún reporte.");
        return 1;
    }
    zcmd(aduda, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /aduda <id>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GREY, "Jugador no está conectado.");
		if(GetPVarType(params[0], "PlayerDuda") != 0){
		    new string[128];
 	        format(string, sizeof(string), "{DC092F}M:RP: {2471A3}%s {FFFFFF}aceptó la duda de [ID:%d] {DC092F}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
		    ABroadCast(-1, string, 1);
		    format(string, sizeof(string), "{DC092F}M:RP: * {DC092F}%s {FFFFFF}le va a responder, para hablar con el administrador use /w {2471A3}%d.", PlayerName(playerid), playerid);
		    Message(params[0], -1, string);
		    DeletePVar(params[0], "PlayerDuda");
		}else Message(playerid, COLOR_GRAD2, "El jugador no ha enviado una duda.");
        return 1;
    }
    zcmd(tomarpizza, playerid, params[])
    {
        if(PlayerToPoint(5.0,playerid,379.1396,-114.2661,1001.4922))
        {
            if (PlayerInfo[playerid][pJob] != 6)
		    {
            	Message(playerid, COLOR_GRAD2, "Usted no es un repartidor de Pizza.");
		    	return 1;
    	    }
    	    if (GetPVarInt(playerid, "sPizza") == 0)
    	    {
    	    	Message(playerid, COLOR_WHITE, "Usted ha cogido 5 pizzas, espere a un pedido.");
    	    	SetPVarInt(playerid, "sPizza", 5);
    	    }
    	}
    	return 1;
	}
	zcmd(cpizza, playerid, params[])
	{
		if (GetPVarInt(playerid, "bPizza") == 0) return Message(playerid, COLOR_GRAD2, "Usted no tiene una pizza, antes llame al 111.");
		new string[64];
  		SetHP(playerid, 100);
  		format(string, sizeof(string), "* %s coge su pizza y se la come.", PlayerName(playerid));
  		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
  		DeletePVar(playerid, "bPizza");
		return 1;
	}
	zcmd(comprarentrada, playerid, params[])
	{
        if(PlayerInfo[playerid][pDonateT] > 0) return Message(playerid,COLOR_GRAD2, "Usted es premium, no necesita comprar entrada.");
        if(GetPVarInt(playerid, "ComproBoleto") == 1) return Message(playerid,COLOR_GRAD2, "Usted ya tiene una entrada.");
		if(!PlayerToPoint(8.0,playerid,1790.3563,-1591.3485,13.4936)) return Message(playerid, COLOR_GRAD2, "Usted no está en la boleteria.");
        if(GetPlayerMoney(playerid) > 600)
		{
			Bought(playerid, 600);
			Till(1, 600);
			SetPVarInt(playerid, "ComproBoleto", 1);
			Message(playerid, -1, "Compraste la entrada al club {E4C65A}VIP, {FFFFFF}Ahora puedes entrar al club.");
		}
		return 1;
	}
    zcmd(vpizza, playerid, params[])
    {
        if (PlayerInfo[playerid][pJob] != 6) return Message(playerid,COLOR_GRAD2, "Usted no es Pizzero.");
        if (sscanf(params, "u", params[0])) return Message(playerid,COLOR_GRAD2, "Utiliza: /vpizza <PlayerID>");
        if (GetPVarInt(playerid, "sPizza") >= 1)
        {
            if (ProxDetectorS(8.0, playerid, params[0]))
            {
				new string[100]
       			format(string, sizeof(string), "* Ha entregado una pizza a %s", PlayerName(params[0]));
       			Message(playerid, COLOR_WHITE, string);
       			format(string, sizeof(string), "{A4D9EB}* Repartidor de Pizza %s le ha dado una pizza. {FF4564}/cpizza", PlayerName(playerid));
       			Message(params[0], -1, string);
       			format(string, sizeof(string), "* %s toma la pizza y se lo da a %s.", PlayerName(playerid), PlayerName(params[0]));
       			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
       			SetPVarInt(params[0], "bPizza", 1);
       			SetPVarInt(playerid, "sPizza", GetPVarInt(playerid, "sPizza")-1);
            } else Message(playerid, COLOR_GRAD2, "El jugador no esta cerca.");
		} else Message(playerid, COLOR_GRAD2, "* No tienes una pizza, ve a la cocina.");
		return 1;
	}
	zcmd(aceptarpizza, playerid, params[])
	{
        if(PlayerInfo[playerid][pJob] != 6) return Message(playerid,COLOR_GRAD2, "Usted no es Pizzero.");
        if(GetPVarInt(playerid, "PizzaCallTime") == 1) return Message(playerid,COLOR_GRAD2, "Usted ya acepto un pedido de pizza, espere 60 seg para aceptar otro!");
        if(PizzaCall < 999)
        {
            new string[128];
            new Float:X, Float:Y, Float:Z;
            format(string, sizeof(string), "{FFFFFF}Central: {EE844C}%s {FFFFFF}acepto el pedido de {EE844C}%s{FFFFFF}, esperen otros pedidos.",PlayerName(playerid), PlayerName(PizzaCall));
            SendJobMessage(6, -1, string);
            Message(playerid, COLOR_WHITE, "* Tiene 90 segundos para llegar al destino!");
            format(string, sizeof(string), "{FFFFFF} Pizzero {EE844C}%s {FFFFFF}ha aceptado su pedido, espere en su posición actual.",PlayerName(playerid));
            Message(PizzaCall, -1, string);
            GetPlayerPos(PizzaCall, X, Y, Z);
            SetPlayerCheckpoint(playerid, X, Y, Z, 5);
            GText(playerid, "~w~CheckPoint~n~~r~Marcado", 5000, 1);
            SetTimerEx("Pizza", 60000, false, "d", playerid);
            SetPVarInt(playerid, "PizzaCallTime", 1);
            PizzaCall = 999;
		}
        else
			Message(playerid, COLOR_GRAD2, "* Nadie a echo un pedido de pizza.");
			return 1;
	}
	zcmd(colgar, playerid, params[])
    {
        StopCall(playerid);
        return 1;
    }
    zcmd(contestar, playerid, params[])
    {
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				Message(playerid, COLOR_GRAD2, "* Usted ya esta en una llamada...");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
	    				new string[64];
						Mobile[playerid] = i;
						Message(i,  COLOR_GRAD2, "Contestaron la llamada.");
						format(string, sizeof(string), "* %s contesta su teléfono.", PlayerName(playerid));
						SetPlayerAttachedObject(playerid, 0, 18866, 6, 0.03999, 0.00999, 0.00000, -90.00000, 0.00000, 180.00000);
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					}
				}
			}
		}
        return 1;
    }
    //zcmd - Bank
    zcmd(balance, playerid, params[])
	{
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
        if(IsAtATM(playerid) || IsAtBank(playerid))
	    {
            new string[64];
			format(string, sizeof(string), "- Tienes %d$ en tu cuenta bancaria.",PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		} else Message(playerid, COLOR_GREY, "¡No estás en un cajero!");
		return 1;
	}
    zcmd(licencias, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
			{
   				if(ProxDetectorS(5.0, playerid, params[0]))
			    {
					new string[64];
					ClearChatbox(params[0], 10);
					format(string, sizeof(string), "|__ Licencias de %s __|", PlayerName(playerid));
					Message(params[0], COLOR_WHITE, string);
					if(PlayerInfo[playerid][pCarLic] > 0)   Message(params[0], COLOR_GRAD2, " Licencia de conducción");
					if(PlayerInfo[playerid][pFlyLic] > 0)   Message(params[0], COLOR_GRAD2, " Licencia de vuelo");
					if(PlayerInfo[playerid][pBoatLic] > 0)  Message(params[0], COLOR_GRAD2, " Licencia de navegación");
					if(PlayerInfo[playerid][pGunLic] > 0)   Message(params[0], COLOR_GRAD2, " Licencia de armas");
					format(string, sizeof(string), "* %s muestra sus licencias a %s.", PlayerName(playerid), PlayerName(params[0]));
					ProxDetectorEx(30.0,playerid,string, COLOR_PURPLE);
			    }
			    else Message(playerid, COLOR_GRAD2, "Muy lejos del jugador.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /licencias <PlayerID>");
        return 1;
    }
    zcmd(noticias, playerid, params[])
    {
        if(Journalist(playerid))
		{
		    if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No tienes rango suficiente!");
		    new car = GetVehicleModel(GetPlayerVehicleID(playerid));
		    if(PlayerInfo[playerid][pRank] == 3)
		    {
      			if(car == 488 || car == 582)
	    		{
       				if(GetPVarType(playerid, "TalkingLive") == 0)
		    		{
        				SetPVarInt(playerid, "TalkingLive", 1);
				        Message(playerid, COLOR_WHITE, "Has entrado en antena, estás hablando para todo San Andreas");
				        Message(playerid, COLOR_WHITE, "Recuerda que solo puedes hablar en un vehículo CNN con ese rango.");
				        return 1;
					}
					else
	    			{
        				DeletePVar(playerid, "TalkingLive");
				        Message(playerid, COLOR_WHITE, "Estás fuera de antena.");
				        return 1;
					}
    			}
		    	else Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo CNN!");
	    	}
		    else
		    {
		    	if(GetPVarType(playerid, "TalkingLive") == 0)
			    {
       				SetPVarInt(playerid, "TalkingLive", 1);
			        Message(playerid, COLOR_WHITE, "Has entrado en antena, estás hablando para todo San Andreas")
			        return 1;
				}
				else
    			{
       				DeletePVar(playerid, "TalkingLive");
			        Message(playerid, COLOR_WHITE, "Estás fuera de antena.");
			        return 1;
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "No eres reportero.");
        return 1;
    }
    zcmd(entrevista, playerid, params[])
    {
        if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No tienes rango suficiente!");
        if(!Journalist(playerid)) 			return Message(playerid, COLOR_GRAD2, "No eres reportero.");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
            {
                new string[128];
                if(GetPVarType(params[0], "TalkingLive") == 0)
                {
                    if(ProxDetectorS(5.0, playerid, params[0]))
					{
					    if(GetPVarInt(params[0], "Facturing") > 0) return Message(playerid, COLOR_GRAD2, "Este jugador está ocupado, espere.");
					    if(params[0] == playerid) { SendClientMessage(playerid, COLOR_GREY, "No puedes entrevistarte ati mismo!"); return 1; }
						format(string, sizeof(string), "* Ofreciste a %s una entrevista", PlayerName(params[0]));
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s te ofrece ser entrevistado.", PlayerName(playerid));
						SendRequest(params[0], string);
						SetPVarInt(params[0], "Petition_ID", 1);
						SetPVarInt(params[0], "LiveOffer", playerid);
						SetPVarInt(params[0], "Facturing", 1);
						Interview = 1;
						Interviewer = PlayerName(playerid);
						return 1;
					}
					else { Message(playerid, COLOR_GREY, "El jugador está muy lejos!"); return 1; }
                }
                else
                {
                    DeletePVar(params[0], "TalkingLive");
                    format(string, sizeof(string), "* %s anuló la entrevista a %s", PlayerName(playerid), PlayerName(params[0]));
					MessageEx(playerid, params[0], COLOR_WHITE, string);
					return 1;
                }
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /entrevista <PlayerID>");
        return 1;
    }
    zcmd(centrevista, playerid, params[])
    {
        if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No tienes rango suficiente!");
        if(Journalist(playerid))
		{
		    new string[80];
			Message(playerid, COLOR_WHITE, "Cancelaste la entrevista.");
  			for(new i = 0; i != MAX_PLAYERS; i++ )
	    	{
	    	    if(IsPlayerConnected(i))
	    	    {
					if(GetPVarType(i, "TalkingLive") > 0)
					{
					    format(string, sizeof(string), "** Entrevistado %s salió de la entrevista.", PlayerName(i));
				    	Message(i, COLOR_WHITE, string);
				    	DeletePVar(i, "TalkingLive");
					}
				}
	    	}
		}
		else	Message(playerid, COLOR_GRAD2, "No eres reportero.");
        return 1;
    }
	zcmd(desbug, playerid, params[])
	{
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GRAD2, "No puedes usar este comando estando en prision.");
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid, 0);
		    Message(playerid, -1, " {98CDFF}Su problema fue solucionado {FFFFFF}correctamente. {FFA4CB}[Desbug]");
		}
		else Message(playerid, COLOR_GRAD2, " Usted no esta logeado.");
        return 1;
	}
	zcmd(darseguro, playerid, params[])
	{
	    if(Team_SAMUR(playerid))
	    {
	        if(!sscanf(params, "u", params[0]))
	        {
				if(PlayerInfo[params[0]][pSeguro] == 0)
				{
					new string[50];
					PlayerInfo[params[0]][pSeguro] = 1;
					format(string, sizeof string, "Le has dado el seguro a %s.", PlayerName(params[0]));
					Message(playerid, COLOR_WHITE, string);
					Message(params[0], -1, "{FF393E}Hospital: {FFFFFF}Adquiriste el seguro médico de Los Santos.");
        	        Message(params[0], -1, "{FF393E}Hospital: {FFFFFF}Ahora cuando tengas un accidente seras atendido en este hospital.");
            	    return 1;
	    		} else Message(playerid, COLOR_GRAD2, "Ese jugador ya tiene seguro hospitalario.");
	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /darseguro <PlayerID>");
	    } else Message(playerid, COLOR_GRAD2, "No eres médico.");
	    return 1;
	}
    zcmd(placa, playerid, params[])
    {
        new string[90];
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
			{
			    if(!ProxDetectorS(8.0,playerid,params[0])) return Message(playerid, COLOR_GRAD2, "Muy lejos de el jugador.");
			    if(Team_LSPD(playerid))
				{
				    ClearChatbox(params[0], 7);
    				Message(params[0], COLOR_LIGHTBLUE, "-- Los Santos Police Departament --");
				    format(string, sizeof(string), "Nombre: %s - Rango: %s", PlayerName(playerid), PlayerStatInfo[playerid][4]);
				    Message(params[0], COLOR_WHITE, string);
				    format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
			    	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			    	return 1;
				}
				else if(Team_NG(playerid))
				{
				    ClearChatbox(params[0], 7);
    				Message(params[0], COLOR_GREEN, "-- San Andreas Ejercito Militar --");
					format(string, sizeof(string), "Nombre: %s - Rango: %s", PlayerName(playerid), PlayerStatInfo[playerid][4]);
				    Message(params[0], COLOR_WHITE, string);
				    format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
			    	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			    	return 1;
                }
				else  Message(playerid, COLOR_GRAD2, "¡No tienes una placa!");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /placa <PlayerID>");
        return 1;
    }
 	zcmd(seguro, playerid, params[]){
 		new string[90];
 		if(PlayerInfo[playerid][pSeguro] == 0) return Message(playerid, COLOR_GRAD2, "No tienes un seguro medico.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!ProxDetectorS(8.0, playerid, params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
      		Message(params[0], COLOR_GREEN, "__ Tarjeta de Seguro __");
        	format(string, sizeof(string), "   {FF231E}Nombre: {FFFFFF}%s", PlayerName(playerid));
        	Message(params[0], -1, string);
        	format(string, sizeof(string), "   {FF231E}Clinica: {FFFFFF}Los Santos Medical Center");
	        Message(params[0], -1, string);
         	format(string, sizeof(string), "* %s le muestra su tarjeta de seguro a %s.", PlayerName(playerid), PlayerName(params[0]));
			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /seguro <PlayerID>");
        return 1;
    }
    zcmd(re, playerid, params[])
    {
        if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
        if(JustReported[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Espere 2 Minutos para enviar otro reporte!");
		if(sscanf(params, "us[64]", params[0], params[1])) return Message(playerid, COLOR_GRAD2, "* {DC092F}Utilize:{2471A3} (/re)portar <playerid> <Razón>");
		if(IsPlayerConnected(params[0]))
        {
            new string[128];
			format(string, sizeof(string), "{DC092F}Reporte: {2471A3}[ID:%d]%s,{FFFFFF} Reporta a: {DC092F}[ID:%d]%s", playerid, PlayerName(playerid), params[0], PlayerName(params[0]));
			ABroadCast(-1, string, 1);
			format(string, sizeof(string), "{DC092F}Razon: {2471A3}%s", params[1]);
			ABroadCast(-1, string, 1);
			Message(playerid, 0x009D4FFF, "Tu reporte fue enviado con exito a los Administradores y sera procesado!");
			JustReported[playerid] = 1;
			SetPVarInt(playerid, "PlayerNeedsHelp", 1);
			SetTimerEx("ReportReset", 120000, false, "i", playerid);
        } else Message(playerid, COLOR_GRAD2, " Ese jugador está desconectado.");
        return 1;
    }
	zcmd(duda, playerid, params[])
    {
        if(PlayerInfo[playerid][pBanDuda] != 0) return Message(playerid, COLOR_GRAD2, "¡No puedes utilizar este comando, estas baneado del sistema de dudas!");
        if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /duda <Pregunta>");
        if((!nod) && GetPVarType(playerid, "Duda") == 0)
        {
            new string[128];
            SetPVarInt(playerid, "Duda", 1);
            SetPVarInt(playerid, "PlayerDuda", 1);
			format(string, sizeof(string), "Pregunta de %s : %s (ID:%d) {FFF613}[/aduda]", PlayerName(playerid), params[0], playerid);
			ABroadCast(COLOR_ASKQ,string,1);
			Message(playerid, -1, "{FFF613}Pregunta enviada. Espere 1 minuto para volver a mandar otra duda.");
			SetTimerEx("EnableQuest", 60000, false, "i", playerid);
        } else Message(playerid, COLOR_GRAD2, "* Canal de duda desactivado o ya envio una duda, espere 1 Minuto.");
        return 1;
    }
    zcmd(solicitaradmin, playerid, params[])
    {
        if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
        if((!nod) && GetPVarType(playerid, "Duda") == 0)
        {
            SetPVarInt(playerid, "Duda", 1);
            SetTimerEx("EnableQuest", 60000, false, "i", playerid);
			new so[] = "{DC092F}- {FFFFFF}Ayudante\n{DC092F}- {FFFFFF}Moderador\n{DC092F}- {FFFFFF}Administrador\n{DC092F}- {FFFFFF}Técnico"
			ShowPlayerDialog(playerid, DIALOG_SO, DIALOG_STYLE_LIST,"{2471A3}Panel de ayuda.", so, "Solicitar", "Cerrar");
		} else Message(playerid, COLOR_GRAD2, "* Espere 1 minuto para volver a usar este comando.");
        return 1;
    }
    zcmd(as, playerid, params[])
	{
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /as <id>");
	    if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no está conectado.");
    	if(GetPVarType(params[0], "PlayerSol") != 0)
    	{
	    	new string[128];
 	    	format(string, sizeof(string), "{DC092F}M:RP: {2471A3}%s {FFFFFF}aceptó la solicitud de [ID:%d] {DC092F}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
  	    	ABroadCast(-1, string, 1);
   	    	format(string, sizeof(string), "{FFFFFF}* Administrador {2471A3}%s {FFFFFF}ha aceptado su solicitud {2471A3}/w %d, {FFFFFF}espere un momento.", PlayerName(playerid), playerid);
    	    Message(params[0], -1, string);
    	    DeletePVar(params[0], "PlayerSol");
    	} else Message(playerid, COLOR_GRAD2, "El jugador no ha echo una solicitud.");
        return 1;
    }
    zcmd(respawnall, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        RespawnVehicles();
        return 1;
    }
	zcmd(spec, playerid, params[])
	{
		if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(sscanf(params, "u", params[0])) return Message(playerid,COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /spec <PlayerID>");
		if(!IsPlayerConnected(params[0])) return Message(playerid,COLOR_GRAD2,"Jugador no conectado");
		if(GetPVarInt(params[0], "TogSpec") == 0) {
			if (!IsPlayerInAnyVehicle(params[0]))
			{
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectatePlayer(playerid, params[0]);
				SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
				return 1;
			}
			else
			{
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectateVehicle(playerid, GetPlayerVehicleID(params[0]));
				SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
				return 1;
			}
	 	} else Message(playerid, COLOR_GRAD2, "No puedes spectear a esta persona ahora mismo.");
		return 1;
	}
	zcmd(specoff, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
 		TogglePlayerSpectating(playerid, 0);
        return SetTimerEx("PonerColor", 500, false, "i", playerid);
	}
	zcmd(togspec, playerid, params[]){
	    new string[86], nick[24];
	    GetPlayerName(playerid, nick, 24);
        if(!strcmp(nick, "Mike_West", true) || !strcmp(nick, "Jhon_West", true))
		{
		    if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /togspec <PlayerID>");
		    if(IsPlayerConnected(params[0])){
	    	    if(GetPVarInt(params[0], "TogSpec") == 0){
		    	    SetPVarInt(params[0], "TogSpec", 1);
		        	format(string, sizeof(string), "* Has bloqueado el specplayer para %s.", PlayerName(params[0]));
	    	    	Message(playerid, COLOR_GRAD2, string);
    	    	}
	    	    else {
    		        DeletePVar(params[0], "TogSpec");
    		        format(string, sizeof(string), "* Has desbloqueado el specplayer para %s.", PlayerName(params[0]));
    	    	    Message(playerid, COLOR_GRAD2, string);
		 		}
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
	zcmd(givemoney, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
				new string[128], year, month,day;    getdate(year, month, day);
    			GivePlayerMoney(params[0], params[1]);
				format(string, 128, "Administrador %s ha dado %d$ a %s", PlayerName(playerid),params[1],PlayerName(params[0]));
		 		A_Info(string);
			 	format(string, 128, "Admin %s ha dado %d$ a %s", PlayerName(playerid),params[1],PlayerName(params[0]));
			 	Log("Logs/DineroAdmin.log", string);
			 	return 1;
		    } else SendClientMessage(playerid,  COLOR_GRAD2, "ID Inválida");
		} else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /givemoney [PlayerID] [$]");
		return 1;
	}
	zcmd(money, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
      			new string[128], year, month,day;    getdate(year, month, day);
         		ResetPlayerMoney(params[0]);
           		GivePlayerMoney(params[0], params[1]);
				format(string, 128, "Administrador %s ha fijado el dinero de %s a %d$ ", PlayerName(playerid),PlayerName(params[0]),params[1]);
		 		A_Info(string);
		 		format(string, 128, "Admin %s ha fijado el dinero de %s a %d$", PlayerName(playerid), PlayerName(params[0]), params[1]);
			 	Log("Logs/DineroAdmin.log", string);
			 	return 1;
		    } else Message(playerid,  COLOR_GRAD2, "ID Inválida");
		} else Message(playerid, COLOR_GRAD2, "Utiliza: /money <PlayerID> <$>");
        return 1;
    }
    zcmd(sethp, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
      			new string[80];
         		SetHP(params[0],params[1]);
				format(string, 80, "Administrador %s ha establecido a %s %dHP", PlayerName(playerid),PlayerName(params[0]),params[1]);
		 		A_Info(string);
			 	return 1;
		    } else Message(playerid,  COLOR_GRAD2, "¡ID Inválida!");
		} else Message(playerid, COLOR_GRAD2, "Utiliza: /sethp <PlayerID> <HP>");
        return 1;
    }
    zcmd(setarmor, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
      			new string[80];
         		SetPlayerArmour(params[0],params[1]);
				format(string, 80, "Administrador %s ha establecido a %s %d de chaleco", PlayerName(playerid),PlayerName(params[0]),params[1]);
		 		A_Info(string);
			 	return 1;
		    } else SendClientMessage(playerid,  COLOR_GRAD2, "ID Inválida");
		} else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /setarmor <PlayerID> <armor>");
        return 1;
    }
	zcmd(forcepayday, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        PayDay();
        return 1;
    }
    zcmd(loteria, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		new string[128];
  		format(string, sizeof(string), "{2F99B5}Noticias de la Loteria: {FFFFFF}Hemos empesado la elección de la loteria.");
    	OOCOff(COLOR_WHITE, string);
     	new rand = random(51);
      	if(rand == 0) { rand += 1; }
       	Lotto(rand);
        return 1;
    }
    zcmd(setpayday, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "i", params[0]))
        {
            new string[32];
            PayDayLeft = params[0];
            format(string, sizeof(string), "PayDay left: %d minutes", PayDayLeft);
            Message(playerid, COLOR_GRAD2, string);
        }   else Message(playerid, COLOR_GRAD2, "Utiliza: /setpayday <MinutesLeft>");
        return 1;
    }
    zcmd(payday, playerid, params[])
    {
        new string[64];
        format(string, sizeof(string), "* Faltan %d minutos para obtener el PayDay",PayDayLeft);
        return Message(playerid, COLOR_GRAD2, string);
    }
    zcmd(setstat, playerid, params[])
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdminCP] >= 2012)
	        {
	            if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
	            if(!sscanf(params, "uii", params[0],params[1],params[2]))
	            {
	                new string[128];
	                if(IsPlayerConnected(params[0]))
	    			{
			    	    if(params[0] != INVALID_PLAYER_ID)
			    	    {
			    	        switch (params[1])
							{
								case 1:
								{
									PlayerInfo[params[0]][pLevel] = params[2];
									UpdatePlayerStat(params[0]);
									format(string, sizeof(string), "Admin %s ha establecido nivel %d a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									format(string, 128, "Admin %s ha establecido nivel %d a %s", PlayerName(playerid),params[2],PlayerName(params[0]));
				 					Log("Logs/NivelAdmin.log", string);
									return 1;
								}
								case 2:
								{
									PlayerInfo[params[0]][pAccount] = params[2];
									format(string, sizeof(string), "Admin %s ha establecido %d$ en la cuenta bancaria de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									format(string, 128, "Admin %s ha fijado %d$ en la cuenta bancaria de %s", PlayerName(playerid),params[2],PlayerName(params[0]));
				 					Log("Logs/DineroAdmin.log", string);
									return 1;
								}
								case 3:
								{
									PlayerInfo[params[0]][pPnumber] = params[2];
									format(string, sizeof(string), "Teléfono: #%d", params[2]);
									Message(playerid, COLOR_GRAD2, string);
									return 1;
								}
								case 4:
								{
									PlayerInfo[params[0]][pExp] = params[2];
									format(string, sizeof(string), "Admin %s ha establecido en %d los puntos de respeto de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									return 1;
								}
								case 5:
								{
								    PlayerInfo[params[0]][pWalk] = params[2];
								    format(string, sizeof(string), "Estilo andar: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerWalkingStyle(params[0], PlayerInfo[params[0]][pWalk]);
								    return 1;
								}
								case 6:
								{
									PlayerInfo[params[0]][pPhousekey] = params[2];
									format(string, sizeof(string), "Casa: %d", params[2]);
									Message(playerid, COLOR_GRAD2, string);
									return 1;
								}
								case 7:
								{
								    PlayerInfo[params[0]][pJob] = params[2];
								    UpdatePlayerStat(params[0]);
								    format(string, sizeof(string), "Trabajo: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    return 1;
								}
								case 8:
								{
								    PlayerInfo[params[0]][pAge] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d la edad de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									return 1;
								}
								case 9:
								{
								    PlayerInfo[params[0]][pDEagle] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de Deagle de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								    return 1;
								}
								case 10:
								{
								    PlayerInfo[params[0]][pShotgun] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de Shotgun de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								    return 1;
								}
								case 11:
								{
								    PlayerInfo[params[0]][pMP5] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de MP5 de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								    return 1;
								}
								case 12:
								{
								    PlayerInfo[params[0]][pAK47] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de AK47 de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								    return 1;
								}
								case 13:
								{
								    PlayerInfo[params[0]][pM4] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de M4 de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								    return 1;
								}
								case 14:
								{
								    PlayerInfo[params[0]][pSniper] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de Sniper de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								    return 1;
								}
								case 15:
								{
								    PlayerInfo[params[0]][pSex] = params[2];
								    format(string, sizeof(string), "Sexo: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    UpdatePlayerStat(params[0]);
								    return 1;
				    			}
								case 16:
								{
								    PlayerDrunk[params[0]] = params[2];
								    format(string, sizeof(string), "Drunk: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerStats(params[0]);
								    return 1;
								}
								case 17:
								{
								    PlayerInfo[params[0]][pRent] = params[2];
								    format(string, sizeof(string), "Renta: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    return 1;
								}
								case 18:
								{
								    PlayerInfo[params[0]][pFStyle] = params[2];
								    format(string, sizeof(string), "Tipo Lucha: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    return 1;
								}
								case 19:
								{
								    PlayerInfo[params[0]][pMats] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d materiales a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									return 1;
								}
								case 20:
								{
								    PlayerInfo[params[0]][pSpeed] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de speed a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									return 1;
								}
								case 21:
								{
								    PlayerInfo[params[0]][pEctasy] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de estasis a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									return 1;
								}
								case 22:
								{
								    PlayerInfo[params[0]][pRitalin] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de ritalin a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									return 1;
								}
								case 23:
								{
								    PlayerInfo[params[0]][pHeroina] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de heroina a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									return 1;
								}
								case 24:
								{
								    PlayerInfo[params[0]][pMarihuana] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de marihuana a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									return 1;
								}
								case 25:
								{
								    PlayerInfo[params[0]][pAdvertencias] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d las advertencias de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
									return 1;
								}
								case 26:
								{
								    PlayerInfo[params[0]][pPbizzkey] = params[2];
								    format(string, sizeof(string), "Negocio: %d", params[2]);
									Message(playerid, COLOR_GRAD2, string);
									return 1;
								}
								case 27:
								{
								    PlayerInfo[params[0]][pChangeName] = 0;
								    Message(playerid, COLOR_GRAD2, "Cambio de Nombre Reestablecido.");
								    return 1;
				    			}
								default: return Message(playerid, COLOR_GRAD2, "¡Código inválido!");
							}
						}
					}
					else return Message(playerid, COLOR_GRAD2, "¡ID Inválida!");
	            }
	            else
	            {
	                Message(playerid, COLOR_GRAD1, "Utiliza: /setstat <PlayerID> <código> <x>");
					Message(playerid, COLOR_GRAD4, "|1.Nivel - 2.Cuenta Bancaria - 3.Teléfono - 4.Puntos 5.Estilo - 6.Casa");
					Message(playerid, COLOR_GRAD4, "|7.Trabajo - 8.Edad - 9.Deagle - 10.Shotgun - 11.MP5 - 12.ak47 - 13.M4");
					Message(playerid, COLOR_GRAD4, "|14.Sniper - 15.Sexo - 16.Drunk - 17.Rent - 18.Lucha - 19.Materiales - 20.Speed");
					Message(playerid, COLOR_GRAD4, "|21.Extasis - 22.Ritalin - 23.Heroina - 24.Marihuana - 25.Warn - 26.Negocio");
					return 1;
	            }
	        } else return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    }
        return 1;
    }
    zcmd(setstuff, playerid, params[])
    {
  		if(PlayerInfo[playerid][pAdminCP] >= 2012)
  		{
  		    if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
  			if(!sscanf(params, "ii", params[0], params[1]))
    		{
    		    new string[128];
				switch(params[0])
				{
				    case 1:
				    {
				        Jackpot = params[1];
				        format(string, sizeof(string), "Admin %s ha establecido el Jackpot en %d", PlayerName(playerid), params[1]);
						A_Info(string);
						SaveStuff();
						return 1;
					}
					case 2:
					{
					    Tax = params[1];
                        format(string, sizeof(string), "Admin %s ha establecido el Fondo del Estado en %d$", PlayerName(playerid), params[1]);
						A_Info(string);
						SaveStuff();
						return 1;
					}
					case 3:
					{
					    TaxValue = params[1];
                        format(string, sizeof(string), "Admin %s ha establecido el Impuesto en %d$", PlayerName(playerid), params[1]);
						A_Info(string);
						SaveStuff();
						return 1;
					}
					case 4:
					{
					    Blood = params[1];
					    format(string, sizeof(string), "Admin %s ha establecido la sangre disponible en %d", PlayerName(playerid), params[1]);
						A_Info(string);
						SaveStuff();
						return 1;
					}
					default: Message(playerid, COLOR_GRAD2, "¡Código inválido!");
				}
			}
			else
			{
   				Message(playerid, COLOR_GRAD2, "Utiliza: /setstuff <Item> <Cantidad>");
			    Message(playerid, COLOR_GRAD2, "1.Jackpot - 2.Fondos - 3.Impuestos - 4.Sangre");
			}
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
   	zcmd(setname, playerid, params[])
  	{
		new string[128];
		if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
		if(PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		if(sscanf(params, "us[128]", params[0], params[1])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /setname <PlayerID> <Nuevo_Nombre>");
		if(params[0] != INVALID_PLAYER_ID)
		{
  			format(string, sizeof(string), "%s ha cambiado el nombre de %s a %s.",PlayerName(playerid),PlayerName(params[0]), params[1]);
			A_Info(string);
			Message(params[0], COLOR_RED2, string);
			SetPlayerName(params[0], params[1]);
		} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		return 1;
	}
   	zcmd(edit, playerid, params[]){
		new string[128], idcar = GetPlayerVehicleID(playerid), item[32];
		if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "s[64]i", item, params[1])){
            for(new i = 0; i < sizeof(HouseInfo); i++){
        	    if(PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])){
        	        if(params[1] > 0){
                        if(strcmp(item,"nivel",true) == 0){
                    	    HouseInfo[i][hLevel] = params[1];
                        }
                        else if(strcmp(item,"precio",true) == 0){
                            HouseInfo[i][hValue] =  params[1];
                        }
                        else if(strcmp(item,"cuartos",true) == 0){
                            HouseInfo[i][hRooms] =  params[1];
                        }
                        OnPropTextdrawUpdate(i);
        	        	format(string, sizeof(string), "CasaID: %d | Item: %s | Valor: %d", i, item, params[1]);
        	        	Message(playerid, COLOR_GRAD2, string);
        	        	return 1;
        	        }
        	    }
            }
            for(new b = 0; b < sizeof(BizzInfo); b++){
                if(PlayerToPoint(3, playerid,BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez])){
                    if(params[1] > 0){
                        if(strcmp(item,"nivel",true) == 0){
                            BizzInfo[b][bLevelNeeded] = params[1];
                        }
                        else if(strcmp(item,"precio",true) == 0){
                            BizzInfo[b][bBuyPrice] = params[1];
                        }
                        else if(strcmp(item,"ganancias",true) == 0){
                            BizzInfo[b][bTill] = params[1];
                        }
                        OnBizzTextdrawUpdate(b);
        	        	format(string, sizeof(string), "NegocioID: %d | Item: %s | Valor: %d", b, item, params[1]);
        	        	Message(playerid, COLOR_GRAD2, string);
        	        	return 1;
      	        	}
  	        	}
            }
            if(IsPlayerInAnyVehicle(playerid))
			{
                if(!OwnableVehicle[idcar]) return Message(playerid, COLOR_GRAD2, "¡No es un vehículo de venta!");
       	        if(params[1] >= 0){
                	if(strcmp(item,"precio",true) == 0){
                	    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvValue] = params[1];
                 	}
					else if(strcmp(item,"seguro",true) == 0){
					    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvLock] = params[1];
					}
					else if(strcmp(item,"multa",true) == 0){
						PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvMulta] = params[1];
					}
					else if(strcmp(item,"embargos",true) == 0){
					    PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvEmbargo] = params[1];
					}
   					format(string, sizeof(string), "CarID: %d | Item: %s | Valor: %d", idcar, item, params[1]);
		    		Message(playerid, COLOR_GRAD2, string);
		    		return 1;
	    		}
  	    	}
	    }
		else{
			Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /edit <Item> <Valor>");
			Message(playerid, COLOR_GRAD3, "Items Casas: Nivel, Precio, Cuartos");
			Message(playerid, COLOR_GRAD3, "Items Negocios: Nivel, Precio, Ganancias");
		 	Message(playerid, COLOR_GRAD3, "Items Vehículos: Precio, Seguro, Multa, Embargos");
 	 	}
		return 1;
	}
   	zcmd(bizzname, playerid, params[]){
   	    new string[128];
		if(PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		for(new b = 0; b < sizeof(BizzInfo); b++){
		    if(PlayerToPoint(3.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
		    {
				if(!sscanf(params,"s[32]",params[0]))
				{
				    if(strlen(params[0]) < 1 || strlen(params[0]) > 23) return Message(playerid, COLOR_GRAD2, "Entre 1 y 23 carácteres.");
					format(BizzInfo[b][bName], 24, params[0]);
					format(string, sizeof(string), "NegocioID: %d | Nuevo Nombre: %s", b, params[0]);
					Message(playerid, COLOR_GRAD2, string);
					OnBizzTextdrawUpdate(b);
				} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /bizzname <Nuevo Nombre>");
			}
   	    }
   	    return 1;
   	}
    zcmd(check,playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(!sscanf(params, "u", params[0])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    ShowStats(playerid,params[0]);
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /check <ID>");
        return 1;
    }
    zcmd(checkmoney, playerid, params[]){
		new string[128];
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /checkmoney <PlayerID>");
        format(string, sizeof(string), "%s - En Mano: %d", PlayerName(params[0]), GetPlayerMoney(params[0]));
        Message(playerid, COLOR_GRAD2, string);
		return 1;
	}
    zcmd(checkjail, playerid, params[]){
		new string[80];
    	if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
    	if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
    	if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /checkjail <PlayerID>");
        format(string, sizeof(string), "%s - %d segundos restantes", PlayerName(params[0]), PlayerInfo[params[0]][pJailTime]);
        Message(playerid, COLOR_GRAD2, string);
        return 1;
 	}
    zcmd(setint, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(!sscanf(params, "ud", params[0],params[1])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
		    SetPlayerInterior(params[0], params[1]);
		    format(string, sizeof(string), "- Interior de %s es ahora %d", PlayerName(params[0]), params[1]);   Message(playerid, COLOR_GRAD2, string);
			return Message(params[0], COLOR_GRAD2, string);
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /setint <PlayerID> <Interior>");
        return 1;
    }
    zcmd(setvw, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(!sscanf(params, "ud", params[0],params[1])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
		    SetPlayerVirtualWorld(params[0], params[1]);
		    format(string, sizeof(string), "- VirtualWorld de %s es ahora %d", PlayerName(params[0]), params[1]);   Message(playerid, COLOR_GRAD2, string);
			return Message(params[0], COLOR_GRAD2, string);
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /setvw <PlayerID> <VirtualWorld>");
        return 1;
    }
    zcmd(silenciar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(!sscanf(params, "u", params[0])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
		    if(GetPVarInt(params[0], "Muted") == 0){
   				SetPVarInt(params[0], "Muted", 1);
			    format(string, sizeof(string), "Admin %s ha silenciado al jugador %s",PlayerName(playerid), PlayerName(params[0]));
				Message(params[0],COLOR_RED2,string);
				A_Info(string);
				return 1;
			}
			else if(GetPVarInt(params[0], "Muted") == 1){
			    DeletePVar(params[0], "Muted");
				format(string, sizeof(string), "Admin %s ha desilenciado al jugador %s",PlayerName(playerid), PlayerName(params[0]));
				Message(params[0],COLOR_RED2,string);
				A_Info(string);
				return 1;
			}
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /silenciar <PlayerID>");
        return 1;
    }
    zcmd(congelar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(!sscanf(params, "u", params[0])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
			TogglePlayerControllable(params[0], 0);
			SetPVarInt(params[0], "Freezed", 1);
			format(string, sizeof(string), "%s ha congelado a %s",PlayerName(playerid), PlayerName(params[0]));
			Message(params[0], COLOR_RED2, string);
			A_Info(string);
			return 1;
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /congelar <PlayerID>");
        return 1;
    }
    zcmd(descongelar, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(!sscanf(params, "u", params[0]))
		{
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
			TogglePlayerControllable(params[0], 1);
			DeletePVar(params[0], "Freezed");
			format(string, sizeof(string), "%s ha descongelado a %s",PlayerName(playerid), PlayerName(params[0]));
			Message(params[0], COLOR_RED2, string);
			A_Info(string);
			return 1;
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /descongelar <PlayerID>");
        return 1;
    }
    zcmd(rtc, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
        new carid = GetPlayerVehicleID(playerid);
        RespawnVehicle(carid);
        RemovePlayerFromVehicle(playerid);
        return TogglePlayerControllable(playerid, 1);
    }
    zcmd(rtcar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "i", params[0])){
            if(!VehicleSpawned[params[0]]) return Message(playerid, COLOR_GRAD2, "ID de vehículo errónea (NO SPAWNEADO)");
            RespawnVehicle(params[0]);
            new string[64]
            format(string, sizeof(string), "{B1AAB2}Respawneaste el auto [%d]", params[0]); Message(playerid, -1, string);
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /rtcar <VehicleID>");
		return 1;
    }
	zcmd(setvwcar, playerid, params[]){
	    if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
	    if(!sscanf(params, "id", params[0], params[1])){
			SetVehicleVirtualWorld(params[0], params[1]);
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /setvwcar <VehicleID> <VirtualWorld>");
		return 1;
	}
	zcmd(rac, playerid, params[]){
	    if(PlayerInfo[playerid][pAdminCP] >= 4){
	        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
			new bool:unwanted[MAX_VEHICLES];
			for(new player=0; player<MAX_PLAYERS; player++){
			    if(IsPlayerConnected(player)) { if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; } }
     		}
			for(new car = 0; car < MAX_VEHICLES; car++)
			{
				if(!OwnableVehicle[car])
				{
					if(!unwanted[car] && !Hire_Vehicle(car) && !IsATrailer(car)) SetVehicleToRespawn(car);
					SetVehicleParamsEx(car,0,0,0,0,0,0,0);
					engineOn[car] = false;
					Gas[car] = GasMax;
					if( car >= VV)
	    			{
	    		    	SetVehiclePos(car, FactionVehicleInfo[F_ID[car]][FV_ID[car]][fvPos][0], FactionVehicleInfo[F_ID[car]][FV_ID[car]][fvPos][1], FactionVehicleInfo[F_ID[car]][FV_ID[car]][fvPos][2]);
	    		    	SetVehicleZAngle(car, FactionVehicleInfo[F_ID[car]][FV_ID[car]][fvPos][3]);
	    			}
				}
			}
			new string[128]
			format(string, sizeof(string), "Respawn general realizado por %s.", PlayerName(playerid));
			GlobalMsg(COLOR_GREEN,string);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
    zcmd(ir, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "u", params[0])){
		    if(params[0] != INVALID_PLAYER_ID){
		        new Float:p_x,Float:p_y,Float:p_z;
		        GetPlayerPos(params[0], p_x,p_y,p_z);
		        new interior = GetPlayerInterior(params[0]);
          		SetPosEx(playerid, p_x,p_y,p_z,0,interior,0);
          		return Message(playerid, COLOR_GRAD3, "¡Teleportado!");
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /ir <PlayerID>");
        return 1;
    }
    zcmd(activar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(GetPVarInt(playerid, "ActiveTeleport") == 0){
            SetPVarInt(playerid, "ActiveTeleport", 1);
        	Message(playerid, COLOR_GRAD2, "¡Teleport Activado!");
		}
		else if(GetPVarInt(playerid, "ActiveTeleport") == 1){
			DeletePVar(playerid, "ActiveTeleport");
		    Message(playerid, COLOR_GRAD2, "¡Teleport Desactivado!");
  		}
		return 1;
 	}
    zcmd(traer, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "u", params[0])){
		    if(params[0] != INVALID_PLAYER_ID){
		        new Float:p_x,Float:p_y,Float:p_z, string[70];
		        GetPlayerPos(playerid, p_x,p_y,p_z);
		        new interior = GetPlayerInterior(playerid);
          		SetPosEx(params[0], p_x,p_y,p_z,0,interior,0);
          		format(string, sizeof string, "* Admin %s te ha teleportado hacia él.", PlayerName(playerid));
        		return Message(params[0], COLOR_GRAD2, string);
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /traer <PlayerID>");
        return 1;
    }
    zcmd(checkwep, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "u", params[0])){
		    if(params[0] != INVALID_PLAYER_ID){
		        new xweapon, xbalas, string[80],NombreArma[24];
			    format(string, sizeof(string), "Armas de %s:", PlayerName(params[0])); Message(playerid, COLOR_GRAD1, string);

				for (new slot=0; slot<12; slot++){
				    GetPlayerWeaponData(params[0], slot, xweapon, xbalas);
				    if(xweapon != 0)
					{
                        GetWeaponName(xweapon,NombreArma,sizeof(NombreArma));
				        format(string, sizeof(string), "%s Balas: [%d]",NombreArma, xbalas);
				        Message(playerid, COLOR_GRAD1, string);
					}
				}
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    return 1;
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /checkwep <PlayerID>");
        return 1;
    }
    zcmd(alimpiar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        CleanScreen();
        new string[48];
		format(string, sizeof(string), "Limpieza de chat por %s.", PlayerName(playerid));
		return GlobalMsg(COLOR_GREEN,string);
    }
    zcmd(bigears, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if (BigEar[playerid] == 0){
            BigEar[playerid] = 1;
			return Message(playerid, COLOR_GRAD2, "BigEars Mode On");
		}
		else{
			BigEar[playerid] = 0;
			return Message(playerid, COLOR_GRAD2, "BigEars Mode Off");
		}
    }
    zcmd(slap, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "u", params[0])){
			new Float:slx, Float:sly, Float:slz, string[52];
			if(params[0] != INVALID_PLAYER_ID){
			    GetPlayerPos(params[0], slx, sly, slz);
				SetPlayerPos(params[0], slx, sly, slz+5);
				PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
				format(string, sizeof(string), "%s golpeó a %s",PlayerName(playerid),PlayerName(params[0]));
				A_Info(string);
				return Message(params[0], COLOR_RED2, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /slap <PlayerID>");
        return 1;
    }
    zcmd(setskin, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "ui", params[0], params[1])){
		    if(params[0] != INVALID_PLAYER_ID){
			    if(params[1] > 299 || params[1] < 0) return Message(playerid, COLOR_GREY, "Skin ID incorrecto (0-299)");
			    new string[64];
			    PlayerInfo[params[0]][pChar] = params[1];
			    SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);
			    format(string, sizeof(string), "* %s cambió la skin de %s", PlayerName(playerid), PlayerName(params[0]));
				MessageEx(playerid, params[0], COLOR_WHITE, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /setskin <PlayerID> <SkinID>");
        return 1;
    }
    zcmd(vehslap, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "ui", params[0], params[1])){
		    if(params[0] != INVALID_PLAYER_ID){
			    new Float:slx, Float:sly, Float:slz, string[64];
			    GetVehiclePos(GetPlayerVehicleID(params[0]), slx, sly, slz);
				SetVehiclePos(GetPlayerVehicleID(params[0]), slx, sly, slz+params[1]);
				PlayerPlaySound(params[0], 1130, slx, sly, slz+params[1]);
				format(string, sizeof(string), "%s golpeó el vehículo de %s", PlayerName(playerid), PlayerName(params[0])); A_Info(string);
				return Message(params[0], COLOR_RED2, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /vehslap <PlayerID> <Altitud>");
        return 1;
    }
    zcmd(gotomark, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		}
		else
		{
			SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		}
		return Message(playerid, COLOR_GRAD1, "¡Teleportado!");
    }
    zcmd(mark, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		return Message(playerid, COLOR_GRAD1, "¡Posición guardada!");
    }
    zcmd(getcar, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "i", params[0]))
		{
		    if(!VehicleSpawned[params[0]]) return Message(playerid, COLOR_GRAD2, "Vehículo no Spawneado.");
	        new Float:plocx,Float:plocy,Float:plocz;
			GetPlayerPos(playerid, plocx, plocy, plocz);
			return SetVehiclePos(params[0],plocx,plocy+4, plocz);
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /getcar <VehicleID>");
		return 1;
    }
    zcmd(traercarro, playerid, params[])
    {
        if(PlayerInfo[playerid][pDonateT] > 0){
			if(sscanf(params, "d", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /traercarro <Slot Premium(1-2-3)>");
			if(PlayerVehicleInfo[playerid][params[0]][pvModel] != 0)
			{
			    new Float:posx,Float:posy,Float:posz;
				GetPlayerPos(playerid, posx, posy, posz);
				return SetVehiclePos(PlayerVehicleInfo[playerid][params[0]][pvID],posx,posy+4,posz);
			} else Message(playerid, COLOR_GRAD2, "No tienes un vehículo en ese slot premium.");
        } else Message(playerid, COLOR_GRAD2, "No eres premium.");
        return 1;
    }
	zcmd(fixcar, playerid, params[]){
	    if(PlayerInfo[playerid][pDonateT] > 0){
	        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo.");
	        new idcar = GetPlayerVehicleID(playerid);
	        if(PlayerVehicleInfo[playerid][0][pvID] == idcar || PlayerVehicleInfo[playerid][1][pvID] == idcar || PlayerVehicleInfo[playerid][2][pvID] == idcar || PlayerVehicleInfo[playerid][3][pvID] == idcar)
	        {
	            SetVehicleHealth(idcar, 1000.0);
    			RepairVehicle(idcar);
    			VehicleDeath[idcar] = false;
    			Message(playerid, COLOR_GRAD2, "Vehículo fixeado.");
	        } else Message(playerid, COLOR_GRAD2, "Este vehículo no te pertenece, solo puedes arreglar autos que sean tuyos.");
	    } else Message(playerid, COLOR_GRAD2, "No eres premium.");
	    return 1;
	}
    zcmd(gotocar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "i", params[0])){
            if(!VehicleSpawned[params[0]]) return Message(playerid, COLOR_GRAD2, "Vehículo no Spawneado.");
	        new Float:cwx2,Float:cwy2,Float:cwz2;
			GetVehiclePos(params[0], cwx2, cwy2, cwz2);
			return SetPlayerPos(playerid, cwx2, cwy2, cwz2);
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /gotocar <VehicleID>");
		return 1;
    }
    zcmd(fixveh, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] >= 4)
        {
            if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
            if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
            SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
    		RepairVehicle(GetPlayerVehicleID(playerid));
    		VehicleDeath[GetPlayerVehicleID(playerid)] = false;
    		Message(playerid, COLOR_GRAD2, "¡Vehículo fixeado!");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
 	zcmd(explode, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "u", params[0])){
		    new string[64];
		    new Float:boomx, Float:boomy, Float:boomz;
			GetPlayerPos(params[0],boomx, boomy, boomz);
			CreateExplosion(boomx, boomy , boomz, 7, 10);
		    format(string, sizeof(string), "%s fue explotado por %s",PlayerName(params[0]),PlayerName(playerid)); A_Info(string);
			return Message(params[0], COLOR_RED2, string);
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /explode <ID>");
        return 1;
    }
    zcmd(mascara, playerid, params[]){
        new string[90];
        if(PlayerInfo[playerid][pMask] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes máscara!");
        if(Maskuse[playerid] == 0){
			Maskuse[playerid] = 1;
      		format(string, sizeof(string), "* %s se pone una máscara.", PlayerName(playerid));
      		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
        }
        else{
			Maskuse[playerid] = 0;
      		format(string, sizeof(string), "* %s se quita la máscara de su rostro.", PlayerName(playerid));
      		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
        }
        return 1;
    }
    zcmd(weather, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "i", params[0])){
		    new string[64];
		    SetWeather(params[0]);
		    DefaultWeather = params[0];
		    format(string, 64, "%s cambió el clima global a el ID %d", PlayerName(playerid),params[0]);
			A_Info(string);
			return 1;
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /weatherall <WeatherID>");
        return 1;
    }
    zcmd(tod, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "i", params[0])){
			new string[48];
		    SetWorldTime(params[0]);
		    format(string, 256, "%s cambió la hora a %d", PlayerName(playerid), params[0]);
			A_Info(string);
			return 1;
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /tod <Time> No usar este comando sin razón.");
        return 1;
    }
    zcmd(givegun, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "uii", params[0],params[1],params[2])){
		    if(params[1] < 1 || params[1] > 46) return Message(playerid, COLOR_GRAD2, "Error ID. (1-46)");
		    if(params[2] > 9999) return Message(playerid, COLOR_GRAD2, "Error Ammo. (Máx: 9999)");
		    new string[128];
		    SafeGivePlayerWeapon(params[0], params[1], params[2]);
			format(string, 128, "Administrador %s dió a %s Arma: %d Balas: %d", PlayerName(playerid), PlayerName(params[0]),params[1],params[2]);
			A_Info(string);
			return 1;
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /givegun <PlayerID> <WeaponID> <Ammo>");
        return 1;
    }
   	zcmd(jetpack, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(IsPlayerConnected(playerid))
        {
        	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
		 	SendClientMessage(playerid, 0x2471A3FF, "Jetpack Obtenido");
        }
		return 1;
    }
    zcmd(ah, playerid, params[]){
        if(Admin(1,playerid)){
		    Message(playerid, 0x00FF00FF, "-= Comandos Nivel 1 =-");
			Message(playerid, COLOR_GRAD2, "/check /setint /setvw /silenciar /kick /jail /checkwep /masked /advertir /checkw /darw");
			Message(playerid, COLOR_GRAD2, "/checkmoney /specplayer /specoff /congelar /descongelar /checkjail /checkafk /borrarad");
		}
		if(Admin(2,playerid)){
		    Message(playerid, 0x93FF93FF, "-= Comandos Nivel 2 =-");
			Message(playerid, COLOR_GRAD2, "/alimpiar /disarm /rtc /slap /setskin /rtcar /sethp /setarmor /bpinchar");
		}
		if(Admin(3,playerid)){
		    Message(playerid, 0xFFA579FF, "-= Comandos Nivel 3 =-");
			Message(playerid, COLOR_GRAD2, "/mark /gotomark /getcar /gotocar /qb /qbs /bigears /desveh /setvwcar");
		}
		if(Admin(4,playerid)){
		    Message(playerid, 0xFF8040FF, "-= Comandos Nivel 4 =-");
			Message(playerid, COLOR_GRAD2, "/vehslap /rac /ban /banduda /unbanduda /entercar /aengineon /aooc /quitardni /fixveh");
		}
		if(Admin(5,playerid)){
		    Message(playerid, 0xFFA579FF, "-= Comandos Nivel 5 =-");
			Message(playerid, COLOR_GRAD2, "/explode /fuelcars /givegun /healcar /getip /weather /tod /changeit /respawnall /btpinchar");
		}
		if(Admin(2012,playerid)){
			Message(playerid, 0xFF4A4AFF, "-= Comandos Nivel 2012 =-");
			Message(playerid, COLOR_GRAD2, "/setstat /asellcar /asellhouse /asellbizz /givemoney /setstuff /noduda /rcn");
			Message(playerid, COLOR_GRAD2, "/unban /unbanip /house /houseint /evento /bizz /money /liberar /makeleader");
		}
		if(Admin(2013,playerid)){
            Message(playerid, 0xFF4A4AFF, "-= Comandos Nivel 2013 =-");
            Message(playerid, COLOR_GRAD2, "/setadminlvl /darfacciones /advertencia /editadver /noac /setpayday /edit /mps /loteria");
        }
        if(Admin(2014,playerid)){
            Message(playerid, 0xFF4A4AFF, "-= Comandos Dueño - Técnico =-");
            Message(playerid, COLOR_GRAD2, "/editadmin /banoff /makevip /setname /cuentaoff /quitarpremium /quitarvip");
            Message(playerid, COLOR_GRAD2, "/houseentrance /houseexit /bizzname /forcepayday /destruir /dobleexp");
        }
        return 1;
    }
    zcmd(ban, playerid, params[]){
		if(PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GREY, "{DC092F}No Autorizado.");
		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(DetectarSPAM(params[1])) return AccionSPAM(playerid, params[1]);
        if(!sscanf(params, "us[64]", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
                new string[186];
                if(PlayerInfo[params[0]][pAdminCP] == 2014){
          			format(string, sizeof(string), "ATENCIÓN: %s intentó banear a %s", PlayerName(playerid), PlayerName(params[0]));
	            	A_Info(string);
		            return 1;
		        }
		        else{
          			new year, month,day;    getdate(year, month, day);
					format(string, sizeof(string), "%s ha baneado a %s, razón: %s (%d/%d/%d)", PlayerName(playerid), PlayerName(params[0]), params[1],day,month,year);
					Message(params[0], COLOR_RED2, string);
					A_Info(string);
					BanLog(string);
					PlayerInfo[params[0]][pLocked] = 8;
					Message(params[0], COLOR_WHITE, "-----> Atención <------");
					Message(params[0], COLOR_GRAD2, "Fuiste baneado, toma una ScreenShot ahora mismo oprimiendo F8 asi podras apelar tu desban via foro,");
					Message(params[0], COLOR_GRAD2, "o contacta con un administrador via msn. Si eres culpable, aceptalo y escarmienta.");
					Ban(params[0]);
		        }
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /banael <PlayerID> <Razón>");
        return 1;
    }
   	zcmd(banoff, playerid, params[]){
   	    if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
   	    if(!sscanf(params, "s[32]", params[0])){
            if(strfind(params[0], "_" , true) != -1){
		   		new string3[64], string[128];
    			format(string3,sizeof(string3),"users/%s.ini",params[0]);
    			if(INI_Exist(string3)){
    				new INI:ini = INI_Open(string3);
					INI_WriteInt(ini, "Locked", 8);
  					INI_Close(ini);
      				format(string, sizeof(string), "%s ha baneado a %s (Off).",PlayerName(playerid), params[0]);
    				A_Info(string);
   				} else Message(playerid, COLOR_GRAD2, "¡Esa cuenta no existe!");
			} else Message(playerid, COLOR_GRAD2, "Ejemplo de Uso: /banoff Juan_Perez")
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /banoff <Nombre_Jugador>");
    	return 1;
   	}
    zcmd(banduda, playerid, params[]){
		if (PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GREY, "{DC092F}No Autorizado.");
		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "us[64]", params[0], params[1])){
           if(IsPlayerConnected(params[0])){
                new string[128];
                format(string, sizeof(string), "%s ha baneado del sistema de ayuda a %s, razón: %s", PlayerName(playerid), PlayerName(params[0]), params[1]);
                A_Info(string);
                PlayerInfo[params[0]][pBanDuda] = 1;
                Message(params[0], COLOR_WHITE, "  Atención<------");
                Message(params[0], COLOR_GRAD2, "*Usted ha sido bloqueado de usar el sistema de ayuda - Contacte con un Administrador.");
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /banduda <PlayerID> <Razón>");
        return 1;
    }
    zcmd(unbanduda, playerid, params[]){
		if (PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GREY, "{DC092F}No Autorizado.");
		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "u", params[0])){
            if(IsPlayerConnected(params[0])){
                new string[128];
		        format(string, sizeof(string), "%s ha desbaneado del sistema de ayuda a %s", PlayerName(playerid), PlayerName(params[0]));
				A_Info(string);
                PlayerInfo[params[0]][pBanDuda] = 0;
				Message(params[0], -1, "{00DC84}------>{FFFFFF}Atención{00DC84}<------");
				Message(params[0], COLOR_GRAD2, "*Usted ha sido desbloqueado de usar el sistema de ayuda.");
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /unbanduda <PlayerID>");
        return 1;
    }
    zcmd(advertir, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params,"us[128]", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
                if(GetPVarType(params[0], "TutTime") != 0) return Message(playerid, COLOR_GRAD2, "No puedes advertir a un usuario que está en el tutorial.");
                new string[128];
                PlayerInfo[params[0]][pAdvertencias] += 1;
				format(string, sizeof(string), "%s ha dado una advertencia a %s, razón: %s", PlayerName(playerid),PlayerName(params[0]),params[1]);
                Message(params[0], COLOR_RED2, string);
				A_Info(string);
		        BanLog(string);
				if(PlayerInfo[params[0]][pAdvertencias] >= 3)
				{
				    PlayerInfo[params[0]][pLocked] = 8;
				    format(string, sizeof(string), "%s fue baneado automaticamente por tener mas de 2 advertencias.", PlayerName(params[0]));
				    A_Info(string);
					Message(params[0], COLOR_WHITE, "-----> Atención <------");
					Message(params[0], COLOR_GRAD2, "Fuiste baneado automaticamente del servidor por acumular mas de 2 advertencias, toma una ScreenShot");
					Message(params[0], COLOR_GRAD2, "ahora mismo oprimiendo F8 asi podras apelar tu desban via foro o contacta con un administrador via msn.");
					Ban(params[0]);
				}
				else
				{
					Message(params[0], COLOR_WHITE, "* Has recibido una advertencia y has sido kikeado, cuando llegues a 3 advertencias seras baneado.");
					KickTimer(params[0]);
				}
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /advertir <PlayerID> <Razon>");
		return 1;
    }
    zcmd(advertencia, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(!sscanf(params,"us[164]", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
                new string[164];
                if(PlayerInfo[params[0]][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡Ese jugador no pertenece al staff!");
                PlayerInfo[params[0]][pAdminAdver] += 1;
				format(string, sizeof(string), "%s ha dado una advertencia administrativa a %s, razón: %s", PlayerName(playerid),PlayerName(params[0]),params[1]);
				A_Info(string);
				if(PlayerInfo[params[0]][pAdminAdver] >= 3)
				{
				    PlayerInfo[params[0]][pAdminCP] = 0;
				    format(string, sizeof(string), "%s fue expulsado automaticamente del staff por acumular 3 advertencias", PlayerName(params[0]));
                    Message(params[0], COLOR_RED2, string);
					A_Info(string);
					PlayerInfo[params[0]][pAdminAdver] = 0;
				}
				else{
				    format(string, sizeof(string), "* Has recibido una advertencia administrativa por parte de %s", PlayerName(playerid));
				    Message(params[0], COLOR_WHITE, string);
				}
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /advertencia <AdminID> <Razon>");
		return 1;
    }
    zcmd(checkadver, playerid, params[0])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "u",params[0])){
			if(IsPlayerConnected(params[0])){
				new string[128];
			    if(PlayerInfo[params[0]][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡Ese usuario no pertenece al staff!");
				format(string, sizeof(string), "Administrador: %s   -   Advertencias: %d", PlayerName(params[0]), PlayerInfo[params[0]][pAdminAdver]);
				Message(playerid, COLOR_GRAD4, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /checkadver <PlayerID>");
        return 1;
    }
    zcmd(editadver, playerid, params[0])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(!sscanf(params, "ud", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];
                PlayerInfo[params[0]][pAdminAdver] = params[1];
                format(string, sizeof(string), "%s ha establecido en %d las advertencias administrativas de %s", PlayerName(playerid),params[1],PlayerName(params[0]));
				A_Info(string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /editadver <PlayerID> <Advertencias>");
        return 1;
    }
    zcmd(noduda, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if (!nod){
			nod = 1;
			GlobalMsg(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -");
			GlobalMsg(COLOR_RED,"  *** Canal de Dudas Desactivado ***  ");
			return GlobalMsg(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -");
		}
		else{
			nod = 0;
			GlobalMsg(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -");
			GlobalMsg(COLOR_GREEN,"  *** Canal de Dudas Activado (/duda) ***   ");
			GlobalMsg(COLOR_NEWS,"  ... No Flood & No Spam ... ");
			return GlobalMsg(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -");
		}
    }
    zcmd(admins, playerid, params[]){
    new string[68],admtext[24];
        Message(playerid, COLOR_GREEN, "| Staff |");
		for(new i = 0; i < MAX_PLAYERS; i++){
		    if(IsPlayerConnected(i)){
		        if(PlayerInfo[i][pAdminCP] >= 1 && PlayerInfo[i][pAdminCP] < 2014){
      				switch(PlayerInfo[i][pAdminCP]){
      				    case 1:		admtext = "Ayudante";
      				    case 2:     admtext = "Moderador";
      				    case 3:     admtext = "Admin Junior";
      				    case 4:     admtext = "Administrador";
      				    case 5:     admtext = "Admin Superior";
      				    case 2012:  admtext = "Administrador G.";
      				    case 2013:  admtext = "Administrador D.";
  				    }
  				    if(AdminDuty[i] == 0)
  				    {
						format(string, sizeof(string),"  %s - %s [{FFFFFF}OFF{C0C0C0}]", admtext, PlayerName(i));
						Message(playerid, 0xC0C0C0FF, string);
					}
					else {
					    format(string, sizeof(string),"  %s - %s [{FFFFFF}ON{C0C0C0}]", admtext, PlayerName(i));
					    Message(playerid, 0xC0C0C0FF, string);
	    			}
				}
			}
		}
    	return 1;
    }
    zcmd(estaff, playerid, params[]){
		if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "No autorizado, usa /admins.");
		new string[60],admtext[24];
        Message(playerid, COLOR_GREEN, "| Staff |");
		for(new i = 0; i < MAX_PLAYERS; i++){
		    if(IsPlayerConnected(i)){
		        if(PlayerInfo[i][pAdminCP] >= 1 && PlayerInfo[i][pAdminCP] < 2015){
      				switch(PlayerInfo[i][pAdminCP]){
      				    case 1:		admtext = "Ayudante";
      				    case 2:     admtext = "Moderador";
      				    case 3:     admtext = "Admin Junior";
      				    case 4:     admtext = "Administrador";
      				    case 5:     admtext = "Admin Superior";
      				    case 2012:  admtext = "Administrador G.";
      				    case 2013:  admtext = "Administrador D.";
      				    case 2014:  admtext = "Dueño";
  				    }
					format(string, sizeof(string),"  %s - %s", admtext, PlayerName(i));
					Message(playerid, 0xC0C0C0FF, string);
				}
			}
		}
    	return 1;
    }
    zcmd(efs, playerid, params[]){
        new string[40];
        Message(playerid, COLOR_GREEN, "| Encargado de Facciones |");
		for(new i; i < MAX_PLAYERS; i++){
		    if(IsPlayerConnected(i)){
		        if(PlayerInfo[i][pFacciones] == 1){
		            format(string, sizeof(string), "  %s - ID: %d", PlayerName(i), i);
		            Message(playerid, 0xC0C0C0FF, string);
          		}
   			}
		}
    	return 1;
    }
    zcmd(usersvip, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        new string[30];
		Message(playerid, COLOR_GREEN, "| Users Premium |");
		for(new i = 0; i < MAX_PLAYERS; i++){
			if(IsPlayerConnected(i)){
			    if(PlayerInfo[i][pDonateT] > 0){
			        format(string, sizeof(string), " %s", PlayerName(i));
			        Message(playerid, 0xC0C0C0FF, string);
       			}
			}
        }
		return 1;
	}
    zcmd(noac, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        new string[80];
        if (!noac){
			noac = 1;
			format(string, sizeof(string), "[ADMIN CHAT BLOQUEADO Por %s] ",PlayerName(playerid));
			A_Info(string);
			return 1;
		}
		else{
			noac = 0;
			format(string, sizeof(string), "[ADMIN CHAT DESBLOQUEADO Por %s]",PlayerName(playerid));
			A_Info(string);
			return 1;
		}
    }
    zcmd(aduty, playerid, params[])
    {
		if(PlayerInfo[playerid][pAdminCP] > 0)
		{
		    new string[120];
		    if(AdminDuty[playerid] == 0)
		    {
		        format(string, sizeof string, "{DC092F}M:RP: {FFFFFF}El administrador {2471A3}%s {FFFFFF}se ha puesto ADMIN DUTY.", PlayerName(playerid));
		        ABroadCast(-1, string, 1);
		        AdminDuty[playerid] = 1;
		        format(string, sizeof string, "* %s se ha puesto ADMIN DUTY.", PlayerName(playerid));
				Log("Logs/AdminDuty.log", string);
                return 1;
          	}
          	else if(AdminDuty[playerid] == 1)
          	{
          	    format(string, sizeof string, "{DC092F}M:RP: {FFFFFF}El administrador {2471A3}%s {FFFFFF}se ha puesto ADMIN OFFDUTY.", PlayerName(playerid));
		        ABroadCast(-1, string, 1);
          	    SetPlayerColor(playerid, COLOR_WHITE);
				AdminDuty[playerid] = 0;
				format(string, sizeof string, "* %s se ha puesto ADMIN OFFDUTY.", PlayerName(playerid));
				Log("Logs/AdminDuty.log", string);
          	    return 1;
      	    }
 	    } else Message(playerid, COLOR_GRAD2, "No eres administrador.");
        return 1;
    }
    zcmd(owner, playerid, params[]){
	    new nick[24];
	    GetPlayerName(playerid, nick, 24);
        if(!strcmp(nick, "Mike_West", true) || !strcmp(nick, "Jhon_West", true))
		{
		    if(AdminDuty[playerid] == 0)
		    {
				Message(playerid, COLOR_GRAD2, "Te has puesto ADMIN DUTY.");
		        AdminDuty[playerid] = 1;
                return 1;
          	}
          	else if(AdminDuty[playerid] == 1)
          	{
          	    Message(playerid, COLOR_GRAD2, "Te has puesto ADMIN OFFDUTY.");
				AdminDuty[playerid] = 0;
          	    return 1;
      	    }
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
    zcmd(a, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if((noac) && PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid,COLOR_GRAD2,"¡Este canal está desactivado!");
        if(!sscanf(params, "s[128]", params[0])){
            new string[128], arank[64];
            switch(PlayerInfo[playerid][pAdminCP])
            {
				case 1:     arank = "{00FFFF}Soporte";
				case 2:     arank = "{CB3234}Moderador";
				case 3:     arank = "{572364}Administrador";
				case 4:     arank = "{8C004B}Admin Lider";
				case 5:     arank = "{FFCC00}Admin Técnico";
				case 2012:	arank = "{9C9C9C}Admin Ejecutivo";
                case 2013: 	arank = "{9C9C9C}Admin Dueño";
                case 2014: 	arank = "{2471A3}Fundador";
                default: 	arank = "???";
            }
            format(string, sizeof(string), "%s %s:{FFFFFF} %s", arank, PlayerName(playerid), params[0]);
            ABroadCast(0x00A5F4FF, string,1);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /a <Texto>");
        return 1;
    }
    zcmd(update, playerid, params[])
    {
        if (PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        SaveAccounts();		SaveAllGuns();		SaveStuff();
		UpdateHouses();		UpdateBizz();       SaveAutos();
		Message(playerid, COLOR_GREEN, "* Cuentas actualizadas.");
        return 1;
    }
    zcmd(dar, playerid, params[])
    {
        new string[128], item[32];
        if(!sscanf(params, "s[32]u", item, params[1]))
        {
            if(!IsPlayerConnected(params[1]))               return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(strcmp(item,"arma",true) == 0)
			{
			    new gunID = GetPlayerWeapon(playerid), gunAmmo = GetPlayerAmmo(playerid);
            	if(gunID != 0 && gunAmmo != 0)
			    {
			        RemovePlayerWeapon(playerid, gunID);
       				SafeGivePlayerWeapon(params[1], gunID, gunAmmo);
			        format(string, sizeof(string), "* %s le da un arma a %s.", PlayerName(playerid), PlayerName(params[1]));
			        ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			        return 1;
			    } else Message(playerid, COLOR_GRAD2, "¡No tienes arma a dar!");
			}
			else if(strcmp(item,"chaleco",true) == 0)
			{
                new Float:xC,Float:xD;
   				GetPlayerArmour(playerid, xC);
		    	GetPlayerArmour(params[1], xD);
				if(xC > 0)
    			{
       				if(xC > xD)
			        {
           				format(string, sizeof(string), "* %s le da su chaleco antibalas a %s", PlayerName(playerid), PlayerName(params[1]));
		        		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			        	SetPlayerArmour(playerid, 0);
			        	SetPlayerArmour(params[1], xC);
			        } else Message(playerid, COLOR_GRAD2, "¡El jugador tiene una cantidad de chaleco superior al tuyo!");
				} else Message(playerid, COLOR_GRAD2, "No tienes chaleco para dar.");
			} else Message(playerid, COLOR_GRAD2, "Item incorrecto.");
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /dar <Item> <PlayerID>");
            Message(playerid, COLOR_GRAD2, "Items: arma, chaleco");
        }
        return 1;
    }
    zcmd(pasar, playerid, params[])
    {
        new string[128], item[32];
        if(!sscanf(params, "s[32]ui", item, params[1],params[2]))
        {
            if(!IsPlayerConnected(params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(strcmp(item,"materiales",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pMats]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de materiales!");
                format(string, sizeof(string), "* %s le da materiales a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
       			PlayerInfo[params[1]][pMats] += params[2];
       			PlayerInfo[playerid][pMats] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d materiales. Ahora tienes %d", params[2], PlayerInfo[params[1]][pMats]);
	        	Message(params[1], COLOR_YELLOW, string);
	        	return 1;
            }
            else if(strcmp(item,"speed",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pSpeed]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de speed!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                PlayerInfo[params[1]][pSpeed] += params[2];
       			PlayerInfo[playerid][pSpeed] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d de speed. Ahora tienes %d", params[2], PlayerInfo[params[1]][pSpeed]);
	        	Message(params[1], COLOR_YELLOW, string);
	        	return 1;
            }
            else if(strcmp(item,"ectasy",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pEctasy]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ectasy!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                PlayerInfo[params[1]][pEctasy] += params[2];
       			PlayerInfo[playerid][pEctasy] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d de ectasy. Ahora tienes %d", params[2], PlayerInfo[params[1]][pEctasy]);
	        	Message(params[1], COLOR_YELLOW, string);
	        	return 1;
            }
            else if(strcmp(item,"ritalin",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pRitalin]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ritalin!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                PlayerInfo[params[1]][pRitalin] += params[2];
       			PlayerInfo[playerid][pRitalin] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d de ritalin. Ahora tienes %d", params[2], PlayerInfo[params[1]][pRitalin]);
	        	Message(params[1], COLOR_YELLOW, string);
	        	return 1;
            }
            else if(strcmp(item,"heroina",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pHeroina]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de heroina!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                PlayerInfo[params[1]][pHeroina] += params[2];
       			PlayerInfo[playerid][pHeroina] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d de heroina. Ahora tienes %d", params[2], PlayerInfo[params[1]][pHeroina]);
	        	Message(params[1], COLOR_YELLOW, string);
	        	return 1;
            }
            else if(strcmp(item,"marihuana",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pMarihuana]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de marihuana!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                PlayerInfo[params[1]][pMarihuana] += params[2];
       			PlayerInfo[playerid][pMarihuana] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d de marihuana. Ahora tienes %d", params[2], PlayerInfo[params[1]][pMarihuana]);
	        	Message(params[1], COLOR_YELLOW, string);
	        	return 1;
            }
        } else {
            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /pasar <Item> <PlayerID> <Cantidad>");
            Message(playerid, COLOR_GRAD2, "Items: materiales, drogas, speed, ectasy, ritalin, heroina, marihuana");
        }
        return 1;
    }
    zcmd(setadminlvl, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(!sscanf(params, "ui", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];
    			PlayerInfo[params[0]][pAdminCP] = params[1];
			    if(params[1] == 0) { PlayerInfo[params[0]][pAdminAdver] = 0; PlayerInfo[playerid][pFacciones] = 0; }
		    	format(string, sizeof(string), "{40D3FF}%s lo ha asignado administrador nivel %d", PlayerName(playerid), params[1]);
			    Message(params[0], -1, string);
			    format(string, sizeof(string), "%s ha asignado administrador nivel %d a %s", PlayerName(playerid), params[1], PlayerName(params[0]));
			    A_Info(string);
            } else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /setadminlvl <ID> <Nivel>");
        return 1;
    }
    zcmd(darfacciones, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(!sscanf(params, "ui", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
            	new string[128];
                switch(params[1])
                {
                    case 0:
                    {
            			PlayerInfo[params[0]][pFacciones] = 0;
            			format(string, sizeof(string), "{40D3FF}%s le ha quitado el puesto de Encargado de Facciones", PlayerName(playerid));
    					Message(params[0], -1, string);
		    			format(string, sizeof(string), "%s le ha quitado el puesto de Encargado de Facciones a %s", PlayerName(playerid), PlayerName(params[0]));
		    			A_Info(string);
		    			return 1;
	    			}
	    			case 1:
	    			{
	    			    PlayerInfo[params[0]][pFacciones] = 1;
            			format(string, sizeof(string), "{40D3FF}%s lo ha asignado Encargado de Facciones", PlayerName(playerid));
    					Message(params[0], -1, string);
		    			format(string, sizeof(string), "%s ha asignado Encargado de Facciones a %s", PlayerName(playerid), PlayerName(params[0]));
		    			A_Info(string);
		    			return 1;
	    			}
	    			default: Message(playerid, COLOR_GRAD2, "¡El nivel debe ser entre 0 y 1!");
 				}
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
    	} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /darfacciones <ID> <Nivel>");
    	return 1;
    }
    zcmd(editadmin, playerid, params[]){
		new string3[64], string[128], name[32];
   	    if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
   	    if(!sscanf(params, "s[32]i", name, params[1])){
			format(string3,sizeof(string3),"users/%s.ini",name);
			if(INI_Exist(string3)){
				new	INI:ini = INI_Open(string3);
				INI_WriteInt(ini, "AdminCP", params[1]);
				INI_Close(ini);
				format(string, sizeof(string), "%s ha puesto en %d el nivel admin de %s",PlayerName(playerid), params[1], name);
				A_Info(string);
			} else Message(playerid, COLOR_GRAD2, "¡Esa cuenta no existe!");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /editadmin <Nombre_Jugador> <Nivel>");
    	return 1;
   	}
    zcmd(adminrcon, playerid, params[]){
		if(IsPlayerAdmin(playerid)){
       		if(!sscanf(params, "ui", params[0], params[1])){
      			if(IsPlayerConnected(params[0])){
     				new string[128];
					PlayerInfo[params[0]][pAdminCP] = params[1];
					format(string, sizeof(string), "{40D3FF}%s lo ha asignado administrador nivel %d", PlayerName(playerid), params[1]);
					Message(params[0], -1, string);
 					format(string, sizeof(string), "Has asignado administrador nivel %d a %s", params[1], PlayerName(params[0]));
   					Message(playerid, 0xFF9562FF, string);
  				} else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
			} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /adminrcon <ID> <Nivel>");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        return 1;
    }
    zcmd(makevip, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GREY, "{DC092F}No Autorizado.");
        if(!sscanf(params, "ui", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
           		new string[128];
             	PlayerInfo[params[0]][pDonateT] = params[1];
              	format(string, sizeof(string), "{40D3FF}Estimado %s, su sistema premium está en {FFFFFF}[%d]", PlayerName(params[0]), params[1]);
               	Message(params[0], -1, string);
               	format(string, sizeof(string), "%s puso sistema premium a %s a [%d] ", PlayerName(playerid), PlayerName(params[0]), params[1]);
                A_Info(string);
                UpdatePlayerStat(params[0]);
            } else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /darvip <ID> <0 - 1> [0 = No - 1 = Bronce - 2 = Plata - 3 = Oro - 4 = Definitivo]");
        return 1;
    }
    zcmd(color, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
       	ShowPlayerDialog(playerid, COLOR_ADM, DIALOG_STYLE_LIST, " {00ABFF}Seleccione su color", " {2471A3}>{FFFFFF} Fundador\n {9C9C9C}>{FFFFFF} Admin Dueño\n {9C9C9C}>{FFFFFF} Admin Ejecutivo\n {FFCC00}>{FFFFFF} Admin Técnico\n {8C004B}>{FFFFFF} Admin Lider\n {572364}>{FFFFFF} Administrador\n {CB3234}>{FFFFFF} Moderador\n {00FFFF}>{FFFFFF} Soporte\n {FFFFFF}> Blanco", "Ok", "Salir");
		return 1;
    }
    zcmd(tick, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(DetectarSPAM(params[1])) return AccionSPAM(playerid, params[1]);
        if(!sscanf(params, "us[180]", params[0], params[1])){
            if(params[0] != INVALID_PLAYER_ID){
                new string[180];
                if(PlayerInfo[params[0]][pAdminCP] == 2014)
        		{
          			format(string, sizeof(string), "ATENCIÓN: %s intentó kickear a %s", PlayerName(playerid),PlayerName(params[0]));
	            	A_Info(string);
	            	return 1;
		        }
		        format(string, sizeof(string), "%s ha kickeado a %s, razón: %s", PlayerName(playerid),PlayerName(params[0]),params[1]);
		        A_Info(string);
				Message(params[0], COLOR_RED2, string);
				KickTimer(params[0]);
				return 1;
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /tick <PlayerID> <Razón>");
        return 1;
    }
    zcmd(tickafk, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "u", params[0])){
            if(params[0] != INVALID_PLAYER_ID){
                new string[100];
		        format(string, sizeof(string), "%s ha kickeado a %s, razón: AFK sin comando (/afk)", PlayerName(playerid),PlayerName(params[0]));
		        A_Info(string);
				Message(params[0], COLOR_RED2, string);
				KickTimer(params[0]);
				return 1;
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /tickafk <PlayerID>");
        return 1;
    }
  	zcmd(tickname, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(GetPVarInt(playerid, "TickNameUsed") == 1) return Message(playerid, COLOR_GRAD2, "Debes esperar unos segundos para volver a usar este comando.");
        if(!sscanf(params,"u", params[0])){
            if(params[0] != INVALID_PLAYER_ID){
                if(PlayerInfo[params[0]][pConnectTime] < 3)
                {
	                new string[100], Name[24];
    	            if(gPlayerLogged[params[0]] == 0) return Message(playerid, COLOR_GRAD2, "No puedes kickear a un jugador que no esté logueado.");
    	            GetPlayerName(params[0], Name, 24)
    	            SetPVarString(playerid, "DeleteName", Name);
					format(string, sizeof(string), "%s ha kickeado a %s, razón: Mal Nombre (Nombre_Apellido)", PlayerName(playerid),PlayerName(params[0]));
            	    A_Info(string);
                	Message(params[0], COLOR_RED2, string);
                	Message(params[0], COLOR_WHITE, "-----> Atención <------");
					Message(params[0], COLOR_GRAD2, "Has sido kickeado del servidor por utilizar un nombre incorrecto(no rolero), por favor vuelve a entrar");
					Message(params[0], COLOR_GRAD2, "siguiendo el formato Nombre_Apellido, con ambas iniciales en mayusculas, Ejemplo: Angel_Ramirez");
					KickTimer(params[0]);
					SetPVarInt(playerid, "TickNameUsed", 1);
					SetTimerEx("DeleteBadName", 2500, false, "i", playerid);
					return 1;
				} else Message(playerid, COLOR_GRAD2, "El jugador no puede ser kickeado debido a que ya tiene minimo 3 horas en el servidor.");
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /tickname <PlayerID>");
		return 1;
  	}
	zcmd(disarm, playerid, params[])
	{
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /disarm <PlayerID>");
        if(params[0] != INVALID_PLAYER_ID)
        {
            new string[120];
            format(string, sizeof(string), "%s desarmó a %s", PlayerName(playerid), PlayerName(params[0]));
            A_Info(string);
            return SafeResetPlayerWeapons(params[0]);
		} else Message(playerid,  COLOR_GRAD2, "¡ID Inválida!");
		return 1;
	}
    zcmd(punsh, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(DetectarSPAM(params[2])) return AccionSPAM(playerid, params[2]);
        if(!sscanf(params, "uis[128]", params[0], params[1], params[2]))
        {
            if(params[0] != INVALID_PLAYER_ID)
            {
                new string[200];
		        PlayerInfo[params[0]][pJailed] = 1;
				PlayerInfo[params[0]][pJailTime] = params[1]*60;
				SafeResetPlayerWeapons(params[0]);
				SetPosEx(params[0], 2767.8936,445.4332,3.7747,163.2555,0,0);
				format(string, sizeof(string), "%s encarceló a %s por %d minuto(s), razón: %s", PlayerName(playerid), PlayerName(params[0]), params[1], params[2]);
				Message(params[0], COLOR_RED2, string);
				A_Info(string);
				return 1;
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /punsh <PlayerID> <Minutos> <Razón>");
        return 1;
    }
    zcmd(ls, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1529.6,-1691.2,13.3);
		}
		else{
			SetPosEx(playerid, 1529.6,-1691.2,13.3, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(sf, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), -1422.0162,-302.0881,14.0000);
		}
		else{
			SetPosEx(playerid, -1417.0,-295.8,14.1, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(lv, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1694.6566,1453.4523,10.7632);
		}
		else{
			SetPosEx(playerid, 1694.6566,1453.4523,10.7632, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(mandarls, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /mandarls <PlayerID>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        new string[62];
        SetPosEx(params[0], 1529.6,-1691.2,13.3, 0, 0 ,0);
        Message(playerid, COLOR_GRAD4, "¡Jugador teleportado!");
        format(string, sizeof string, "* Admin %s te ha teleportado a LS.", PlayerName(playerid));
        Message(params[0], COLOR_GRAD2, string);
	    return 1;
	}
    zcmd(entercar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "i", params[0])){
            PutPlayerInVehicle(playerid, params[0], 1);
			return Message(playerid, COLOR_GRAD1, "¡Teleportado!");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /entercar <VehicleID>");
        return 1;
    }
    zcmd(fuelcars, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        GlobalMsg(COLOR_GREEN, "La gasolina de los vehículos fue llenada.");
  		for(new c=0;c<MAX_VEHICLES;c++){
  		    if(VehicleSpawned[c]){
	  			if(!OwnableVehicle[c]) Gas[c] = GasMax;
				else{
					if(PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvGas] == 0) Gas[c] = 100;
    				else if(PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvGas] == 1) Gas[c] = 120;
		    		else if(PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvGas] == 2) Gas[c] = 160;
			    	else if(PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvGas] == 3) Gas[c] = 230;
   				}
			}
		}
        return 1;
    }
    zcmd(rcn, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(DetectarSPAM(params[1])) return AccionSPAM(playerid, params[1]);
        if(!sscanf(params, "is[64]", params[0], params[1])){
            if(params[0] == 2) return Message(playerid, COLOR_GRAD2, "¡No puedes elegir el #2!");
            new string[64];
            format(string, sizeof(string), "%s",params[1]);
			for(new i = 0; i < MAX_PLAYERS; i++){
				if(IsPlayerConnected(i))
				{
					GameTextForPlayer(i, string, 5000, params[0]);
				}
			}
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /rcn <Tipo> <Texto>");
        return 1;
    }
	// zcmd:dialogs ============================================================================================================================
	zcmd(google, playerid, params[]){
		if(PlayerToPoint(20.0,playerid,1091.2749,-1380.7460,13.8054)){
		 	return ShowPlayerDialog(playerid, GOOGLE, DIALOG_STYLE_INPUT, "Google Chrome", "{FFFFEE}www.{0077AA}G{FF2200}o{EE9900}o{0077AA}g{338800}l{FF2200}e{FFFFEE}.com - Buscar online","Buscar","Salir");
		}
		return 1;
	}
	// zcmd:taxi
    zcmd(tarifa, playerid, params[]){
        if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /tarifa [$] (Establece tu tarifa)");
    	if(PlayerInfo[playerid][pJob] == 9){
		        if(params[0] < 1 || params[0] > 20) return Message(playerid, COLOR_WHITE, "Valor entre 1-20");
		        TarifaTaxi[playerid] = params[0];
       			new string[80];
				format(string, sizeof(string), "* Has establecido tu tarifa de taxi en {FFFF00}%d$", params[0]);
				Message(playerid, COLOR_WHITE, string);
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        return 1;
    }
	// zcmd:global ============================================================================================================================
	zcmd(hora, playerid, params[]){
        new mtext[20], year, month,day, string[128];
		getdate(year, month, day);
		switch(month){
		    case 1:     mtext = "Enero";
		    case 2:     mtext = "Febrero";
		    case 3:     mtext = "Marzo";
		    case 4:     mtext = "Abril";
		    case 5:     mtext = "Mayo";
		    case 6:     mtext = "Junio";
		    case 7:     mtext = "Julio";
		    case 8:     mtext = "Agosto";
			case 9:     mtext = "Septiembre";
			case 10:    mtext = "Octubre";
			case 11:    mtext = "Noviembre";
			case 12:    mtext = "Diciembre";
		}
  		new hour,minuite,second;
		gettime(hour,minuite,second);
		hour = hour - 7;
		FixHour(hour);
		hour = shifthour;
		if (minuite < 10)
		{
			if (PlayerInfo[playerid][pJailTime] > 0)
			{
				format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tiempo de Carcel: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
			}
			else
			{
				format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
			}
		}
		else
		{
			if (PlayerInfo[playerid][pJailTime] > 0)
			{
				format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Tiempo de Carcel: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
			}
			else
			{
				format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
			}
		}
		GameTextForPlayer(playerid, string, 5000, 1);
		format(string, sizeof(string), "* %s se fija la hora en su reloj de muñeca.", PlayerName(playerid));
		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		return ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
    }
    zcmd(apgarage, playerid, params[])
    {
        CheckForOpenDoor(playerid);
        return 1;
    }
    zcmd(cpgarage, playerid, params[])
    {
        CheckForCloseDoor(playerid);
        return 1;
    }
	zcmd(apvip, playerid, params[])
    {
        if(PlayerInfo[playerid][pDonateT] > 0)
        {
            new nick[24];	GetPlayerName(playerid,nick,24);
			if(!strcmp(nick, "Mike_West", true))
			{
			    if (PlayerToPoint(20, playerid, 1002.9959,-643.5419,121.5515)) {
	    		    MoveDynamicObject(pablo, 1003.97, -643.57, 118.56, 2.0, -1000.0, -1000.0, -1000.0);
	    		    return 1;
	    		}
			}
			else if(!strcmp(nick, "Mike_West", true))
			{
			    if(PlayerToPoint(20, playerid, 263.6182,-1332.6473,53.2390)){
			        MoveDynamicObject(brian, 264.36, -1333.31, 50.38, 2.0, -1000.0, -1000.0, -1000.0);
			        return 1;
       			}
			}
			else if(!strcmp(nick, "Mike_West", true))
			{
			    if(PlayerToPoint(20, playerid, 321.5790,-1188.6155,76.3494)){
	        		MoveDynamicObject(jennifer, 321.38, -1188.19, 72.29, 2.0, -1000.0, -1000.0, -1000.0);
	        		return 1;
				}
			}
			else if(!strcmp(nick, "Mike_West", true))
			{
			    if(PlayerToPoint(20, playerid, 261.00, -1229.75, 72.75)){
			        MoveDynamicObject(matias, 261.00, -1229.75, 69.41, 2.0, -1000.0, -1000.0, -1000.0);
			        return 1;
       			}
			}
			else if(!strcmp(nick, "Mike_West", true))
			{
			    if(PlayerToPoint(20, playerid, 211.47, -1350.35, 49.18)){
			        MoveDynamicObject(distasio, 211.25, -1350.55, 46.77, 2.0, -1000.0, -1000.0, -1000.0);
			        return 1;
       			}
			}
			else if(!strcmp(nick, "Mike_West", true))
			{
			    if (PlayerToPoint(30, playerid,787.20361328,-1152.45361328,25.40438461))
	    		{
         			MoveDynamicObject(torres,787.20312500,-1152.45312500,29.85149193, 2.0, -1000.0, -1000.0, -1000.0);
         			return 1;
	    		}
	    		else if (PlayerToPoint(30, playerid,662.1038,-1228.5162,15.5905))
	    		{
	        		MoveDynamicObject(torres2,658.6991,-1225.7975,1.7825, 2.0, -1000.0, -1000.0, -1000.0);
	        		return 1;
	    		}
			    else if (PlayerToPoint(30, playerid,665.0096,-1304.3438,13.4609))
	    		{
	        		MoveDynamicObject(torres3,665.3931,-1308.6857,20.6859, 2.0, -1000.0, -1000.0, -1000.0);
	        		return 1;
	    		}
	    		else if (PlayerToPoint(20, playerid,1246.0033,-767.3727,91.1473)){
			        MoveDynamicObject(jeangate,1256.2033,-767.3727,91.1473, 2.2, -1000.0, -1000.0, -1000.0);
			        return 1;
	    		}
			}
		} else Message(playerid, COLOR_GRAD2, "¡No eres premium!");
		return 1;
	}
	zcmd(cpvip, playerid, params[])
	{
	    if(PlayerInfo[playerid][pDonateT] > 0)
        {
            new nick[24];	GetPlayerName(playerid,nick,24);
			if(!strcmp(nick, "Mike_West", true))
			{
			    if (PlayerToPoint(20, playerid, 1002.9959,-643.5419,121.5515)) {
	    		    MoveDynamicObject(pablo, 1003.97, -643.57, 122.04, 2.0, -1000.0, -1000.0, -1000.0);
	        		return 1;
	    		}
			}
			else if(!strcmp(nick, "Mike_West", true))
			{
	    		if(PlayerToPoint(20, playerid, 263.6182,-1332.6473,53.2390)){
			        MoveDynamicObject(brian, 264.36, -1333.31, 53.76, 2.0, -1000.0, -1000.0, -1000.0);
	    		    return 1;
				}
			}
			else if(!strcmp(nick, "Mike_West", true))
			{
			    if(PlayerToPoint(20, playerid, 321.5790,-1188.6155,76.3494)){
			        MoveDynamicObject(jennifer, 321.32, -1188.11, 78.08, 2.0, -1000.0, -1000.0, -1000.0);
	    		    return 1;
				}
			}
			else if(!strcmp(nick, "Mike_West", true))
			{
			    if(PlayerToPoint(20, playerid, 261.00, -1229.75, 72.75)){
			        MoveDynamicObject(matias, 261.00, -1229.75, 74.75, 2.0, -1000.0, -1000.0, -1000.0);
			        return 1;
       			}
			}
			else if(!strcmp(nick, "Mike_West", true))
			{
			    if(PlayerToPoint(20, playerid, 211.47, -1350.35, 49.18)){
			        MoveDynamicObject(distasio, 211.47, -1350.35, 52.18, 2.0, -1000.0, -1000.0, -1000.0);
			        return 1;
       			}
			}
			else if(!strcmp(nick, "Mike_West", true))
			{
			    if (PlayerToPoint(30, playerid,787.20361328,-1152.45361328,25.40438461))
	    		{
         			MoveDynamicObject(torres,787.20361328,-1152.45361328,25.40438461, 2.0, -1000.0, -1000.0, -1000.0);
         			return 1;
	    		}
			    else if (PlayerToPoint(30, playerid,662.1038,-1228.5162,15.5905))
	    		{
	        		MoveDynamicObject(torres2,658.68890381,-1226.62780762,17.62639618, 2.0, -1000.0, -1000.0, -1000.0);
	        		return 1;
	    		}
			    else if (PlayerToPoint(30, playerid,665.0096,-1304.3438,13.4609))
	    		{
	        		MoveDynamicObject(torres3,665.05010986,-1310.76293945,15.35269642, 2.0, -1000.0, -1000.0, -1000.0);
	        		return 1;
	    		}
	    		else if (PlayerToPoint(20, playerid,1246.0033,-767.3727,91.1473)){
			        MoveDynamicObject(jeangate, 1246.0033,-767.3727,91.1473, 1.5, -1000.0, -1000.0, -1000.0);
	    		    return 1;
	    		}
			}
		} else Message(playerid, COLOR_GRAD2, "¡No eres premium!");
	    return 1;
	}
    zcmd(ap, playerid, params[])
	{
    	if(Team_LSPD(playerid)){
        	if (PlayerToPoint(2, playerid,250.48937988281, 63.033870697021, 1004.8109741211))
  			{
				MoveDynamicObject(lspdo, 250.4892578125, 63.033203125, 1007.6117553711, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(2, playerid,250.607421875, 67.644607543945, 1003.560546875)){
				MoveDynamicObject(lspdg, 250.607421875, 70.615737915039, 1003.560546875, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,266.8418,87.7773,1001.0391)){
				MoveDynamicObject(cell, 266.3408203125, 77.948211669922, 1001.8412475586, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,266.7480,81.9981,1001.0391)){
				MoveDynamicObject(cell, 266.3408203125, 74.504852294922, 1001.8412475586, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
  			}
  			else if (PlayerToPoint(1, playerid,248.01469421387, 75.232604980469, 1004.2604370117)){
				MoveDynamicObject(lspdg1, 248.0146484375, 75.232421875, 1006.8364868164, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,245.1971,76.1384,1003.6406)){
				MoveDynamicObject(lspdg2, 244.7890625, 75.232421875, 1006.9608764648, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,226.30581665039, 71.110366821289, 1005.6588745117)){
				MoveDynamicObject(lspdg3, 226.3056640625, 68.285301208496, 1005.6588745117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
        	else if (PlayerToPoint(1, playerid,226.3056640625, 75.235343933105, 1005.6588745117)){
				MoveDynamicObject(lspdg4, 226.3056640625, 79.384338378906, 1005.6588745117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,250.81405639648, 86.482467651367, 1003.235168457)){
				MoveDynamicObject(lspdg5, 250.8134765625, 86.482421875, 1005.7106323242, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
        	else if (PlayerToPoint(10, playerid,245.0578,72.4314,1002.5406)){
      			MoveDynamicObject(lspddoor1, 244.0578,72.4314,1002.5406, 3.5000);
      			MoveDynamicObject(lspddoor2, 247.1478,72.4314,1002.5406, 3.5000);
      			MoveDynamicObject(lspdk, 245.17578125, 72.515525817871, 1003.8690795898, 2.5, -1000.0, -1000.0, -1000.0);
      			return 1;
       		}
			else if (PlayerToPoint(5, playerid,258.94287109375, 90.618301391602, 1001.330078125)){
				MoveDynamicObject(lspd2, 258.9423828125, 90.6181640625, 1004.3630371094, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			} else { SendClientMessage(playerid, COLOR_GRAD2,"¡No hay señal!"); 	return 1;	}
		}
		else Message(playerid, COLOR_GRAD2,"Usted no tiene un mando a distancia para abrir esto.");
		return 1;
	}
	zcmd(cp, playerid, params[])
	{
		if(Team_LSPD(playerid)){
			if (PlayerToPoint(2, playerid,250.48937988281, 63.033870697021, 1004.8109741211)){
				MoveDynamicObject(lspdo, 250.52018737793, 62.803260803223, 1004.2604370117, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(2, playerid,250.607421875, 67.644607543945, 1003.560546875)){
				MoveDynamicObject(lspdg, 250.607421875, 67.644607543945, 1003.560546875, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(5, playerid,266.3408203125, 82.641418457031, 1001.8412475586)){
				MoveDynamicObject(cell, 266.3408203125, 82.641418457031, 1001.8412475586, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,248.01469421387, 75.232604980469, 1004.2604370117)){
				MoveDynamicObject(lspdg1, 248.01469421387, 75.232604980469, 1004.2604370117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,245.1971,76.1384,1003.6406)){
				MoveDynamicObject(lspdg2, 244.78970336914, 75.232421875, 1004.2604370117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,226.30581665039, 71.110366821289, 1005.6588745117)){
				MoveDynamicObject(lspdg3, 226.30581665039, 71.110366821289, 1005.6588745117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,226.3056640625, 75.235343933105, 1005.6588745117)){
				MoveDynamicObject(lspdg4, 226.3056640625, 75.235343933105, 1005.6588745117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,250.81405639648, 86.482467651367, 1003.235168457)){
				MoveDynamicObject(lspdg5, 250.81405639648, 86.482467651367, 1003.235168457, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(10, playerid,245.0578,72.4314,1002.5406)){
      			MoveDynamicObject(lspddoor1, 245.0578,72.4314,1002.5406, 3.5000, -1000.0, -1000.0, -1000.0);
      			MoveDynamicObject(lspddoor2, 245.9478,72.4314,1002.5406, 3.5000, -1000.0, -1000.0, -1000.0);
      			MoveDynamicObject(lspdk, 245.17594909668, 72.789848327637, 1003.8690795898, 1.0, -1000.0, -1000.0, -1000.0);
      			return 1;
       		}
			else if (PlayerToPoint(5, playerid,258.94287109375, 90.618301391602, 1001.330078125)){
				MoveDynamicObject(lspd2, 258.94287109375, 90.618301391602, 1001.330078125, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
       		else { SendClientMessage(playerid, COLOR_GRAD2,"¡No hay señal!"); }
		}
		else Message(playerid, COLOR_GRAD2,"Usted no tiene un mando a distancia para cerrar esto.");
		return 1;
    }
    zcmd(subirbarras, playerid, params[])
	{
	    if(Team_Mecanicos(playerid))
	    {
	        if(PlayerToPoint(10.0,playerid, 1576.3094,-2185.2605,13.5469))
			{
		        SetDynamicObjectRot(meca1, 0.00, -20.00, 0.00);
		        SetDynamicObjectRot(meca2, 0.00, 20.00, 0.00);
		        return 1;
			} else Message(playerid, COLOR_GRAD2, "No estas en el lugar adecuado.");
		} else Message(playerid, COLOR_GRAD2, "No eres mecanico.");
		return 1;
  	}
  	zcmd(bajarbarras, playerid, params[])
	{
	    if(Team_Mecanicos(playerid))
	    {
	        if(PlayerToPoint(10.0,playerid, 1576.3094,-2185.2605,13.5469))
			{
		        SetDynamicObjectRot(meca1, 0.00, -90.00, 0.00);
		        SetDynamicObjectRot(meca2, 0.00, 90.00, 0.00);
		        return 1;
			} else Message(playerid, COLOR_GRAD2, "No estas en el lugar adecuado.");
		} else Message(playerid, COLOR_GRAD2, "No eres mecanico.");
		return 1;
  	}
    zcmd(controlcelda, playerid, params[])
    {
        if(PlayerToPoint(15, playerid,592.1495,838.9785,-86.0390))
        {
           ShowPlayerDialog(playerid, CPRISION, DIALOG_STYLE_LIST, "{6CF600}Guardia Nacional{FFFFFF}-Control de Celdas", " {00FF00}>{FFFFFF}Celda Nro 1 \n {00FF00}>{FFFFFF}Celda Nro 2 \n {00FF00}>{FFFFFF}Celda Nro 3", "Ok", "Salir");
           return 1;
        }
        else Message(playerid, -1, "{FFFFFF}No estás en el control de celdas!");
 		return 1;
	}
	zcmd(drogas, playerid, params[])
    {
        new string[100];
        format(string, sizeof(string), "Speed: %d - Extasis: %d - Ritalin: %d - Heroína: %d - Marihuana: %d",
		PlayerInfo[playerid][pSpeed],
		PlayerInfo[playerid][pEctasy],
		PlayerInfo[playerid][pRitalin],
		PlayerInfo[playerid][pHeroina],
		PlayerInfo[playerid][pMarihuana]);
		return Message(playerid, COLOR_YELLOW, string);
	}
	zcmd(materiales, playerid, params[])
	{
	    new string[22];
	    format(string, sizeof(string), "Materiales: %d", PlayerInfo[playerid][pMats]);
	    Message(playerid, COLOR_YELLOW, string);
	    return 1;
	}
    zcmd(sacarsangre, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(!Team_SAMUR(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
            if(GetPVarType(playerid, "OnDuty") == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
            if(IsPlayerConnected(params[0]))
            {
                if(PlayerToPoint(10.0, playerid, 2003.3566,2288.7163,1011.1256) || PlayerToPoint(10.0, playerid, 1158.8103,-1317.4819,-12.4844))
                {
                    if (ProxDetectorS(5.0, playerid, params[0]))
            		{
            		    new Float:HP, string[128]; GetPlayerHealth(params[0], HP);
            		    if(HP < 100) return Message(playerid, COLOR_GRAD2, "El paciente debe estar con el máximo de vida");
            		    SetHP(params[0], HP-80);
						SetPlayerDrunkLevel(params[0], 3000);
						Blood += 80;
						format(string, sizeof(string), "* El doctor %s realiza una extracción de sangre a %s", PlayerName(playerid), PlayerName(params[0]));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
						format(string, sizeof(string), "{FF2200}Información{FFFFFF}: Hay %d centilitros de sangre disponible.", Blood);
						Message(playerid, COLOR_WHITE, string);
						SaveStuff();
            		}
            		else Message(playerid, COLOR_GRAD2, "El jugador debe estar cerca de usted");
                }
                else Message(playerid, COLOR_GRAD2, "¡No estás en el hospital!");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /sacarsangre <PlayerID>");
        return 1;
    }
    zcmd(reanimar, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(!Team_SAMUR(playerid) && !Team_NG(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico o militar!");
            if(IsPlayerConnected(params[0]))
            {
                if (ProxDetectorS(4.0, playerid, params[0]))
                {
                    new Float:health, string[128]; GetPlayerHealth(params[0], health);
        			if(health < 15.1)
			        {
           				Rescued[params[0]] = 1;
               			Left4Life[params[0]] = 240;
                  		SetHP(params[0], 17);
                    	format(string, sizeof(string), "* %s reanima a %s que se encontraba inconsciente", PlayerName(playerid), PlayerName(params[0]));
						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	                    format(string, sizeof(string), "{FF2200}Atención{FFFFFF}: %s está herido, si los servicios médicos no hacen nada en menos de 4 minutos, morirá.", PlayerName(params[0]));
	                    MessageEx(playerid, params[0], COLOR_WHITE, string);
	                    ClearAnimations(params[0]);
					}
					else Message(playerid, COLOR_GRAD2, "¡Este jugador tiene vida suficiente!");
                }
                else Message(playerid, COLOR_GRAD2, "El jugador debe estar cerca de usted.");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
		}
		else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /reanimar <PlayerID>");
        return 1;
    }
    zcmd(pcinfo, playerid, params[]){
        if(!Team_SAMUR(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
        if(PlayerToPoint(5.0, playerid, 1152.3451,-1360.7567,-7.4000)){
			new string[128];
        	ClearChatbox(playerid, 7);
	        Message(playerid, 0x00D535FF, "Windows 7 (Loading ... )");
	        format(string, sizeof(string), "Sangre disponible: %d", Blood);
	        Message(playerid, COLOR_WHITE, string);
	        Message(playerid, 0x00D535FF, "------------------------------");
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en el ordenador!");
		return 1;
	}
    zcmd(operar, playerid, params[]){
        if(!Team_SAMUR(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
        if(GetPVarType(playerid, "OnDuty") == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás en servicio!");
        if(!sscanf(params, "us[32]", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
                if(params[0] == playerid) 										return Message(playerid, COLOR_GRAD2, "¡No te puedes curar ati mismo!");
                if(PlayerToPoint(10.0,playerid, 1204.5820,-1366.8000,-3.4031)) 	return Message(playerid, COLOR_GRAD2, "No estás en la sala de operaciones.");
                if(!ProxDetectorS(5.0,playerid,params[0]))    					return Message(playerid, COLOR_GRAD2, "No estás cerca de este jugador.");
                new string[128], lucky = random(30);
                if(strcmp(params[1],"epilepsia",true) == 0){
                    format(string, sizeof(string), "* %s acerca a la cabeza de %s un aparato.", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                    format(string, sizeof(string), "* %s utiliza su maquinária para paliar la enfermedad a %s.", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
            		if(lucky > 20){
            		    format(string, sizeof(string), "* %s no pudo curar a %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                        SetPlayerDrunkLevel(params[0], 15000);
            		}
            		else
            		{
            		    format(string, sizeof(string), "* %s cura exitosamente a %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
            			PlayerInfo[params[0]][pEpilepsia] = 0;
            			SetPlayerDrunkLevel(params[0], 10000);
            		}
            		return 1;
                }
                else if(strcmp(params[1],"cancer",true) == 0){
                    format(string, sizeof(string), "* %s agarra sus instrumentos.", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                    format(string, sizeof(string), "* %s intenta acabar con el cáncer de %s.", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
            		if(lucky > 20){
            		    format(string, sizeof(string), "* %s no puede acabar con el cáncer de %s", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                        SetPlayerDrunkLevel(params[0], 15000);
                        PlayerInfo[params[0]][pCancer] += 20;
            		}
            		else{
            		    format(string, sizeof(string), "* %s acaba definitivamente con el cáncer de %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
            			PlayerInfo[params[0]][pCancer] = 0;
            			SetPlayerDrunkLevel(params[0], 10000);
            		}
            		return 1;
                }
                else Message(playerid, COLOR_GRAD2, "Item incorrecto: epilepsia, cancer");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		}
		else
		{
            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /operar <PlayerID> <Item>");
			Message(playerid, COLOR_GRAD2, "Items: epilepsia, cancer");
		}
        return 1;
    }
    zcmd(diagnostico, playerid, params[])
    {
        if(!Team_SAMUR(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
        if(GetPVarType(playerid, "OnDuty") == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if(PlayerToPoint(20.0,params[0], 1178.9905,-1375.6156,-3.6813))
            	{
            	    new string[128];
            	    ClearChatbox(playerid, 10);
            	    Message(playerid, COLOR_WHITE, "{FFDD33}-- Diagnóstico TAC --");
            	    if(PlayerInfo[params[0]][pCancer] > MAX_CANCER)
            	    {
            	        format(string, sizeof(string), "{FFFFFF}Cáncer de pulmón -- {3AF69F}POSITIVO{FFFFFF}(%d\%)", PlayerInfo[params[0]][pCancer]);
						Message(playerid, COLOR_WHITE, string);
            	    }
            	    else
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Cáncer de pulmón -- {DB4740}NEGATIVO");
            	    }

            	    if(PlayerInfo[params[0]][pEpilepsia] > MAX_EPILEPSIA)
            	    {
            	        format(string, sizeof(string), "{FFFFFF}Epilepsia -- {3AF69F}POSITIVO{FFFFFF}(%d\%)", PlayerInfo[params[0]][pEpilepsia]);
						Message(playerid, COLOR_WHITE, string);
            	    }
            	    else
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Epilepsia -- {DB4740}NEGATIVO");
            	    }

					if(PlayerInfo[params[0]][pGripe] > 15)
					{
					    Message(playerid, COLOR_WHITE, "{FFFFFF}Gripe - {3AF69F}POSITIVO{FFFFFF}");
					}
					else
					{
					    Message(playerid, COLOR_WHITE, "{FFFFFF}Gripe -- {DB4740}NEGATIVO");
            	    }


                    if(PlayerInfo[params[0]][pInfeccion] > 15)
					{
					    Message(playerid, COLOR_WHITE, "{FFFFFF}Infeccion - {3AF69F}POSITIVO{FFFFFF}");
					}
					else
					{
					    Message(playerid, COLOR_WHITE, "{FFFFFF}Infeccion -- {DB4740}NEGATIVO");
            	    }
            	    ClearChatbox(playerid, 1);

                 	format(string, sizeof(string), "* El doctor %s realiza un diagnóstico general a %s", PlayerName(playerid), PlayerName(params[0]));
                 	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
            	}
            	else Message(playerid, COLOR_GRAD2, "El jugador no está en la máquina de resonancia magnética");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
		}
		else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /diagnostico <PlayerID>");
        return 1;
    }
    zcmd(curar, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(!Team_SAMUR(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
            if(GetPVarType(playerid, "OnDuty") == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
            if(IsPlayerConnected(params[0]))
            {
                new Float:health; GetPlayerHealth(params[0], health);
                if(ProxDetectorS(5.0, playerid, params[0]))
                {
                    if(Blood > 99)
				    {
				        if(health < 100)
				        {
            				Rescued[params[0]] = 0;
                			Left4Life[params[0]] = 0;
                   			SetHP(params[0], 100);
                   			new string[128];
                   			format(string, sizeof(string), "* El doctor %s ha curado satisfactoriamente a %s.", PlayerName(playerid), PlayerName(params[0]));
                   			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                      		format(string, sizeof(string), "{FFFFFF}¡El médico {FF7700}%s {FFFFFF}te ha curado con éxito!", PlayerName(playerid));
           					Message(params[0], -1, string);
           					PlayerInfo[params[0]][pGripe] = 0;
							PlayerInfo[params[0]][pInfeccion] = 0;
			                PlayerPlaySound(params[0], 1150, 0.0, 0.0, 0.0);
			                PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
			                Blood -= 100;
			                SaveStuff();
						}
						else Message(playerid, COLOR_GRAD2, "Este jugador tiene la vida al máximo");
				    }
				    else Message(playerid, COLOR_GRAD2, "¡No queda sangre suficiente, realiza una campaña de donación!");
                }
                else Message(playerid, COLOR_GRAD2, "El jugador debe estar cerca de usted");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
        }
		else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /curar <ID>");
        return 1;
    }
    zcmd(gmlimits, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            new string[124];
	        format(string, sizeof(string), "%d Objects\n%d Pickups\n%d Checkpoints\n%d Race Checkpoints\n%d Map Icons\n%d 3D Text Labels",CountDynamicObjects(),CountDynamicPickups(),CountDynamicCPs(),CountDynamicRaceCPs(),CountDynamicMapIcons(),CountDynamic3DTextLabels());
	    	ShowPlayerDialog(playerid,DINFO,DIALOG_STYLE_MSGBOX,"SDC: Streamer Dynamics Counter",string,"Ok","");
		}
		return 1;
	}
	zcmd(comprarflores, playerid, params[]){
        if(GetPlayerMoney(playerid) > 9 && PlayerToPoint(5.0,playerid,1416.3827,-1718.1904,13.5469)){
		    SafeGivePlayerWeapon(playerid, 14, 1);
		    Bought(playerid, 9);
		}
		else Message(playerid,COLOR_GREY,"No tienes suficiente dinero o no te encuentras en una floristeria.");
		return 1;
    }
    zcmd(patines, playerid, params[])
    {
        if(GetPVarInt(playerid, "Skate") == 0) return Message(playerid,COLOR_GREY,"¡No tienes patines!");
        if(!sscanf(params, "d", params[0]))
        {
			switch(params[0])
			{
			    case 0:
			    {
				  	return SetPVarInt(playerid, "Skate", 1);
			    }
			    case 1:
			    {
			        SetPVarInt(playerid, "Skate", 20); Message(playerid, COLOR_GRAD2, "ACTIVADO ACCIÓN 2 --> Velocidad moderada");
			        return Message(playerid, COLOR_YELLOW, "{DC092F}Utilize:{2471A3} ESPACIO [correr] y ALT [parar] - Utilize /patines 0");
			    }
			    case 2:
			    {
			        SetPVarInt(playerid, "Skate", 30); Message(playerid, COLOR_GRAD2, "ACTIVADO ACCIÓN 3 --> Sprint");
			        return Message(playerid, COLOR_YELLOW, "{DC092F}Utilize:{2471A3} ESPACIO [correr] y ALT [parar] - Utilize /patines 0");
			    }
			    default: Message(playerid,COLOR_GREY,"Utiliza: /patines [acción] (0:parar,1:correr,2:sprint)");
			}
        }
        else Message(playerid,COLOR_GREY,"Utiliza: /patines [acción] (0:parar,1:correr,2:sprint)");
        return 1;
    }
    zcmd(cerrajear, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Mafioso(playerid) || Team_Mecanicos(playerid) || GetPlayerFactionType(playerid) == 1)
	        {
	            if(PlayerInfo[playerid][pRob] == 5 && Mafioso(playerid) || PlayerInfo[playerid][pRob] && GetPlayerFactionType(playerid) == 1) return Message(playerid, COLOR_GRAD2, "¡Espera al próximo PayDay para robar más vehículos!");
				if(GetPVarInt(playerid, "PickLock") == 0) return Message(playerid, COLOR_GRAD2, "¡Compra un PickLock, no dispones de uno!");
				new picklock = random(2)+1, engine, lights, alarm, doors, bonnet, boot, objective, string[128], car = IsPlayerInVehicleRadio(playerid, 5);
	            if(!IsPlayerInVehicleRadio(playerid, 5)) return Message(playerid, COLOR_GRAD2, "¡No estás cerca de ningún vehículo!");
	            if(!OwnableVehicle[car]) return Message(playerid, COLOR_GRAD2, "¡No puedes cerrajear un vehículo de facción!");
				if(picklock == 1)
				{
    				GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
        			SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
					PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvLock] = 0;
				    format(string, sizeof(string), "* %s intenta cerrajear la cerradura del %s con su instrumental y lo logra", PlayerName(playerid), GetVehicleFriendlyName(car));
					ProxDetectorEx(20.0, playerid, string, TRY_GREEN);
					Message(playerid, COLOR_GREEN, "Vehículo abierto");
					if(Mafioso(playerid) || GetPlayerFactionType(playerid) == 1) PlayerInfo[playerid][pRob]++;
					if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvAlarm] > 0)
					{
					    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
						KillTimer(Alarm[car]);
						Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
						format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
						ProxDetectorEx(20.0, playerid, string, 0xDF0070FF);
					}
                    return 1;
				}
			    else
				{
				    format(string, sizeof(string), "* %s intenta cerrajear la cerradura del %s con su instrumental y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
					ProxDetectorEx(20.0, playerid, string, TRY_RED);
					if(Mafioso(playerid) || GetPlayerFactionType(playerid) == 1) PlayerInfo[playerid][pRob]++;
					if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvAlarm] > 0)
					{
					    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
					    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
						KillTimer(Alarm[car]);
						Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
						format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
						ProxDetectorEx(20.0, playerid, string, 0xDF0070FF);
					}
                    return 1;
				}
			}
			else Message(playerid, COLOR_GRAD2, "¡No eres mafioso!");
		}
		return 1;
	}
	zcmd(robarpieza, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            new car = IsPlayerInVehicleRadio(playerid, 5), engine,lights,alarm,doors,bonnet,boot,objective, stole = random(2)+1, Float:HP, string[128];

	        if(!Mafioso(playerid) && GetPlayerFactionType(playerid) != 1)  return Message(playerid, COLOR_GREY, "No eres mafioso.");
            if(sscanf(params, "s[32]", params[0])) return Message(playerid, COLOR_GREY, "Utiliza: /robarpieza [nitro, stereo, llantas]");
            if(PlayerInfo[playerid][pRob] == 5) return Message(playerid, COLOR_GRAD2, "¡Espera al próximo PayDay para robar más piezas!");
            if(!IsPlayerInVehicleRadio(playerid, 5)) return Message(playerid, COLOR_GRAD2, "¡No estás cerca de ningún vehículo!");
            if(!OwnableVehicle[car]) return Message(playerid, COLOR_GRAD2, "¡No puedes robar un vehículo que no pertenece a nadie!");
            if(!PlayerToPoint(10.0,playerid, 2609.9314,-2201.4509,-0.2188)) return Message(playerid, COLOR_GRAD2, "¡No estás cerca del Mercado Negro!");

	        if(strcmp(params[0],"nitro",true) == 0)
	        {
         		if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvNitro] > 0)
           		{
             		if(stole == 1)
               		{
                 		RemoveVehicleComponent(car,PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvNitro]);
                   		PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvNitro] = 0;
                   		format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y lo consige.", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetectorEx(20.0, playerid, string, TRY_GREEN);
						format(string, sizeof(string), "* %s entrega la botella de N20 al traficante.", PlayerName(playerid), car);
						ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
						Message(playerid, COLOR_WHITE, "- Has recibido 200$ vendiendo el óxido nitroso!");
						Earn(playerid, 200);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetectorEx(20.0, playerid, string, 0xDF0070FF);
						}
						return 1;
					}
					else
					{
						format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetectorEx(20.0, playerid, string, TRY_RED);
						format(string, sizeof(string), "* %s rompe mal el cristal y se hace daño", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						GetPlayerHealth(playerid, HP);
						SetHP(playerid, HP-5);
						if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetectorEx(20.0, playerid, string, 0xDF0070FF);
						}
						return 1;
					}
				} else Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene óxido nitroso!");
	        }
	        else if(strcmp(params[0],"stereo",true) == 0)
	        {
         		if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvPaintjob] > 0)
         		{
         			if(stole == 1)
         			{
         				format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y lo consige.", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetectorEx(20.0, playerid, string, TRY_GREEN);
						format(string, sizeof(string), "* %s entrega un gran subwoofer al traficante.", PlayerName(playerid), car);
						ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
						Message(playerid, COLOR_WHITE, "- Has recibido 50$ vendiendo el stereo!");
						Earn(playerid, 50);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetectorEx(20.0, playerid, string, 0xDF0070FF);
						}
						return 1;
					}
					else
					{
		    			format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetectorEx(20.0, playerid, string, TRY_RED);
						format(string, sizeof(string), "* %s rompe mal el cristal y se hace daño", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						GetPlayerHealth(playerid, HP);
						SetHP(playerid, HP-5);
						if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetectorEx(20.0, playerid, string, 0xDF0070FF);
						}
						return 1;
					}
    			} else Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene stereo!");
    		}
    		else if(strcmp(params[0],"llantas",true) == 0)
	        {
         			if(stole == 1)
         			{
			         	if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvWheel] > 0) RemoveVehicleComponent(car,PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvWheel]); PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvWheel] = 0;
			         	AddVehicleComponent(car, 1025);
			         	NoWheels[car] = 1;
         				format(string, sizeof(string), "* %s intenta quitar las ruedas del %s con su instrumental y lo consige.", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetectorEx(20.0, playerid, string, TRY_GREEN);
						format(string, sizeof(string), "* %s arrastra las llantas y las entrega al traficante.", PlayerName(playerid), car);
						ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
						Message(playerid, COLOR_WHITE, "- Has recibido 180$ vendiendo las llantas!");
						Earn(playerid, 180);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						new panels, doorsx, lightsx, tires;
						GetVehicleDamageStatus(car, panels, doorsx, lightsx, tires);
						UpdateVehicleDamageStatus(car, panels, doorsx, lightsx, 15);
						if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetectorEx(20.0, playerid, string, 0xDF0070FF);
						}
						return 1;
					}
					else
					{
		    			format(string, sizeof(string), "* %s intenta quitar las ruedas del %s con su instrumental y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetectorEx(20.0, playerid, string, TRY_RED);
						format(string, sizeof(string), "* A %s se le rompe su instrumental de robo técnico", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(PlayerVehicleInfo[VehicleOwner[car]][VehicleSlot[car]][pvAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetectorEx(20.0, playerid, string, 0xDF0070FF);
						}
						return 1;
					}
    		}
		}
		return 1;
	}
    zcmd(atar, playerid, params[])
    {
        if(!Mafioso(playerid) && !Hitman(playerid) && !Terroristas(playerid) && GetPlayerFactionType(playerid) != 1) return Message(playerid, COLOR_GRAD2, "¡No pertences a una mafia!");
        if(GetPVarInt(playerid, "Rope") == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes una cuerda!");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if(ProxDetectorS(4.0,playerid,params[0]))
                {
                    new string[128];
					if(Tied[params[0]] == 0)
                    {
                        SetPVarInt(params[0], "Tied", 1);
                        Tied[params[0]] = 1;
						format(string, sizeof(string), "* %s agarra una cuerda y ata a %s.", PlayerName(playerid), PlayerName(params[0]));
						ProxDetectorEx(20.0,playerid,string,COLOR_PURPLE);
						return 1;
					}
                    else
                    {
						Tied[params[0]] = 0;
						format(string, sizeof(string), "* %s agarra una cuerda y desata a %s.", PlayerName(playerid), PlayerName(params[0]));
						ProxDetectorEx(20.0,playerid,string,COLOR_PURPLE);
						TogglePlayerControllable(params[0], 1);
						return 1;
                    }
                }
                else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /atar <ID>");
        return 1;
    }
    zcmd(vendar, playerid, params[])
    {
        if(Mafioso(playerid) || Hitman(playerid) || Terroristas(playerid) || GetPlayerFactionType(playerid) == 1)
        {
            if(GetPVarInt(playerid, "Rope") == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes venda!");
            if(!sscanf(params, "u", params[0]))
            {
                if(IsPlayerConnected(params[0]))
                {
                    if(ProxDetectorS(4.0,playerid,params[0]))
                    {
                        new string[90];
                        if(GetPVarInt(params[0], "Blinded") == 0)
                        {
                            SetPVarInt(params[0], "Blinded", 1);
							format(string, sizeof(string), "* %s venda los ojos de %s", PlayerName(playerid), PlayerName(params[0]));
							ProxDetectorEx(20.0,playerid,string,COLOR_PURPLE);
							SetPlayerCameraPos(params[0],0.0,0.0,1000);
							SetPlayerCameraLookAt(params[0],0.0,0.0,5000);
							return 1;
                        }
                        else
                        {
                            DeletePVar(params[0], "Blinded");
							format(string, sizeof(string), "* %s desvenda los ojos de %s", PlayerName(playerid), PlayerName(params[0]));
							ProxDetectorEx(20.0,playerid,string,COLOR_PURPLE);
							SetCameraBehindPlayer(params[0]);
							return 1;
                        }
                    }
                    else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
                }
                else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
            }
            else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /vendar <ID>");
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        return 1;
    }
	zcmd(irpunto, playerid, params[])
	{
		new Float:x, Float:y, Float:z, string[100];
		if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		if(sscanf(params, "fff", x, y, z)) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /irpunto <X> <Y> <Z>");
		SetPlayerPos(playerid, x, y, z);
		format(string, sizeof(string), "Teleportado a %f, %f, %f", x, y, z);
		Message(playerid, 0xFFFFFFFF, string);
		return 1;
	}
	zcmd(sacar, playerid, params[])
	{
   		if(IsAtATM(playerid) || IsAtBank(playerid))
     	{
			if(sscanf(params, "d", params[0])) return Message(playerid, COLOR_GRAD2, "Utiliza: /sacar [Cantidad]");
			if(params[0] > PlayerInfo[playerid][pAccount] || params[0] < 1) return Message(playerid, COLOR_GRAD2, "¡Cantidad incorrecta!");

			new string[90], curfunds, operation, IP[18];
			GetPlayerIp(playerid, IP, 18);
			operation = params[0] / 1000;
			Earn(playerid,params[0]-operation);
			curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]-=params[0];
			Message(playerid, COLOR_WHITE, "|___ ESTADO BANCARIO ___|");
			format(string, sizeof(string), "  Antiguo Balance: $%d", curfunds);
			Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "  Extrajo: $%d",params[0]);
			Message(playerid, COLOR_GRAD4, string);
			format(string, sizeof(string), "  Gastos de Operación: $%d",operation);
			Message(playerid, COLOR_GRAD4, string);
			Message(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "  Nuevo Balance: $%d", PlayerInfo[playerid][pAccount]);
			Message(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s hace una transacción bancaria.", PlayerName(playerid));
			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			format(string, sizeof string, "* %s(%s) ha sacado %d$", PlayerName(playerid), IP, params[0]);
			Log("Logs/Dinero.log", string);
			return 1;
		} else Message(playerid, COLOR_GREY, "¡No estás en un cajero automático!");
		return 1;
	}
	zcmd(depositar, playerid, params[])
	{
	    if(IsAtATM(playerid) || IsAtBank(playerid))
	    {
	        if(sscanf(params, "d", params[0])) return Message(playerid, COLOR_GRAD2, "Utiliza: /depositar <Cantidad>");
	        if(params[0] > GetPlayerMoney(playerid) || params[0] < 1) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta");

            new string[72], curfunds, operation, intbank;
            operation = params[0] / 1000;
            intbank = params[0]-operation;
	    	Bought(playerid,params[0]);
			curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]+=intbank;
			Message(playerid, COLOR_WHITE, "|___ ESTADO BANCARIO ___|");
			format(string, sizeof(string), "  Antiguo Balance: $%d", curfunds);
			Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "  Depositó: $%d",params[0]);
			Message(playerid, COLOR_GRAD4, string);
			format(string, sizeof(string), "  Gastos de Operación: $%d",operation);
			Message(playerid, COLOR_GRAD4, string);
			Message(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "  Nuevo Balance: $%d", PlayerInfo[playerid][pAccount]);
			Message(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s hace una transacción bancaria.", PlayerName(playerid));
			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			format(string, sizeof string, "* %s ha depositado %d$", PlayerName(playerid), params[0]);
			Log("Logs/Dinero.log", string);
			return 1;
		} else Message(playerid, COLOR_GREY, "¡No estás en el banco!");
		return 1;
	}
	zcmd(transferir, playerid, params[])
    {
        if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD1, "¡Necesitas ser mínimo nivel 2!");
		if(!IsAtBank(playerid)) 			return Message(playerid, COLOR_GRAD2, "No estás en los cajeros del banco.");
		if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[1] < 1 || params[1] > 10000000) return Message(playerid, COLOR_GRAD2, "Máx: 10000000");
		    if(params[1] > PlayerInfo[playerid][pAccount]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
		    if (IsPlayerConnected(params[0]))
			{
				new string[72], operation, total, IP[18];
				GetPlayerIp(playerid, IP, 18);
				operation = params[1] / 1000;
				total = params[1]-operation;
				PlayerInfo[playerid][pAccount] -= params[1];
				PlayerInfo[params[0]][pAccount] += total;
				format(string, sizeof(string), "* Has transferido %d$ a %s", params[1], PlayerName(params[0]));
				Message(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "* Recibiste una transferencia de %d$ de %s.", params[1], PlayerName(playerid));
				Message(params[0], COLOR_GRAD1, string);
				format(string, sizeof string, "* %s(%s) ha tranferido %d$ a %s.", PlayerName(playerid), IP, params[1], PlayerName(params[0]));
				Log("Logs/Dinero.log", string);
			}
			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		}
		else Message(playerid, COLOR_GREY, "{DC092F}Utilize:{2471A3} /transferir <PlayerID> <Monto>");
        return 1;
    }
    zcmd(darcheque, playerid, params[]){
        if(!sscanf(params, "ui", params[0],params[1])){
            if(params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No puedes darte un cheque a ti mismo!");
            if(params[1] < 1 || params[1] > PlayerInfo[playerid][pAccount]) return Message(playerid, COLOR_GRAD2, "No puedes sobregirar un cheque.");
			if(IsPlayerConnected(params[0])){
			    if(ProxDetectorS(5.0, playerid, params[0])){
			        new string[128], IP[18];
			        GetPlayerIp(playerid, IP, 18);
					PlayerInfo[playerid][pAccount] -= params[1];
			        PlayerInfo[params[0]][pCheques] += params[1];
			        format(string, sizeof(string), "* %s saca su chequera, firma un cheque y se lo da a %s.", PlayerName(playerid), PlayerName(params[0]));
			        ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
			        format(string, sizeof(string), "* Has dado un cheque por %d$ a %s.", params[1], PlayerName(params[0]));
			        Message(playerid, COLOR_GRAD4, string);
			        format(string, sizeof(string), "* Has recibido un cheque por %d$ de %s.", params[1], PlayerName(playerid));
			        Message(params[0], COLOR_GRAD4, string);
			        format(string, sizeof(string), "* %s(%s) ha dado un cheque de %d$ a %s.", PlayerName(playerid), IP, params[1], PlayerName(params[0]));
			        Log("Logs/Dinero.log", string);
			        return 1;
				} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /darcheque <PlayerID> <Cantidad>");
        return 1;
    }
    zcmd(cobrarcheques, playerid, params[]){
        if(!PlayerToPoint(30,playerid,287.4801,-1617.4359,-72.2500)) return Message(playerid, COLOR_GRAD2, "No estás en el banco.");
		if(PlayerInfo[playerid][pCheques] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes ningun cheque para cobrar!");
		new string[90], operation, total;
		operation = PlayerInfo[playerid][pCheques] / 500;
		total = PlayerInfo[playerid][pCheques]-operation;
		PlayerInfo[playerid][pAccount] += total;
		format(string, sizeof(string), "* Has cobrado tus cheques, un valor de %d$ fueron añadidos a tu cuenta bancaria.", total);
		Message(playerid, COLOR_GRAD3, string);
		format(string, sizeof(string), "* %s ha cobrado sus cheques (%d$).", PlayerName(playerid) , total);
  		Log("Logs/Dinero.log", string);
		PlayerInfo[playerid][pCheques] = 0;
		return 1;
  	}
  	zcmd(vercheques, playerid, params[]){
		new string[64];
  		format(string, sizeof(string), "* Los cheques que has recibido suman un total de %d$", PlayerInfo[playerid][pCheques]);
  		Message(playerid, COLOR_GRAD2, string);
  		return 1;
	}
    zcmd(tirar, playerid, params[])
	{
	    new string[80], apuesta, tiro;
	    if(IsAtBowling(playerid))
	    {
		    if (sscanf(params, "d", apuesta)) return Message(playerid, COLOR_GRAD2, "Utiliza: /tirar [$$] (Establece la apuesta)");
		    if (apuesta > 10 || apuesta < 1) return Message(playerid, COLOR_GRAD2, "Apuesta mínimo 1 máximo 10");
		    if (apuesta > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "No tienes esa cantidad!");
		    if (GetPVarInt(playerid, "Bowling") == 1) return Message(playerid, COLOR_GRAD2, "Espera unos segundos para volver a tirar");
			tiro = random(11);
			switch(tiro)
			{
				case 0:{
				    format(string, sizeof(string), "** %s tiró la bola muy mal y se desvió fuera.", PlayerName(playerid));
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", ((-10)+(-apuesta)));
				}
				case 1:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos.", PlayerName(playerid), tiro);
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", ((-9)+(-apuesta)));
				}
				case 2:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos.", PlayerName(playerid), tiro);
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", ((-8)+(-apuesta)));
				}
				case 3:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos.", PlayerName(playerid), tiro);
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", ((-7)+(-apuesta)));
				}
				case 4:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos.", PlayerName(playerid), tiro);
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", ((-6)+(-apuesta)));
				}
				case 5:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos.", PlayerName(playerid), tiro);
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", apuesta);
				}
				case 6:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos.", PlayerName(playerid), tiro);
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", (6+apuesta));
				}
				case 7:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos.", PlayerName(playerid), tiro);
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", (7+apuesta));
				}
				case 8:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos.", PlayerName(playerid), tiro);
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", (8+apuesta));
				}
				case 9:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos.", PlayerName(playerid), tiro);
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", (9+apuesta));
				}
				case 10:{
				    format(string, sizeof(string), "** %s tiró el balón e hizo un strike.", PlayerName(playerid), tiro);
				    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
				    SetPVarInt(playerid, "BowlingMoney", (10+apuesta));
				}
			}
			SetPlayerAttachedObject(playerid, 1, 3065, 6);
            Att_Obj_Slot_1[playerid] = "Bola de Bolos";
			format(string, sizeof(string), "** Apostaste %d, y tiraste %d bolos. Tus ganancias son de: %d", apuesta, tiro, GetPVarInt(playerid, "BowlingMoney"));
			Message(playerid, COLOR_WHITE, string);
			GivePlayerMoney(playerid, GetPVarInt(playerid, "BowlingMoney"));
			SetPVarInt(playerid, "Bowling", 1);
			SetTimerEx("ShootAgain", 10000, 0, "i", playerid);
			return 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en una bolera!");
		return 1;
	}
	zcmd(bmbuy, playerid, params[])
	{
		Connect
			if(PlayerToPoint(10,playerid, 1293.6071,-984.9811,32.6953))
			{
					if(sscanf(params, "d", params[0]))
					{
						Message(playerid, COLOR_WHITE, "Utiliza: /BmBuy [# Item]");
						Message(playerid, COLOR_BLUE, "***              BlackMarket              ***");
						Message(playerid, COLOR_GRAD2, "| 1: Puño Americano 20$");
						Message(playerid, COLOR_GRAD2, "| 2: Máscara             50$");
						Message(playerid, COLOR_GRAD2, "| 3: Ganzúas             70$");
						Message(playerid, COLOR_GRAD2, "| 4: Pick Lock           90$");
						Message(playerid, COLOR_GRAD2, "| 5: Soga + Venda     120$");
		            	return 1;
					}
					switch(params[0])
					{
			   			case 1:
			   			{
						    if(CheckMoney(playerid, 20))
						    {
				   				Bought(playerid, 20);
				   				Message(playerid, COLOR_WHITE, "Compraste un puño americano");
								SafeGivePlayerWeapon(playerid, 1,1);
								return 1;
							}
						}
						case 2:
			   			{
						    if(CheckMoney(playerid, 50))
						    {
				   				Bought(playerid, 50);
				   				Message(playerid, COLOR_WHITE, "Máscara comprada, utiliza /mascara");
								PlayerInfo[playerid][pMask] = 1;
								return 1;
							}
						}
						case 3:
			   			{
						    if(CheckMoney(playerid, 70))
						    {
				   				SetPVarInt(playerid, "Ganzuas", 1);
								Bought(playerid, 70);
								Message(playerid, COLOR_WHITE, "Ganzuas compradas.");
								return 1;
							}
						}
						case 4:
			   			{
						    if(CheckMoney(playerid, 90))
						    {
						        Message(playerid, COLOR_WHITE, "Compraste un PickLock");
						        SetPVarInt(playerid, "PickLock", 1);
								Bought(playerid, 90);
								return 1;
							}
						}
						case 5:
			   			{
						    if(CheckMoney(playerid, 120))
						    {
						        Message(playerid, COLOR_WHITE, "Compraste una kit de secuestro");
						        SetPVarInt(playerid, "Rope", 1);
								Bought(playerid, 120);
								return 1;
							}
						}
						default:
					 				Message(playerid, COLOR_GRAD2, "Item incorrecto - No tienes dinero");
					}
				}
				else
						Message(playerid, COLOR_GRAD2, "¡No estás en el mercado negro!");
		}
		return 1;

	}
    zcmd(iphone, playerid, params[])
    {
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GRAD2, "No tienes teléfono, cómpra uno en la tienda eletronica.");
        ShowPlayerDialog(playerid, IPHONE_OPTIONS, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Opciones", "{DD1111}iPhone\t{FFFFFF}-\t{11AA11}Llamar\n{DD1111}iPhone\t{FFFFFF}-\t{008899}Mandar SMS\n{DD1111}iPhone\t{FFFFFF}-\t{FFBB88}Buzón entrada\n{DD1111}iPhone\t{FFFFFF}-\t{FFEE88}Agenda\n{DD1111}iPhone\t{FFFFFF}-\t{952BFF}Consultar Saldo\n{DD1111}iPhone\t{FFFFFF}-\t{2471A3}Anuncios", "Aceptar", "Salir");
        return 1;
	}
	zcmd(masked, playerid, params[]){
        if(IsPlayerConnected(playerid))
	    if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		{
			Message(playerid, COLOR_GRAD1, "Usuarios enmascarados:");
			for(new i = 0; i < MAX_PLAYERS; i++){
				if(IsPlayerConnected(i)){
				    if(Maskuse[i] == 1){
						new string[128];
						format(string, 256, "** ID: %d ** %s", i, PlayerName(i));
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}
    zcmd(flist, playerid, params[])
    {
        new member = PlayerInfo[playerid][pMember];
        new leader = PlayerInfo[playerid][pLeader];
        new teamnumber;
		if (PlayerInfo[playerid][pLeader] != 0) teamnumber = PlayerInfo[playerid][pLeader];
		else if (PlayerInfo[playerid][pMember] != 0) teamnumber = PlayerInfo[playerid][pMember];
        if(member > 0 || leader > 0)
        {
            Message(playerid, COLOR_GREEN, "- Miembros activos -");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    new string[32];
				if (IsPlayerConnected(i))
				{
					if (PlayerInfo[i][pLeader] == teamnumber) format(string, sizeof(string), "%s (LÍDER)",PlayerName(i));
					else if (PlayerInfo[i][pMember] == teamnumber) format(string, sizeof(string), "%s, Rank %d",PlayerName(i), PlayerInfo[i][pRank]);
					if(strlen(string) > 0) Message(playerid, COLOR_GRAD2, string);
				}
			}
		} else Message(playerid, COLOR_GRAD2, "No perteneces a ninguna facción.");
        return 1;
    }
    zcmd(miembros, playerid, params[])
    {
        return cmd_flist(playerid, params);
    }
    // zcmd:attach ============================================================================================================================
    zcmd(mochila, playerid, params[])
    {
        if(GetPVarInt(playerid, "ReduceTime") == 1) return Message(playerid, COLOR_GREY, "Este comando se utiliza cada 3 segundos.");
        if(PlayerInfo[playerid][pMochila] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes una mochila!");
        else
        {
            if(!sscanf(params, "s[8]", params[0]))
            {
                new string[80], gunID = GetPlayerWeapon(playerid), gunAmmo = GetPlayerAmmo(playerid), gunname[24];
            	if(strcmp(params[0],"garma",true) == 0)
            	{
            	    if(gunID != 0 && gunAmmo != 0)
		            {
		                if(Mochila[playerid][0] == 0 || Mochila[playerid][1] == 0)
		                {
			                SetPVarInt(playerid, "ReduceTime", 1);
			                SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
			                Mochila[playerid][0] = gunID;
			                Mochila[playerid][1] = gunAmmo;
							RemovePlayerWeapon(playerid, Mochila[playerid][0]);
							GetWeaponName(gunID, gunname, sizeof(gunname));
							format(string, sizeof(string), "* %s guarda una %s en su mochila.", PlayerName(playerid), gunname);
							ProxDetectorEx(30.0,playerid,string,COLOR_PURPLE);
							SetPlayerAttachedObject(playerid, 1, 371, 1, 0.0000, -0.0954, -0.0012, 359.8081, 89.4325, 358.1167);
							Att_Obj_Slot_1[playerid] = "Mochila";
						}
						else Message(playerid, COLOR_GREY, "Ya tienes un arma guardada.");
		            }
		            else Message(playerid, COLOR_GREY, "No tienes ningún arma para guardar.");
            	}
            	else if(strcmp(params[0],"sarma",true) == 0)
            	{
            	    if(Mochila[playerid][0] != 0 && Mochila[playerid][1] != 0)
		            {
		                SetPVarInt(playerid, "ReduceTime", 1);
		                SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
		                GetWeaponName(Mochila[playerid][0], gunname, sizeof(gunname));
		                SafeGivePlayerWeapon(playerid, Mochila[playerid][0], Mochila[playerid][1]);
		      			format(string, sizeof(string), "* %s saca una %s de su mochila.", PlayerName(playerid), gunname);
						ProxDetectorEx(30.0,playerid,string,COLOR_PURPLE);
		      			Mochila[playerid][0] = 0;
		      			Mochila[playerid][1] = 0;
		      			if(strcmp(Att_Obj_Slot_1[playerid],"Mochila",true) == 0)
		      			{
		      			    RemovePlayerAttachedObject(playerid, 1);
							Att_Obj_Slot_1[playerid] = "Vacio";
		      			}
		            }
		            else Message(playerid, COLOR_GREY, "No tienes ningún arma guardada en tu mochila.");
            	}
            	else if(strcmp(params[0],"agarrar",true) == 0)
           		{
       		    	SetPlayerAttachedObject(playerid, 1, 371, 1, 0.0000, -0.0954, -0.0012, 359.8081, 89.4325, 358.1167);
					Att_Obj_Slot_1[playerid] = "Mochila";
            	    format(string, sizeof(string), "* %s agarra su mochila.", PlayerName(playerid));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
    			}
            	else Message(playerid, COLOR_GREY, "Item incorrecto.");
            }
            else Message(playerid, COLOR_GREY, "{DC092F}Utilize:{2471A3} /mochila <nombre> (garma, sarma, agarrar)");
        }
        return 1;
    }
    zcmd(maleta, playerid, params[])
    {
        if(PlayerInfo[playerid][pMaleta] == 0) return Message(playerid, COLOR_GRAD2, "No tienes una maleta!");
        new string[64];
		SetPlayerAttachedObject(playerid, 0, 1210, 6, 0.289999, 0.079999, -0.000000, 0.000000, -100.000000, 1.000000);
		Att_Obj_Slot_1[playerid] = "Maleta";
	 	format(string, sizeof(string), "* %s agarra su maletín.", PlayerName(playerid));
		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
		return Message(playerid, COLOR_GRAD2, "Utiliza /qobjeto para quitar el objeto!");
    }
    zcmd(gafas, playerid, params[])
    {
        if(PlayerInfo[playerid][pGafas] == 0) return Message(playerid, COLOR_GRAD1, " No tienes gafas.");
        new string[64];
        if(GetPVarInt(playerid, "UsingRayBan") == 0)
        {
            SetPlayerAttachedObject( playerid, 3, 19022, 18, -0.008390, -0.110742, -0.001029, 88.036231, 353.353454, 1.575388, 0.826243, 1.000000, 1.012219 );
	    	Att_Obj_Slot_3[playerid] = "Gafas";
			format(string, sizeof(string), "* %s se pone sus gafas de sol.", PlayerName(playerid));
			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	  		ApplyAnimation(playerid,"RIOT","RIOT_shout",2.0,0,0,0,0,0);
	    	TextDrawBoxColor(SunGlasses, 0x00000040);
	     	TextDrawShowForPlayer(playerid, SunGlasses);
	     	SetPVarInt(playerid, "UsingRayBan", 1);
	     	return 1;
        }
        else
        {
            RemovePlayerAttachedObject(playerid, 3);
	      	Att_Obj_Slot_3[playerid] = "Vacío";
		    format(string, sizeof(string), "* %s se quita sus gafas de sol.", PlayerName(playerid));
			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	  		TextDrawHideForPlayer(playerid, SunGlasses);
	    	ApplyAnimation(playerid,"RIOT","RIOT_shout",2.0,0,0,0,0,0);
	    	DeletePVar(playerid, "UsingRayBan");
	        return 1;
        }
    }
    zcmd(casco, playerid, params[])
    {
        if(PlayerInfo[playerid][pCasco] == 0) return Message(playerid, COLOR_GRAD2, "No tienes casco!");
        new string[48];
		format(string, sizeof(string), "* %s se coloca su casco.", PlayerName(playerid));
	 	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	 	SetPlayerAttachedObject( playerid, 2, 18645, 2, 0.054665, 0.019579, -0.002646, 24.949916, 96.733367, 68.246139, 1.016691, 1.000000, 1.094870 );
	 	Att_Obj_Slot_2[playerid] = "Casco";
	 	return Message(playerid, COLOR_GRAD2, "Utiliza /qcasco para quitarte el casco");
    }
    zcmd(qcasco, playerid, params[])
    {
        if(PlayerInfo[playerid][pCasco] == 0) return Message(playerid, COLOR_GRAD2, "No tienes casco!");
        new string[48];
		format(string, sizeof(string), "* %s se saca su casco.", PlayerName(playerid));
	 	ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
	 	RemovePlayerAttachedObject(playerid,2);
	 	return Att_Obj_Slot_2[playerid] = "Vacío";
    }
    zcmd(brillo, playerid, params[])
    {
        if(GetPVarInt(playerid, "UsingRayBan") == 0) return Message(playerid,COLOR_GRAD2,"No tienes las gafas puestas. (/gafas)");
		else ShowPlayerDialog(playerid,BRILLO_GAFAS,DIALOG_STYLE_INPUT,"Sistema de Gafas","Porfavor elije el brillo de tus gafas\nLuminoso\nNormal\nOscuro\nMuyOscuro","Ok","Cancel");
        return 1;
    }
    zcmd(qobjeto, playerid, params[])
    {
        new string[64];
		if(!sscanf(params, "d", params[0]))
        {
			switch(params[0])
			{
			    case 0:
			    {
			        RemovePlayerAttachedObject(playerid, 0);
				    format(string, sizeof(string), "Removiste el Slot 0: %s", Att_Obj_Slot_0[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_0[playerid] = "Vacío";
			    }
			    case 1:
			    {
			        RemovePlayerAttachedObject(playerid, 1);
				    format(string, sizeof(string), "Removiste el Slot 1: %s", Att_Obj_Slot_1[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_1[playerid] = "Vacío";
			    }
			    case 2:
			    {
                    RemovePlayerAttachedObject(playerid, 2);
				    format(string, sizeof(string), "Removiste el Slot 2: %s", Att_Obj_Slot_2[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_2[playerid] = "Vacío";
			    }
			    case 3:
			    {
                    RemovePlayerAttachedObject(playerid, 3);
				    format(string, sizeof(string), "Removiste el Slot 3: %s", Att_Obj_Slot_3[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_3[playerid] = "Vacío";
			    }
			    case 4:
			    {
                    RemovePlayerAttachedObject(playerid, 4);
				    format(string, sizeof(string), "Removiste el Slot 4: %s", Att_Obj_Slot_4[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_4[playerid] = "Vacío";
				}
			    default: Message(playerid, COLOR_GRAD2, "Slots: 0-4");
			}
		}
		else
		{
		    Message(playerid, COLOR_GRAD2, "- /qobjeto [slot(0-5)]     Remueve un objeto.");
			format(string, sizeof(string), "Slot 0 (MANOS) - %s", Att_Obj_Slot_0[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 1 (ESPALDA) - %s", Att_Obj_Slot_1[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 2 (CABEZA) - %s", Att_Obj_Slot_2[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 3 (OJOS) - %s", Att_Obj_Slot_3[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 4 (OTRO) - %s", Att_Obj_Slot_4[playerid]); Message(playerid, COLOR_GRAD2, string);
			return 1;
		}
		return 1;
	}
	// coordenadas:job ============================================================================================================================
    zcmd(trabajo, playerid, params[])
    {
        if(PlayerInfo[playerid][pJob] != 0) return Message(playerid, COLOR_GRAD2, "Debes renunciar a tu anterior trabajo antes /renunciar");
        if (PlayerToPoint(3.0, playerid, 1684.7078,-1944.5562,13.5469))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 1;
			PlayerInfo[playerid][pJobTime] = 4;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Chófer de tren por 4 horas.");
		}
		else if (PlayerToPoint(3.0, playerid, 2195.8293,-1972.7570,13.5730))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 2;
			PlayerInfo[playerid][pJobTime] = 4;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Recogedor de Basura por 4 horas.");
		}
		else if (PlayerToPoint(3.0, playerid, 1956.9806,-2183.5469,13.5469))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 3;
			PlayerInfo[playerid][pJobTime] = 4;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Piloto por 4 horas.");
		}
		else if (PlayerToPoint(3.0, playerid, 994.3551,-1296.4821,13.5469))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 4;
			PlayerInfo[playerid][pJobTime] = 4;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Vendedor de móviles por 4 horas.");
		}
		else if (PlayerToPoint(3.0, playerid, 2275.2427,-1105.6196,37.9766))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 5;
			PlayerInfo[playerid][pJobTime] = 4;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Ladrón por 4 horas.");
		}
		else if (PlayerToPoint(3.0, playerid, 378.3128,-119.6172,1001.4922))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
            PlayerInfo[playerid][pJob] = 6;
            PlayerInfo[playerid][pJobTime] = 4;
            UpdatePlayerStat(playerid);
            return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Pizzero por 4 horas.");
        }
        else if (PlayerToPoint(3.0, playerid, 986.9383,-1937.5042,2835.0078))
        {
            GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 7;
			PlayerInfo[playerid][pJobTime] = 4;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Pescador por 4 horas.");
        }
        else if (PlayerToPoint(3.0, playerid, 2215.5657,-2661.1208,13.5469))
        {
            GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
            PlayerInfo[playerid][pJob] = 8;
            PlayerInfo[playerid][pJobTime] = 4;
            UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Camionero por 4 horas.");
		}
		else if (PlayerToPoint(3.0, playerid, 1762.1024,-1915.1565,-8.1672))
		{
		    GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
            PlayerInfo[playerid][pJob] = 9;
            PlayerInfo[playerid][pJobTime] = 4;
            UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Taxista por 4 horas.");
		}
		else if (PlayerToPoint(3.0, playerid, -38.7022,55.7954,3.1172))
		{
		    GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
		    PlayerInfo[playerid][pJob] = 10;
		    PlayerInfo[playerid][pJobTime] = 4;
		    UpdatePlayerStat(playerid);
		    return Message(playerid, COLOR_WHITE, "Has firmado el contrado de Cosechador por 4 horas.");
  		}
  		else if (PlayerToPoint(3.0, playerid, -75.8972,-1105.9155,1.0781))
		{
		    GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
		    PlayerInfo[playerid][pJob] = 11;
		    PlayerInfo[playerid][pJobTime] = 4;
		    UpdatePlayerStat(playerid);
		    return Message(playerid, COLOR_WHITE, "Has firmado el contrado de Trailero por 4 horas.");
  		}
		return 1;
	}
	zcmd(renunciar, playerid, params[])	{
		if(PlayerInfo[playerid][pJob] > 0){
		    if(PlayerInfo[playerid][pJobTime] == 0){
		    	PlayerInfo[playerid][pJob] = 0;
		    	UpdatePlayerStat(playerid);
				return Message(playerid, COLOR_GRAD2, "* Has renunciado a tu trabajo, ya puedes obtener uno nuevo.");
			} else Message(playerid, COLOR_GRAD2, "No has cumplido tu contrato de 4 horas aun.");
		} else Message(playerid, COLOR_GRAD2, "* Tu no tienes trabajo.")
		return 1;
	}
	zcmd(vendertelefono, playerid, params[])
    {
        if(PlayerInfo[playerid][pJob] != 4) return Message(playerid, COLOR_GRAD1, "No eres vendedor de móviles!");
		if(!sscanf(params, "uii", params[0], params[1], params[2]))
		{
		    if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GRAD1, "¡ No estás cerca del jugador !");
		    if(params[0] != INVALID_PLAYER_ID)
		    {
		        new string[128];
		        if(params[1] > 999999 || params[1] < 1000) return Message(playerid, COLOR_GRAD2, "Número entre 4-6 cifras.");
		        if(params[2] < 1 || params[2] > 500) return Message(playerid, COLOR_GRAD2, "Precio entre 1 a 500.");
		        SetPVarInt(params[0], "NumSeller", playerid);
                SetPVarInt(params[0], "NumBuy", params[1]);
                SetPVarInt(params[0], "NumPrice", params[2]);
				Message(playerid, 0x00DCF4FF, "Ofreciste vender un telefono");
				format(string, sizeof(string), "* %s te ofrece venderte el número %d por %d$, utiliza /aceptar telefono", PlayerName(playerid), params[1], params[2]);
				return Message(params[0],0x00DCF4FF, string);
		    }
		}
		else Message(playerid, COLOR_GRAD2, "Utiliza: /vendertelefono <ID> <número> <precio>");
        return 1;
    }
    zcmd(ruta, playerid, params[])
    {
        new idcar = GetPlayerVehicleID(playerid);
        if(PlayerInfo[playerid][pJob] == 1)
		{
		    if(IsATrain(idcar))
		    {
		        if(GetPVarInt(playerid, "Train_Route") > 0) return Message(playerid, COLOR_GRAD2, "¡Ya estás en ruta!");
		        SetPVarInt(playerid, "Train_Route", 1);
		        SetPVarInt(playerid, "IDCarRoute", idcar);
		        Message(playerid, COLOR_GRAD2, "Dirígete al Checkpoint para recoger a la gente!");
		        SetPlayerCheckpoint(playerid, 805.1542,-1357.9359,-0.1724, 5.0);
		        GText(playerid, "~w~Proxima estacion:~n~~r~LS", 5000, 1);
		        TogglePlayerControllable(playerid, 1);
		        return 1;
		    }
		    else { Message(playerid, COLOR_GRAD2, "¡No estás en un tren!"); return 1; }
		}
		else if(PlayerInfo[playerid][pJob] == 3)
		{
		    if(IsAPlane(idcar))
		    {
		        if(GetPVarInt(playerid, "Plane_Route") > 0) return Message(playerid, COLOR_GRAD2, "¡Ya estás en ruta!");
                SetPVarInt(playerid, "Plane_Route", 1);
                SetPVarInt(playerid, "IDCarRoute", idcar);
		        Message(playerid, COLOR_GRAD2, "Aterriza en los diferentes aereopuertos de San Andreas.");
		        SetPlayerCheckpoint(playerid,1481.7509,1557.6327,11.7434, 15.0);
		        GText(playerid, "~w~Proximo destino:~n~~r~Aereopuerto de Las venturas", 5000, 1);
		        TogglePlayerControllable(playerid, 1);
		        return 1;
		    }
		    else { Message(playerid, COLOR_GRAD2, "¡No estás en un avión!"); return 1; }
		}
		else if(PlayerInfo[playerid][pJob] == 11)
		{
		    if(IsATrailer(idcar))
		    {
		        if(GetPVarInt(playerid, "Trailer_Route") > 0) return Message(playerid, COLOR_GRAD2, "Ya estás en ruta.");
		        SetPVarInt(playerid, "Trailer_Route", 1);
				Message(playerid, COLOR_GRAD2, "Debes ir a los diferentes puntos que te va marcando el mapa entregando la gasolina.");
		        SetPlayerCheckpoint(playerid,1769.0547,-1736.0787,13.3828, 5.0);
		        TogglePlayerControllable(playerid, 1);
		        return 1;
		    }
		    else { Message(playerid, COLOR_GRAD2, "No estás en un trailer."); return 1; }
		}
		else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        return 1;
    }
    zcmd(cancelarentrega, playerid, params[])
    {
        new idcar = GetPlayerVehicleID(playerid);
        if(IsACamion(idcar) && GetPVarInt(playerid, "Camion") == idcar)
        {
        	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
       		RemovePlayerFromVehicle(playerid);
  		}
  		DeletePVar(playerid, "Camion");
       	Mercancia[playerid] = 0;
       	PlayerIsRuta[playerid] = 0;
       	PlayerCargando[playerid] = 0;
       	PlayerDescargando[playerid] = 0;
       	DisablePlayerCheckpoint(playerid);
		Message(playerid, COLOR_GRAD2, "¡Has cancelado la entrega de la mercancía de tu camión!");
		return 1;
   	}
    zcmd(dbarrer, playerid, params[])
    {
        if(BasuraPunto[playerid] > 0)
	  	{
	   		DisablePlayerCheckpoint(playerid);
	     	BasuraPunto[playerid] = 0;
			DeletePVar(playerid, "Basurero");
	      	SendClientMessage(playerid, COLOR_WHITE, "Has dejado de barrer.");
	      	if(IsABasurero(GetPlayerVehicleID(playerid)))
	      	{
		      	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		       	RemovePlayerFromVehicle(playerid);
	       	}
	  	}
  		else Message(playerid, COLOR_GREY, "¡No estás barriendo!");
        return 1;
    }
    zcmd(vermapa, playerid, params[]){
        new string[128];
        if(PlayerInfo[playerid][pJob] == 7){
            if(PlayerInfo[playerid][pImplementos] == 1){
        		SetPlayerCheckpoint(playerid, 4966.4873,-1777.7911,-1.2480, 30.0);
        		format(string, sizeof(string), "* %s saca su mapa del bolsillo y lo mira.", PlayerName(playerid));
        		ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
        		Message(playerid, COLOR_WHITE, "* Se han marcado en el mapa un lugar disponible para pescar.");
      		} else Message(playerid, COLOR_GRAD2, "¡No tienes implementos de pesca!");
       	} else Message(playerid, COLOR_GRAD2, "¡No eres pescador!");
       	return 1;
    }
    zcmd(pescar, playerid, params[]){
        new string[128];
    	if(PlayerInfo[playerid][pJob] == 7){
            if(PlayerInfo[playerid][pImplementos] == 1){
				if(PlayerInfo[playerid][pCarnada] >= 100){
				    if(PlayerToPoint(100.0, playerid, 4966.4873,-1777.7911,-1.2480)){
				        if(PlayerInfo[playerid][pPeces] < 100){
				            if(GetPVarInt(playerid, "Fishing") == 0){
                        		format(string, sizeof(string), "* %s le pone la carnada a las redes y las lanza al mar.", PlayerName(playerid));
        						ProxDetectorEx(25.0, playerid, string, COLOR_PURPLE);
                        		Message(playerid, COLOR_WHITE, "* Ahora debes esperar 2 minutos para que las redes atrapen peces.");
                        		SetTimerEx("Pescando", 120000, false, "i", playerid);
                        		PlayerInfo[playerid][pCarnada] -= 100;
                        		SetPVarInt(playerid, "Fishing", 1);
                        		new GRI = random(2);
                        		if(GRI == 1) PlayerInfo[playerid][pGripe] += 1;
                        		return 1;
                        	} else Message(playerid, COLOR_GRAD2, "¡Ya estas pescando, espera...!");
						} else Message(playerid, COLOR_GRAD2, "¡Ya tienes demasiados peces en el barco, primero ve y vendelos en el puerto!");
					} else Message(playerid, COLOR_GRAD2, "¡No estás en el lugar adecuado!");
				} else Message(playerid, COLOR_GRAD2, "¡No tienes carnada!");
            } else Message(playerid, COLOR_GRAD2, "¡No tienes implementos de pesca!");
        } else Message(playerid, COLOR_GRAD2 , "¡No eres pescador!");
        return 1;
    }
    zcmd(peces, playerid, params[])
    {
        new string[128];
        format(string, sizeof(string), "* Usted cuenta con un total de %d peces y %d carnadas", PlayerInfo[playerid][pPeces],PlayerInfo[playerid][pCarnada]);
		Message(playerid, COLOR_GRAD4, string);
        return 1;
    }
    // zcmd: mecas ============================================================================================================================
    zcmd(mm, playerid, params[])
    {
        if(Team_Mecanicos(playerid))
    	{
     		if(GetPVarType(playerid, "OnDuty") == 0) return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
	    	return ShowPlayerDialog(playerid, MECANICO_MENU, DIALOG_STYLE_LIST, "-> Mecánico Menú <-", "Repararaciones\nGasolinera\nPiezas\nEmbargar\nRemolcar\nOtros", ">>", "<<");
		}
		else Message(playerid, COLOR_GRAD2, "¡No eres mecánico!");
		return 1;
    }
    zcmd(vendertanque, playerid, params[])
    {
        if(Team_Mecanicos(playerid))
        {
            if(GetPVarType(playerid, "OnDuty") == 0) return Message(playerid, COLOR_GRAD2, "No estás de servicio.");
			if(!IsAtTaller(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en el taller.");
            if(!sscanf(params, "ud", params[0], params[1]))
            {
                if(PlayerVehicleInfo[params[0]][(params[1]-1)][pvModel] != 0)
                {
                    new string[86];
					PlayerVehicleInfo[params[0]][(params[1]-1)][pvTanque] = 1;
					format(string, sizeof string, "* %s te ha dado un tanque de gasolina para tu auto slot %d.", PlayerName(playerid), params[1]);
					Message(playerid, COLOR_WHITE, string);
					return 1;
                } else Message(playerid, COLOR_GRAD2, "El usuario no tiene un vehículo en ese slot.");
            } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /vendertanque <PlayerID> <Slot de Vehículo 1-2-3-4>");
        } else Message(playerid, COLOR_GRAD2, "No eres mecánico.");
		return 1;
	}
    // zcmd: cosechador ============================================================================================================================
    zcmd(cosechar, playerid, params[])
    {
        if(PlayerInfo[playerid][pJob] != 10) return Message(playerid, COLOR_GRAD2, "No eres cosechador.");
        if(GetPVarInt(playerid, "DrugFarming") != 0) return Message(playerid, COLOR_GREY, "¡Ya estás cosechando droga!");
        if(Harvest_Vehicle(GetPlayerVehicleID(playerid)))
	    {
	    	SetPVarInt(playerid, "DrugFarming", 1);
	     	TogglePlayerControllable(playerid, 1);
	      	new randomize;
	       	randomize = random(sizeof(gDrugFarmVar));
	      	SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
	      	Message(playerid, COLOR_WHITE, "Si deseas parar de cosechar, sal del vehículo.");
	      	Message(playerid, COLOR_WHITE, "Dirígete a los Checkpoints.");
	    }
		else Message(playerid, COLOR_GREY, "¡No estás en una cosechadora!");
        return 1;
    }
    zcmd(cobrarcosecha, playerid, params[])
    {
        if(PlayerInfo[playerid][pJob] != 10) return Message(playerid, COLOR_GRAD2, "No eres cosechador.");
        if(!PlayerToPoint(10.0, playerid, -28.1515,61.8475,3.1172)) return Message(playerid, COLOR_GRAD2, "No estas en el lugar indicado.");
		if(PlayerInfo[playerid][pDrugs] > 0)
		{
		    new string[50], ganancias = PlayerInfo[playerid][pDrugs]*4;
			Earn(playerid, ganancias);
			format(string, sizeof string, "* Has cobrado tu cosecha y has ganado %d$.", PlayerInfo[playerid][pDrugs]*2);
			Message(playerid, COLOR_WHITE, string);
            PlayerInfo[playerid][pDrugs] = 0;
   		}
		return 1;
    }
    zcmd(micosecha, playerid, params[])
    {
        new string[50];
        if(PlayerInfo[playerid][pJob] != 10) return Message(playerid, COLOR_GRAD2, "No eres cosechador.");
		format(string, sizeof(string), "* Tienes %d gramos de drogas cosechados.", PlayerInfo[playerid][pDrugs]);
		Message(playerid, COLOR_GRAD4, string);
		return 1;
    }
    zcmd(avastecerme, playerid, params[])
    {
        new string[60];
        if(!Pandilleros(playerid) && GetPlayerFactionType(playerid) != 2) return Message(playerid, COLOR_GRAD2, "¡No eres pandillero!");
        if(PlayerInfo[playerid][pRecoger] > 0)	{ format(string, sizeof string, "* Aun debes esperar %d paydays para poder avastecerte.", PlayerInfo[playerid][pRecoger]); Message(playerid, COLOR_GRAD2, string); return 1; }
        if(PlayerToPoint(10.0, playerid, -60.2980,83.5256,3.1172))
        {
	        ShowPlayerDialog(playerid, DROGAS_BANDAS, DIALOG_STYLE_LIST, "Selecciona la droga que quieras:", "Speed\nExtasis\nRitalin\nHeroina\nMarihuana", "Aceptar", "Cancelar");
		} else Message(playerid, COLOR_GRAD2, "No estas en el lugar adecuado.");
		return 1;
    }
    zcmd(terminar, playerid, params[])
	{
	    if(!Pandilleros(playerid) && GetPlayerFactionType(playerid) != 2) return Message(playerid, COLOR_GRAD2, "¡No eres pandillero!");
	    if(GetPVarInt(playerid, "RecogiendoDrogas") > 0)
	    {
	        DeletePVar(playerid, "RecogiendoDrogas");
	        DeletePVar(playerid, "TipoDroga");
	        DisablePlayerCheckpoint(playerid);
	        Message(playerid, COLOR_GRAD2, "Has terminado de recoger drogas.");
     	} else Message(playerid, COLOR_GRAD2, "No estas recogiendo drogas.");
		return 1;
	}
    zcmd(venderdrogas, playerid, params[])
    {
		if(!Pandilleros(playerid) && GetPlayerFactionType(playerid) != 2) return Message(playerid, COLOR_GRAD2, "No eres pandillero.");
        if(sscanf(params,"uiid",params[0],params[1],params[2],params[3]))
		{
	        Message(playerid, COLOR_GRAD2, "Utiliza: /venderdrogas [ID] <#Tipo> <Cantidad> <Precio>");
	        return Message(playerid, COLOR_GRAD2, "Tipos: 1 - Speed || 2 - Extasis || 3 - Ritalin || 4 - Heroina || 5 - Marihuana");
		}
		new string[128], drug[12];
		if(IsPlayerConnected(params[0]))
	 	{
	 	    if(params[2] < 1) return Message(playerid, COLOR_GRAD2, "La cantidad no puede ser menor a 1.");
			if(params[3] < 1) return Message(playerid, COLOR_GRAD2, "El precio no puede ser menor a 1.");
			if(params[3] <= params[2]*500)
			{
			    if(params[3] > GetPlayerMoney(params[0])) return Message(playerid, COLOR_GRAD2, "Ese jugador no tiene la cantidad de dinero que pides.");
	    	    if(!ProxDetectorS(5.0,playerid, params[0])) return Message(playerid, COLOR_GRAD2, "Persona muy lejos.");
				switch(params[1])
				{
				    case 1:{
				        if(PlayerInfo[playerid][pSpeed] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
				        drug = "Speed";
        			}
        			case 2:{
				        if(PlayerInfo[playerid][pEctasy] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
				        drug = "Extasis";
			        }
			        case 3:{
				        if(PlayerInfo[playerid][pRitalin] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
				        drug = "Ritalin";
			        }
			        case 4:{
			            if(PlayerInfo[playerid][pHeroina] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
               			drug = "Heroina";
					}
					case 5:{
					    if(PlayerInfo[playerid][pMarihuana] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					    drug = "Marihuana";
	    			}
	    			default: { Message(playerid, COLOR_GRAD2, "ITEM INCORRECTO!"); return 1; }
  				}
  				SetPVarInt(params[0], "BuyNarco", playerid);
  				SetPVarInt(params[0], "NarcoSellArm", params[1]);
  				SetPVarInt(params[0], "NarcoSellAmmo", params[2]);
       			SetPVarInt(params[0], "NarcoSellPrice", params[3]);
				format(string, sizeof(string), "DEMANDA DE DROGAS (%s)\n Drogas: %d - Tipo: %s - Precio: %d$",PlayerName(playerid),params[2],drug,params[3]);
				ShowPlayerDialog(params[0], CONFIRM_DRUGS_DIALOG, DIALOG_STYLE_MSGBOX, "Comprar drogas", string, "Aceptar", "Cancelar");
				Message(playerid, COLOR_GRAD2, "- Ofreciste venderle drogas, espera.");
				return 1;
			} else Message(playerid, COLOR_GRAD2, "* Solo se permite un máximo de 500$ por cada gramo.");
		} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        return 1;
    }
	// Mafias Armas
    zcmd(fabricar, playerid, params[])
    {
        if(PlayerToPoint(10.0,playerid,2335.7617,1489.6168,43.1156) || PlayerToPoint(10.0,playerid,1124.2131,-2028.9893,-97.5987))
        {
	        if(Mafioso(playerid))
			{
			    ShowPlayerDialog(playerid,CREATE_WEAPON,DIALOG_STYLE_LIST,"Fábrica de Armas",   \
				"Arma		\tMateriales \tMunición/Unidades\n" \
				"Navaja 	\t\t25 \t1\n" \
				"Bate 		\t40 \t1\n" \
				"Katana		\t80 \t1\n" \
				"C.Molotov 	\t120 \t1\n" \
				"9mm 		\t200 \t100\n" \
				"D.Eagle 	\t300 \t100\n" \
				"S.Pistol 	\t280 \t100\n" \
				"Shotgun	\t450 \t60\n" \
				"SPAS12		\t500 \t60\n" \
				"MP5		\t190 \t150\n" \
				"AK47		\t200\t150\n" \
				"M4			200 \t150\n" \
				"Rifle		\t420 \t25\n" \
				"Sniper		\t500 \t30\n" \
				"Chaleco	\t100 \t1\n" \
				,"Aceptar","Salir");
			} else Message(playerid, COLOR_GRAD2, "No eres mafioso.");
		} else Message(playerid, COLOR_GRAD2, "No estas en la fabrica.");
        return 1;
    }
    zcmd(venderarma, playerid, params[])
    {
        if(!Mafioso(playerid)) return Message(playerid, COLOR_GREY, "¡No eres un mafioso!");
        new gunname[12], string[128];
        if(GetPlayerWeapon(playerid) == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningún arma en mano!");
        if(sscanf(params, "ud", params[0], params[1])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /venderarma <ID> <Precio>");
        if(PlayerInfo[params[0]][pLevel] < 2) return Message(playerid, COLOR_GRAD2, "No puedes vender un arma a un nivel 1.");
		if(params[1] < 1 || params[1] > 2500) return Message(playerid, COLOR_GRAD2, "Precio: 1 - 2500$");
		if(IsPlayerConnected(params[0]))
		{
		    if(ProxDetectorS(5.0,playerid, params[0]))
		    {
		        GetWeaponName(GetPlayerWeapon(playerid),gunname, sizeof(gunname));
		        SetPVarInt(params[0], "BuyNarco", playerid);
		        SetPVarInt(params[0], "NarcoSellPrice", params[1]);
				SetPVarInt(params[0], "NarcoSellArm", GetPlayerWeapon(playerid));
				SetPVarInt(params[0], "NarcoSellAmmo", GetPlayerAmmo(playerid));
				format(string, sizeof(string), "\t\tComprar %s (Balas:%d)\n\tEl Mafioso %s te ha ofrecido que le compres un arma. ¿Aceptas?",gunname,GetPVarInt(params[0], "NarcoSellAmmo"),PlayerName(playerid));
				SendRequest(params[0],string);
				SetPVarInt(params[0], "Facturing", 1);
				SetPVarInt(params[0], "Petition_ID", 2);
				Message(playerid, COLOR_GRAD2, "- Ofreciste venderle el arma, espera.");
				return 1;
		    }
		    else { Message(playerid, COLOR_GRAD2, "¡Muy lejos de este jugador!"); return 1; }
		}
        return 1;
    }
    // zcmd: Buys =============================================================================================
	zcmd(comprar, playerid, params[])
    {
		if(PlayerToPoint(20, playerid,2420.7917,2468.5427,69.4834))
		{
  			return ShowPlayerDialog(playerid, DIALOG_FARMACIA, DIALOG_STYLE_LIST, "Farmacia + 24h","Condón (3$)\nPastilla Gripe (10$)\nParches de Nicotina (30$)\nEnergisyl (40$)\nAntiEpilectica (500$)\nPastillas Cancer (800$)", "Comprar", "Salir");
		}
		else if (PlayerToPoint(10, playerid, 1143.4807,-1880.8014,851.0969))
		{
		    return ShowPlayerDialog(playerid, COMPRAR_JOYAS, DIALOG_STYLE_LIST, "Joyeria Andes", "Anillo de Compromiso (25000$)\nAnillo de Oro (50000$)\nCollar de Perlas (100000$)\nAnillo de Diamantes (200000$)\nPulsera de oro (80000$)\nAretes de Diamantes (10000$)\nReloj de Oro (46000$)","Comprar", "Salir");
		}
		else if (PlayerToPoint(20, playerid,-103.81,-22.63,1000.72))
		{
  			return ShowPlayerDialog(playerid, DELE_BUY_SEX, DIALOG_STYLE_LIST, "Sex Shop","Ropa De Mujer\nRopa De Hombre\nJuguetes De Diversion", "Comprar", "Salir");
		}
		else if (PlayerToPoint(20.0,playerid,1405.3442,-1462.2827,3516.9150))
		{
		    return ShowPlayerDialog(playerid, ELECTRONIC_BUY, DIALOG_STYLE_LIST, "Tienda Electronica", "1.\tiPhone\t\t\t\t(400$)\n2.\tCámara\t\t\t\t(120$)\n3.\tWalkie\t\t\t\t(260$)", "Comprar", "Cancelar");
  		}
		else if(IsAt247(playerid))
		{
  			return ShowBuyMenu(playerid);
		}
		return 1;
    }
    zcmd(recargar, playerid, params[]){
        if(IsAt247(playerid)){
            if(GetPlayerMoney(playerid) > 200){
            	if(PlayerInfo[playerid][pPnumber] != 0) {
            		ShowPlayerDialog(playerid, RECARGA_PHONE, DIALOG_STYLE_INPUT, "{018CFE}Operadora de Telefonia Celular OTECEL", "{FFFFFF}Ingresa tu numero celular para realizar la recarga", "Aceptar", "Cancelar");
            	} else Message(playerid, COLOR_GRAD2, "No tienes teléfono, cómpra uno en el 24/7");
			} else Message(playerid, COLOR_GRAD2, "¡Necesitas tener como mínimo $200!");
		} else Message(playerid, COLOR_GRAD2, "¡No estás en un 24-7!");
        return 1;
    }
    zcmd(cropa, playerid, params[])
    {
        if(!IsAtClothShop(playerid) && PlayerInfo[playerid][pDonateT] < 2) return Message(playerid, COLOR_GRAD2, "¡No estás en una tienda de Ropa!");
        DestroySelectionMenu(playerid);
        gTotalItems[playerid] = TOTAL_SKINS;
        SetPVarInt(playerid, "ModelsActive", 1);
        SetPVarInt(playerid, "ModelsSkins", 1);
        SetPVarInt(playerid, "ModelsType", 1);
        SetPVarString(playerid, "ModelsName", "Tienda de Ropa");
        CreateSelectionMenu(playerid);
	    SelectTextDraw(playerid, 0xACCBF1FF);
        return 1;
    }
    // zcmd: chat ===================================================================================================================
    zcmd(me, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Maskuse[playerid] == 1) format(string, sizeof(string), "* Desconocido %s.", params[0]);
			else format(string, sizeof(string), "* %s %s.", PlayerName(playerid), params[0]);
            ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /me <Acción>");
        return 1;
    }
    zcmd(b, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            format(string, sizeof(string), "(( %s(%d) dice: %s ))", PlayerName(playerid), playerid, params[0]);
			ProxDetectorBcmd(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /b <Canal OOC>");
        return 1;
    }
    zcmd(c, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Maskuse[playerid] == 1)	format(string, sizeof(string), "Desconocido dice: %s", params[0]);
            else format(string, sizeof(string), "%s dice: %s", PlayerName(playerid), params[0]);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /c <Texto>");
        return 1;
    }
    zcmd(intentar, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(GetPVarInt(playerid, "Intentar") > 0) return Message(playerid, COLOR_GRAD2, "Espera 10 segundos para volver a utilizar este comando!");
        new randa = random(2)+1, string[128];
        if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /intentar <Acción>");
		if(Maskuse[playerid] == 1){
			if(randa == 1){
				format(string, sizeof(string), "* Desconocido consigue %s.", params[0]);
				ProxDetectorEx(20.0, playerid, string, 0x00BF60FF);
			}
			else{
				format(string, sizeof(string), "* Desconocido no logra %s.", params[0]);
				ProxDetectorEx(20.0, playerid, string, 0xB90000FF);
			}
			SetPVarInt(playerid, "Intentar", 1);
			SetTimerEx("IntentarTimer", 10000, false, "i", playerid);
			return 1;
		}
		else{
			if(randa == 1){
				format(string, sizeof(string), "* %s consigue %s.", PlayerName(playerid), params[0]);
				ProxDetectorEx(20.0, playerid, string, 0x00BF60FF);
			}
			else{
				format(string, sizeof(string), "* %s no logra %s.", PlayerName(playerid), params[0]);
				ProxDetectorEx(20.0, playerid, string, 0xB90000FF);
			}
			SetPVarInt(playerid, "Intentar", 1);
			SetTimerEx("IntentarTimer", 10000, false, "i", playerid);
			return 1;
		}
    }
    zcmd(do, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Maskuse[playerid] == 1) format(string, sizeof(string), "* Desconocido (( %s )).", params[0]);
			else format(string, sizeof(string), "* %s (( %s )).", PlayerName(playerid), params[0]);
            ProxDetectorEx(30.0, playerid, string, 0xB6DB22FF);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /do <Acción>");
        return 1;
    }
    zcmd(s, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Maskuse[playerid] == 1) format(string, sizeof(string), "Desconocido susurra: %s", params[0]);
			else format(string, sizeof(string), "%s susurra: %s", PlayerName(playerid), params[0]);
            ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /s <Texto>");
        return 1;
    }
    zcmd(j, playerid, params[]){
	if(PlayerInfo[playerid][pAdminCP] < 1) return  Message(playerid, COLOR_GRAD2,"{DC092F}No Autorizado.");
	if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params, "s[128]", params[0])){
            new string[128];
			format(string, sizeof(string), "%s Administrador dice: %s", PlayerName(playerid), params[0]);
            ProxDetectorEx(30.0, playerid, string,ORANGE_ADMIN);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /j <Texto>");
        return 1;
    }
    zcmd(g, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Maskuse[playerid] == 1) format(string, sizeof(string), "Desconocido grita: ¡¡ %s !!", params[0]);
			else format(string, sizeof(string), "%s grita: ¡¡ %s !!", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /g <Texto>");
        return 1;
    }
    zcmd(nomps, playerid, params[])
    {
        new nick[24];
        GetPlayerName(playerid, nick, 24);
        if(!strcmp(nick, "Mike_West", true) || !strcmp(nick, "Jhon_West", true))
		{
            if(GetPVarInt(playerid, "LockMPs") == 0)
            {
                SetPVarInt(playerid, "LockMPs", 1);
                Message(playerid, COLOR_GRAD2, "* Has bloqueado la lectura de tus whispers.");
            }
            else {
                DeletePVar(playerid, "LockMPs");
                Message(playerid, COLOR_GRAD2, "* Has desbloqueado la lectura de tus whispers.");
            }
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
    }
    zcmd(w, playerid, params[])
    {
        if(!sscanf(params, "us[90]", params[0], params[1]))
        {
            if(params[0] != INVALID_PLAYER_ID)
    		{
	      		if(PlayerInfo[playerid][pAdminCP] > 0 || PlayerInfo[params[0]][pAdminCP] > 0)
	        	{
	         		if(PlayerInfo[playerid][pAdminCP] > 0 || MPToAdmin[playerid][0] == params[0] || MPToAdmin[playerid][1] == params[0] || MPToAdmin[playerid][2] == params[0] || MPToAdmin[playerid][0] == params[3] || MPToAdmin[playerid][4] == params[0] || MPToAdmin[playerid][5] == params[0])
	         		{
	         			new string[140];
						format(string, sizeof(string), "Mensaje de %s (%d): %s", PlayerName(playerid), playerid, params[1]);
						Message(params[0], 0xE9BC0AFF, string);
						format(string, sizeof(string), "Susurras a %s (%d): %s", PlayerName(params[0]), params[0] ,params[1]);
						Message(playerid,  0xE9BC0AFF, string);
						format(string, sizeof(string), "* %s susurra a %s: %s", PlayerName(playerid), PlayerName(params[0]), params[1]);
						Log("Logs/Whispers.log", string);
						if(GetPVarInt(playerid, "LockMPs") == 0 && GetPVarInt(params[0], "LockMPs") == 0)
						{
	    					for(new i = 0; i < MAX_ADMINS_MPS; i++)
				    		{
								if(AdminMPS[i] != 999)
								{
									if(GetPVarInt(AdminMPS[i], "See_MP") == 1)
     	    						{
         								format(string, sizeof(string), ":MP: %s(%d) a %s(%d): %s", PlayerName(playerid), playerid, PlayerName(params[0]), params[0], params[1]);
  	            						Message(AdminMPS[i], 0xFF8000FF, string);
			    	        		}
      							}
					    	}
 						}
 					} else Message(playerid, COLOR_GRAD2, "* No tienes permisos para whispear a esta persona, usa /duda.");
				} else Message(playerid, COLOR_GRAD2, "¡Susurros solo ha administradores!");
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /w <PlayerID> <Texto>");
        return 1;
    }
    zcmd(darw, playerid, params[])
    {
        new string[80];
        if(PlayerInfo[playerid][pAdminCP] > 0)
        {
            if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
            if(!sscanf(params, "u", params[0]))
            {
                if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
                if(PlayerInfo[params[0]][pAdminCP] > 0) return Message(playerid, COLOR_GRAD2, "* No puedes usar este comando con un administrador.");
                if(MPToAdmin[params[0]][0] != 999 && MPToAdmin[params[0]][1] != 999 && MPToAdmin[params[0]][2] != 999 && MPToAdmin[params[0]][3] != 999 && MPToAdmin[params[0]][4] != 999 && MPToAdmin[params[0]][5] != 999) return Message(playerid, COLOR_GRAD2, "* Ese usuario no tiene mas slots de permisos disponibles.");
                if(MPToAdmin[params[0]][0] == playerid || MPToAdmin[params[0]][1] == playerid || MPToAdmin[params[0]][2] == playerid || MPToAdmin[params[0]][3] == playerid || MPToAdmin[params[0]][4] == playerid || MPToAdmin[params[0]][5] == playerid)
                {
	                Whispers(params[0], playerid, 1);
	                format(string, sizeof string, "* Le has quitado el permiso para whispearte a %s.", PlayerName(params[0]));
	                Message(playerid, COLOR_GRAD2, string);
    	            return 1;
   	            }
   	            else
   	            {
   	                Whispers(params[0], playerid, 2);
   	                format(string, sizeof string, "* Le has dado permiso para whispearte a %s.", PlayerName(params[0]));
	                Message(playerid, COLOR_GRAD2, string);
   	                return 1;
                }
            } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /darw <PlayerID>");
        } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        return 1;
    }
    zcmd(checkw, playerid, params[])
    {
        new string[40];
        if(PlayerInfo[playerid][pAdminCP] > 0)
        {
      		if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
            if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /checkw <PlayerID>");
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
            format(string, sizeof string, "Permisos de %s:", PlayerName(params[0]));
    		Message(playerid, COLOR_GREEN, string);
            for(new d=0; d < 6; d++)
            {
				if(MPToAdmin[params[0]][d] != 999)
				{
				    format(string, sizeof string, "* Admin %s", PlayerName(MPToAdmin[params[0]][d]));
				    Message(playerid, COLOR_GRAD2, string);
    			}
 			}
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        return 1;
    }
	zcmd(verw, playerid, params[])
	{
	    new string[40];
	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
	    {
	        if(!sscanf(params, "u", params[0]))
			{
			    if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
			    if(PlayerInfo[params[0]][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "* Solo puedes usar este comando con administradores.");
			    format(string, sizeof string, "Whispers a %s:", PlayerName(params[0]));
			    Message(playerid, COLOR_GREEN, string);
			    for(new i=0; i < MAX_PLAYERS; i++)
			    {
			        if(IsPlayerConnected(i))
			        {
				        for(new d=0; d < 6; d++)
				        {
				            if(MPToAdmin[i][d] == params[0])
				            {
			    	            format(string, sizeof string, "* %s", PlayerName(i));
			        	        Message(playerid, COLOR_GRAD2, string);
               				}
        				}
        			}
    			}
			} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /verw <PlayerID>");
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
	}
	zcmd(misw, playerid, params[])
	{
	    new string[40];
		Message(playerid, COLOR_GREEN, "Mis permisos de whispers:");
	    for(new d=0; d < 6; d++)
	    {
			if(MPToAdmin[playerid][d] != 999)
			{
	            format(string, sizeof string, "* Admin %s", PlayerName(MPToAdmin[playerid][d]));
	            Message(playerid, COLOR_GRAD2, string);
	        }
   		}
   		return 1;
	}
    zcmd(ita, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás conectado!");
        if(!Mafia_Italiana(playerid)) return Message(playerid, COLOR_GRAD2, "¡No sabes Italiano!");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 12 || PlayerInfo[i][pLeader] == 12)
						{
					    	format(string, sizeof(string), "%s dice: [Italiano] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /ita <Texto>");
		return 1;
	}
	zcmd(rus, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás conectado!");
        if(!Mafia_Rusa(playerid)) return Message(playerid, COLOR_GRAD2, "¡No sabes Ruso!");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 11 || PlayerInfo[i][pLeader] == 11)
						{
					    	format(string, sizeof(string), "%s dice: [Ruso] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /rus <Texto>");
		return 1;
	}
    zcmd(aooc, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] > 3 || PlayerInfo[playerid][pFacciones] == 1)
        {
            if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        	if(!sscanf(params, "s[128]", params[0]))
        	{
            	new string[128];
        		format(string, sizeof(string), "[AOOC] Admin %s: %s " , PlayerName(playerid), params[0]);
				GlobalMsg(0x62B382AA,string);
			} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /aooc <Texto>");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        return 1;
    }
    zcmd(mps, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(GetPVarInt(playerid, "See_MP") == 0)
		{
		    SetPVarInt(playerid, "See_MP", 1);
			Message(playerid, COLOR_GRAD2, "- Notificación de mensajes privados activada.");
		}
        else if(GetPVarInt(playerid, "See_MP") == 1)
		{
		    DeletePVar(playerid, "See_MP");
			Message(playerid, COLOR_GRAD2, "- Notificación de mensajes privados desactivada.");
		}
        return 1;
    }
    zcmd(pastilla, playerid, params[])
    {
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"gripe",true) == 0)
	        {
	            if(GetPVarInt(playerid, "Gripe") > 0)
	            {
					SetPVarInt(playerid, "Gripe", GetPVarInt(playerid, "Gripe")-1);
					format(string, sizeof(string), "* %s coje una pastilla y se la toma.", PlayerName(playerid));
   					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					format(string, sizeof(string), "Has tomado una pastilla para la gripe, te quedan %d", GetPVarInt(playerid, "Gripe"));
					Message(playerid, COLOR_WHITE, string);
   					SetPlayerDrunkLevel(playerid, 2000);
   					if(PlayerInfo[playerid][pGripe] > 10) PlayerInfo[playerid][pGripe] -= 3;
   					return 1;
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"nicotina",true) == 0)
	        {
	            if(cNicotina[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(GetPVarInt(playerid, "Nicotina") > 0)
	            {
					SetPVarInt(playerid, "Nicotina", GetPVarInt(playerid, "Nicotina")-1);
					format(string, sizeof(string), "Te has puesto un parche de Nicotina, te quedan %d", GetPVarInt(playerid, "Nicotina"));
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se coloca un parche de nicotina.", PlayerName(playerid));
   					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
   					cNicotina[playerid] = 1;
   					return 1;
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"energysil",true) == 0)
	        {
	            if(cEnergysil[playerid] == 1) return Message(playerid, COLOR_GRAD2, "  Ya has tomado una!");
	            if(GetPVarInt(playerid, "Energysil") > 0)
	            {
					SetPVarInt(playerid, "Energysil", GetPVarInt(playerid, "Energysil")-1);
					format(string, sizeof(string), "Consumes 1 Energysil, te quedan %d", GetPVarInt(playerid, "Energysil"));
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se siente con más energía.", PlayerName(playerid));
   					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
   					cEnergysil[playerid] = 1;
   					SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pDEagle]);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pShotgun]+50);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pMP5]+50);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pAK47]+50);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pM4]+100);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, PlayerInfo[playerid][pSniper]+50);
					PlayerDrunk[playerid] -= 5;
					new Float:HP; GetPlayerHealth(playerid, HP);
					SetHP(playerid, HP+50);
					return 1;
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"cancer",true) == 0)
	        {
	            if(cCancer[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(PlayerInfo[playerid][pAntiCancer] > 0)
	            {
					PlayerInfo[playerid][pAntiCancer] -= 1;
					format(string, sizeof(string), "Te has tomado la pastilla para curar el cancer, te quedan %d", PlayerInfo[playerid][pAntiCancer]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se toma una pastilla.", PlayerName(playerid));
   					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
   					if(PlayerInfo[playerid][pCancer] > 120)
	                {
	                    format(string, sizeof(string), "* %s tose y escupe la pastilla.", PlayerName(playerid));
   						ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
   						SetPlayerDrunkLevel(playerid, 10000);
	                }
   					else
   					{
   					    cCancer[playerid] = 1;
   					    PlayerInfo[playerid][pCancer] -= 3;
					}
					return 1;
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"epilepsia",true) == 0)
	        {
	            if(cEpilepsia[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(PlayerInfo[playerid][pAntiEpilepsia] > 0)
	            {
					PlayerInfo[playerid][pAntiEpilepsia] -= 1;
					format(string, sizeof(string), "Te has tomado la pastilla para evitar la epilepsia, te quedan %d", PlayerInfo[playerid][pAntiEpilepsia]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se toma una pastilla.", PlayerName(playerid));
   					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
   					cEpilepsia[playerid] = 1;
   					PlayerInfo[playerid][pEpilepsia] -= 1;
   					return 1;
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /pastilla <nombre>");
            Message(playerid, COLOR_GRAD2, "Nombres: Gripe, Nicotina, Energysil, Cancer, Epilepsia");
        }
        return 1;
    }
    zcmd(usardrogas, playerid, params[])
    {
        if(UsingDrugs[playerid] == 1) return Message(playerid, COLOR_WHITE, "¡Estás con el efecto de la droga aún!");
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"speed",true) == 0)
	        {
	            if(PlayerInfo[playerid][pSpeed] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes Speed!");

	            SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 999);
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);

				PlayerInfo[playerid][pEpilepsia] += 4;
				PlayerInfo[playerid][pCancer] += 4;

				format(string, sizeof(string), "* %s consume un polvo blanco.", PlayerName(playerid));
   				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
   				ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
				UsingDrugs[playerid] = 1 ;
   				Message(playerid, COLOR_WHITE, "Has tomado speed, el efecto de la droga durará 2 minutos");
   				PlayerInfo[playerid][pSpeed] -= 1;
   				new timer = SetTimerEx("SpeedEffectEnd", 120000, true, "i", playerid);
   				SetPVarInt(playerid, "DrugTimer", timer);
   				return 1;
			}
			else if(strcmp(params[0],"extasis",true) == 0)
	        {
	            if(PlayerInfo[playerid][pEctasy] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes pastillas de extasis!");

	            PlayerInfo[playerid][pEpilepsia] += 4;
	            new Mareo = random(50000), Float:Health, Vida = random(80);

				SetPlayerDrunkLevel(playerid, Mareo);
				GetPlayerHealth(playerid, Health);
				SetHP(playerid, Health+Vida);
				SetPlayerWeather(playerid, 2009);

				format(string, sizeof(string), "* %s se toma una pastilla de color.", PlayerName(playerid));
   				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,1);
				UsingEctasy[playerid] = 300;
				EctasyEffect[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has tomado extasis, el efecto de la droga durará 5 minutos");
				PlayerInfo[playerid][pEctasy] -= 1;
				SetPlayerVirtualWorld(playerid, 5);
				new timer = SetTimerEx("Ectasy", 1000, true, "i", playerid);
				SetPVarInt(playerid, "DrugTimer", timer);
				return 1;
			}
			else if(strcmp(params[0],"ritalin",true) == 0)
	        {
	            if(PlayerInfo[playerid][pRitalin] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes pastillas de Ritalin!");

				new Mareo = random(5);

	            PlayerInfo[playerid][pEpilepsia] += 3;
	            PlayerInfo[playerid][pCancer] += 3;
				SetPlayerDrunkLevel(playerid, Mareo*1000);
				SetPlayerArmour(playerid, Mareo*20);
				SetPlayerWeather(playerid, -68);
				format(string, sizeof(string), "* %s se toma una pastilla blanca.", PlayerName(playerid));
   				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,1);
				UsingRitalin[playerid] = 300;
				RitalinEffect[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has tomado Ritalin, el efecto de la droga durará 5 minutos");
				PlayerInfo[playerid][pRitalin] -= 1;
				PlayerDrunk[playerid] = 11;
				return 1;
			}
			else if(strcmp(params[0],"heroina",true) == 0)
	        {
	            if(PlayerInfo[playerid][pHeroina] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes suficiente Heroina!");

	            PlayerInfo[playerid][pEpilepsia] += 4;
	            PlayerInfo[playerid][pCancer] += 4;
				SetPlayerArmour(playerid, 100);
				SetHP(playerid, 200);
				format(string, sizeof(string), "* %s se inyecta una substancia.", PlayerName(playerid));
   				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
				UsingHeroina[playerid] = 120;
				HeroinaEffect[playerid] = 1;
				HeroinaBeat[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has tomado Heroina, el efecto de la droga durará 2 minutos");
   				PlayerInfo[playerid][pHeroina] -= 1;
   				return 1;
			}
			else if(strcmp(params[0],"marihuana",true) == 0)
	        {
	            if(PlayerInfo[playerid][pMarihuana] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes suficiente Marihuana!");

	            PlayerInfo[playerid][pEpilepsia] += 3;
	            PlayerInfo[playerid][pCancer] += 4;
				SetPlayerArmour(playerid, 100);
				SetHP(playerid, 200);
				format(string, sizeof(string), "* %s fuma marihuana.", PlayerName(playerid));
   				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
				UsingMarihuana[playerid] = 240;
				MarihuanaEffect[playerid] = 1;
				MarihuanaBeat[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				SetPlayerDrunkLevel(playerid, 18000);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
				Message(playerid, COLOR_WHITE, "Has fumado Marihuana, el efecto de la droga durará 4 minutos");
   				PlayerInfo[playerid][pMarihuana] -= 1;
   				return 1;
			}
        }
        else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /usardrogas <nombre> (speed, extasis, ritalin, heroina, marihuana)");
        return 1;
    }
   	zcmd(estado, playerid, params[])
	{
		if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, "Debes ser mínimo nivel 2 para utilizar este comando.");
		DialogoEstado(playerid);
		return 1;
	}
	// zcmd:toys =======================================================================================================================
   	zcmd(ctoys,playerid, params[])
    {
        if(!IsAtClothShop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en una tienda de Ropa!");
	    {
		    ShowPlayerDialog(playerid, BUYTOYS, DIALOG_STYLE_MSGBOX, "Tienda de Accesorios", "{FFFFFF}Bienvenido a la tienda de accesorios! Aquí puedes comprar accesorios para ti.\n\tRecuerda que puedes usar 5 objetos a la vez.","Continuar", "Cancelar");
	    }
	    return 1;
    }
    zcmd(toyayuda,playerid, params[])
    {
		ClearChatbox(playerid, 10);
        Message(playerid, COLOR_GREEN,"Ayuda Accesorios");
        Message(playerid, COLOR_WHITE,"Para comprar un accesorio en la tienda usa: {00B39D}/ctoys");
        Message(playerid, COLOR_WHITE,"Para ponerte y editar un accesorio usa: {00B39D}/toys");
        Message(playerid, COLOR_WHITE,"Para ponerte todos tus accesorios usa: {00B39D}/ptoys");
        Message(playerid, COLOR_WHITE,"Para quitarte todos tus accesorios usa: {00B39D}/qtoys");
        return 1;
    }
    zcmd(toys,playerid, params[])
    {
	    ShowPlayerDialog( playerid, TOYS, DIALOG_STYLE_LIST, "Toy Menu", "Poner o Quitar\nEditar\nEliminar","Ok", "Cancelar" );
	    return 1;
    }
    zcmd(ptoys,playerid, params[])
    {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "* Te colocaste todos los toys de tu inventario.");
	    for(new x;x<MAX_PLAYERTOYS;x++)
	    {
		    if(PlayerToyInfo[playerid][x][ptModelID] != 0) SetPlayerAttachedObject(playerid, x, PlayerToyInfo[playerid][x][ptModelID], PlayerToyInfo[playerid][x][ptBone], PlayerToyInfo[playerid][x][ptPosX], PlayerToyInfo[playerid][x][ptPosY], PlayerToyInfo[playerid][x][ptPosZ], PlayerToyInfo[playerid][x][ptRotX], PlayerToyInfo[playerid][x][ptRotY], PlayerToyInfo[playerid][x][ptRotZ], 1, 1, 1);
	    }
	    return 1;
    }
    zcmd(qtoys,playerid, params[])
    {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "* Te quitaste todos los toys de tu inventario.");
	    for(new x;x<MAX_PLAYERTOYS;x++)
	    {
		    RemovePlayerAttachedObject(playerid, x);
        }
        return 1;
    }
    // zcmd:paintball =========================================================================================================================
    zcmd(paintball, playerid, params[])
    {
        new string[128];
        if(!PlayerToPoint(5.0,playerid,2781.0454,-1812.9775,11.8438)) return Message(playerid, COLOR_GRAD2, "No estás en el paintball.");
        if(CheckMoney(playerid, 1000))
		{
        	format(string, sizeof(string), " DeathMatch (%d)\n Team vs Team\n Player vs Player (%d)", TotalDM, TotalPlayer);
        	ShowPlayerDialog(playerid, DIALOG_PAINTBALL, DIALOG_STYLE_LIST, "Bienvenido al Paintball", string, "Aceptar", "Cancelar");
        } return 1;
	}
	zcmd(salirpaintball, playerid, params[])
	{
        if(PaintballType[playerid] == 0) return Message(playerid, COLOR_GRAD2, "No estás jugando en el paintball.");
	    if(PlayerToPoint(3.0,playerid,-1464.7714,1555.9248,1052.5313))
	    {
	        SetPosEx(playerid, 2781.0454,-1812.9775,11.8438,0,0,0);
	        SafeResetPlayerWeapons(playerid);
	        PaintballType[playerid] = 0;
	        DeletePVar(playerid, "PaintballDMKills");
	        TotalDM -= 1;
	        return 1;
     	}
		else if(PlayerToPoint(3.0,playerid,-977.8622,1053.0814,1344.9912) || PlayerToPoint(3.0,playerid,-1128.6946,1066.2456,1345.7439))
		{
	        if(PaintballType[playerid] == 2) { TTeamNaranja -= 1; }
	        if(PaintballType[playerid] == 3) { TTeamVerde -= 1; }
	        SetPosEx(playerid, 2781.0454,-1812.9775,11.8438,0,0,0);
	        PaintballType[playerid] = 0;
	        SafeResetPlayerWeapons(playerid);
			SetPlayerColor(playerid,COLOR_GRAD2);
			return 1;
		}
		else if(PlayerToPoint(3.0,playerid,1947.2084,1653.8584,-4.6563))
		{
		    SetPosEx(playerid, 2781.0454,-1812.9775,11.8438,0,0,0);
	        SafeResetPlayerWeapons(playerid);
	        PaintballType[playerid] = 0;
	        DeletePVar(playerid, "PaintPvPKills");
			TotalPlayer -= 1;
			return 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en el lugar correcto!");
		return 1;
	}
	// zcmd:afk ==================================================================================================================
	zcmd(afk, playerid, params[])
    {
		if(PlayerInfo[playerid][pJailTime] > 0) return Message(playerid, COLOR_GRAD2, "¡No puedes usar esto en la cárcel!");
        switch(AFK[playerid])
        {
            case 0:
			{
				new randomize;
				GetPlayerPos(playerid, AFKLoc[playerid][0],AFKLoc[playerid][1],AFKLoc[playerid][2]);
				randomize = random(sizeof(AFKZone));
				SetPlayerPos(playerid, AFKZone[randomize][0], AFKZone[randomize][1], AFKZone[randomize][2]);
				TogglePlayerControllable(playerid, 0);
				Message(playerid, COLOR_RED2, "Te encuentras en estado AFK, utiliza /afk para volver a rolear.");
				AFKTime[playerid] = gettime()+600;
				AFK[playerid] = 3;
				return 1;
			}
			case 1:
			{
				SetPlayerPos(playerid, AFKLoc[playerid][0],AFKLoc[playerid][1],AFKLoc[playerid][2]);
			 	TogglePlayerControllable(playerid, 1);
				Message(playerid, COLOR_RED2, "¡Has salido del estado AFK!");
				AFKTime[playerid] = 0;
				AFK[playerid] = 0;
				return 1;
			}
			default:
			{
			    new string[64];
			    format(string, sizeof(string),"Tienes que esperar %d minutos para salir de tu estado AFK.",AFK[playerid]-1);
				Message(playerid, COLOR_GRAD2, string);
				return 1;
			}
		}
		return 1;
    }
    zcmd(checkafk, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
		if(!sscanf(params,"u",params[0]))
		{
		    if(IsPlayerConnected(params[0]))
			{
			    new string[80];
				if(AFK[params[0]] == 0)
				{
				    format(string, sizeof string, "* El usuario %s tiene su estado AFK en NEGATIVO.", PlayerName(params[0]));
                	Message(playerid, COLOR_WHITE, string);
                	return 1;
				}
				else {
				    format(string, sizeof string, "* El usuario %s tiene su estado AFK en POSITIVO.", PlayerName(params[0]));
        	        Message(playerid, COLOR_WHITE, string);
            	    return 1;
       			}
			}
 		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /checkafk <PlayerID>");
 		return 1;
    }
    zcmd(divorciar, playerid, params[])
    {
        if(!sscanf(params,"u",params[0]))
        {
        	if(PlayerToPoint(5.0,playerid,1486.2524,853.9845,-68.7967))
			{
				if(PlayerInfo[playerid][pMarried] == 1)
				{
					if(strcmp(PlayerInfo[params[0]][pMarriedTo], PlayerName(playerid), true) == 0)
  					{
  					    if(ProxDetectorS(5.0,playerid,params[0]))
  					    {
  					        SetPVarInt(playerid, "Divorciar", params[0]);
  					        SetPVarInt(params[0], "Divorciar", playerid);
                        	ShowPlayerDialog(playerid, DIVORCIO_DIALOG, DIALOG_STYLE_MSGBOX, "{018CFE}Iglesia", "{FFFFFF}¿Estas seguro que deseas divorciarte?", "Aceptar", "Cancelar");
                        	return 1;
      					} else Message(playerid, COLOR_GRAD2, "Esa persona no esta cerca de tí.");
    				} else Message(playerid, COLOR_GRAD2, "¡Esa persona no consta como tu esposo(a)!");
       			} else Message(playerid, COLOR_GRAD2, "¡No estás casado!");
       		} else Message(playerid, COLOR_GRAD2, "¡No estás en el lugar adecuado!");
       	} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /divorciar <PlayerID>");
       	return 1;
    }
    zcmd(liberar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        if(!sscanf(params,"u",params[0])){
            if(IsPlayerConnected(params[0])){
                PlayerInfo[params[0]][pMarried] = 0;
                format(PlayerInfo[params[0]][pMarriedTo], 64, "Nadie");
				Message(playerid, COLOR_GRAD4, "¡El jugador ha sido liberado del matrimonio!");
				UpdatePlayerStat(params[0]);
				return 1;
			} else Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /liberar <PlayerID>");
		return 1;
    }
    zcmd(dobleexp, playerid, params[]){
		new string[128];
	    if(PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    if(DobleOn != 1){
			format(string, sizeof(string), "{FFFFFF}%s ha {CDE878}activado {FFFFFF}la doble experiencia.", PlayerName(playerid));
            GlobalMsg(-1, string);
            DobleOn = 1;
         }else{
            DobleOn = 0;
            format(string, sizeof(string), "{FFFFFF}%s ha {F80F60}desactivado {FFFFFF}la doble experiencia.", PlayerName(playerid));
            GlobalMsg(-1, string);
	    }
	    return 1;
	}
	zcmd(cuentaoff, playerid, params[]){
	    if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    if(!sscanf(params,"s[32]",params[0])){
	        if(strfind(params[0], "_" , true) != -1){
	            new PlayerFile[64], string[164];
				format(PlayerFile, sizeof(PlayerFile), "users/%s.ini", params[0]);
				if(INI_Exist(PlayerFile)){
				    INI_ParseFile(PlayerFile, "GetPlayerDates", false, true, playerid, true, false );
				    format(string, sizeof(string),"| PlayerStats : %s |", params[0]);
				    Message(playerid, 0x009BE6FF, string);
				    format(string, sizeof(string), "Contraseña: %s  Nivel: %d  Dinero: %d  Banco: %d  Admin: %d", StatString[playerid][0], StatInt[playerid][0], StatInt[playerid][1], StatInt[playerid][2], StatInt[playerid][7]);
				    Message(playerid, COLOR_GRAD3, string);
				    format(string, sizeof(string), "MSN: %s  Casado: %d  Esposo/a: %s  Baneado: %d  Job: %d", StatString[playerid][1], StatInt[playerid][6], StatString[playerid][2], StatInt[playerid][3], StatInt[playerid][4]);
				    Message(playerid, COLOR_GRAD3, string);
				    format(string, sizeof(string), "Casa: %d  Modelo: %d  Modelo2: %d  Negocio: %d Premium: %d", StatInt[playerid][8], StatInt[playerid][9], StatInt[playerid][10], StatInt[playerid][11], StatInt[playerid][5]);
				    Message(playerid, COLOR_GRAD3, string);
				    return 1;
    			} else Message(playerid, COLOR_GRAD2, "¡La cuenta que has señalado no existe!");
 			} else Message(playerid, COLOR_GRAD2, "Ejemplo de Uso: /cuentaoof Juan_David");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /cuentaoof <Nombre_Jugador>");
		return 1;
	}
	zcmd(richs, playerid, params[]){
	    if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
        Message(playerid, COLOR_GREEN, "| Usuarios Ricos |");
		for(new i=0; i < MAX_PLAYERS; i++){
			if(IsPlayerConnected(i)){
                new string[128], cash = GetPlayerMoney(i)+PlayerInfo[i][pAccount];
                if(cash > 1000000){
				    format(string, sizeof(string),"  %s - %d", PlayerName(i), cash);
					Message(playerid, 0xC0C0C0FF, string);
				}
		    }
		}
	    return 1;
  	}
	zcmd(condon, playerid, params[])
	{
	    if(PlayerInfo[playerid][pSex] == 2) return Message(playerid, COLOR_GRAD2, "Solo los hombres pueden usar este comando.");
	    if(GetPVarType(playerid, "Condom") != 0)
		{
			new string[128];
			format(string, sizeof(string), "* %s toma un condon y se lo coloca en el pene.", PlayerName(playerid));
        	ProxDetectorEx(15.0, playerid, string, COLOR_PURPLE);
    	    Message(playerid, COLOR_GRAD2, "Ahora ya estas protegido para tener relaciones sexuales con seguridad.");
        	SetPVarInt(playerid, "Condom", GetPVarInt(playerid, "Condom")-1);
        	PlayerInfo[playerid][pSuciedad] += 5;
        	return 1;
		} else { Message(playerid, COLOR_GRAD2, "No tienes un condon."); return 1; }
  	}
  	zcmd(lavarropa, playerid, params[])
  	{
  	    new string[128];
  	    if(PlayerToPoint(5.0,playerid,-2368.2078,435.6127,73.2922))
  	    {
			if(CheckMoney(playerid, 200))
			{
			    if(PlayerInfo[playerid][pSuciedad] < 50) return Message(playerid, COLOR_GRAD2, "* No tienes la ropa sucia, lavala luego.");
			    if(GetPVarInt(playerid, "Lavando") == 1) return Message(playerid, COLOR_GRAD2, "* Ya estas lavando tu ropa.");
				format(string, sizeof(string), "* %s se saca su ropa y la mete a la lavadora.", PlayerName(playerid));
                ProxDetectorEx(12.0, playerid, string, COLOR_PURPLE);
			    Message(playerid, COLOR_WHITE, "{DC092F}Lavanderia: {FFFFFF}Su ropa ha empezado a lavarse, espere un poco...");
			    new timer = SetTimerEx("Lavadora", 60000, false, "i", playerid);
			    SetPVarInt(playerid, "TimerLavadora", timer);
			    SetPVarInt(playerid, "Lavando", 1);
			    if(PlayerInfo[playerid][pSex] == 1) Skin(playerid, 252);
				if(PlayerInfo[playerid][pSex] == 2) Skin(playerid, 138);
				return 1;
			}
  	    } else Message(playerid, COLOR_GRAD2, "No estas en la lavanderia.");
  	    return 1;
  	}
  	zcmd(regalar, playerid, params[])
  	{
  	    new item[16], string[80];
  	    if(!sscanf(params,"us[18]", params[0], item))
  	    {
            if(!IsPlayerConnected(params[0]))            return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(GetPVarInt(playerid, "Regalo_Offer") == 1)              return Message(playerid, COLOR_GRAD2, "¡Ya ofreciste un regalo, debes esperar la respuesta de esa persona!");
			else
			{
				if(strcmp(item,"anillocompromiso",true) == 0)
				{
				    if(PlayerInfo[playerid][pAnilloCom] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun anillo para regalar.");
					SetPVarInt(params[0], "Regalo_ITEM", 1);     SetPVarInt(params[0], "Regalo_ID", playerid);    SetPVarInt(playerid, "Regalo_Offer", 1);
					Message(playerid, COLOR_WHITE, "* Has ofrecido dar un regalo, espera la respuesta.");
					format(string, sizeof(string), "* %s ofrece regalarte un anillo de compromiso, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
					Message(params[0], COLOR_WHITE, string);
					return 1;
				}
	  	        else if(strcmp(item,"anillooro",true) == 0)
  		        {
  	    	        if(PlayerInfo[playerid][pAnilloOro] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun anillo para regalar.");
					SetPVarInt(params[0], "Regalo_ITEM", 2);     SetPVarInt(params[0], "Regalo_ID", playerid);    SetPVarInt(playerid, "Regalo_Offer", 1);
					Message(playerid, COLOR_WHITE, "* Has ofrecido dar un regalo, espera la respuesta.");
					format(string, sizeof(string), "* %s ofrece regalarte un anillo de oro, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
					Message(params[0], COLOR_WHITE, string);
					return 1;
  	        	}
	  	        else if(strcmp(item,"collar",true) == 0)
  		        {
  	    	        if(PlayerInfo[playerid][pCollar] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun collar para regalar.");
					SetPVarInt(params[0], "Regalo_ITEM", 3);     SetPVarInt(params[0], "Regalo_ID", playerid);    SetPVarInt(playerid, "Regalo_Offer", 1);
					Message(playerid, COLOR_WHITE, "* Has ofrecido dar un regalo, espera la respuesta.");
					format(string, sizeof(string), "* %s ofrece regalarte un collar de perlas, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
					Message(params[0], COLOR_WHITE, string);
					return 1;
  	        	}
	  	        else if(strcmp(item,"anillodiamante",true) == 0)
  		        {
  	    	        if(PlayerInfo[playerid][pAnilloDia] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun anillo para regalar.");
					SetPVarInt(params[0], "Regalo_ITEM", 4);     SetPVarInt(params[0], "Regalo_ID", playerid);    SetPVarInt(playerid, "Regalo_Offer", 1);
					Message(playerid, COLOR_WHITE, "* Has ofrecido dar un regalo, espera la respuesta.");
					format(string, sizeof(string), "* %s ofrece regalarte un anillo de diamantes, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
					Message(params[0], COLOR_WHITE, string);
					return 1;
  	        	}
	  	        else if(strcmp(item,"pulsera",true) == 0)
  		        {
  	    	        if(PlayerInfo[playerid][pPulsera] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ninguna pulsera para regalar.");
					SetPVarInt(params[0], "Regalo_ITEM", 5);     SetPVarInt(params[0], "Regalo_ID", playerid);    SetPVarInt(playerid, "Regalo_Offer", 1);
					Message(playerid, COLOR_WHITE, "* Has ofrecido dar un regalo, espera la respuesta.");
					format(string, sizeof(string), "* %s ofrece regalarte una pulsera de oro, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
					Message(params[0], COLOR_WHITE, string);
					return 1;
  	        	}
	  	        else if(strcmp(item,"aretes",true) == 0)
  		        {
  	    	        if(PlayerInfo[playerid][pAretes] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun conjunto de aretes para regalar.");
					SetPVarInt(params[0], "Regalo_ITEM", 6);     SetPVarInt(params[0], "Regalo_ID", playerid);    SetPVarInt(playerid, "Regalo_Offer", 1);
					Message(playerid, COLOR_WHITE, "* Has ofrecido dar un regalo, espera la respuesta.");
					format(string, sizeof(string), "* %s ofrece regalarte un conjunto de aretes, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
					Message(params[0], COLOR_WHITE, string);
					return 1;
  	        	}
  	        	else if(strcmp(item,"reloj",true) == 0)
	  	        {
  		            if(PlayerInfo[playerid][pReloj] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun anillo para regalar.");
					SetPVarInt(params[0], "Regalo_ITEM", 7);     SetPVarInt(params[0], "Regalo_ID", playerid);    SetPVarInt(playerid, "Regalo_Offer", 1);
					Message(playerid, COLOR_WHITE, "* Has ofrecido dar un regalo, espera la respuesta.");
					format(string, sizeof(string), "* %s ofrece regalarte un reloj de oro, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
					Message(params[0], COLOR_WHITE, string);
					return 1;
  	        	}
    		}
    	}
		else
		{
			Message(playerid, COLOR_GRAD2, "Utiliza: /regalar <PlayerID> <ITEM>");
			Message(playerid, COLOR_GRAD2, "Items: anillocompromiso, anillooro, collar, anillodiamante, pulsera, aretes, reloj.");
		}
		return 1;
  	}
  	zcmd(joyas, playerid, params[])
	{
	    new string[128];
	    Message(playerid, COLOR_GREEN, "Inventario - Joyas:");
	    format(string, sizeof(string), "Anillos de Compromiso: %d | Anillos de Oro: %d | Collar de Perla: %d | Anillo de Diamantes: %d", PlayerInfo[playerid][pAnilloCom], PlayerInfo[playerid][pAnilloOro], PlayerInfo[playerid][pCollar], PlayerInfo[playerid][pAnilloDia]);
	    Message(playerid, COLOR_WHITE, string);
	    format(string, sizeof(string), "Pulsera de Oro: %d | Aretes de Oro: %d | Reloj de Oro: %d", PlayerInfo[playerid][pPulsera], PlayerInfo[playerid][pAretes], PlayerInfo[playerid][pReloj]);
	    Message(playerid, COLOR_WHITE, string);
	    return 1;
	}
	zcmd(venderjoyas, playerid, params[])
	{
		if (PlayerToPoint(10, playerid, 1143.4807,-1880.8014,851.0969))
		{
		    new string[168];
	        format(string, sizeof string, "Anillo de Compromiso(%d)\nAnillo de Oro(%d)\nCollar de Perlas(%d)\nAnillo de Diamantes(%d)\nPulsera de Oro(%d)\nAretes de Diamantes(%d)\nReloj de Oro(%d)",
			PlayerInfo[playerid][pAnilloCom], PlayerInfo[playerid][pAnilloOro], PlayerInfo[playerid][pCollar], PlayerInfo[playerid][pAnilloDia], PlayerInfo[playerid][pPulsera], PlayerInfo[playerid][pAretes], PlayerInfo[playerid][pReloj]);
	        ShowPlayerDialog(playerid, VENDER_JOYAS, DIALOG_STYLE_LIST, "Joyeria - Venta de Joyas", string, "Aceptar", "Cancelar");
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "No estas en la joyeria.");
	    return 1;
	}
  	zcmd(orinar, playerid, params[])
  	{
  	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)	{
       		if(PlayerInfo[playerid][pSex] == 2) return Message(playerid, COLOR_GRAD2, "Este comando solo está disponible para hombres.");
			Message(playerid, COLOR_WHITE, "Usa \"ENTER\" para dejar de orinar.");
			 SetPlayerSpecialAction(playerid, 68);
		} return 1;
  	}
 	zcmd(saludar, playerid, params[])
  	{
  	    if(!sscanf(params, "u", params[0]))
  	    {
			if(IsPlayerConnected(params[0]))
			{
			    if(playerid != params[0])
			    {
				    if(ProxDetectorS(2.0, playerid, params[0]))
				    {
				        new string[80];
						SetPVarInt(params[0], "Saludo_ID", playerid);
						format(string, sizeof string, "* %s ha enviado una peticion de saludo, usa /aceptar saludo.", PlayerName(playerid));
						Message(params[0], COLOR_WHITE, string);
						Message(playerid, COLOR_GRAD2, "* Has enviado una peticion de saludo, debes esperar una respuesta.");
						return 1;
					} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				} else Message(playerid, COLOR_GRAD2, "No puedes saludarte a ti mismo.");
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /saludar <PlayerID>");
		return 1;
  	}
  	zcmd(besar, playerid, params[])
  	{
		if(!sscanf(params, "u", params[0]))
		{
		    if(IsPlayerConnected(params[0]))
		    {
		        if(playerid != params[0])
		        {
		            if(ProxDetectorS(2.0, playerid, params[0]))
		            {
  	                    new string[85];
  	                    SetPVarInt(params[0], "Beso_ID", playerid);
  	                    format(string, sizeof string, "* %s ha enviado una peticion de beso, usa /aceptar beso o /cancelar.", PlayerName(playerid));
  	                    Message(params[0], COLOR_WHITE, string);
  	                    Message(playerid, COLOR_GRAD2, "* Has enviado una peticion de beso, debes esperar una respuesta.");
  	                    return 1;
              		} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        		} else Message(playerid, COLOR_GRAD2, "No puedes enviar una peticion de beso a ti mismo.");
    		} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /besar <PlayerID>");
  	    return 1;
  	}
  	zcmd(suciedad, playerid, params[])
  	{
	   if(IsPlayerConnected(playerid))
	   {
	        new string[80];
  	        format(string, sizeof(string), "* Tu suciedad es del %d porciento.", PlayerInfo[playerid][pSuciedad]);
  	        Message(playerid, COLOR_GRAD2, string);
    	}
		return 1;
  	}
  	zcmd(pinchar, playerid, params[])
  	{
  	    if(IsACop(playerid))
		{
		    if(GetPVarType(playerid, "OnDuty") == 1)
		    {
		  	    new Float:pX,Float:pY,Float:pZ,Float:pAngulo;
    		    GetPlayerPos(playerid,pX,pY,pZ);
        		GetPlayerFacingAngle(playerid,pAngulo);
	 			CrearPR(pX,pY,pZ,pAngulo);
			} else Message(playerid, COLOR_GRAD2, "No estas duty.");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
 	}
 	zcmd(bpinchar, playerid, params[])
 	{
 	    if(IsACop(playerid) || PlayerInfo[playerid][pAdminCP] >= 2)
 	    {
 	        BUPRC(playerid);
      	} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
      	return 1;
 	}
 	zcmd(btpinchar, playerid, params[])
 	{
 	    if(PlayerInfo[playerid][pAdminCP] >= 5)
 	    {
 	        BTPR();
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
 	}
 	zcmd(marcar, playerid, params[])
 	{
 	    if(Terroristas(playerid))
 	    {
 	        if(PlayerInfo[playerid][pRank] >= 3)
 	        {
	      		new string[50+MAX_POINT_TEXT*5];
    	    	format(string, sizeof(string), "Punto1: %s\nPunto2: %s\nPunto3: %s\nPunto4: %s\nPunto5: %s", StringPoint1, StringPoint2, StringPoint3, StringPoint4, StringPoint5);
				ShowPlayerDialog(playerid, ATTACKS_DIALOG, DIALOG_STYLE_LIST, "Puntos de Ataques", string, "Aceptar", "Cancelar");
				return 1;
			} else Message(playerid, COLOR_GRAD2, "¡Solo pueden usar este comando de rango 3 en adelante!");
 	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
 	    return 1;
 	}
 	zcmd(atacar, playerid, params[])
 	{
 	    if(PlayerToPoint(5.0,playerid,1043.4159,-361.7207,74.9123))
 	    {
	 	    if(PlayerInfo[playerid][pLeader] == 2)
 		    {
 		        if(AtaqueRealizado == 0)
 	        	{
					new string[50+MAX_POINT_TEXT*5];
 		        	format(string, sizeof(string), "Punto1: %s\nPunto2: %s\nPunto3: %s\nPunto4: %s\nPunto5: %s", StringPoint1, StringPoint2, StringPoint3, StringPoint4, StringPoint5);
					ShowPlayerDialog(playerid, ATTACK_TERRO, DIALOG_STYLE_LIST, "Puntos de Ataques", string, "Disparar", "Cancelar");
					return 1;
     			} else Message(playerid, COLOR_GRAD2, "* Ya han enviado un ataque, debes esperar a que éste se detone.");
   			} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		} else Message(playerid, COLOR_GRAD2, "* No estas en el lugar adecuado.");
   		return 1;
 	}
 	zcmd(activarbomba, playerid, params[])
 	{
 	    if(Terroristas(playerid) && PlayerInfo[playerid][pRank] >= 4)
 	    {
 	        if(IsPlayerInAnyVehicle(playerid))
 	        {
 	            if(GetPVarInt(playerid, "Bomba") == 0)
 	            {
	 	            SetPVarInt(playerid, "Bomba", 1);
					SetTimerEx("ExplodeCar", 30000, false, "ud", playerid, GetPlayerVehicleID(playerid));
					Message(playerid, COLOR_WHITE, "* Has agregado una bomba en este vehículo, tienes 30 segundos para huir.");
					return 1;
				} else Message(playerid, COLOR_GRAD2, "¡No puedes usar este comando aun!");
			} else Message(playerid, COLOR_GRAD2, "¡No estas en un vehículo!");
		} else Message(playerid, COLOR_GRAD2, "¡No eres terrorista o no estas autorizado a usarlo!");
 	    return 1;
 	}
	zcmd(catalogo, playerid, params[])
 	{
 	    if(PlayerToPoint(5.0, playerid,563.0288,-1300.2478,17.2871))
		{
		    gTotalItems[playerid] = TOTAL_GROTTI;
		    SetPVarInt(playerid, "ModelsActive", 1);
		    SetPVarInt(playerid, "ModelsGrotti", 1);
		    SetPVarInt(playerid, "ModelsType", 2);
		    SetPVarString(playerid, "ModelsName", "Gama Alta");
		    CreateSelectionMenu(playerid);
	    	SelectTextDraw(playerid, 0x2471A3FF);
	    	return 1;
		}
		else if(PlayerToPoint(5.0, playerid, 552.3003,-1300.5541,17.2871))
		{
		    gTotalItems[playerid] = TOTAL_MEDIUM;
		    SetPVarInt(playerid, "ModelsActive", 1);
		    SetPVarInt(playerid, "ModelsMedium", 1);
		    SetPVarInt(playerid, "ModelsType", 2);
		    SetPVarString(playerid, "ModelsName", "Gama Media");
		    CreateSelectionMenu(playerid);
	    	SelectTextDraw(playerid, 0x2471A3FF);
	    	return 1;
		}
		else if(PlayerToPoint(5.0, playerid, 537.9150,-1300.2504,17.2871))
		{
		    gTotalItems[playerid] = TOTAL_CAS;
		    SetPVarInt(playerid, "ModelsActive", 1);
		    SetPVarInt(playerid, "ModelsCas", 1);
		    SetPVarInt(playerid, "ModelsType", 2);
		    SetPVarString(playerid, "ModelsName", "Gama Baja");
		    CreateSelectionMenu(playerid);
	    	SelectTextDraw(playerid, 0x2471A3FF);
	    	return 1;
		} else Message(playerid, COLOR_GRAD2, "No estás en un concesionario.");
		return 1;
	}
	zcmd(establecer, playerid, params[])
	{
	    new nick[24];
        GetPlayerName(playerid, nick, 24);
        if(!strcmp(nick, "Mike_West", true) || !strcmp(nick, "Jhon_West", true))
        {
			if(!sscanf(params, "dd", params[0],params[1]))
			{
			    new string[62];
			    if(params[0] < 0 || params[0] > 19) return Message(playerid, COLOR_GRAD2, "Item de Auto erróneo. (0-19)");
	            AutoCat[params[0]] = params[1];
				format(string, sizeof string, "Has editado el cupo del Item %d y lo has puesto en %d.", params[0], params[1]);
	            Message(playerid, COLOR_GRAD4, string);
	            return 1;
 			}
			else{
				Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /establecer <ItemAuto> <Cantidad>");
    			Message(playerid, COLOR_GRAD2, "ItemAutos: 0.Infernus - 1.Cheetah - 2.Banshee - 3.Turismo - 4.ZR-350 - 5.Comet");
    			Message(playerid, COLOR_GRAD2, "6.Super GT - 7.NRG-500 - 8.FCR-900 - 9.Bullet - 10.Sultan - 11.Elegy - 12.Euros");
    			Message(playerid, COLOR_GRAD2, "13.Phoenix - 14.Buffalo - 15.Stretch - 16.Patriot - 17.Uranus - 18.Jester");
				return 1;
	        }
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
	zcmd(quitarpremium, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] > 2013)
	    {
	        if(!sscanf(params, "ud", params[0], params[1]))
	        {
	            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
	            if(params[1] < 1 || params[1] > 3) return Message(playerid, COLOR_GRAD2, "Puedes escoger entre slot 1, 2 y 3.");
	            if(PlayerInfo[params[0]][pDonateT] > 0)
	            {
             		if(PlayerVehicleInfo[params[0]][params[1]][pvModel] != 0)
               		{
						new string[60], carid = PlayerVehicleInfo[params[0]][params[1]][pvID];
						if(!VehicleSpawned[carid]) return Message(playerid, COLOR_GRAD2, "Ha ocurrido un error, vehículo no spawneado.");
						DestroyVehicle(carid);
						VehicleSpawned[carid] = false;
						OwnableVehicle[carid] = false;
						engineOn[carid] = false;
						VehicleSlot[carid] = 999;
						VehicleOwner[carid] = 999;
						ResetearVariablesAuto(params[0], params[1]);
						if(params[1] == 1) format(string, sizeof string, "* Le has removido el auto premium 1 a %s.", PlayerName(params[0]));
						else if(params[1] == 2) format(string, sizeof string, "* Le has removido el auto premium 2 a %s.", PlayerName(params[0]));
						else if(params[1] == 3) format(string, sizeof string, "* Le has removido el auto premium 3 a %s.", PlayerName(params[0]));
						Message(playerid, COLOR_WHITE, string);
						return 1;
					} else Message(playerid, COLOR_GRAD2, "El usuario no tiene un vehículo en ese slot premium.");
      			} else Message(playerid, COLOR_GRAD2, "El usuario no es premium.");
	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /quitarpremium <PlayerID> <Slot Premium>");
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
	}
	zcmd(destruir, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] > 2013)
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if(VehicleSpawned[params[0]] && params[0] >= VV)
	            {
	                if(VehicleOwner[params[0]] != 999 && PlayerVehicleInfo[VehicleOwner[params[0]]][VehicleSlot[params[0]]][pvID] == params[0])
	                {
	                    PlayerVehicleInfo[VehicleOwner[params[0]]][VehicleSlot[params[0]]][pvID] = 9999;
	                    PlayerVehicleInfo[VehicleOwner[params[0]]][VehicleSlot[params[0]]][pvSpawned] = 0;
                 	}
                 	new string[80];
	                format(string, sizeof string, "Has destruido el vehículo ID %d el cual pertenecia a %s.", params[0], PlayerName(VehicleOwner[params[0]]));
	                Message(playerid, COLOR_RED2, string);
	                DestroyVehicle(params[0]);
					VehicleOwner[params[0]] = 999;
					VehicleSlot[params[0]] = 999;
	                VehicleSpawned[params[0]] = false;
	                OwnableVehicle[params[0]] = false;
					return 1;
				} else Message(playerid, COLOR_GRAD2, "No puedes destruir ese vehiculo porque no está spawneado o es de facciones.");
			} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /destruir <VehicleID>");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
	}
	zcmd(parqueadero, playerid, params[])
	{
        if(CheckMoney(playerid,500)){
		    if(PlayerToPoint(5.0, playerid, 1761.8041,-1700.4933,13.4270))
			{
			    Bought(playerid, 100);
			    Till(25, 100);
			    Message(playerid, COLOR_WHITE, "Has cancelado un valor de {FFFF00}100$ {FFFFFF}para abrir la puerta del estacionamiento.");
	    		MoveDynamicObject(estac, 1761.53, -1696.37, 12.60, 2.5, -1000.0, -1000.0, -1000.0);
	    		SetTimer("CloseEstac", 7000, 0);
	    		return 1;
 			}
			else if(PlayerToPoint(5.0, playerid, 1803.5647,-1721.0872,13.5345))
			{
			    Bought(playerid, 100);
			    Till(25, 100);
			    Message(playerid, COLOR_WHITE, "Has cancelado un valor de {FFFF00}100$ {FFFFFF}para abrir la puerta del estacionamiento.");
	    		MoveDynamicObject(estac2, 1805.53, -1722.11, 10.66, 2.5, -1000.0, -1000.0, -1000.0);
	    		SetTimer("CloseEstac2", 7000, 0);
	    		return 1;
			} else Message(playerid, COLOR_GRAD2, "* No estas cerca de la puerta del estacionamiento.");
		}
		return 1;
	}
	zcmd(cambiarnombre, playerid, params[])
	{
	    if(PlayerInfo[playerid][pLevel] > 9)
	    {
	        if(PlayerInfo[playerid][pChangeName] == 0)
	        {
	            if(!sscanf(params, "s[24]", params[0]))
	            {
	                if(strlen(params[0]) < 21)
	                {
	                    if(strfind(params[0], "_", true) != -1)
	                    {
	                        new string[40], OldName[24];
	                        format(string, sizeof string, "users/%s.ini", params[0]);
	                        if(INI_Exist(string)) return Message(playerid, COLOR_GRAD2, "No puedes usar el nombre de una cuenta ya existente.");
			            	GetPlayerName(playerid, OldName, 24);
			            	SetPVarString(playerid, "OldNameVar", OldName);
			            	SetPlayerName(playerid, params[0]);
			            	SetPVarInt(playerid, "ChangeNameUsed", 1);
			            	Message(playerid, COLOR_WHITE, "Actualizando Cuenta... Espere un momento por favor...");
			            	SetTimerEx("UpdateName", 2000, false, "i", playerid);
			            	PlayerInfo[playerid][pChangeName] = 1;
						} else Message(playerid, COLOR_GRAD2, "No olvides poner _ Ej: /cambiarnombre <Paul_Martinez>");
	                } else Message(playerid, COLOR_GRAD2, "El nombre debe contener máximo 20 carácteres.");
	            } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /cambiarnombre <Nombre_Apellido>");
	        } else Message(playerid, COLOR_GRAD2, "Ya te has cambiado el nombre, no puedes volver a hacerlo.");
	    } else Message(playerid, COLOR_GRAD2, "Debes ser mínimo nivel 10.");
		return 1;
 	}
 	zcmd(lavarauto, playerid, params[])
 	{
 	    if(PlayerToPoint(3.0,playerid,2509.4314,-1460.2108,24.0002))
 	    {
 	        if(AutoLavado == -1)
 	        {
 	            if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estas en un vehículo.");
 	            if(!OwnableVehicle[GetPlayerVehicleID(playerid)]) return Message(playerid, COLOR_GRAD2, "No estas en un vehículo de compra/venta.");
 	            if(CheckMoney(playerid, 250))
 	            {
					new id = GetPlayerVehicleID(playerid);
					if(PlayerVehicleInfo[VehicleOwner[id]][VehicleSlot[id]][pvSuciedad] < 70) return Message(playerid, COLOR_GRAD2, "Este vehículo aun no está sucio.");
		 	        SetPlayerCheckpoint(playerid, 2454.4141,-1461.0684,24.0000, 2.0);
					Message(playerid, COLOR_WHITE, "{018CFE}AutoLavado: {FFFFFF}Dirígite al punto rojo mas adelante para lavar tu auto (No se baje).");
					SetPVarInt(playerid, "UsageCarWash", 1);
					AutoLavado = playerid;
				}
			} else Message(playerid, COLOR_GRAD2, "{018CFE}AutoLavado: {FFFFFF}Debe esperar un momento, estamos atendiendo a otro cliente.");
		} else Message(playerid, COLOR_GRAD2, "No estas en el punto indicado.");
  	    return 1;
 	}
 	zcmd(factions, playerid, params[])
 	{
 	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
 	    {
 	        Message(playerid, COLOR_GRAD2, "------------------------ Ayuda Sistema de Facciones ------------------------");
			Message(playerid, COLOR_WHITE, "/crearfaccion /borrarfaccion /factionname /darlider /editranks");
			Message(playerid, COLOR_WHITE, "/fentrada /fsalida /fvehiculos /cvehiculo /bvehiculo /evehiculo");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
 	    return 1;
  	}
 	zcmd(verfacciones, playerid, params[])
	{
 	    if(PlayerInfo[playerid][pAdminCP] >= 2013 || PlayerInfo[playerid][pFacciones] == 1)
 	    {
 	        new string[500];
 	        for(new f = 0; f < MAX_FACTION; f++)
 	        {
				format(string, sizeof string, "%sID: %d - Faccion: %s\n", string, (f+1), FactionInfo[f][fName]);
			}
 	        ShowPlayerDialog(playerid, 1005, DIALOG_STYLE_LIST, "{DC092F}Centro de Facciones", string, "Aceptar", "");
 	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
 	    return 1;
 	}
 	zcmd(crearfaccion, playerid, params[])
 	{
 	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
 	    {
 	        if(!sscanf(params, "idus[20]", params[0], params[1], params[2], params[3]))
 	        {
 	            if(params[0] < 1 || params[0] > 5) return Message(playerid, COLOR_GRAD2, "Slot entre 1 y 5.");
				if(params[1] < 1 || params[1] > 3) return Message(playerid, COLOR_GRAD2, "Tipos: 1.Mafia - 2.Banda - 3.Otro");
				if(!IsPlayerConnected(params[2])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
				if(strlen(params[3]) < 5 || strlen(params[3]) > 23) return Message(playerid, COLOR_GRAD2, "El nombre de la faccion supera los 23 carácteres o es menor a 5.");
 	            if(FactionInfo[(params[0]-1)][fType] == 0)
 	            {
 	                new string[100];
					format(FactionInfo[(params[0]-1)][fName], 24, params[3]);
					FactionInfo[(params[0]-1)][fType] = params[1]
					PlayerInfo[params[2]][pLeader] = (14+params[0]);
					PlayerInfo[params[2]][pRank] = 6;
                    format(string, sizeof(string), "%s ha creado la faccion %s (%s).",PlayerName(playerid), params[3], PlayerName(params[2]));
					A_Info(string);
					format(string, sizeof(string), "Administrador %s te asignó lider de la faccion %s.", PlayerName(playerid), params[3]);
       				Message(params[3], 0x6ADFFFFF, string);
       				UpdatePlayerStat(params[2]);
       				SaveFactions();
 	            } else Message(playerid, COLOR_GRAD2, "Este slot no está disponible, crea en otro slot o borra la faccion.");
      		} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /crearfaccion <Slot 1-5> <Tipo 1-3> <Lider ID> <Nombre Faccion>");
 	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
	zcmd(factionname, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
	    {
	        if(!sscanf(params, "is[20]", params[0], params[1]))
	        {
				if(params[0] < 1 || params[0] > 5) return Message(playerid, COLOR_GRAD2, "ID de faccion entre 1 y 5.");
				if(strlen(params[1]) < 5 || strlen(params[1]) > 23) return Message(playerid, COLOR_GRAD2, "Nombre de faccion entre 5 y 23 carácteres.");
	            if(FactionInfo[(params[0]-1)][fType] > 0)
	            {
	                new string[80];
	                format(FactionInfo[(params[0]-1)][fName], 24, params[1]);
	                format(string, sizeof string, "Has cambiado el nombre de la faccion %d a %s.", params[0], params[1]);
	                Message(playerid, COLOR_YELLOW, string);
	            } else Message(playerid, COLOR_GRAD2, "Esa faccion no ha sido creada.");
	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /factionname <Faccion 1-5> <Nombre>");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
	}
	zcmd(darlider, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] >= 2012 || PlayerInfo[playerid][pFacciones] == 1)
	    {
	        if(AdminDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Necesitas estar [{FFFFFF} ADMIN DUTY{2471A3} ] para poder usar comandos administrativos.");
	        if(!sscanf(params, "ui", params[0], params[1]))
	        {
	            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
	            if(params[1] < 1 || params[1] > 5) return Message(playerid, COLOR_GRAD2, "ID de faccion entre 1 y 5.");
				if(FactionInfo[(params[1]-1)][fType] > 0)
				{
				    new string[128];
				    PlayerInfo[params[0]][pLeader] = (params[1]+14);
				    PlayerInfo[params[0]][pRank] = 6;
				    format(string, sizeof(string), "Administrador %s asignó el líder de la facción %s a %s.", PlayerName(playerid), FactionInfo[(params[1]-1)][fName], PlayerName(params[0]));
       				MessageEx(playerid, params[0], 0x6ADFFFFF, string);
       				UpdatePlayerStat(params[0]);
				} else Message(playerid, COLOR_GRAD2, "Esa faccion no consta como creada.");
	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /darlider <PlayerID> <Faccion 1-5>");
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
	}
	zcmd(editranks, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
	    {
			if(!sscanf(params, "ids[20]", params[0], params[1], params[2]))
			{
				if(params[0] < 1 || params[0] > 5) return Message(playerid, COLOR_GRAD2, "Slot entre 1 y 5.");
				if(params[1] < 1 || params[1] > 6) return Message(playerid, COLOR_GRAD2, "ID de Rango entre 1 y 6");
				if(strlen(params[2]) < 5 || strlen(params[2]) > 19) return Message(playerid, COLOR_GRAD2, "Nombre del rango entre 5 y 20 carácteres.");
				if(FactionInfo[(params[0]-1)][fType] > 0)
				{
				    new string[90];
					switch(params[1])
					{
					    case 1:{
					        format(FactionInfo[(params[0]-1)][fRank1], 20, params[2]);
	        			}
	        			case 2:{
	        			    format(FactionInfo[(params[0]-1)][fRank2], 20, params[2]);
     			    	}
     			    	case 3:{
	        			    format(FactionInfo[(params[0]-1)][fRank3], 20, params[2]);
     			    	}
     			    	case 4:{
	        			    format(FactionInfo[(params[0]-1)][fRank4], 20, params[2]);
     			    	}
     			    	case 5:{
	        			    format(FactionInfo[(params[0]-1)][fRank5], 20, params[2]);
     			    	}
     			    	case 6:{
	        			    format(FactionInfo[(params[0]-1)][fRank6], 20, params[2]);
     			    	}
					}
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(IsPlayerConnected(i))
					    {
					        if(PlayerInfo[i][pMember] == (params[0]+14)  || PlayerInfo[i][pLeader] == (params[0]+14))
					        {
                                UpdatePlayerStat(i);
             				}
    					}
					}
					format(string, sizeof string, "Has editado el rango %d de la faccion %s a %s.", params[1], FactionInfo[(params[0]-1)][fName], params[2]);
					Message(playerid, COLOR_YELLOW, string);
					SaveFactions();
				} else Message(playerid, COLOR_GRAD2, "La faccion de ese slot no está creada.");
			} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /editranks <Faccion 1-5> <Slot Rank> <Nombre Rank>");
		} else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
		return 1;
	}
	zcmd(fentrada, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
	    {
			if(!sscanf(params, "i", params[0]))
			{
	            if(params[0] < 1 || params[0] > 5) return Message(playerid, COLOR_GRAD2, "Slot de Faccion entre 1 y 5.");
	            if(FactionInfo[(params[0]-1)][fType] > 0)
	            {
	                new Float:PosX, Float:PosY, Float:PosZ;
	                GetPlayerPos(playerid, PosX, PosY, PosZ);
					FactionInfo[(params[0]-1)][fEntrance][0] = PosX;
                    FactionInfo[(params[0]-1)][fEntrance][1] = PosY;
                    FactionInfo[(params[0]-1)][fEntrance][2] = PosZ;
                    if(FactionInfo[(params[0]-1)][fPickup] != -1) { DestroyDynamicPickup(FactionInfo[(params[0]-1)][fPickup]); DestroyDynamic3DTextLabel(FactionInfo[(params[0]-1)][fTextLabel]); }
                    FactionInfo[(params[0]-1)][fPickup] = CreateDynamicPickup(1239, 1, PosX, PosY, PosZ);
                    FactionInfo[(params[0]-1)][fTextLabel] = CreateDynamic3DTextLabel(FactionInfo[(params[0]-1)][fName], 0xE6DE48FF, PosX, PosY, PosZ, 5.0);
	                Message(playerid, COLOR_YELLOW, "Has cambiado la entrada a la HQ de la faccion aquí.");
	                SaveFactions();
	            } else Message(playerid, COLOR_GRAD2, "Esta faccion no consta como creada.");
	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /fentrada <Faccion 1-5>");
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
	}
	zcmd(fsalida, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
	    {
			if(!sscanf(params, "i", params[0]))
			{
			    if(params[0] < 1 || params[0] > 5) return Message(playerid, COLOR_GRAD2, "Slot de Faccion entre 1 y 5.");
			    if(FactionInfo[(params[0]-1)][fType] > 0)
			    {
			        new Float:PosX, Float:PosY, Float:PosZ;
			        GetPlayerPos(playerid, PosX, PosY, PosZ);
			        new Int = GetPlayerInterior(playerid);
			        new VirW = GetPlayerVirtualWorld(playerid);
			        FactionInfo[(params[0]-1)][fExit][0] = PosX;
			        FactionInfo[(params[0]-1)][fExit][1] = PosY;
			        FactionInfo[(params[0]-1)][fExit][2] = PosZ;
			        FactionInfo[(params[0]-1)][fInterior] = Int;
			        FactionInfo[(params[0]-1)][fVirtualWorld] = VirW;
			        FactionInfo[(params[0]-1)][fLocked] = 1;
			        Message(playerid, COLOR_YELLOW, "Has cambiado la salida de la HQ de la faccion aquí.");
			        SaveFactions();
				} else Message(playerid, COLOR_GRAD2, "Esta faccion no consta como creada.");
	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /fsalida <Faccion 1-5>");
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
	}
	zcmd(fvehiculos, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if(params[0] < 1 || params[0] > 5) return Message(playerid, COLOR_GRAD2, "ID de faccion entre 1 y 5.");
	            if(FactionInfo[(params[0]-1)][fType] > 0)
	            {
	                new string[360];
	                for(new fv = 0; fv < MAX_VEHICLES_FACTION; fv++)
	                {
	                    if(FactionVehicleInfo[(params[0]-1)][fv][fvModel] != 0)
	                    {
		                    format(string, sizeof string, "{FFFFFF}%sSlot:%d - Modelo: %s - ID: %d\n", string, (fv+1), GetVehicleFriendlyName(FactionVehicleInfo[(params[0]-1)][fv][fvID]), FactionVehicleInfo[(params[0]-1)][fv][fvID]);
						}
	                }
	                ShowPlayerDialog(playerid, 6767, DIALOG_STYLE_MSGBOX, "{DC092F}Lista de Vehiculos", string, "Aceptar", "");
     			} else Message(playerid, COLOR_GRAD2, "Esa faccion no consta como creada.");
	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /fvehiculos <Faccion 1-5>");
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
	}
	zcmd(cvehiculo, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
	    {
	        if(!sscanf(params, "iddd", params[0], params[1], params[2], params[3]))
	        {
	            if(params[0] < 1 || params[0] > 5) return Message(playerid, COLOR_GRAD2, "ID de faccion entre 1 y 5.");
	            if(params[1] < 400 || params[1] > 611) return Message(playerid, COLOR_GRAD2, "Modelo ID entre 400 y 611.");
	            if(params[2] < 0 || params[2] > 127) return Message(playerid, COLOR_GRAD2, "Color entre 1 y 127.");
	            if(params[3] < 0 || params[3] > 127) return Message(playerid, COLOR_GRAD2, "Color entre 1 y 127.");
	            if(FactionInfo[(params[0]-1)][fType] > 0)
	            {
	                new string[100];
					new vehiclecounter = GetFactionsVehicles((params[0]-1));
					if(vehiclecounter == -1) return Message(playerid, COLOR_GRAD2, "Esta faccion no puede tener mas vehículos, puedes borrar uno con /bvehiculo.");
	                new carid = CreateFactionVehicle(playerid, params[0], vehiclecounter, params[1], params[2], params[3]);
	                if(carid == INVALID_VEHICLE_ID) return Message(playerid, COLOR_GRAD2, "Hubo un error y el vehículo no se creó correctamente.");
	                format(string, sizeof string, "Has creado el vehículo ID %d para la faccion %s.", carid, FactionInfo[(params[0]-1)][fName]);
	                Message(playerid, COLOR_YELLOW, string);
	                SaveFactions();
	            } else Message(playerid, COLOR_GRAD2, "Esa faccion aun no está creada.");
	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /cvehiculo <Faccion 1-5> <Modelo ID> <Color1 ID> <Color2 ID>");
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
	}
	zcmd(bvehiculo, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
	    {
	        if(!sscanf(params, "ii", params[0], params[1]))
	        {
	            if(params[0] < 1 || params[0] > 5) return Message(playerid, COLOR_GRAD2, "ID de faccion entre 1 y 5.");
	            if(params[1] < 1 || params[1] > 6) return Message(playerid, COLOR_GRAD2, "Slot de vehiculo entre 1 y 6.");
	            if(FactionInfo[(params[0]-1)][fType] > 0)
	            {
	                if(FactionVehicleInfo[(params[0]-1)][(params[1]-1)][fvModel] != 0)
	                {
	                    DeleteFactionVehicle(params[0], params[1]);
	                    Message(playerid, COLOR_YELLOW, "Has borrado el auto correctamente.");
                        SaveFactions();
	                } else Message(playerid, COLOR_GRAD2, "Ese slot no tiene ningun vehículo.");
	            } else Message(playerid, COLOR_GRAD2, "Esa faccion aun no está creada.");
	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /bvehiculo <Faccion 1-5> <Vehiculo 1-6>");
	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
	    return 1;
 	}
 	zcmd(evehiculo, playerid, params[])
 	{
 	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
 	    {
			if(!sscanf(params, "ii", params[0], params[1]))
			{
			    if(params[0] < 1 || params[0] > 5) return Message(playerid, COLOR_GRAD2, "ID de faccion entre 1 y 5.");
			    if(params[1] < 1 || params[1] > 6) return Message(playerid, COLOR_GRAD2, "Slot de vehiculo entre 1 y 6.");
				if(FactionInfo[(params[0]-1)][fType] > 0)
				{
					if(FactionVehicleInfo[(params[0]-1)][(params[1]-1)][fvID] != INVALID_VEHICLE_ID)
					{
					    new carid = FactionVehicleInfo[(params[0]-1)][(params[1]-1)][fvID];
					    new Float:PosX, Float:PosY, Float:PosZ, Float:PosA;
					    GetVehiclePos(carid, PosX, PosY, PosZ);
                        GetVehicleZAngle(carid, PosA);
					    FactionVehicleInfo[(params[0]-1)][(params[1]-1)][fvPos][0] = PosX;
						FactionVehicleInfo[(params[0]-1)][(params[1]-1)][fvPos][1] = PosY;
						FactionVehicleInfo[(params[0]-1)][(params[1]-1)][fvPos][2] = PosZ;
						FactionVehicleInfo[(params[0]-1)][(params[1]-1)][fvPos][3] = PosA;
						Message(playerid, COLOR_YELLOW, "Has cambiado la posicion de respawn del vehículo exitosamente.");
						SaveFactions();
      				} else Message(playerid, COLOR_GRAD2, "No hay un vehículo en ese slot.");
 	            } else Message(playerid, COLOR_GRAD2, "Esa faccion aun no está creada.");
          	} else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /evehiculo <Faccion 1-5> <Vehiculo 1-6>");
 	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
 	    return 1;
	}
 	zcmd(borrarfaccion, playerid, params[])
 	{
 	    if(PlayerInfo[playerid][pAdminCP] >= 2013)
 	    {
 	        if(!sscanf(params, "i", params[0]))
 	        {
 	            if(params[0] < 1 || params[0] > 5) return Message(playerid, COLOR_GRAD2, "ID de faccion entre 1 y 5.");
 	            if(FactionInfo[(params[0]-1)][fType] > 0)
 	            {
 	                new string[80];
					format(string, sizeof string, "%s ha borrado la faccion %s.", PlayerName(playerid), FactionInfo[(params[0]-1)][fName]);
 		            A_Info(string);
 	    	        DeleteFaction(params[0]);
 	        	    new faction = params[0]+14;
 	            	for(new i = 0; i < MAX_PLAYERS; i++)
 	            	{
 	            	    if(IsPlayerConnected(i))
 	                	{
 	                		if(PlayerInfo[i][pMember] == faction || PlayerInfo[i][pLeader] == faction)
 	                		{
 	                	    	PlayerInfo[i][pMember] = 0;
 	                	    	PlayerInfo[i][pLeader] = 0;
 	                	    	PlayerInfo[i][pRank] = 0;
 	                        	Message(i, COLOR_YELLOW, "La faccion en la que estabas ha sido borrada por un administrador.");
 	                        	UpdatePlayerStat(i);
 	                    	}
 	                	}
 	            	}
    			} else Message(playerid, COLOR_GRAD2, "Esa faccion que estas intentando borrar no ha sido creada.");
 	        } else Message(playerid, COLOR_GRAD2, "{DC092F}Utilize:{2471A3} /borrarfaccion <Faccion 1-5>");
 	    } else Message(playerid, COLOR_GRAD2, "{DC092F}No Autorizado.");
 	    return 1;
 	}
 	zcmd(abrirhq, playerid, params[])
	{
		for(new f = 0; f < MAX_FACTION; f++)
		{
		    if(PlayerToPoint(3.0, playerid, FactionInfo[f][fEntrance][0], FactionInfo[f][fEntrance][1], FactionInfo[f][fEntrance][2]))
		    {
		        if(PlayerInfo[playerid][pMember] == (f+15) || PlayerInfo[playerid][pLeader] == (f+15))
		        {
		            if(FactionInfo[f][fLocked] == 0)
		            {
		                FactionInfo[f][fLocked] = 1;
		                Message(playerid, COLOR_GRAD2, "HQ Cerrada.");
		                return 1;
              		}
              		else {
              		    FactionInfo[f][fLocked] = 0;
              		    Message(playerid, COLOR_GRAD2, "HQ Abierta.");
              		    return 1;
          		    }
	            }
          	}
     	}
	    return 1;
	}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
	if(gPlayerLogged[playerid] != 1) { Message(playerid, COLOR_YELLOW2, "¡Primero debes loguearte en el servidor para usar un comando!"); return 0; }
    printf("CMD: (%s(%d), %s)", PlayerName(playerid), playerid, cmdtext);
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
    {
        new string[60];
       	format(string, sizeof string, "{DC092F}¡Error! {2471A3}El comando que ha escrito no existe.");
  		Message(playerid, -1, string);
	}
	return 1;
}

ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	new Float:posx, Float:posy, Float:posz;
	GetPlayerPos(playerid, posx, posy, posz);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
		{
			if(BigEar[i] == 0)
			{
			    if(IsPlayerInRangeOfPoint(i, radi / 16, posx, posy, posz)) {
					SendClientMessage(i, col1, string);
				}
				else if(IsPlayerInRangeOfPoint(i, radi / 8, posx, posy, posz)) {
					SendClientMessage(i, col2, string);
				}
				else if(IsPlayerInRangeOfPoint(i, radi / 4, posx, posy, posz)) {
					SendClientMessage(i, col3, string);
				}
				else if(IsPlayerInRangeOfPoint(i, radi / 2, posx, posy, posz)) {
					SendClientMessage(i, col4, string);
				}
				else if(IsPlayerInRangeOfPoint(i, radi, posx, posy, posz)) {
					SendClientMessage(i, col5, string);
				}
			}
			else
			{
				SendClientMessage(i, col1, string);
			}
		}
	}
	return 1;
}

ProxDetectorBcmd(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	new Float:posx, Float:posy, Float:posz;
	GetPlayerPos(playerid, posx, posy, posz);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
		{
		    if(gBcmd[i] == 0)
		    {
				if(BigEar[i] == 0)
				{
				    if(IsPlayerInRangeOfPoint(i, radi / 16, posx, posy, posz)) {
						SendClientMessage(i, col1, string);
					}
					else if(IsPlayerInRangeOfPoint(i, radi / 8, posx, posy, posz)) {
						SendClientMessage(i, col2, string);
					}
					else if(IsPlayerInRangeOfPoint(i, radi / 4, posx, posy, posz)) {
						SendClientMessage(i, col3, string);
					}
					else if(IsPlayerInRangeOfPoint(i, radi / 2, posx, posy, posz)) {
						SendClientMessage(i, col4, string);
					}
					else if(IsPlayerInRangeOfPoint(i, radi, posx, posy, posz)) {
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}
	return 1;
}

ProxDetectorEx(Float:radi, playerid, string[], color)
{
	new Float:posx, Float:posy, Float:posz;
	GetPlayerPos(playerid, posx, posy, posz);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
		{
			if(BigEar[i] == 0)
			{
   				if(IsPlayerInRangeOfPoint(i, radi, posx, posy, posz)) {
   					SendClientMessage(i, color, string);
     			}
			}
			else {
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(playerid, posx, posy, posz);
		if(IsPlayerInRangeOfPoint(targetid, radi, posx, posy, posz))
		{
			return 1;
		}
	}
	return 0;
}

public OnPlayerText(playerid, text[])
{
	new
		string[128], 	tmp[32],	acento[32],		car = GetVehicleModel(GetPlayerVehicleID(playerid));

    if(DetectarSPAM(text))
    {
        new x[186];
        format(x, sizeof(x), "{11BB11}- AntiSPAM {FFFFFF}|| {FF2200}%s(%d): {FFFFFF}%s ||", PlayerName(playerid),playerid, text); A_Info(x);
    	return 0;
   	}
   	if(AFK[playerid] > 0)
   	{
   	    Message(playerid, COLOR_GRAD2, "¡No puedes hablar en estado AFK!");
   	    return 0;
    }
	if(GetPVarInt(playerid, "Muted") == 1)
	{
		Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
		return 0;
	}
	if(GetPVarInt(playerid, "TutStep") >= 1)
	{
		Message(playerid, TEAM_CYAN_COLOR, "* Estás en el tutorial no puedes hablar.");
		return 0;
	}
	if(UsingEctasy[playerid] > 0)
	{
		SendClientMessage(playerid, TEAM_CYAN_COLOR, "¡Una fuerza desconocida te impide hablar!");
		return 0;
	}
	if(GetPVarType(playerid, "TalkingLive") != 0)
	{
 		if(PlayerInfo[playerid][pRank] == 3)
	    {
     		if(car == 488 || car == 582)
    		{
				format(string, sizeof(string), "[LSRTV-Directo](%s): %s", PlayerName(playerid), text);
				OOCNews(0x00B75BFF, string);
				return 0;
	    	}
	    	else { Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo CNN!"); return 0; }
	    }
	    else
	    {
			if(Journalist(playerid))
			{
			    format(string, sizeof(string), "[LSRTV-Directo](%s): %s", PlayerName(playerid), text);
				OOCNews(0x00B75BFF, string);
				return 0;
			}
			else
			{
			    format(string, sizeof(string), "[LSRTV-Directo]Invitado(%s): %s", PlayerName(playerid), text);
				OOCNews(0x00B75BFF, string);
				return 0;
			}
		}
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		format(string, sizeof(string), "(Teléfono) %s: %s", PlayerName(playerid), text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		// -================= Mecanicos =======================- //
		if(Mobile[playerid] == 556)
		{
   			Params>
			{
			    Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}¿Si necesita asistencia, diga ASISTENCIA, para anular la llamada NO?");
			 	return 0;
			}
			else if ((strcmp("asistencia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("asistencia")))
			{
				Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Muy bien! Necesita asistencia!");
                Message(playerid, COLOR_WHITE, "{117799}Operadora: {F5DEB3}Puedes llamar a los siguientes mecánicos de tu zona.");
                Message(playerid, COLOR_WHITE, "{117799}Operadora: {F5DEB3}Gracias por preferirnos, si no hay mecánicos intente en otro momento.");
                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
                SetTimerEx("RemoveHand", 1800, false, "i", playerid);
		     	for(new i = 0; i < MAX_PLAYERS; i++)
			    {
				    if(IsPlayerConnected(i))
				    {
				        if(Team_Mecanicos(i) && GetPVarType(i, "OnDuty") == 1)
				        {
						    format(string, 256, "  Tlf: %d - Nombre: %s", PlayerInfo[i][pPnumber] ,PlayerName(i));
						    Message(playerid, -1, string);
						    Mobile[playerid] = 255;
				        }
				    }
				}
				return 0;
			}
			else if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
			{
				Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Anuló la llamada!");
				Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Pásese por el taller y descubra ofertas en tuning, arreglos etc!");
				Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Que tenga buen día!");
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
                SetTimerEx("RemoveHand", 1800, false, "i", playerid);
				Mobile[playerid] = 255;
				return 0;
			}
			else
			{
				Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}¿Si necesita asistencia, diga ASISTENCIA, para anular la llamada NO?");
				return 0;
			}
		}
		// -================= Transportes =====================- //
		else if(Mobile[playerid] == 445)
		{
			Params>
			{
			    Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Diga TAXI para continuar, diga NO para cancelar");
			 	return 0;
			}
			else if ((strcmp("taxi", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("taxi")))
			{
				Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}¿En que zona está?");
				Mobile[playerid] = 446;
				return 0;
			}
			else if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				SetTimerEx("RemoveHand", 1800, false, "i", playerid);
				Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}¡Adios, que tenga un buen día!");
				Mobile[playerid] = 255;
				return 0;
			}
			else
			{
				Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Diga TAXI para continuar, diga NO para cancelar");
				return 0;
			}
		}
		else if(Mobile[playerid] == 446)
		{
		    if(TaxiSlot1 != 999 && TaxiSlot2 != 999 && TaxiSlot3 != 999 && TaxiSlot4 != 999 && TaxiSlot5 != 999 && TaxiSlot6 != 999 && TaxiSlot7 != 999 && TaxiSlot8 != 999)
		    {
		        Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Nuestras líneas están colapsadas, pruebe más tarde.");
		        Mobile[playerid] = 255;
				return 0;
			}
		    format(string, sizeof(string), "Central: %s necesita un taxi en (%s, San Andreas)", PlayerName(playerid), text);
		    SendJobMessage(9, TEAM_BLUE_COLOR, string);
		    Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Está en la lista de espera. El taxi más cercano pasará a recogerle.");
		    Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Si quiere anular el taxi, utiliza /cancelar taxi");
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		    SetTimerEx("RemoveHand", 1800, false, "i", playerid);
		    Mobile[playerid] = 255;
		    if(TaxiSlot1 == 999) { TaxiSlot1 = playerid; format(SlotZone1, 48, text); TiempoSlot1 = 1;  SetPVarInt(playerid, "TaxiCalled", 1);  return 0; }
		    if(TaxiSlot2 == 999) { TaxiSlot2 = playerid; format(SlotZone2, 48, text); TiempoSlot2 = 1;  SetPVarInt(playerid, "TaxiCalled", 2);	return 0; }
		    if(TaxiSlot3 == 999) { TaxiSlot3 = playerid; format(SlotZone3, 48, text); TiempoSlot3 = 1;  SetPVarInt(playerid, "TaxiCalled", 3);	return 0; }
		    if(TaxiSlot4 == 999) { TaxiSlot4 = playerid; format(SlotZone4, 48, text); TiempoSlot4 = 1;  SetPVarInt(playerid, "TaxiCalled", 4);	return 0; }
		    if(TaxiSlot5 == 999) { TaxiSlot5 = playerid; format(SlotZone5, 48, text); TiempoSlot5 = 1;  SetPVarInt(playerid, "TaxiCalled", 5);	return 0; }
		    if(TaxiSlot6 == 999) { TaxiSlot6 = playerid; format(SlotZone6, 48, text); TiempoSlot6 = 1;  SetPVarInt(playerid, "TaxiCalled", 6);	return 0; }
		    if(TaxiSlot7 == 999) { TaxiSlot7 = playerid; format(SlotZone7, 48, text); TiempoSlot7 = 1;  SetPVarInt(playerid, "TaxiCalled", 7);	return 0; }
		    if(TaxiSlot8 == 999) { TaxiSlot8 = playerid; format(SlotZone8, 48, text); TiempoSlot8 = 1;  SetPVarInt(playerid, "TaxiCalled", 8);	return 0; }
		}
		// -============================ Emergencias ============================- //
		else if(Mobile[playerid] == 915)
		{
		    Params>
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Central: Entendido, ¿su ubicación porfavor?");
				return 0;
			}
			new wanted[128], Texto[64];
			format(wanted, sizeof(wanted), "Central: %s necesita una ambulancia. Lugar: (%s)",PlayerName(playerid), text);
			SendRadioMessage(4, TEAM_CYAN_COLOR, wanted);
			GetPVarString(playerid, "Situacion", Texto, 64);
			format(wanted, sizeof(wanted), "* Incidente: %s",Texto);
			SendRadioMessage(4, TEAM_CYAN_COLOR, wanted);
			new Float:trace_x, Float:trace_y, Float:trace_z;
			GetPlayerPos(playerid, trace_x, trace_y, trace_z);
			emdtrace = 1; emdtrace_x = trace_x; emdtrace_y = trace_y; emdtrace_z = trace_z;
			Message(playerid, COLOR_ALLDEPT, "Central: Ahora le enviamos una ambulancia, sea paciente.");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetTimerEx("RemoveHand", 1800, false, "i", playerid);
			Mobile[playerid] = 255;
			return 0;
		}
		else if(Mobile[playerid] == 914)
		{
			Params>
			{
				Message(playerid, COLOR_ALLDEPT, "Central: Por favor, ¿una breve explicación de la situación?");
				return 0;
			}
			Message(playerid, COLOR_ALLDEPT, "Central: Entendido, ¿Su ubicacion por favor?");
			SetPVarString(playerid, "Situacion", text);
			Mobile[playerid] = 915;
			return 0;
		}
		else if(Mobile[playerid] == 913)
		{
			Params>
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Comisaria: repítame que no le he entendido!");
				return 0;
			}
			new Texto[64];
   			format(string, sizeof(string), "** Central: Han solicitado una patrulla. Lugar: (%s)",text);
			SendFamilyMessage(1, TEAM_RADIO_COLOR, string);
			GetPVarString(playerid, "Situacion", Texto, 64);
			format(string, sizeof(string), "** Central: Un tal %s denuncia: %s",PlayerName(playerid), Texto);
			SendFamilyMessage(1, TEAM_RADIO_COLOR, string);
			SendClientMessage(playerid, 0x0080FFFF, "Comisaria: una patrulla se pasará por la zona.");
			SendClientMessage(playerid, 0x0080FFFF, "Comisaria: ¡Gracias por su información!");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetTimerEx("RemoveHand", 1800, false, "i", playerid);
			Mobile[playerid] = 255;
			new Float:trace_x, Float:trace_y, Float:trace_z;
			GetPlayerPos(playerid, trace_x, trace_y, trace_z);
			pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
			return 0;
		}
		else if(Mobile[playerid] == 912)
		{
			Params>
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Comisaria: no le entiendo., repíta porfavor!");
				return 0;
			}
			SetPVarString(playerid, "Situacion", text);
			format(string, sizeof(string), "Comisaria: Entendido señor %s, díganos su ubicación exacta", PlayerName(playerid));
			Message(playerid, 0x0080FFFF, string);
			Mobile[playerid] = 913;
			return 0;
		}
		else if(Mobile[playerid] == 911)
		{
			Params>
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA:  Lo sentimos, no le entendimos, POLICIA o PARAMEDICO ?");
				return 0;
			}
			else if ((strcmp("Policia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Policia")))
			{
				Message(playerid, COLOR_WHITE, "--> Conexión establecida con LSPD.");
				SendClientMessage(playerid, 0x0080FFFF, "Central: Explique brevemente lo ocurrido.");
				Mobile[playerid] = 912;
				return 0;
			}
			else if ((strcmp("samur", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("samur")))
			{
			    Message(playerid, COLOR_WHITE, "--> Conexión establecida con SAMUR.");
				SendClientMessage(playerid, COLOR_ALLDEPT, "Central: Explique brevemente lo ocurrido.");
				Mobile[playerid] = 914;

				return 0;
			}
			else
			{
				SendClientMessage(playerid, 0x0080FFFF, "EMERGENCIA: Lo sentimos, no le entendimos, POLICIA o PARAMEDICO ?");
				return 0;
			}
		}
		else if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				if(GetPVarInt(Mobile[playerid], "Speaker") == 0)
				{
				    format(string, sizeof(string), "(Voz en el Teléfono): %s", text);
				    Message(Mobile[playerid], COLOR_YELLOW,string);
				}
				else
				{
				    format(string, sizeof(string), "(Altavoz): %s", text);
					ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
			}
		}
		else
		{
			Message(playerid, COLOR_GRAD2,"¡Nadie en línea!");
			return 0;
		}
		return 0;
	}
	if(realchat)
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
	    if(Pandilleros(playerid) || Mafioso(playerid) || Terroristas(playerid) || GetPlayerFactionType(playerid) == 2)
		{
	    	if(Pandilleros(playerid) || GetPlayerFactionType(playerid) == 2)   acento = " [Acento de Barrio]";
	    	else if(Mafia_Italiana(playerid))  acento = " [Acento Italiano]";
	    	else if(Mafia_Rusa(playerid))	acento = " [Acento Ruso]";
	    	else if(Terroristas(playerid))   acento = " [Acento Colombiano]";
 		}
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(Maskuse[playerid] == 1) format(string, sizeof(string), "Desconocido dice%s: %s", acento, text);
			else format(string, sizeof(string), "%s dice%s: %s", PlayerName(playerid), acento, text);
  			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		else
		{
		    new carid = GetPlayerVehicleID(playerid);
		    if(IsABike(carid) || IsAPlane(carid))
		    {
		        if(Maskuse[playerid] == 1) format(string, sizeof(string), "Desconocido dice%s: %s", acento, text);
				else format(string, sizeof(string), "%s dice%s: %s", PlayerName(playerid), acento, text);
  				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		    }
		    else
		    {
		    	if(VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
		    	{
		    		if(Maskuse[playerid] == 1)	format(string, sizeof(string), "(Ventana Cerrada) Desconocido dice%s: %s", acento, text);
					else format(string, sizeof(string), "(Ventana Cerrada) %s dice%s: %s", PlayerName(playerid), acento, text);
  					ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else
				{
			    	if(Maskuse[playerid] == 1) format(string, sizeof(string), "(Ventana Abierta) Desconocido dice%s: %s", acento, text);
					else format(string, sizeof(string), "(Ventana Abierta) %s dice%s: %s", PlayerName(playerid), acento, text);
  					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
			}
		}
		return 0;
	}
	return 0;
}

function FixHour(hour)
{
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}

function HouseTimer()
{
	for(new h=0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hTime] <= gettime())
		{
		    HouseInfo[h][hOwned] = 0;
		    HouseInfo[h][hLock] = 1;
		    HouseInfo[h][hRent] = 0;
		    HouseInfo[h][hRentabil] = 0;
		    HouseInfo[h][hWep] = 0;
			HouseInfo[h][hAmmo] = 0;
			HouseInfo[h][hMats] = 0;
			HouseInfo[h][hDrugs] = 0;
			HouseInfo[h][hSpeed] = 0;
			HouseInfo[h][hEctasy] = 0;
			HouseInfo[h][hRitalin] = 0;
			HouseInfo[h][hHeroina] = 0;
			HouseInfo[h][hMarihuana] = 0;
			HouseInfo[h][hTime] = 1999999999;
			format(HouseInfo[h][hOwner], 24, "El Estado");
	        OnPropTextdrawUpdate(h);
		}
	}
	return 1;
}

function TeleportPlayer(playerid)
{
	// LSPD Entrance
	if(PlayerToPoint(1, playerid,1554.9537,-1675.6584,16.1953))
	{
	    if(IsACop(playerid) || GetPlayerWeapon(playerid) == 0 && !IsACop(playerid))
	    {
			GameTextForPlayer(playerid, "~w~Departamento De ~n~Policia de LS", 5000, 1);
			SetPosEx(playerid,246.7079,66.2239,1003.6406,0,6,0);
			PlayerPlaySound(playerid, 1052, 246.7562,64.4719,1003.6406);
			return 1;
		}
		else
		{
		    GameTextForPlayer(playerid, "~w~Departamento De ~n~Policia de LS", 5000, 1);
			SetPosEx(playerid,246.7079,66.2239,1003.6406,0,6,0);
			ProxDetectorEx(15.0, playerid, "Biiiiiiip! Biiiiip!", 0xFF8080FF);
			PlayerPlaySound(playerid, 1055, 246.7562,64.4719,1003.6406);
			return 1;
		}
	}
    else if(PlayerToPoint(1, playerid,242.2513,66.3352,1003.6406))
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) { ShowPlayerDialog(playerid, DIALOG_LSPD_ELEVATOR, DIALOG_STYLE_LIST, "Ascensor LSPD", "¿ Donde desea ir ?", "Garage", "Terraza"); return 1; }
		else { GameTextForPlayer(playerid, "~r~Solo Policias!", 5000, 3); return 1; }
	}
	//Hospital Ascensor
	else if(PlayerToPoint(1, playerid,842.9150,-1218.1956,1195.2655))
	{
	    if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) { ShowPlayerDialog(playerid, DIALOG_SAMUR_ELEVATOR, DIALOG_STYLE_LIST, "SAMUR - ¿Donde deseas ir?", "Garage\nTerraza", "Aceptar", "Cancelar"); return 1; }
	    else { GameTextForPlayer(playerid, "~r~solo personal!", 4000, 1); return 1; }
 	}
	// BOWLING ENTER
	else if(PlayerToPoint(1, playerid,1714.1112,-1776.6904,13.6397)){
	    if(GetPlayerMoney(playerid) < 200) return Message(playerid, COLOR_GRAD2, "No tienes dinero para entrar.");
		Till(18, 200);
		Bought(playerid, 100);
		SetPosEx(playerid,-2355.876464,917.654235,93.634971,0,0,0);
		return 1;
	}
	// BOWLING EXIT
	else if(PlayerToPoint(1, playerid,-2355.876464,917.654235,93.634971)) { SetPosEx(playerid, 1714.1112,-1776.6904,13.6397,0,0,0); return 1; }
	// 10GREEN ENTER
	else if(PlayerToPoint(1, playerid,2309.891601,-1643.565429,14.827047)) { SetPosEx(playerid,501.902038,-67.564384,998.757812,0,11,0); return 1; }
	// 10GREEN EXIT
	else if(PlayerToPoint(1, playerid,501.902038,-67.564384,998.757812))
	{
		if(GetPlayerVirtualWorld(playerid) == 0) SetPosEx(playerid, 2309.891601,-1643.565429,14.827047,20.0,0,0);
		return 1;
	}
	// AMMU ENTER
	else if(PlayerToPoint(1, playerid,1368.842407,-1279.880737,13.546875)) { SetPosEx(playerid,315.810302,-143.586303,999.601562,0,7,0); return 1; }
	// AMMU EXIT
	else if(PlayerToPoint(1, playerid,315.810302,-143.586303,999.601562)) { SetPosEx(playerid, 1368.842407,-1279.880737,13.546875,20.0,0,0); return 1; }
	// VICTIM ENTER
	else if(PlayerToPoint(1, playerid,461.499267,-1500.973266,31.058967)) { SetPosEx(playerid,227.562377,-7.929605,1002.210937,0,5,0); return 1; }
	// VICTIM EXIT
	else if(PlayerToPoint(1, playerid,227.562377,-7.929605,1002.210937)) { SetPosEx(playerid, 461.499267,-1500.973266,31.058967,20.0,0,0); return 1; }
	// Entrada Interior Puerto
	else if(PlayerToPoint(1, playerid, 2941.8135,-1480.2831,10.9789))
	{
	    LoadObjects(playerid);
		SetPosEx(playerid, 981.2674,-1946.9452,2835.0000,0,0,1);
		return 1;
	}
	// Salida Puerto
	else if(PlayerToPoint(1, playerid, 981.2674,-1946.9452,2835.0000)) { SetPosEx(playerid, 2941.8135,-1480.2831,10.9789,0,0,0); return 1; }
	// LSTV ENTER
	else if(PlayerToPoint(1, playerid,758.1428,-1361.2177,14.0281)) { ShowPlayerDialog(playerid, ENTER_LSRTV, DIALOG_STYLE_LIST, "¿ Dónde desea ir ?", "LSRTV Planta 1\tOficina\nLSRTV Planta 2\tEstudio", "Ir", "Salir"); return 1; }
	// LSTV EXIT
	else if(PlayerToPoint(1, playerid,243.2710,302.7583,999.1343) || PlayerToPoint(1, playerid,-2719.7854,519.2936,48.3752)) { SetPosEx(playerid, 758.1428,-1361.2177,14.0281,20.0,0,0); return 1; }
	//LSPD Exit
	else if(PlayerToPoint(1, playerid,246.5325,62.4251,1003.6406)) { SetPosEx(playerid,1552.3231,-1674.6780,16.1953,0,0,0); return 1; }
	// Dispatch ENTER
	else if(PlayerToPoint(1, playerid,-2185.8447,897.8077,96.9397)) { SetPlayerPos(playerid,-2193.9558,887.8521,96.9397); return 1; }
	// Dispatch EXIT
	else if(PlayerToPoint(1, playerid,-2193.9558,887.8521,96.9397)) { SetPlayerPos(playerid,-2185.8447,897.8077,96.9397); return 1; }
    // Taxistas Oficinas
	else if (PlayerToPoint(1.0, playerid,1752.5724,-1894.1763,13.5574)) { SetPosEx(playerid,1768.1187,-1920.3647,-8.1672, 0, 0, 0); return 1; }
	// Taxistas Oficinas
	else if (PlayerToPoint(1.0, playerid,1768.1187,-1920.3647,-8.1672)) { SetPosEx(playerid,1752.5724,-1894.1763,13.5574, 0, 0, 0); return 1; }
	// Farmacia ENTER
	else if (PlayerToPoint(1.0, playerid,1229.2765,-1257.6761,13.5239))
	{
		SetPosEx(playerid,2422.8936,2464.5688,69.4834, 0, 0, 0);
		return 1;
	}
	// Farmacia EXIT
	else if (PlayerToPoint(1.0, playerid,2422.8936,2464.5688,69.4834)) { LoadObjects(playerid); SetPosEx(playerid,1229.2765,-1257.6761,13.5239, 0, 0, 0); return 1; }
	else if(PlayerToPoint(1, playerid,2229.9011,-1721.2582,13.5613))
	{//Ganton Gym
	    if(GetPlayerMoney(playerid) < 100) return Message(playerid, COLOR_GRAD2, "No tienes dinero para entrar.");
	    Till(19, 100);
		Bought(playerid, 100);
		GameTextForPlayer(playerid, "~w~gym", 5000, 1);
		SetPosEx(playerid,771.9399,-2.2574,1000.7292,0,5,0);
		return 1;
	}
	else if(PlayerToPoint(1, playerid,772.3594,-5.5157,1000.7286)) { SetPosEx(playerid,2225.6699,-1725.3134,13.5586,0,0,0); return 1; }
	// Cafe Catalina
	else if(PlayerToPoint(1, playerid,1799.6426,-1799.8643,13.5397))
	{
		LoadObjects(playerid);
		SetPosEx(playerid,681.5947,-451.1434,-25.6172,0,1,0);
		return 1;
	}
	else if(PlayerToPoint(1, playerid,681.5947,-451.1434,-25.6172)) { SetPosEx(playerid,1799.6426,-1799.8643,13.5397,0,0,0); return 1; }
	// Restaurant City
	else if(PlayerToPoint(1, playerid,1921.260742,-1766.815795,13.730500))
	{
		LoadObjects(playerid);
		SetPosEx(playerid,460.5569,-88.6175,999.5547,0,4,0);
		return 1;
	}
	else if(PlayerToPoint(1, playerid,460.5569,-88.6175,999.5547)) { SetPosEx(playerid,1921.260742,-1766.815795,13.730500,0,0,0); return 1; }
	// Hospital Los Santos Entrada
	else if (PlayerToPoint(2.5, playerid,1173.2563,-1323.3102,15.3943))
	{
	    LoadObjects(playerid);
		SetPosEx(playerid, 822.8337,-1228.3602,1195.0468, 0, 0, 1);
		return 1;
	}
	// Hospital Salida
	else if(PlayerToPoint(1, playerid, 822.8337,-1228.3602,1195.0468))
	{
 		SetPosEx(playerid, 1173.2563,-1323.3102,15.3943, 0, 0, 0);
 		return 1;
	}
	//Hospital Garage
	else if(PlayerToPoint(1, playerid,1144.9569,-1329.5032,13.5840))
	{
		LoadObjects(playerid);
		SetPosEx(playerid, 842.9150,-1218.1956,1195.2655,0,0,1);
		return 1;
	}
	// Hospital Emergencias
 	else if(PlayerToPoint(1, playerid, 1160.1611,-1381.9663,-7.4250)) // Ignorar
	{
	    SetPosEx(playerid, 1206.7070,-1354.3885,-3.3957,0,0,1);
		return 1;
	}
	else if(PlayerToPoint(1, playerid, 1206.7070,-1354.3885,-3.3957))
	{
	    SetPosEx(playerid, 1160.1611,-1381.9663,-7.4250,0,0,1);
		return 1;
	}
	// Hospital Laboratorio
	else if(PlayerToPoint(1, playerid, 1160.0791,-1385.9658,-7.4250))
	{
	    SetPosEx(playerid, 1175.7396,-1371.4095,-3.6813,0,0,1);
		return 1;
	}
	else if(PlayerToPoint(1, playerid, 1175.7396,-1371.4095,-3.6813))
	{
	    SetPosEx(playerid, 1160.0791,-1385.9658,-7.4250,0,0,1);
		return 1;
	}
	// Hospital Oficinas
	else if(PlayerToPoint(1, playerid, 1147.4082,-1390.9886,-7.4250))
	{
	    SetPosEx(playerid, 1126.3073,-1392.1741,-2.9922,0,0,1);
		return 1;
	}
	else if(PlayerToPoint(1, playerid, 1126.3073,-1392.1741,-2.9922))
	{
	    SetPosEx(playerid, 1147.4082,-1390.9886,-7.4250,0,0,1);
		return 1;
	}
	// Hospital Comedor y Sala de recuperacion
	else if(PlayerToPoint(1, playerid, 1161.4033,-1325.1381,-12.4844))
	{
	    SetPosEx(playerid, 1151.3619,-1391.0778,-7.4250,0,0,1);
		return 1;
	}
	else if(PlayerToPoint(1, playerid, 1151.3619,-1391.0778,-7.4250))
	{
	    SetPosEx(playerid, 1161.4033,-1325.1381,-12.4844,0,0,1);
		return 1;
	}
	// Hospital Bajar de helipuerto
	else if (PlayerToPoint(1, playerid,1161.5015,-1330.0845,31.4937))
	{
	    LoadObjects(playerid);
		SetPosEx(playerid, 842.9150,-1218.1956,1195.2655, 0, 0, 1);
		return 1;
	}
	// Periodico Los Santos
	else if (PlayerToPoint(1, playerid,1836.9222,-1417.4106,13.5625))
	{ //Entrada
		LoadObjects(playerid);
		SetPosEx(playerid, 2062.3735,-2214.3325,2664.6157,0,0,1);
		return 1;
	}
	else if (PlayerToPoint(1, playerid,2062.3735,-2214.3325,2664.6157))
	{ //Salida
		SetPosEx(playerid, 1836.9222,-1417.4106,13.5625,0,0,0);
		return 1;
	}
	// Seguro S.A Enter
	else if (PlayerToPoint(1, playerid,1263.1160,-1256.6476,13.4885))
	{
		LoadObjects(playerid);
		SetPosEx(playerid, 1263.2068,-1260.9357,-0.9000,0,0,1);
		return 1;
	}
	// Seguro S.A Exit
	else if (PlayerToPoint(1, playerid,1263.2068,-1260.9357,-0.9000))
	{
	    LoadObjects(playerid);
		SetPosEx(playerid, 1263.1160,-1256.6476,13.4885,0,0,0);
		return 1;
	}
	else if (PlayerToPoint(1, playerid,1524.5724,-1677.8043,6.2188))
	{ //PD Elevator
	    SetPosEx(playerid, 244.0099,66.4152,1003.6406,270,6,0);
	    return 1;
	}
	else if (PlayerToPoint(1, playerid,1557.7257,-1675.2711,28.3955))
	{ //PD Elevator
	    SetPosEx(playerid, 244.0099,66.4152,1003.6406,270,6,0);
	    return 1;
	}
	// BINCO ENTER
	else if (PlayerToPoint(1, playerid,2244.4690,-1665.1603,15.4766))
	{
	    SetPosEx(playerid,207.7209,-111.2660,1005.1328,0,15,0);
	    GText(playerid, "binco", 5000, 1);
	    Message(playerid, COLOR_GRAD2, "Utiliza /cropa para cambiar tu indumentaria");
	    return 1;
	}
	// BINCO EXIT
	else if (PlayerToPoint(1, playerid,207.7209,-111.2660,1005.1328))
	{
	    SetPosEx(playerid,2244.4690,-1665.1603,15.4766,0,0,0);
	    GText(playerid, "~w~los santos", 5000, 1);
	    return 1;
	}
	// Sex Shop
	else if (PlayerToPoint(1, playerid,1087.8663,-922.4969,43.3906))
	{
	    LoadObjects(playerid);
	    SetPosEx(playerid, -100.2815,-25.0383,1000.7188,190.7341,3,0);
	    return 1;
	}
	else if (PlayerToPoint(1, playerid,-100.2815,-25.0383,1000.7188)) { SetPosEx(playerid, 1087.8663,-922.4969,43.3906,21.9935,0,0); return 1; }
	else if (PlayerToPoint(1.5, playerid,1570.3828,-1333.8882,16.4844))
	{
		//Next to PD building
	    SetPosEx(playerid, 1545.0068,-1366.5094,327.2868,0,0,0);
	    return 1;
	}
	else if (PlayerToPoint(1.5, playerid,1548.8167,-1366.2247,326.2109))
	{
		//Next to PD building
	    SetPosEx(playerid, 1572.1115,-1332.5288,16.4844,0,0,0);
		return 1;
	}
	// Lavanderia
	else if (PlayerToPoint(1.5, playerid, 2007.0786,-1282.7594,23.9708))
	{
	    LoadObjects(playerid);
		SetPosEx(playerid, -2362.6943,433.0113,73.2922,0,0,0);
		return 1;
	}
	else if (PlayerToPoint(1.5, playerid, -2362.6943,433.0113,73.2922)) { SetPosEx(playerid, 2007.0786,-1282.7594,23.9708,0,0,0); return 1; }
	//Joyeria
	else if (PlayerToPoint(1.5, playerid, 1156.3755,-1862.6705,13.7729))
	{
	    LoadObjects(playerid);
	    SetPosEx(playerid, 1139.3036,-1867.3300,851.1042,0,0,0);
 	}
 	else if (PlayerToPoint(1.5, playerid, 1139.3036,-1867.3300,851.1042)) SetPosEx(playerid, 1156.3755,-1862.6705,13.7729,0,0,0);
	else if (PlayerToPoint(0.5, playerid,305.6703,-141.7649,1004.0625))
	{
	    // Accuracy's ENTER
	    SetPosEx(playerid, 304.2044,-141.8087,1004.0625,266.2744,7,0);
	    GText(playerid, "~y~Training Room",5000,1);
	    return 1;
	}
	else if (PlayerToPoint(0.5, playerid,304.2044,-141.8087,1004.0625))
	{
	    // Accuracy's EXIT
	    SetPosEx(playerid, 305.6703,-141.7649,1004.0625,93.4107,7,0);
	    GText(playerid, "~w~Ammunation",5000,1);
	    return 1;
	}
	else if (PlayerToPoint(0.5, playerid,300.0952,-141.8644,1004.0625))
	{
	    //PvP ENTER
	    SetPosEx(playerid, 299.1417,-141.8611,1004.0547,279.7479,7,0);
	    GText(playerid, "~r~Player vs player",5000,1);
	    return 1;
	}
	else if (PlayerToPoint(0.5, playerid,299.1417,-141.8611,1004.0547))
	{
	    //PvP EXIT
	    SetPosEx(playerid, 300.0952,-141.8644,1004.0625,92.3728,7,0);
	    GText(playerid, "~w~Ammunation",5000,1);
	    return 1;
	}
	//Ayuntamiento
	else if (PlayerToPoint(1, playerid,1480.0951,-1780.5416,15.3666))
 	{
  		SetPosEx(playerid, 386.2978,173.8582,1008.3828,0,3,0);
    	GameTextForPlayer(playerid, "~y~Ayuntamiento",5000,1);
    	return 1;
   	}
  	else if (PlayerToPoint(1, playerid,1480.2529,-1814.8264,15.3678))
   	{
    	SetPosEx(playerid, 366.5099,158.6440,1008.3828,0,3,0);
     	GameTextForPlayer(playerid, "~y~Ayuntamiento",5000,1);
     	return 1;
   	}
  	else if (PlayerToPoint(1, playerid,366.5099,158.6440,1008.3828))
  	{
   		SetPosEx(playerid, 1480.2426,-1821.4380,13.5469,0,0,0);
     	GameTextForPlayer(playerid, "~y~Los Santos",5000,1);
     	return 1;
  	}
	// Club Vip Entrada
    else if (PlayerToPoint(1, playerid,1797.5867,-1578.8649,14.0855))
    {
		if(PlayerInfo[playerid][pDonateT] > 0 || GetPVarInt(playerid, "ComproBoleto") == 1)
		{
		    LoadObjects(playerid);
		    SetPosEx(playerid, 2784.3855,2394.6736,1240.5358,0,0,1);
		    GameTextForPlayer(playerid, "~w~Club ~y~VIP",5000,6);
		    DeletePVar(playerid, "ComproBoleto");
		    return 1;
		}
		else Message(playerid, COLOR_GRAD2, " Usted no compro el boleto para entrar al club.");
		return 1;
    }
    else if (PlayerToPoint(1, playerid,2784.3855,2394.6736,1240.5358))
    {
    	SetPosEx(playerid, 1797.5867,-1578.8649,14.0855,0,0,0);
    	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
    	return 1;
    }
    // Guardia Nacional - Prision
    else if(PlayerToPoint(1, playerid,2691.1526,-2471.4546,13.6469))
    {
		LoadObjects(playerid);
        SetPosEx(playerid, 630.0692,839.3478,-90.2031, 0, 0, 0)
        GText(playerid, "~g~P~w~rision~n~~w~Militar", 4000, 1);
        return 1;
	}
	else if(PlayerToPoint(1, playerid,632.7405,839.2097,-90.2031))
	{
        SetPosEx(playerid, 2691.1526,-2471.4546,13.6469, 0, 0, 0)
        GText(playerid, "~g~Guardia~n~~w~Nacional", 5000, 1);
        return 1;
    }
    else if(PlayerToPoint(1, playerid,2787.4355,-2420.5334,13.6337))
    {//Cuarteles
        LoadObjects(playerid);
        SetPosEx(playerid, 2908.8123,2126.5759,0.3203, 0, 0, 0)
        GText(playerid, "~g~C~w~uarteles", 4000, 1);
        return 1;
    }
    else if(PlayerToPoint(1, playerid,2907.2405,2126.5566,0.3281))
    {
        SetPosEx(playerid, 2787.4355,-2420.5334,13.6337, 0, 0, 0)
        GText(playerid, "~g~Guardia~n~~w~Nacional", 5000, 1);
        return 1;
    }
    else if(PlayerToPoint(1, playerid,2758.7417,-2514.7607,13.6425))
    {//Armeria
        LoadObjects(playerid);
        SetPosEx(playerid, 254.8800,2023.7145,-6.7623, 0, 0, 0)
        GText(playerid, "~g~A~w~rmeria", 4000, 1);
        return 1;
	}
    else if(PlayerToPoint(1, playerid,254.8800,2023.7145,-6.7623))
    {
        SetPosEx(playerid, 2758.7417,-2514.7607,13.6425, 0, 0, 0)
        GText(playerid, "~g~Guardia~n~~w~Nacional", 5000, 1);
        return 1;
    }
    // Oficina SAEM
    else if(PlayerToPoint(1, playerid,2777.3066,-2529.1965,14.0538))
    {
        SetPosEx(playerid, 1110.3010,1494.2147,5.9109, 0, 0, 0);
        return 1;
    }
    else if(PlayerToPoint(1, playerid,1110.3010,1494.2147,5.9109))
    {
        SetPosEx(playerid, 2777.3066,-2529.1965,14.0538, 0, 0, 0);
        return 1;
    }
	else if(PlayerToPoint(1, playerid,2253.9565,-1333.4288,23.9816))
	{//iglesia
		LoadObjects(playerid);
        SetPosEx(playerid, 1465.0500,853.8983,-69.1137, 0, 0, 0);
        return 1;
	}
	else if(PlayerToPoint(1, playerid,1465.0500,853.8983,-69.1137))
	{
	    LoadObjects(playerid);
		SetPosEx(playerid, 2253.9565,-1333.4288,23.9816, 0, 0, 0);
		return 1;
	}
    //Ayuntamiento LS
	else if (PlayerToPoint(1, playerid,390.0630,173.5741,1008.3828))
	{
	    LoadObjects(playerid);
 		SetPosEx(playerid, 1480.2191,-1779.8718,15.3666,1.0187,0,0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
		return 1;
	}
	else if (PlayerToPoint(1, playerid,154.2457,-1946.2103,5.1346)) { SetPosEx(playerid,154.1186,-1949.6292,47.8750,1.4819,0,0); return 1; } //Faro Enter
	else if (PlayerToPoint(1, playerid,154.1186,-1949.6292,47.8750)) { SetPosEx(playerid,154.2457,-1946.2103,5.1346,1.4819,0,0); return 1; } //Faro Exit
	else if (PlayerToPoint(1, playerid,1833.512939, -1842.450073, 13.578125))
	{
		// 24/7 1 Enter
		SetPosEx(playerid, -25.570781, -141.143249, 1003.546875, 3.118535, 16, 0);
		GameTextForPlayer(playerid, "~r~~h~24 ~g~~h~7",5000,1);
		return 1;
	}
	else if (PlayerToPoint(1, playerid,-25.570781, -141.143249, 1003.546875))
	{
		// 24/7 1 Exit
		SetPosEx(playerid, 1833.512939, -1842.450073, 13.578125, 268.009368, 0, 0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
		return 1;
	}
	else if (PlayerToPoint(1, playerid,1352.232055, -1758.937500, 13.507812))
	{
		// 24/7 2 Enter
		SetPosEx(playerid, -26.896020, -57.764526, 1003.546875, 357.141845, 6, 0);
  		GameTextForPlayer(playerid, "~r~~h~24 ~g~~h~7",5000,1);
  		return 1;
	}
	else if (PlayerToPoint(1, playerid,-26.896020, -57.764526, 1003.546875))
	{
		// 24/7 2 Exit
		SetPosEx(playerid, 1352.232055, -1758.937500, 13.507812, 358.105255,0, 0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
		return 1;
	}
	else if (PlayerToPoint(1, playerid,1315.636962, -898.366149, 39.578125))
	{
		// 24/7 3 Enter
		SetPosEx(playerid, -27.485527, -31.096693, 1003.557250, 0.588506, 4, 0);
		GameTextForPlayer(playerid, "~r~~h~24 ~g~~h~7",5000,1);
		return 1;
	}
	else if (PlayerToPoint(1, playerid,-27.485527, -31.096693, 1003.557250))
	{
		// 24/7 3 Exit
		SetPosEx(playerid, 1315.636962, -898.366149, 39.578125, 182.636932,0, 0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
		return 1;
	}
	//Electronicos SOCIP entrada
	else if (PlayerToPoint(1, playerid,1773.3176,-1654.7664,14.4287)){
	    LoadObjects(playerid);
		SetPosEx(playerid, 1398.0013,-1471.3539,3516.9150,0, 0, 0);
		return 1;
	}
	//Electronicos SOCIP salida
    else if (PlayerToPoint(1, playerid,1398.0013,-1471.3539,3516.9150)){
 		SetPosEx(playerid, 1773.3176,-1654.7664,14.4287,0, 0, 0);
 		return 1;
 	}
	// Alhambra LS
	else if(PlayerToPoint(1, playerid,1836.4064,-1682.4403,13.3493))
	{
	    SetPosEx(playerid, 493.3891,-22.7212,1000.6797,0,17,0);
		SetPlayerWalkingStyle(playerid, 0);
		return 1;
	}
	// Alhambra Exit
	else if(PlayerToPoint(1, playerid,493.7739,-23.9849,1000.6797))
	{
	    SetPosEx(playerid, 1836.4064,-1682.4403,13.3493,0,0,0);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
		return 1;
	}
	// Banco ENTER
	else if (PlayerToPoint(1, playerid,299.9359,-1612.0057,33.1292))
	{
	    LoadObjects(playerid);
		SetPosEx(playerid, 280.2820,-1618.2014,-72.2500, 0, 0, 1);
		return 1;
	}
	// Banco EXIT
	else if (PlayerToPoint(1, playerid, 280.2820,-1618.2014,-72.2500))
	{
	    SetPosEx(playerid, 299.9359,-1612.0057,33.1292,0, 0, 0);
		return 1;
	}
	// Bobeda Banco Entrada
	else if (PlayerToPoint(1, playerid, 292.5720,-1612.6512,-72.2500))
	{
	    SetPosEx(playerid, 273.4356,-1590.5103,-72.1891,0, 0, 1);
		return 1;
	}
	else if (PlayerToPoint(1, playerid, 273.4356,-1590.5103,-72.1891))
	{ //Salida Bobeda
	    SetPosEx(playerid, 292.5720,-1612.6512,-72.2500,0, 0, 1);
		return 1;
	}
	// Hitman ENTER
	/*else if (PlayerToPoint(2, playerid,-570.6093,-507.4636,25.5356))
	{
		if(Hitman(playerid) || hqlock[HIT] == 0)
		{
		    LoadObjects(playerid);
		    SetPosEx(playerid, 1513.6466,2853.7102,12.8799,0.0000,1,0);
		    return 1;
		}
		else { GameTextForPlayer(playerid, "~r~Cerrado",5000,1); return 1; }
	}
	// Hitman exit
	else if (PlayerToPoint(2, playerid,1513.6466,2853.7102,12.8799)) { SetPosEx(playerid, -570.6093,-507.4636,25.5356,0, 0, 0); return 1; }*/
	// -=========================== FOOD PLACES SA ===========================- //
	else if (PlayerToPoint(1, playerid,364.7064,-11.3221,1001.8516) && GetPlayerInterior(playerid) == 9)
	{
		SetPosEx(playerid, 928.6895,-1353.0563,13.3438,89.7594,0,0);
	    GText(playerid, "~w~Los santos", 5000, 1);
	    return 1;
	}
	else if (PlayerToPoint(1, playerid,928.6895,-1353.0563,13.3438))
	{
		// CBELL ENTER LS
		if(PlayerInfo[playerid][pPbizzkey] != 22) Till(22, 100);
		SetPosEx(playerid, 364.7064,-11.3221,1001.8516,357.6383, 9, 0);
		GameTextForPlayer(playerid, "~h~~y~Clukin ~w~bell",5000,1);
		SetPlayerShopName(playerid,"FDCHICK");
		return 1;
	}
	else if (PlayerToPoint(1, playerid,363.1719,-74.8738,1001.5078) && GetPlayerInterior(playerid) == 10)
	{
		SetPosEx(playerid, 810.6635,-1616.1995,13.5469,267.7108,0,0);
	    GText(playerid, "~w~Los santos", 5000, 1);
	    return 1;
	}
	else if (PlayerToPoint(1, playerid,810.6635,-1616.1995,13.5469))
	{
		// BSHOT ENTER LS
		if(PlayerInfo[playerid][pPbizzkey] != 21) Till(21, 100);
		SetPosEx(playerid,363.1719,-74.8738,1001.5078,314.0846, 10, 0);
		GameTextForPlayer(playerid, "~w~burger~b~~h~shot",5000,1);
		SetPlayerShopName(playerid,"FDBURG");
		return 1;
	}
	else if (PlayerToPoint(1, playerid,372.3216,-133.2976,1001.4922) && GetPlayerInterior(playerid) == 5)
	{
		SetPosEx(playerid, 2105.2844,-1806.5475,13.5547,90.9893,0,0);
	    GText(playerid, "~w~Los santos", 5000, 1);
	    return 1;
	}
	else if (PlayerToPoint(1, playerid,2105.2844,-1806.5475,13.5547))
	{
		// PIZZA STACK ENTER LS
		SetPosEx(playerid,372.3216,-133.2976,1001.4922, 0, 5, 0);
		GameTextForPlayer(playerid, "~w~pizza~y~stack",5000,1);
		SetPlayerShopName(playerid,"FDPIZZA");
		return 1;
	}
	// -=========================== HQ Locks ========================- //
	// Johnson House - GS HQ
	else if (PlayerToPoint(1, playerid,2495.3481,-1691.1355,14.7656))
	{
		if(Team_Groove(playerid) || hqlock[GS] == 0)
		{
			SetPosEx(playerid, 2496.0061,-1693.5201,1014.7422, 181, 3, 1);
			GameTextForPlayer(playerid, "~g~Groove Street HQ",5000,1);
			return 1;
		}
		else { GameTextForPlayer(playerid, "~r~Cerrado",5000,1); return 1; }
	}
	else if (PlayerToPoint(1, playerid,2496.0039,-1692.2004,1014.7422) && GetPlayerVirtualWorld(playerid) == 1)
	{
		//GS Exit
		SetPosEx(playerid, 2495.3718,-1688.8561,14.0673,1 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		return 1;
	}
	// Latin Kings HQ
	else if (PlayerToPoint(1, playerid,2259.4226,-1019.1196,59.2971))
	{
		if(Team_LK(playerid) || hqlock[LK] == 0)
		{
			SetPosEx(playerid, 260.9743,1237.6493,1084.2578, 181, 9, 50);
			GameTextForPlayer(playerid, "~y~Latin Kings HQ",5000,1);
			return 1;
		}
		else { GameTextForPlayer(playerid, "~r~Cerrado",5000,1); return 1; }
	}
	else if (PlayerToPoint(1, playerid,260.9743,1237.6493,1084.2578) && GetPlayerVirtualWorld(playerid) == 50)
	{
		//LK Exit
		SetPosEx(playerid, 2259.4226,-1019.1196,59.2971,0 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
		return 1;
	}
	// Fabrica Mafia Rusa - Entrada
	else if (PlayerToPoint(1, playerid,1421.1550,2755.8625,-2.5838))
	{
	    LoadObjects(playerid);
 		SetPosEx(playerid, 2331.8594,1489.4547,43.1156, 0, 1, 0);
   		return 1;
	}
	// Fabrica Mafia Rusa - Salida
	else if (PlayerToPoint(1, playerid,2331.8594,1489.4547,43.1156))
	{
	    LoadObjects(playerid);
		SetPosEx(playerid, 1421.1550,2755.8625,-2.5838, 0, 0, 0);
		return 1;
	}
    // Mafia Italiana HQ
	else if (PlayerToPoint(1, playerid,1122.7068,-2036.8125,69.8942))
	{
		if(Mafia_Italiana(playerid) || hqlock[ITA] == 0) { LoadObjects (playerid); SetPosEx(playerid, 1087.1331,-2040.2980,2484.6685, 0, 0, 0); return 1; }
		else { GameTextForPlayer(playerid, "~r~Cerrado",5000,1); return 1; }
	}
	else if (PlayerToPoint(1, playerid, 1087.1331,-2040.2980,2484.6685))
	{ // Salida
	    SetPosEx(playerid, 1122.7068,-2036.8125,69.8942, 0, 0, 0);
	    return 1;
 	}
 	// LCN Sotano
 	else if (PlayerToPoint(1, playerid,1106.5094,-2027.5464,69.0078))
	{
		if(Mafia_Italiana(playerid) || hqlock[ITA] == 0) { SetPosEx(playerid, 1111.7089,-2047.0581,-93.1456, 0, 0, 0); return 1; }
		else { GameTextForPlayer(playerid, "~r~Cerrado",5000,1); return 1; }
	}
	else if (PlayerToPoint(1, playerid, 1111.7089,-2047.0581,-93.1456))
	{ // Salida
	    SetPosEx(playerid, 1106.5094,-2027.5464,69.0078, 0, 0, 0);
	    return 1;
 	}
 	// LCN Puerta de Escape
 	else if (PlayerToPoint(1, playerid, 1114.8649,-2040.6252,-97.5987))
	{
	    SetPosEx(playerid, 1005.1661,-2145.5664,15.7828, 0, 0, 0);
	    return 1;
 	}
 	// Rusos Puerta de Escape
 	else if (PlayerToPoint(1, playerid, 1439.6418,2777.5830,-2.589))
 	{
 	    SetPosEx(playerid, 881.7072,-1610.8738,13.5469, 0, 0, 0);
 	    return 1;
  	}
  	// Helipuerto Rusos
  	else if (PlayerToPoint(1, playerid, 865.2787,-1633.8477,14.9297)) { SetPosEx(playerid, 876.1016,-1622.3257,28.0000, 0, 0, 0); return 1; }
  	else if (PlayerToPoint(1, playerid, 876.1016,-1622.3257,28.000)) { SetPosEx(playerid, 865.2787,-1633.8477,14.9297, 0, 0, 0); return 1; }
	// Russian HQ
	else if (PlayerToPoint(1, playerid,893.6533,-1635.7021,14.9297))
	{
		if(Mafia_Rusa(playerid) || hqlock[RUS] == 0)
		{
		    LoadObjects(playerid);
			SetPosEx(playerid, 1419.6772,2766.8467,-2.5845, 0, 0, 0);
			return 1;
		}
		else { GameTextForPlayer(playerid, "~r~Cerrado",5000,1); return 1; }
	}
	else if (PlayerToPoint(1, playerid,1419.6772,2766.8467,-2.5845))
	{
		SetPosEx(playerid, 893.6533,-1635.7021,14.9297, 0, 0, 0);
		return 1;
	}
	// Terroristas HQ
	else if (PlayerToPoint(1, playerid, 1068.4430,-350.0796,74.2184))
	{
	    if(Terroristas(playerid) || hqlock[TER] == 0) { SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 0); return 1; }
	    else { GameTextForPlayer(playerid, "~r~Cerrado",5000,1); return 1; }
 	}
	else if (PlayerToPoint(1, playerid,1260.8531,-785.5576,1091.9063))
	{
 		SetPosEx(playerid, 1068.4430,-350.0796,74.2184,0 ,0 ,0);
   		return 1;
	}
	return 0;
}

function ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_GREY, " ");
		}
	}
}

function CheckCarHealth()
{
    new string[128];
    for (new i=0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
        {
             new Float:health;
             GetVehicleHealth(GetPlayerVehicleID(i),health);
             new newcar = GetPlayerVehicleID(i);
             if (health <= 400 && !IsABike(newcar) && !IsAPlane(newcar))
             {
                 if(engineOn[GetPlayerVehicleID(i)] == 1)
                 {
                    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
                    {
                        new engine,lights,alarm,doors,bonnet,boot,objective;
                    	GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
                    	SetVehicleParamsEx(newcar,0,lights,alarm,doors,bonnet,boot,objective);
                 		engineOn[GetPlayerVehicleID(i)] = false;
                 		format(string, sizeof(string), "* El Vehiculo de  %s se ha apagado bruscamente.", PlayerName(i));
						ProxDetectorEx(30.0, i, string, COLOR_PURPLE);
						if(OwnableVehicle[newcar]) VehicleDeath[newcar] = true;
					}
				 }
             }
         }
    }
    DiseaseSystem();
    return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    new string[128];
	if(newkeys == 16 && GetPVarInt(playerid, "InAmbu") > 0)
	{
		new Float:X, Float:Y, Float:Z;
		GetVehiclePos(GetPVarInt(playerid, "InAmbu"), X, Y, Z);
		SetPlayerPos(playerid, X+4, Y, Z);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		DeletePVar(playerid, "InAmbu");
		return 1;
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_YES || newkeys & KEY_SPRINT && newkeys & KEY_YES){
	cmd_v(playerid, "seguro");
	cmd_v(playerid, "seguro2");
	cmd_v(playerid, "seguro3");
	cmd_v(playerid, "seguro4");
	cmd_v(playerid, "segurorenta");
	cmd_v(playerid, "seguroveh");
	return 1;
	}
	if(newkeys == KEY_NO && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	cmd_v(playerid, "motor");
	return 1;
   	}
   	if(newkeys == KEY_YES)
 	{
  		//if(GetPVarType(playerid, "TutStep") == 0) return 1;
	    if(GetPVarInt(playerid, "PuedeP") == 1) return GameTextForPlayer(playerid, "Espera. . .", 5000, 5);
		if(GetPVarType(playerid, "TutStep") == 1)
		{
			switch(GetPVarInt(playerid, "TutTime"))
			{
		    	case 1: SetPVarInt(playerid, "TutTime", 2);
		    	case 2: SetPVarInt(playerid, "TutTime", 3);
		    	case 3: SetPVarInt(playerid, "TutTime", 4);
		    	case 4: SetPVarInt(playerid, "TutTime", 5);
		    	case 5: SetPVarInt(playerid, "TutTime", 6);
		    	case 6: SetPVarInt(playerid, "TutTime", 7);
		    	case 7: SetPVarInt(playerid, "TutTime", 8);
		    	case 8: SetPVarInt(playerid, "TutTime", 9);
		    	case 9: SetPVarInt(playerid, "TutTime", 10);
		    	case 10: SetPVarInt(playerid, "TutTime", 11);
		    	case 11: SetPVarInt(playerid, "TutTime", 12);
 		    	case 12: SetPVarInt(playerid, "TutTime", 13);
		    	case 13: SetPVarInt(playerid, "TutTime", 14);
		    }
		    Tutorial_Inside(playerid);
		}
        if(PlayerToPoint(5.0, playerid,563.0288,-1300.2478,17.2871))
        {
            gTotalItems[playerid] = TOTAL_GROTTI;
            SetPVarInt(playerid, "ModelsActive", 1);
            SetPVarInt(playerid, "ModelsGrotti", 1);
            SetPVarInt(playerid, "ModelsType", 2);
            SetPVarString(playerid, "ModelsName", "Gama Alta");
            CreateSelectionMenu(playerid);
            SelectTextDraw(playerid, 0x2471A3FF);
            return 1;
        }
        else if(PlayerToPoint(5.0, playerid, 552.3003,-1300.5541,17.2871))
        {
            gTotalItems[playerid] = TOTAL_MEDIUM;
            SetPVarInt(playerid, "ModelsActive", 1);
            SetPVarInt(playerid, "ModelsMedium", 1);
            SetPVarInt(playerid, "ModelsType", 2);
            SetPVarString(playerid, "ModelsName", "Gama Media");
            CreateSelectionMenu(playerid);
            SelectTextDraw(playerid, 0x2471A3FF);
            return 1;
        }
        else if(PlayerToPoint(5.0, playerid, 537.9150,-1300.2504,17.2871))
        {
            gTotalItems[playerid] = TOTAL_CAS;
            SetPVarInt(playerid, "ModelsActive", 1);
            SetPVarInt(playerid, "ModelsCas", 1);
            SetPVarInt(playerid, "ModelsType", 2);
            SetPVarString(playerid, "ModelsName", "Gama Baja");
            CreateSelectionMenu(playerid);
            SelectTextDraw(playerid, 0x2471A3FF);
            return 1;
        }
        else if(PlayerToPoint(5, playerid, 2611.4368,-2202.0574,-0.2188)){
            CamelMenu(playerid);
            return 1;
        }
        else if(PlayerToPoint(5, playerid, 1489.5238,854.0300,-68.4357)){
            if(GetPlayerMoney(playerid) < 8000) return Message(playerid, COLOR_GRAD2, "¡No tienes dinero para pagar el valor de la ceremonia!");
            if(PlayerInfo[playerid][pMarried] == 1) return Message(playerid, COLOR_GRAD2, "¡Estas casado, no puedes usar este comando ahora!");
            if(PlayerInfo[playerid][pSex] == 2) return Message(playerid, COLOR_GRAD2, "¡No puedes usar este comando siendo mujer!");
            ShowPlayerDialog(playerid, MATRIMONIO_DIALOG, DIALOG_STYLE_INPUT,"{018CFE}Iglesia", "{FFFFFF}Por favor, ingrese la ID de la persona con\n la que quieres contraer matrimonio.","Aceptar","Cancelar");
            return 1;
          }
        else if(PlayerToPoint(5, playerid, 991.3137,-1941.4115,2835.0078)){
            ShowPlayerDialog(playerid,DIALOG_PUERTO,DIALOG_STYLE_LIST,"Puerto de Los Santos","{FFFFFF}Implementos de Pesca\nComprar Carnada\nVender Peces","Aceptar","Cancelar");
            return 1;
          }
        else if(PlayerToPoint(5, playerid, 308.1695,-143.0952,999.6016)){
              if(CheckMoney(playerid, 10))
            {
                ShowAmmunation(playerid);
                return 1;
            }
        }
       	else if(PlayerToPoint(5, playerid, 316.1078,-133.5995,999.6016)){
            ShowPlayerDialog(playerid, DIALOG_AMMU_MANAGER,DIALOG_STYLE_LIST,"Ammunation", "Deseo mejorar mis habilidades a través de libros comprados\nQuiero informarme sobre mis habilidades con las diferentes armas", "Aceptar", "Cancelar");
        }
        else if(PlayerToPoint(20, playerid,2420.7917,2468.5427,69.4834))
        {
              return ShowPlayerDialog(playerid, DIALOG_FARMACIA, DIALOG_STYLE_LIST, "Farmacia + 24h","Condón (3$)\nPastilla Gripe (10$)\nParches de Nicotina (30$)\nEnergisyl (40$)\nAntiEpilectica (500$)\nPastillas Cancer (800$)", "Comprar", "Salir");
        }
        else if (PlayerToPoint(10, playerid, 1143.4807,-1880.8014,851.0969))
        {
            return ShowPlayerDialog(playerid, COMPRAR_JOYAS, DIALOG_STYLE_LIST, "Joyeria Andes", "Anillo de Compromiso (25000$)\nAnillo de Oro (50000$)\nCollar de Perlas (100000$)\nAnillo de Diamantes (200000$)\nPulsera de oro (80000$)\nAretes de Diamantes (10000$)\nReloj de Oro (46000$)","Comprar", "Salir");
        }
        else if (PlayerToPoint(20, playerid,-103.81,-22.63,1000.72))
        {
              return ShowPlayerDialog(playerid, DELE_BUY_SEX, DIALOG_STYLE_LIST, "Sex Shop","Ropa De Mujer\nRopa De Hombre\nJuguetes De Diversion", "Comprar", "Salir");
        }
       	else if (PlayerToPoint(20.0,playerid,1405.3442,-1462.2827,3516.9150))
        {
            return ShowPlayerDialog(playerid, ELECTRONIC_BUY, DIALOG_STYLE_LIST, "Tienda Electronica", "1.\tiPhone\t\t\t\t(400$)\n2.\tCámara\t\t\t\t(120$)\n3.\tWalkie\t\t\t\t(260$)", "Comprar", "Cancelar");
          }
       	else if(IsAt247(playerid))
        {
              return ShowBuyMenu(playerid);
        }
       	else if(!IsAtBar(playerid)) return 1;
	    if(IsPlayerConnected(playerid)){
		    ShowPlayerDialog(playerid, BAR_MENU, DIALOG_STYLE_LIST, "Menú del Día", "Platos Combinados & Tapas\nRefrescos & Bebidas & Vinos", "Ver", "Salir");
	    }
        return 1;
	 }
	if(newkeys == KEY_FIRE)
	{
	   	if(GetPVarInt(playerid, "Tazer") > 0)
	    {
	        if(IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GREY, "¡Este comando no se puede utilizar estando en un vehículo.");
	        new suspect = GetClosestPlayer(playerid);
	        if(GetPVarInt(suspect, "PlayerTazeado") > 0) return Message(playerid, COLOR_GREY, "¡Este jugador ya está tazeado!");
	        if(ProxDetectorS(3.0, playerid,suspect))
			{
				if(IsACop(suspect)) return Message(playerid, COLOR_GREY, "¡No puedes tazear a un compañero!");
				new randt = random(4)+1;
				if(randt == 1)
				{
	   				format(string, sizeof(string), "* Oficial %s dispara contra %s, pero no consigue tazear al sujeto", PlayerName(playerid), PlayerName(suspect));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					DeletePVar(playerid, "Tazer");
					SetTimerEx("RemoveHand", 7000, false, "i", playerid);
					return 1;
				}
				else
				{
					format(string, sizeof(string), "* Oficial %s dispara contra %s y tazea al sujeto", PlayerName(playerid), PlayerName(suspect));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					format(string, sizeof(string), "* Tazeado (%s)", PlayerName(suspect));
					ProxDetectorEx(30.0,playerid, string, 0xB6DB22FF);
					GameTextForPlayer(suspect, "ARRESTADO", 2500, 3);
					TogglePlayerControllable(suspect, 0);
					ApplyAnimation(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
					SetPVarInt(suspect, "PlayerTazeado", 1);
					DeletePVar(playerid, "Tazer");
					SetTimerEx("RemoveHand", 7000, false, "i", playerid);
					SetTimerEx("UntazePlayer", 20000, false, "i", suspect);
					return 1;
				}
			}
			else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
		}
		return 1;
	}
	if(newkeys & KEY_WALK)
	{
 		if(GetPVarInt(playerid, "Skate") > 19)
		{
  			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
		}
		return 1;
	}
	if(newkeys & KEY_SPRINT)
    {
    	if(IsPlayerConnected(playerid))
		{
  			if(PlayerDrunk[playerid] > 9) { ApplyAnimation(playerid,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[playerid]*1000); return 1; }
  			else if(GetPVarInt(playerid, "Skate") > 19)
  			{
  			    if(GetPVarInt(playerid, "Skate") == 20) { ApplyAnimation(playerid,"SKATE","skate_run",4.0,1,1,1,1,500); return 1; }
  			    else if(GetPVarInt(playerid, "Skate") == 30) { ApplyAnimation(playerid,"SKATE","skate_sprint",4.0,1,1,1,1,500); return 1; }
  			}
  			else if(GetPVarType(playerid, "PlayerCuffed") > 0 || Rescued[playerid] > 0) 	{ ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1); return 1; }
		}
		return 1;
	}
	if(newkeys & KEY_FIRE && newkeys & KEY_HANDBRAKE)
	{
	    if(RecentlyShot[playerid] == 0)
		{
	        RecentlyShot[playerid] = 1;
         	if(GetPlayerWeapon(playerid) == 34)
			{
   				new Float:blahx, Float:blahy, Float:blahz;
				HeadshotCheck(playerid, blahx, blahy, blahz);
  				return 1;
		    }
		    return 1;
		}
		return 1;
 	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
    	if(IsPlayerConnected(playerid))
		{
		    if(GetPVarInt(playerid, "RStep") > 0)
		    {
      			new mtext[12],otext[12];
         		if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
           		if(PlayerInfo[playerid][pOrigin] == 1) otext = "America";
            	if(PlayerInfo[playerid][pOrigin] == 2) otext = "Europa";
	            if(PlayerInfo[playerid][pOrigin] == 3) otext = "Asia";
	            if(PlayerInfo[playerid][pOrigin] == 4) otext = "Africa";
	            if(PlayerInfo[playerid][pOrigin] == 5) otext = "Oceania";
				if(GetPVarInt(playerid, "RegConfig") == 1)
				{
    				format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~>~~w~Edad: ~b~?~n~~n~~w~Origen: ~b~Sin Origen    ~w~Estilo: ~b~?", mtext);
			    	TDStr(RegDraw[playerid], string);
				    PlayerInfo[playerid][pChar] = GetPlayerSkin(playerid);
				    SetPVarInt(playerid, "RegConfig", 2);
				    DeletePVar(playerid, "RegText");
				    return 1;
				}
				else if(GetPVarInt(playerid, "RegConfig") == 2)
				{
    				format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~>~~w~Origen: ~b~Sin Origen    ~w~Estilo: ~b~?", mtext, PlayerInfo[playerid][pAge]);
				    TDStr(RegDraw[playerid], string);
				    SetPVarInt(playerid, "RegConfig", 3);
				    SetPVarInt(playerid, "RegText", 1);
				    PlayerInfo[playerid][pOrigin] = 1;
				    return 1;
				}
				else if(GetPVarInt(playerid, "RegConfig") == 3)
				{
    				format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~?", mtext, PlayerInfo[playerid][pAge],otext);
				    TDStr(RegDraw[playerid], string);
				    SetPVarInt(playerid, "RStep", 1);
				    SetPVarInt(playerid, "RegText", 1);
				    SetPVarInt(playerid, "RegConfig", 4);
	    			return 1;
				}
				else if(GetPVarInt(playerid, "RegConfig") == 4)
				{
    				ClearChatbox(playerid, 15);
				    TextDrawHideForPlayer(playerid, RegDraw[playerid]);
				    TextDrawHideForPlayer(playerid, RegInfo);
				    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
				    DeletePVar(playerid, "RStep");
				    DeletePVar(playerid, "RegText");
				    DeletePVar(playerid, "RegConfig");
					SetTimerEx("Reg_ShowDNI", 3000, false, "i", playerid);
					GameTextForPlayer(playerid, "~b~Configurando ~w~Personaje", 3000, 3);
					SetTimerEx("RegMsn", 6000, false, "i", playerid);
					return 1;
				}
		    }
		    else if (GetPlayerState(playerid) == 1)
			{
				TeleportPlayer(playerid);
				if(GetPVarType(playerid, "ReduceTime") == 0)
				{
				    new Float:hp; GetPlayerHealth(playerid, hp);
					if(PlayerToPoint(1.0,playerid,-36.3182,-56.8905,1003.5469))
					{
					    SetPVarInt(playerid, "ReduceTime", 1);
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
						return 1;
					}
					else if(PlayerToPoint(1.0,playerid,-19.1974,-56.8366,1003.5469))
					{
					    SetPVarInt(playerid, "ReduceTime", 1);
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
						return 1;
					}
					else if(PlayerToPoint(1.0,playerid,-35.9060,-139.2014,1003.5469))
					{
					    SetPVarInt(playerid, "ReduceTime", 1);
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
						return 1;
					}
					else if(PlayerToPoint(1.0,playerid,-15.2743,-139.2626,1003.5469))
					{
					    SetPVarInt(playerid, "ReduceTime", 1);
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+5);
						return 1;
					}
					else if(PlayerToPoint(1.0,playerid,-16.7039,-139.3292,1003.5469))
					{
					    SetPVarInt(playerid, "ReduceTime", 1);
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
						return 1;
					}
				}
				for(new f = 0; f < MAX_FACTION; f++)
				{
				    if(PlayerToPoint(3, playerid, FactionInfo[f][fEntrance][0], FactionInfo[f][fEntrance][1], FactionInfo[f][fEntrance][2]))
					{
						if(FactionInfo[f][fLocked] == 0 || PlayerInfo[playerid][pMember] == (f+15) || PlayerInfo[playerid][pLeader] == (f+15))
						{
							SetPosEx(playerid, FactionInfo[f][fExit][0], FactionInfo[f][fExit][1], FactionInfo[f][fExit][2], 0, FactionInfo[f][fInterior], FactionInfo[f][fVirtualWorld]);
						}
						else GameTextForPlayer(playerid, "~r~Cerrado", 3000, 1);
					}
					else if(PlayerToPoint(3, playerid, FactionInfo[f][fExit][0], FactionInfo[f][fExit][1], FactionInfo[f][fExit][2]))
					{
					    if(GetPlayerVirtualWorld(playerid) > 10000)
					    {
						    if(FactionInfo[f][fLocked] == 0 || PlayerInfo[playerid][pMember] == (f+15) || PlayerInfo[playerid][pLeader] == (f+15))
						    {
						        SetPosEx(playerid, FactionInfo[f][fEntrance][0], FactionInfo[f][fEntrance][1], FactionInfo[f][fEntrance][2], 0, 0, 0);
	        				}
							else GameTextForPlayer(playerid, "~r~Cerrado", 3000, 1);
						}
					}
				}
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if(PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
						if(PlayerInfo[playerid][pPhousekey] == i || PlayerInfo[playerid][pPhousevip] == i || HouseInfo[i][hLock] == 0)
						{
							SetPosEx(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz],0,HouseInfo[i][hInt],HouseInfo[i][hWorld]);
							PlayerInfo[playerid][pEntered] = i;
						}
						else GameTextForPlayer(playerid, "~r~Cerrado", 3000, 1);
					}
					else if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					{
				    	if(PlayerInfo[playerid][pEntered] == i)
				    	{
				    	    if(HouseInfo[i][hLock] == 0)
				    	    {
					    	    SetPosEx(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez],0,0,0);
								PlayerInfo[playerid][pEntered] = -1;
							}
							else GameTextForPlayer(playerid, "~r~Cerrado", 3000, 1);
						}
					}
				}
			}
			else if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
			    return 1;
			}
		}
	}
    return 0;
}

function StartingTheVehicle(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            new RandomStart;
    		new string[128];
    		new engine,lights,alarm,doors,bonnet,boot,objective;
    		new newcar = GetPlayerVehicleID(playerid);
    		GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
            RandomStart = random(8);
            switch(RandomStart)
            {
                case 0,1,2,3,4,6,7:
                {
					SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
                    format(string, sizeof(string), "* %s enciende el motor de su vehículo.", PlayerName(playerid));
                    ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
                    gEngine[playerid] = 0;
                    engineOn[newcar] = true;
                }
                case 5:
                {
                    format(string, sizeof(string), "* El vehículo de %s no enciende.", PlayerName(playerid));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					gEngine[playerid] = 0;
					engineOn[newcar] = false;
                }
            }
        }
		else
		{
		    gEngine[playerid] = 0;
		}
    }
    return 1;
}

INI:hq_locks[](name[], value[])
{
	INI_Int("Groove", 			hqlock[GS]);
    INI_Int("Latin_Kings", 		hqlock[LK]);
    INI_Int("La_Cosa_Nostra", 	hqlock[ITA]);
    INI_Int("Rusos", 			hqlock[RUS]);
    INI_Int("Hitman",           hqlock[HIT]);
    INI_Int("Terroristas",      hqlock[TER]);
    return 0;
}

SaveHQLocks()
{
    new
    	INI:ini = INI_Open("hq_locks.ini");
			INI_WriteInt(ini, "Groove", 			hqlock[GS]);
			INI_WriteInt(ini, "Latin_Kings", 		hqlock[LK]);
			INI_WriteInt(ini, "La_Cosa_Nostra", 	hqlock[ITA]);
			INI_WriteInt(ini, "Rusos", 				hqlock[RUS]);
			INI_WriteInt(ini, "Hitman",             hqlock[HIT]);
			INI_WriteInt(ini, "Terroristas",        hqlock[TER]);
		INI_Close(ini);
}

INI:stuff[](name[], value[])
{
    INI_Int("Jackpot", 	 	Jackpot);
    INI_Int("Tax",			Tax);
    INI_Int("TaxValue", 	TaxValue);
    INI_Int("Blood", 		Blood);
    return 0;
}

SaveStuff()
{
    new
    	INI:ini = INI_Open("stuff.ini");
			INI_WriteInt(ini, "Jackpot", 	Jackpot);
			INI_WriteInt(ini, "Tax",		Tax);
			INI_WriteInt(ini, "TaxValue", 	TaxValue);
			INI_WriteInt(ini, "Blood", 		Blood);
		INI_Close(ini);
}

INI:robs[](name[], value[])
{
	INI_Int("Italianos",    RLCN);
	INI_Int("Rusos",        RRusos);
	return 0;
}

SaveRobs()
{
    new
    	INI:ini = INI_Open("robs.ini");
    		INI_WriteInt(ini, "Italianos",  	RLCN);
    		INI_WriteInt(ini, "Rusos",      	RRusos);
    	INI_Close(ini);
}

INI:autos[](name[], value[])
{
	INI_Int("Infernus",     AutoCat[0]);
	INI_Int("Cheetah",    	AutoCat[1]);
	INI_Int("Banshee",    	AutoCat[2]);
	INI_Int("Turismo",    	AutoCat[3]);
	INI_Int("ZR-350",     	AutoCat[4]);
	INI_Int("Comet",     	AutoCat[5]);
	INI_Int("SuperGT",      AutoCat[6]);
	INI_Int("NRG-500",     	AutoCat[7]);
	INI_Int("FCR-900",     	AutoCat[8]);
	INI_Int("Bullet",     	AutoCat[9]);
	INI_Int("Sultan",     	AutoCat[10]);
	INI_Int("Elegy",     	AutoCat[11]);
	INI_Int("Euros",     	AutoCat[12]);
	INI_Int("Phoenix",   	AutoCat[13]);
	INI_Int("Buffalo",    	AutoCat[14]);
	INI_Int("Stretch",     	AutoCat[15]);
	INI_Int("Patriot",     	AutoCat[16]);
	INI_Int("Uranus",     	AutoCat[17]);
    INI_Int("Jester",     	AutoCat[18]);
	return 0;
}

SaveAutos()
{
	new
		INI:ini = INI_Open("autos.ini");
		    INI_WriteInt(ini, "Infernus",   AutoCat[0]);
		    INI_WriteInt(ini, "Cheetah",   	AutoCat[1]);
		    INI_WriteInt(ini, "Banshee",   	AutoCat[2]);
		    INI_WriteInt(ini, "Turismo",   	AutoCat[3]);
		    INI_WriteInt(ini, "ZR-350",   	AutoCat[4]);
		    INI_WriteInt(ini, "Comet",   	AutoCat[5]);
		    INI_WriteInt(ini, "SuperGT",    AutoCat[6]);
		    INI_WriteInt(ini, "NRG-500",   	AutoCat[7]);
		    INI_WriteInt(ini, "FCR-900",   	AutoCat[8]);
		    INI_WriteInt(ini, "Bullet",   	AutoCat[9]);
		    INI_WriteInt(ini, "Sultan",   	AutoCat[10]);
		    INI_WriteInt(ini, "Elegy",   	AutoCat[11]);
		    INI_WriteInt(ini, "Euros",   	AutoCat[12]);
		    INI_WriteInt(ini, "Phoenix",   	AutoCat[13]);
		    INI_WriteInt(ini, "Buffalo",   	AutoCat[14]);
		    INI_WriteInt(ini, "Stretch",   	AutoCat[15]);
		    INI_WriteInt(ini, "Patriot",   	AutoCat[16]);
		    INI_WriteInt(ini, "Uranus",   	AutoCat[17]);
		    INI_WriteInt(ini, "Jester",   	AutoCat[18]);
		INI_Close(ini);
}

INI:Facciones[](name[], value[])
{
    new string[25];
	for(new f = 0; f < MAX_FACTION; f++)
	{
	    format(string, 25, "Fac%dType", f);
		INI_Int( string,		FactionInfo[f][fType]);
		format(string, 25, "Fac%dName", f);
		INI_String( string,		FactionInfo[f][fName], 24);
		format(string, 25, "Fac%dFounds", f);
		INI_Int( string,        FactionInfo[f][fFounds]);
		format(string, 25, "Fac%dRank1", f);
		INI_String( string,     FactionInfo[f][fRank1], 20);
		format(string, 25, "Fac%dRank2", f);
		INI_String( string,     FactionInfo[f][fRank2], 20);
		format(string, 25, "Fac%dRank3", f);
		INI_String( string,     FactionInfo[f][fRank3], 20);
		format(string, 25, "Fac%dRank4", f);
		INI_String( string,     FactionInfo[f][fRank4], 20);
		format(string, 25, "Fac%dRank5", f);
		INI_String( string,     FactionInfo[f][fRank5], 20);
		format(string, 25, "Fac%dRank6", f);
		INI_String( string,     FactionInfo[f][fRank6], 20);
		format(string, 25, "Fac%dInterior", f);
		INI_Int( string,		FactionInfo[f][fInterior]);
		format(string, 25, "Fac%dVirtualWorld", f);
		INI_Int( string,        FactionInfo[f][fVirtualWorld]);
		format(string, 25, "Fac%dLocked", f);
		INI_Int( string,        FactionInfo[f][fLocked]);
		format(string, 25, "Fac%dEntranceX", f);
		INI_Float( string,      FactionInfo[f][fEntrance][0]);
		format(string, 25, "Fac%dEntranceY", f);
		INI_Float( string,      FactionInfo[f][fEntrance][1]);
		format(string, 25, "Fac%dEntranceZ", f);
		INI_Float( string,      FactionInfo[f][fEntrance][2]);
		format(string, 25, "Fac%dExitX", f);
		INI_Float( string,      FactionInfo[f][fExit][0]);
        format(string, 25, "Fac%dExitY", f);
		INI_Float( string,      FactionInfo[f][fExit][1]);
		format(string, 25, "Fac%dExitZ", f);
		INI_Float( string,      FactionInfo[f][fExit][2]);
		for(new fv = 0; fv < MAX_VEHICLES_FACTION; fv++)
		{
		    format(string, 25, "Fac%dVeh%dModel", f, fv);
			INI_Int( string,        FactionVehicleInfo[f][fv][fvModel]);
			format(string, 25, "Fac%dVeh%dPosX", f, fv);
			INI_Float( string,      FactionVehicleInfo[f][fv][fvPos][0]);
			format(string, 25, "Fac%dVeh%dPosY", f, fv);
			INI_Float( string,      FactionVehicleInfo[f][fv][fvPos][1]);
			format(string, 25, "Fac%dVeh%dPosZ", f, fv);
			INI_Float( string,      FactionVehicleInfo[f][fv][fvPos][2]);
			format(string, 25, "Fac%dVeh%dPosA", f, fv);
			INI_Float( string,      FactionVehicleInfo[f][fv][fvPos][3]);
			format(string, 25, "Fac%dVeh%dColorOne", f, fv);
			INI_Int( string,        FactionVehicleInfo[f][fv][fvColorOne]);
			format(string, 25, "Fac%dVeh%dColorTwo", f, fv);
			INI_Int( string,        FactionVehicleInfo[f][fv][fvColorTwo]);
		}
	}
	return 0;
}

SaveFactions()
{
	new string[25];
	new
		INI:ini = INI_Open("Facciones.ini");
		for(new f = 0; f < MAX_FACTION; f++)
		{
		    format(string, 25, "Fac%dType", f);
			INI_WriteInt(ini, string,		FactionInfo[f][fType]);
			format(string, 25, "Fac%dName", f);
			INI_WriteString(ini, string,    FactionInfo[f][fName]);
			format(string, 25, "Fac%dFounds", f);
			INI_WriteInt(ini, string,       FactionInfo[f][fFounds]);
			format(string, 25, "Fac%dRank1", f);
			INI_WriteString(ini, string,    FactionInfo[f][fRank1]);
			format(string, 25, "Fac%dRank2", f);
			INI_WriteString(ini, string,    FactionInfo[f][fRank2]);
			format(string, 25, "Fac%dRank3", f);
			INI_WriteString(ini, string,    FactionInfo[f][fRank3]);
			format(string, 25, "Fac%dRank4", f);
			INI_WriteString(ini, string,    FactionInfo[f][fRank4]);
			format(string, 25, "Fac%dRank5", f);
			INI_WriteString(ini, string,    FactionInfo[f][fRank5]);
			format(string, 25, "Fac%dRank6", f);
			INI_WriteString(ini, string,    FactionInfo[f][fRank6]);
			format(string, 25, "Fac%dInterior", f);
			INI_WriteInt(ini, string,       FactionInfo[f][fInterior]);
			format(string, 25, "Fac%dVirtualWorld", f);
			INI_WriteInt(ini, string,       FactionInfo[f][fVirtualWorld]);
			format(string, 25, "Fac%dLocked", f);
			INI_WriteInt(ini, string,       FactionInfo[f][fLocked]);
			format(string, 25, "Fac%dEntranceX", f);
			INI_WriteFloat(ini, string,     FactionInfo[f][fEntrance][0]);
			format(string, 25, "Fac%dEntranceY", f);
			INI_WriteFloat(ini, string,     FactionInfo[f][fEntrance][1]);
			format(string, 25, "Fac%dEntranceZ", f);
			INI_WriteFloat(ini, string,     FactionInfo[f][fEntrance][2]);
			format(string, 25, "Fac%dExitX", f);
			INI_WriteFloat(ini, string,     FactionInfo[f][fExit][0]);
			format(string, 25, "Fac%dExitY", f);
			INI_WriteFloat(ini, string,     FactionInfo[f][fExit][1]);
			format(string, 25, "Fac%dExitZ", f);
			INI_WriteFloat(ini, string,     FactionInfo[f][fExit][2]);
		    for(new fv = 0; fv < MAX_VEHICLES_FACTION; fv++)
		    {
                format(string, 25, "Fac%dVeh%dModel", f, fv);
                INI_WriteInt(ini, string,		FactionVehicleInfo[f][fv][fvModel]);
                format(string, 25, "Fac%dVeh%dPosX", f, fv);
                INI_WriteFloat(ini, string,     FactionVehicleInfo[f][fv][fvPos][0]);
                format(string, 25, "Fac%dVeh%dPosY", f, fv);
                INI_WriteFloat(ini, string,     FactionVehicleInfo[f][fv][fvPos][1]);
                format(string, 25, "Fac%dVeh%dPosZ", f, fv);
                INI_WriteFloat(ini, string,     FactionVehicleInfo[f][fv][fvPos][2]);
                format(string, 25, "Fac%dVeh%dPosA", f, fv);
                INI_WriteFloat(ini, string,     FactionVehicleInfo[f][fv][fvPos][3]);
                format(string, 25, "Fac%dVeh%dColorOne", f, fv);
                INI_WriteInt(ini,   string,     FactionVehicleInfo[f][fv][fvColorOne]);
                format(string, 25, "Fac%dVeh%dColorTwo", f, fv);
                INI_WriteInt(ini,   string,     FactionVehicleInfo[f][fv][fvColorTwo]);
		    }
		}
		INI_Close(ini);
}

function ClearKnock(playerid)
{
	Connect
		if(GetPVarInt(playerid, "KnockedDown") == 1){
		    new	string[128];
			DeletePVar(playerid, "KnockedDown");
			format(string, sizeof(string), "* %s se recupera del golpe.", PlayerName(playerid));
			ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
			ClearAnimations(playerid);
		}
		else DeletePVar(playerid, "KnockedDown");
	}
	return 1;
}

stock HeadshotCheck(playerid, &Float:x, &Float:y, &Float:z)
{
	new Float:fx,Float:fy,Float:fz;
	GetPlayerCameraFrontVector(playerid, fx, fy, fz);

 	new Float:cx,Float:cy,Float:cz;
 	GetPlayerCameraPos(playerid, cx, cy, cz);

	for(new Float:i = 0.0; i < 50; i = i + 0.5)
	{
 		x = fx * i + cx;
		y = fy * i + cy;
		z = fz * i + cz;

		#if defined SHOWPATH
		#endif

		for(new player = 0; player < MAX_PLAYERS; player ++)
		{
		    if(IsPlayerConnected(playerid))
		    {
		    	if(player != playerid)
				{
		    		if(GetPlayerSpecialAction(player) == SPECIAL_ACTION_DUCK)
					{
		        		if(IsPlayerInRangeOfPoint(player, 0.3, x, y, z))
		        		{
		            		SetHP(player, 0.0);
		            		CallRemoteFunction("OnPlayerDeath", "ddd", player, playerid, 34);
		        		}
					}
					else
					{
		    			if(IsPlayerInRangeOfPoint(player, 0.3, x, y, z - 0.7))
						{
							SetHP(player, 0.0);
							CallRemoteFunction("OnPlayerDeath", "ddd", player, playerid, 34);
						}
					}
				}
			}
		}
	}
	return 1;
}

function RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}

	SafeResetPlayerWeapons(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    {
			SafeGivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return 1;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(Distance <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}

stock Float:GetDistance(playerid, Float:x, Float:y)
{
	new Float:x2, Float:y2, Float:z2;
	GetPlayerPos(playerid, x2, y2, z2);
	x = x - x2;
	y = y - y2;
	return floatsqroot(x*x+y*y);
}

function EnableQuest(playerid)
{
	Connect
		DeletePVar(playerid, "Duda");
	}
}

function ReportReset(playerid)
{
	Connect
		JustReported[playerid] = 0;
	}
}

function ReduceTimer(playerid)
{
	Connect
	    DeletePVar(playerid, "ReduceTime");
	}
}

function FreezePlayer(playerid)	{	TogglePlayerControllable(playerid, 0);	}

function UnfreezePlayer(playerid)	{	TogglePlayerControllable(playerid, 1);	}

CheckForOpenDoor(playerid)
{
	if(Team_LSPD(playerid))
    {
    
        if (PlayerToPoint(10, playerid,1589.053344,-1638.123168,14.122960))
		{
      		MoveDynamicObject(pdgate1,1599.053344,-1638.123168,14.122960, 0.8, -1000.0, -1000.0, -1000.0);
      		return 1;
		}
		else if (PlayerToPoint(15, playerid,1545.7398681641, -1627.7280273438, 15.206203460693))
		{
      		MoveDynamicObject(pdgate2,1545.7392578125, -1627.7275390625, 20.381204605103, 3.0, -1000.0, -1000.0, -1000.0);
      		return 1;
		}
		else Message(playerid, COLOR_GRAD2,"¡No hay señal!");
	}
	else if(Team_NG(playerid))
	{
		if(PlayerToPoint(20, playerid, 2668.9226,-2405.3696,13.4902))
		{
		    MoveDynamicObject(saem1,2669.81, -2405.30, 9.39, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2671.70, -2504.00, 15.30))
		{
		    MoveDynamicObject(saem2,2668.29, -2504.00, 9.64, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2806.3896,-2401.5261,13.6291))
		{
		    MoveDynamicObject(saem3,2807.08, -2401.64, 9.85, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
 	}
	else if(Team_SAMUR(playerid))
	{
	    if(PlayerToPoint(20, playerid, 1140.1462,-1290.9423,13.5708))
	    {
	        MoveDynamicObject(hospitalgate, 1140.54, -1291.09, 9.14, 3.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
 	}
	else if(Mafia_Italiana(playerid))
	{
 		if(PlayerToPoint(30, playerid,1426.6943359375, -1882.537109375, 19.80619430542))
	    {
	        MoveDynamicObject(crgate,1426.6943359375, -1882.537109375, 19.80619430542, 1.5, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else if(Terroristas(playerid))
	{
	    if(PlayerToPoint(20, playerid, 1023.69, -374.61, 74.56))
	    {
	        MoveDynamicObject(terroristas, 1023.69, -374.63, 68.44, 2.5, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal");
 	}
	else if(Hitman(playerid))
	{
	    if(PlayerToPoint(25, playerid, -489.43, -560.31, 27.34))
	    {
	        MoveDynamicObject(mafia2, -489.43, -560.31, 20.89, 2.5, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else if(Mafia_Rusa(playerid))
	{
	    if (PlayerToPoint(30, playerid, 906.2178,-1655.1503,13.5469))
	    {
	        MoveDynamicObject(rusos, 905.82, -1655.38, 9.67, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
     	} else Message(playerid, COLOR_GREY, "No hay señal.");
	}
	else if(Journalist(playerid))
    {
      	if (PlayerToPoint(30, playerid,781.77209500,-1330.31884800,12.68660500))
      	{
	       	MoveDynamicObject(tvp, 773.89648400,-1330.31884800,12.68660500, 5.0, -1000.0, -1000.0, -1000.0);
	       	return 1;
       }
       else if (PlayerToPoint(30, playerid,774.11425781,-1384.98632812,12.92022705))
      	{
	       	MoveDynamicObject(tvp1, 765.11425781,-1384.98632812,12.92022705, 5.0, -1000.0, -1000.0, -1000.0);
	       	return 1;
       }
       else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
 	else Message(playerid, COLOR_GREY,"Usted no tiene un mando a distancia.");
    return 1;
}

CheckForCloseDoor(playerid)
{
	if(Team_LSPD(playerid))
    {
        if (PlayerToPoint(15, playerid,1589.053344,-1638.123168,14.122960))
		{
			MoveDynamicObject(pdgate1,1589.053344,-1638.123168,14.122960, 0.97, -1000.0, -1000.0, -1000.0);
			return 1;
		}
		else if (PlayerToPoint(15, playerid,1545.7398681641, -1627.7280273438, 15.206203460693))
		{
      		MoveDynamicObject(pdgate2, 1545.7398681641, -1627.7280273438, 15.206203460693, 3.0, -1000.0, -1000.0, -1000.0);
      		return 1;
		} else Message(playerid, COLOR_GREY,"No hay señal!");
	}
	else if(Team_NG(playerid))
	{
		if(PlayerToPoint(20, playerid, 2668.9226,-2405.3696,13.4902))
		{
		    MoveDynamicObject(saem1, 2669.81, -2405.30, 15.44, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2671.70, -2504.00, 15.30))
		{
		    MoveDynamicObject(saem2, 2668.29, -2504.00, 15.44, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2806.3896,-2401.5261,13.6291))
		{
		    MoveDynamicObject(saem3, 2807.08, -2401.64, 15.44, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
 	}
 	else if(Team_SAMUR(playerid))
	{
	    if(PlayerToPoint(20, playerid, 1140.1462,-1290.9423,13.5708))
	    {
	        MoveDynamicObject(hospitalgate, 1140.54, -1291.09, 15.40, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
 	}
	else if(Mafia_Italiana(playerid))
	{
 		if(PlayerToPoint(30, playerid,1426.6943359375, -1882.537109375, 19.80619430542))
	    {
	        MoveDynamicObject(crgate,1426.6943359375, -1882.537109375, 15.131196975708,2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else if(Terroristas(playerid))
	{
	    if(PlayerToPoint(20, playerid, 1023.69, -374.61, 74.56))
	    {
	        MoveDynamicObject(terroristas, 1023.69, -374.61, 74.56, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal");
 	}
 	else if(Hitman(playerid))
	{
	    if(PlayerToPoint(25, playerid, -489.43, -560.31, 27.34))
	    {
	        MoveDynamicObject(mafia2, -489.43, -560.31, 27.34, 2.5, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else if(Mafia_Rusa(playerid))
	{
	    if (PlayerToPoint(30, playerid, 906.2178,-1655.1503,13.5469))
	    {
	        MoveDynamicObject(rusos, 905.82, -1655.38, 15.37, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
     	} else Message(playerid, COLOR_GREY, "No hay señal.");
	}
	else if(Journalist(playerid))
    {
   		if (PlayerToPoint(20, playerid,781.77209500,-1330.31884800,12.68660500))
      	{
	       	MoveDynamicObject(tvp, 781.77209500,-1330.31884800,12.68660500,5.0, -1000.0, -1000.0, -1000.0);
	       	return 1;
     	}
       else if (PlayerToPoint(20, playerid,774.11425781,-1384.98632812,12.92022705))
		{
	       	MoveDynamicObject(tvp1, 774.11425781,-1384.98632812,12.92022705,5.0, -1000.0, -1000.0, -1000.0);
	       	return 1;
  		}
       else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else Message(playerid, COLOR_GREY,"Usted no tiene un mando a distancia.");
    return 1;
}

SaveAllGuns()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gPlayerLogged[i] == 1)
		    {
		        SaveGuns(i);
			}
		}
	}
}

SaveGuns(playerid)
{
	for(new slot = 0; slot != 12; slot++)
	{
	    new wep, ammo;
	    GetPlayerWeaponData(playerid, slot, wep, ammo);
		if(wep != 0 && ammo != 0)
		{
		    if(ScriptWeapons[playerid][slot] == wep && ScriptAmmo[playerid][slot] == ammo)
		    {
				switch(slot)
				{
				    case 0: { PlayerInfo[playerid][pWeapon] = wep; PlayerInfo[playerid][pAmmo] = ammo;}
				    case 1: { PlayerInfo[playerid][pWeapon2] = wep; PlayerInfo[playerid][pAmmo2] = ammo; }
				    case 2: { PlayerInfo[playerid][pWeapon3] = wep; PlayerInfo[playerid][pAmmo3] = ammo; }
				    case 3: { PlayerInfo[playerid][pWeapon4] = wep; PlayerInfo[playerid][pAmmo4] = ammo; }
				    case 4: { PlayerInfo[playerid][pWeapon5] = wep; PlayerInfo[playerid][pAmmo5] = ammo; }
				    case 5: { PlayerInfo[playerid][pWeapon6] = wep; PlayerInfo[playerid][pAmmo6] = ammo; }
				    case 6: { PlayerInfo[playerid][pWeapon7] = wep; PlayerInfo[playerid][pAmmo7] = ammo; }
				    case 7: { PlayerInfo[playerid][pWeapon8] = wep; PlayerInfo[playerid][pAmmo8] = ammo; }
				    case 8: { PlayerInfo[playerid][pWeapon9] = wep; PlayerInfo[playerid][pAmmo9] = ammo; }
				    case 9: { PlayerInfo[playerid][pWeapon10] = wep; PlayerInfo[playerid][pAmmo10] = ammo; }
				    case 10: { PlayerInfo[playerid][pWeapon11] = wep; PlayerInfo[playerid][pAmmo11] = ammo; }
				    case 11: { PlayerInfo[playerid][pWeapon12] = wep; PlayerInfo[playerid][pAmmo12] = ammo; }
				}
	        }
		}
	}
}

function ShowBuyMenu(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		ShowPlayerDialog(playerid,D247_BUY,DIALOG_STYLE_LIST, \
		"Comprar - 24 7","1.\tLotería\t\t\t\t(5$)\n2.\tSpray Anti-Ladrones\t\t(50$)\n3.\tCigarros\t\t\t(25$)\n4.\tEncendedor\t\t\t(10$)\n5.\tGafas RayBan\t\t\t(100$)\n6.\tMaleta\t\t\t\t(150$)\n7.\tMochila\t\t\t\t(75$)\n8.\tCasco\t\t\t\t(100$)\n9\tPatines\t\t\t\t(50$)","Comprar","Cancelar");
	}
	return 1;
}

function ShowAmmunation(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ShowPlayerDialog(playerid,AMMUNATION_MENU,DIALOG_STYLE_LIST,"Ammunation - Compras","Defensa personal\nPistolas\nEscopetas\nProtección\nLecciones","Ver","Salir");
	}
	return 1;
}

function CamelMenu(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		ShowPlayerDialog(playerid,CAMEL_MENU,DIALOG_STYLE_LIST,"Traficante - Servicios","1-\tEntrégame un paquete.\n2-\tEntregar teléfonos robados\n3-\tAdquirir un DNI Falso","Aceptar","Salir");
		return 1;
	}
	return 1;
}

stock Bought(playerid, amount)
{
	if(IsPlayerConnected(playerid))
	{
		    new a[14];
			format(a,sizeof(a),"~r~ -%d$",amount);
		    GameTextForPlayer(playerid, a, 5000, 1);
			GivePlayerMoney(playerid, -amount);
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
	}
	return 1;
}

stock Earn(playerid, amount)
{
	if(IsPlayerConnected(playerid))
	{
		    new a[12];
			format(a,sizeof(a),"~g~ %d$",amount);
		    GameTextForPlayer(playerid, a, 5000, 1);
			GivePlayerMoney(playerid, amount);
			PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
	}
	return 1;
}

stock CheckMoney(playerid, money)
{
    if(IsPlayerConnected(playerid))
	{
	    new b[64];
	    new xx;
		xx = money - (GetPlayerMoney(playerid));
	    if(GetPlayerMoney(playerid) >= money)
		{
			return 1;
		}
		else
		{
		    format(b,sizeof(b),"No tienes dinero suficiente! Te faltan %d$",xx);
			SendClientMessage(playerid, COLOR_GRAD2, b);
			return 0;
		}
	}
	return 0;
}

function OnGlobalPropTextdrawUpdate()
{
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        OnPropTextdrawUpdate(h)
	}
	return 1;
}
//abc
function OnPropTextdrawUpdate(hid)
{
	new string[256];
	if(HouseInfo[hid][hOwned] == 0)
	{
 		DestroyDynamic3DTextLabel(House3DText[hid]);
		DestroyDynamicPickup(HousePickup[hid]);
  		format(string, sizeof(string), "{DC092F}Casa en Venta\n{2471A3}Precio:{FFFFFF} %d$\n{2471A3}Nivel:{FFFFFF} %d\n{2471A3}ID:{FFFFFF} %d\n{2471A3}Usa /comprarcasa",HouseInfo[hid][hValue],HouseInfo[hid][hLevel],hid);
    	House3DText[hid] = CreateDynamic3DTextLabel(string,COLOR_GREEN, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		HousePickup[hid] = CreateDynamicPickup(1273, 1, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez]);
	}
	else
	{
 		DestroyDynamicPickup(HousePickup[hid]);
		HousePickup[hid] = CreateDynamicPickup(1239, 1, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez]);
  		if(HouseInfo[hid][hRent] > 0)
  		{
    		DestroyDynamic3DTextLabel(House3DText[hid]);
      		format(string, sizeof(string), "Propiedad en Renta\nDueño: %s\nRenta: %d$\nHabitaciones: %d\nID: %d\nUsa /rcuarto",HouseInfo[hid][hOwner],HouseInfo[hid][hRent],HouseInfo[hid][hRooms],hid);
			House3DText[hid] = CreateDynamic3DTextLabel(string,COLOR_GREEN, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		}
		else
		{
  			DestroyDynamic3DTextLabel(House3DText[hid]);
	    	format(string, sizeof(string), "{2471A3}Propiedad Privada\n{FFFFFF}Dueño: %s\nID: %d",HouseInfo[hid][hOwner],hid);
    		House3DText[hid] = CreateDynamic3DTextLabel(string,COLOR_GREEN, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		}
	}
	return 1;
}

function OnGlobalBizzTextdrawUpdate()
{
    for(new b = 0; b < sizeof(BizzInfo); b++)
	{
	    OnBizzTextdrawUpdate(b);
 	}
 	return 1;
}

function OnBizzTextdrawUpdate(bid)
{
    new string[256];
	if(BizzInfo[bid][bOwned] == 0)
 	{
 		DestroyDynamic3DTextLabel(Bizz3DText[bid]);
  		DestroyDynamicPickup(BizzPickup[bid]);
   		format(string, sizeof(string), "Negocio en Venta\n%s\nPrecio : %d$\nNivel: %d\nID: %d\nUsa /comprarnegocio",BizzInfo[bid][bName],BizzInfo[bid][bBuyPrice],BizzInfo[bid][bLevelNeeded],bid);
		Bizz3DText[bid] = CreateDynamic3DTextLabel(string,0xAAAAFFFF, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		BizzPickup[bid] = CreateDynamicPickup(1272, 1, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez]);
	}
	else
	{
 		DestroyDynamic3DTextLabel(Bizz3DText[bid]);
  		DestroyDynamicPickup(BizzPickup[bid]);
   		format(string, sizeof(string), "%s\nNegocioID: %d\nDueño: %s\nExtorcion: %s",BizzInfo[bid][bName], bid,BizzInfo[bid][bOwner],BizzInfo[bid][bExtortion]);
		Bizz3DText[bid] = CreateDynamic3DTextLabel(string,0xAAAAFFFF, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		BizzPickup[bid] = CreateDynamicPickup(1272, 1, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez]);
	}
	return 1;
}

function ShootAgain(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    DeletePVar(playerid, "Bowling");
	    DeletePVar(playerid, "BowlingMoney");
 	}
}

function SetPlayerStats(playerid)
{
	if(PlayerInfo[playerid][pDEagle] > 800) PlayerInfo[playerid][pDEagle] = 999;
	if(PlayerInfo[playerid][pShotgun] > 800) PlayerInfo[playerid][pShotgun] = 999;
	if(PlayerInfo[playerid][pMP5] > 800) PlayerInfo[playerid][pMP5] = 999;
	if(PlayerInfo[playerid][pAK47] > 800) PlayerInfo[playerid][pAK47] = 999;
	if(PlayerInfo[playerid][pM4] > 800) PlayerInfo[playerid][pM4] = 999;
	if(PlayerInfo[playerid][pSniper] > 800) PlayerInfo[playerid][pSniper] = 999;
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pDEagle])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pShotgun])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pMP5])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pAK47])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pM4])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, PlayerInfo[playerid][pSniper])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 300);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 300);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 300);

	SetPlayerFightingStyle (playerid, PlayerInfo[playerid][pFStyle]);
	SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
}

function TaxiRadar(playerid)
{
	new tInfo[700];
	if(IsPlayerConnected(playerid))
	{
	    format(tInfo, sizeof(tInfo), "1- %s (%s, SA) [Hace %d segundos]\n2- %s (%s, SA) [Hace %d segundos]\n3- %s (%s, SA) [Hace %d segundos]\n4- %s (%s, SA) [Hace %d segundos]\n5- %s (%s, SA) [Hace %d segundos]\n6- %s (%s, SA) [Hace %d segundos]\n7- %s (%s, SA) [Hace %d segundos]\n8- %s (%s, SA) [Hace %d segundos]\n[EXIT] << >> Salir del Radar << >>[EXIT]",
		PlayerName(TaxiSlot1),SlotZone1,TiempoSlot1, PlayerName(TaxiSlot2),SlotZone2,TiempoSlot2, PlayerName(TaxiSlot3),SlotZone3,TiempoSlot3, PlayerName(TaxiSlot4),SlotZone4,TiempoSlot4,
		PlayerName(TaxiSlot5),SlotZone5,TiempoSlot5, PlayerName(TaxiSlot6),SlotZone6,TiempoSlot6, PlayerName(TaxiSlot7),SlotZone7,TiempoSlot7, PlayerName(TaxiSlot8),SlotZone8,TiempoSlot8);
    	ShowPlayerDialog(playerid,DIALOG_TAXI_RADAR,DIALOG_STYLE_LIST,"Taxi Radar LS",tInfo,"Ir","Borrar");
	}
}

function Spawned(playerid)
{
	First_Spawn[playerid] = 0;
}

function Tiempo1()
{
	for(new i=0;i<=MAX_PLAYERS;i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerInfo[i][pTut] == 0)
	        {
		        ComprobarKeysCatalogo(i);
	        }
		}
	}
}

function ComprobarKeysCatalogo(playerid)
{
    new Keys,ud,lr;
	new string[128];
    GetPlayerKeys(playerid,Keys,ud,lr);
	if(lr > 0) // Right
	{
	    if(GetPVarType(playerid, "PuedePresionar") == 0)
	    {
	        if(GetPVarInt(playerid, "RStep") == 1)
	        {
	            if(GetPVarInt(playerid, "RegConfig") == 1)
	            {
		            if(GetPVarInt(playerid, "RegText") == 1)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~b~Masculino          ~w~Edad: ~b~?~n~~n~~w~Origen: ~b~Sin Origen    ~w~Estilo: ~b~?");
		                PlayerInfo[playerid][pSex] = 1;
		                Skin(playerid, 188);
		                PlayerInfo[playerid][pChar] = 188;
		                SetPVarInt(playerid, "RegText", 2);
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		SetPVarInt(playerid, "PuedePresionar", 1);
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		return 1;
					}
					else if(GetPVarInt(playerid, "RegText") == 2)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~b~Femenino          ~w~Edad: ~b~?~n~~n~~w~Origen: ~b~Sin Origen    ~w~Estilo: ~b~?");
		                PlayerInfo[playerid][pSex] = 2;
		                Skin(playerid, 90);
		                PlayerInfo[playerid][pChar] = 90;
		                SetPVarInt(playerid, "RegText", 1);
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		SetPVarInt(playerid, "PuedePresionar", 1);
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		return 1;
					}
				}
				else if(GetPVarInt(playerid, "RegConfig") == 2)
	            {
	                    if(PlayerInfo[playerid][pAge] > 98) return GText(playerid, "~w~Edad maxima: ~r~99", 3000, 3);
	                    PlayerInfo[playerid][pAge] ++;
	                    new mtext[12];
					    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~>~~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
					    SetPVarInt(playerid, "PuedePresionar", 1);
			    		SetTimerEx("VolverPresionar", 100, 0, "d", playerid);
			    		return 1;
	            }
	            else if(GetPVarInt(playerid, "RegConfig") == 3)
	            {
	                if(GetPVarInt(playerid, "RegText") == 5)
	                {
	                    return 1;
	                }
	                else
	                {
	                    SetPVarInt(playerid, "RegText", GetPVarInt(playerid, "RegText")+1);
	                	ChooseOrigin(playerid);
	                	return 1;
					}
				}
				else if(GetPVarInt(playerid, "RegConfig") == 4)
	            {
	                if(GetPVarInt(playerid, "RegText") == 13)
	                {
	                    return 1;
	                }
	                else
	                {
	                    SetPVarInt(playerid, "RegText", GetPVarInt(playerid, "RegText")+1);
	                	ChooseWalk(playerid);
	                	return 1;
					}
				}
			}
		}
	}
	if(lr < 0) // Left
	{
	    if(GetPVarType(playerid, "PuedePresionar") == 0)
	    {
	        if(GetPVarInt(playerid, "RStep") == 1)
	        {
	            if(GetPVarInt(playerid, "RegConfig") == 1)
	            {
		            if(GetPVarInt(playerid, "RegText") == 1)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~b~Masculino          ~w~Edad: ~b~?~n~~n~~w~Origen: ~b~Sin Origen    ~w~Estilo: ~b~?");
		                PlayerInfo[playerid][pSex] = 1;
		                SetPVarInt(playerid, "RegText", 2);
		                Skin(playerid, 188);
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		SetPVarInt(playerid, "PuedePresionar", 1);
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		return 1;
					}
					else if(GetPVarInt(playerid, "RegText") == 2)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~b~Femenino          ~w~Edad: ~b~?~n~~n~~w~Origen: ~b~Sin Origen    ~w~Estilo: ~b~?");
		                PlayerInfo[playerid][pSex] = 2;
		                SetPVarInt(playerid, "RegText", 1);
		                Skin(playerid, 90);
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		SetPVarInt(playerid, "PuedePresionar", 1);
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		return 1;
					}
				}
				else if(GetPVarInt(playerid, "RegConfig") == 2)
	            {
	                    if(PlayerInfo[playerid][pAge] < 19) return GText(playerid, "~w~Edad minima: ~g~18", 3000, 3);
	                    PlayerInfo[playerid][pAge] --;
	                    new mtext[12];
					    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~>~~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
					    SetPVarInt(playerid, "PuedePresionar", 1);
			    		SetTimerEx("VolverPresionar", 100, 0, "d", playerid);
			    		return 1;
	            }
	            else if(GetPVarInt(playerid, "RegConfig") == 3)
	            {
	                if(GetPVarInt(playerid, "RegText") == 1)
	                {
	                    return 1;
	                }
	                else
	                {
	                    SetPVarInt(playerid, "RegText", GetPVarInt(playerid, "RegText")-1);
	                	ChooseOrigin(playerid);
	                	return 1;
					}
				}
				else if(GetPVarInt(playerid, "RegConfig") == 4)
	            {
	                if(GetPVarInt(playerid, "RegText") == 1)
	                {
	                    return 1;
	                }
	                else
	                {
	                    SetPVarInt(playerid, "RegText", GetPVarInt(playerid, "RegText")-1);
	                	ChooseWalk(playerid);
	                	return 1;
					}
				}
			}
		}
	}
	return 0;
}

function VolverPresionar(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		DeletePVar(playerid, "PuedePresionar");
	}
	return 1;
}

function Reg_ShowDNI(playerid) { ShowDNI(playerid,playerid); }

function ShowDNI(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
	    new string[64], sex[2];
	    if(PlayerInfo[playerid][pSex] == 1) { sex = "M"; }
   		else								{ sex = "F"; }

	    Message(targetid, 0x0D86FFFF, "|___________ Documento Nacional de Identidad ___________|");
   		format(string, sizeof(string), "   Nombre: %s", PlayerName(playerid));
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Sexo: %s", sex);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Edad: %d     Fecha Nacimiento: %d", PlayerInfo[playerid][pAge], 2012-PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_WHITE, string);
   		if(PlayerInfo[playerid][pMarried] == 1) format(string, sizeof(string), "   Estado Civil: Casado			Con: %s", PlayerInfo[playerid][pMarriedTo]);
		else format(string, sizeof(string), "   Estado Civil: Soltero");
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nacionalidad: %s", PlayerStatInfo[playerid][1]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nº DNI: %d", PlayerInfo[playerid][pDNI]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   IDSA%d%s<%s>%d-%d", PlayerInfo[playerid][pDNI],sex,PlayerName(playerid),2012-PlayerInfo[playerid][pAge],PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_GRAD2, string);
   		Message(targetid, 0x0D86FFFF, "|_________________ ·------------------------------· _________________|");
	}
	return 1;
}

function ShowDNIFalse(playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
	    new string[64], sex[2];
	    if(PlayerInfo[playerid][pSex] == 1) { sex = "M"; }
   		else								{ sex = "F"; }

	    Message(targetid, 0x0D86FFFF, "|___________ Documento Nacional de Identidad ___________|");
   		format(string, sizeof(string), "   Nombre: %s", PlayerInfo[playerid][pDNIName]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Sexo: %s", sex);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Edad: %d     Fecha Nacimiento: %d", PlayerInfo[playerid][pAge], 2012-PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Estado Civil: Soltero");
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nacionalidad: %s", PlayerStatInfo[playerid][1]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nº DNI: %d", PlayerInfo[playerid][pDNIFalse]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   IDSA%d%s<%s>%d-%d", PlayerInfo[playerid][pDNIFalse],sex,PlayerInfo[playerid][pDNIFalse],2012-PlayerInfo[playerid][pAge],PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_GRAD2, string);
   		Message(targetid, 0x0D86FFFF, "|_________________ ·------------------------------· _________________|");
	}
	return 1;
}

function RegMsn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Información OOC","Registra tu e-mail","Registrar","Cancelar");
	}
	return 1;
}

function CameraLogin(playerid)
{
	Connect
		SetHP(playerid, 100);
	}
}

stock Admin(lvl,playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new admin = PlayerInfo[playerid][pAdminCP];
	    if(admin	>=	lvl)
		{
		    return 1;
		}
	}
	return 0;
}

new VehicleFriendlyNames[212][] = {
	{"Landstalker"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"},
	{"Dumper"},{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},
	{"Pony"},{"Mule"},{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},
	{"Washington"},{"Bobcat"},{"Mr. Whoopee"},{"BF. Injection"},{"Hunter"},{"Premier"},{"Enforcer"},
	{"Securicar"},{"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Article Trailer"},
	{"Previon"},{"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},{"Romero"},{"Packer"},{"Monster"},
	{"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Article Trailer 2"},{"Turismo"},{"Speeder"},
	{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},{"Berkley's RC Van"},{"Skimmer"},
	{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},{"Sanchez"},
	{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},{"Hermes"},{"Sabre"},{"Rustler"},{"ZR-350"},
	{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},{"Baggage"},{"Dozer"},
	{"Maverick"},{"News Chopper"},{"Rancher"},{"FBI Rancher"},{"Virgo"},{"Greenwood"},{"Jetmax"},{"Hotring"},
	{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},{"Mesa"},{"RC Goblin"},
	{"Hotring Racer A"},{"Hotring Racer B"},{"Bloodring Banger"},{"Rancher"},{"Super GT"},{"Elegant"},
	{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stunt"},{"Tanker"},{"Roadtrain"},
	{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},{"NRG-500"},{"HPV1000"},
	{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},{"Willard"},{"Forklift"},
	{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},{"Blade"},{"Freight"},{"Streak"},
	{"Vortex"},{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},{"Firetruck LA"},{"Hustler"},{"Intruder"},
	{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},{"Utility"},{"Nevada"},{"Yosemite"},{"Windsor"},
	{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},{"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},
	{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},{"Bandito"},{"Freight Flat"},{"Streak Carriage"},
	{"Kart"},{"Mower"},{"Dunerider"},{"Sweeper"},{"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},
	{"Stafford"},{"BF-400"},{"Newsvan"},{"Tug"},{"Article Trailer 3"},{"Emperor"},{"Wayfarer"},{"Euros"},{"Mobile Hotdog"},
	{"Club"},{"Freight Carriage"},{"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police Car LSPD"},
	{"Police Car SFPD"},{"Police Car LVPD"},{"Police Ranger"},{"Picador"},{"S.W.A.T Van"},{"Alpha"},
	{"Phoenix"},{"Glendale"},{"Sadler"},{"Luggage Trailer A"},{"Luggage Trailer B"},{"Stair Trailer"},
	{"Boxville"},{"Farm Plow"},{"Utility Trailer"}
};

stock GetVehicleFriendlyName(vehicleid)
{
	new GVFNstring[56];
	format(GVFNstring, sizeof(GVFNstring), VehicleFriendlyNames[GetVehicleModel(vehicleid)-400]);
	return GVFNstring;
}

stock CreateRoadblock(Object,Float:x,Float:y,Float:z,Float:Angle)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(Roadblocks[i][sCreated] == 0)
  	    {
            Roadblocks[i][sCreated] = 1;
            Roadblocks[i][sX] = x;
            Roadblocks[i][sY] = y;
            Roadblocks[i][sZ] = z-0.7;
            Roadblocks[i][sObject] = CreateDynamicObject(Object, x, y, z-0.9, 0, 0, Angle);
	        return 1;
  	    }
  	}
  	return 0;
}

stock DeleteAllRoadblocks(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(PlayerToPoint(playerid, 100, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
	  	    if(Roadblocks[i][sCreated] == 1)
	  	    {
	  	        Roadblocks[i][sCreated] = 0;
	            Roadblocks[i][sX] = 0.0;
	            Roadblocks[i][sY] = 0.0;
	            Roadblocks[i][sZ] = 0.0;
	            DestroyDynamicObject(Roadblocks[i][sObject]);
	  	    }
  	    }
	}
    return 1;
}

stock DeleteClosestRoadblock(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(PlayerToPoint(5.0, playerid, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
  	        if(Roadblocks[i][sCreated] == 1)
            {
                Roadblocks[i][sCreated] = 0;
                Roadblocks[i][sX] = 0.0;
                Roadblocks[i][sY] = 0.0;
                Roadblocks[i][sZ] = 0.0;
                DestroyDynamicObject(Roadblocks[i][sObject]);
                return 1;
  	        }
  	    }
  	}
    return 0;
}

function Detective_FindPerson(playerid)
{
	Connect
	    if(IsPlayerConnected(GetPVarInt(playerid, "WhoFind")))
	    {
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPVarInt(playerid, "WhoFind"), X,Y,Z);
			SetPlayerCheckpoint(playerid, X,Y,Z, 6);
			Message(playerid, TEAM_RADIO_COLOR, "** Información: se estableció el destino de búsqueda en su radar");
			DeletePVar(playerid, "WhoFind");
		}
	}
	return 1;
}

SearchHit(playerid)
{
	new string[128];
	if(IsPlayerConnected(playerid))
	{
	    Message(playerid, COLOR_WHITE, "- Objetivos pendientes -");
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
		        if(PlayerInfo[i][pHead] > 0)
		        {
	    	        format(string, sizeof(string), "  Nombre: %s (Recompensa: %d)", PlayerName(i),PlayerInfo[i][pHead]);
	        	    Message(playerid, WANTED_COLOR, string);
	        	}
			}
	    }
	}
	return 1;
}

function IntentarTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    DeletePVar(playerid, "Intentar");
	}
}

function BackupClear(playerid, timer)
{
	if(IsPlayerConnected(playerid))
	{
		if(GetPVarInt(playerid, "RequestingBackup") == 1)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Team_LSPD(playerid)) SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
					else if(Team_NG(playerid)) SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
				}
			}
			if(timer != 0) 	Message(playerid, TEAM_BLUE_COLOR, "Tu pedido de refuerzos ha sido cancelado automáticamente.");
			else 			Message(playerid, TEAM_BLUE_COLOR, "Tu pedido fue cancelado.");
			DeletePVar(playerid, "RequestingBackup");
		}
	}
	return 1;
}

function ChooseOrigin(playerid)
{
	if(GetPVarInt(playerid, "RegConfig") == 3)
	{
		new mtext[12],string[256];
		if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
		switch(GetPVarInt(playerid, "RegText"))
		{
			case 1:
 			{
    			format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~America    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
			    TDStr(RegDraw[playerid], string);
      			PlayerInfo[playerid][pOrigin] = 1;
          	}
			case 2:
   			{
		    	format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Europa    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
		    	TDStr(RegDraw[playerid], string);
      			PlayerInfo[playerid][pOrigin] = 2;
     		}
       		case 3:
           	{
		    	format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Asia    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
			    TDStr(RegDraw[playerid], string);
      			PlayerInfo[playerid][pOrigin] = 3;
          	}
          	case 4:
           	{
		    	format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Africa    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
			    TDStr(RegDraw[playerid], string);
      			PlayerInfo[playerid][pOrigin] = 4;
          	}
           	case 5:
            {
			    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Oceania    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
			    TDStr(RegDraw[playerid], string);
      			PlayerInfo[playerid][pOrigin] = 5;
          	}
      	}
      	SetPVarInt(playerid, "PuedePresionar", 1);
 		SetTimerEx("VolverPresionar", 300, 0, "d", playerid);
	}
	return 0;
}

function ChooseWalk(playerid)
{
	if(GetPVarInt(playerid, "RegConfig") == 4)
	{
	    new mtext[12],string[128],otext[12];
	    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
	    if(PlayerInfo[playerid][pOrigin] == 1) otext = "America";
	    if(PlayerInfo[playerid][pOrigin] == 2) otext = "Europa";
	    if(PlayerInfo[playerid][pOrigin] == 3) otext = "Asia";
	    if(PlayerInfo[playerid][pOrigin] == 4) otext = "Africa";
	    if(PlayerInfo[playerid][pOrigin] == 5) otext = "Oceania";
	    switch(GetPVarInt(playerid, "RegText"))
	    {
	        case 1:
	        {
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~Normal", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 1;
     			ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
     		}
     		case 2:
     		{
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~CIV", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 2;
     			ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
     		}
     		case 3:
     		{
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~GANG1", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 3;
     			ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
     		}
			case 4:
			{
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~GANG2", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 4;
     			ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
     		}
     		case 5:
     		{
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~VIEJO1", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 5;
     			ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
     		}
     		case 6:
		 	{
		 		format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~VIEJO2", mtext, PlayerInfo[playerid][pAge], otext);
		    	TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 6;
     			ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
	     	}
	     	case 7:
	     	{
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~GORDO", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 7;
     			ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
     		}
     		case 8:
     		{
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~MUJER1", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 8;
     			ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
     		}
     		case 9:
     		{
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~MUJER2", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 9;
     			ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
     		}
     		case 10:
     		{
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~PUTA1", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 10;
     			ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
     		}
     		case 11:
     		{
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~PUTA2", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 11;
     			ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
     		}
     		case 12:
     		{
	     	    format(string, sizeof(string), "~n~Sexo:  ~b~%s          ~w~Edad: ~b~%d~n~~n~~w~Origen: ~b~%s    ~>~~w~Estilo: ~b~EBRIO", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 12;
     			ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
     		}
     		case 13:
     		{
	     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~CIEGO", mtext, PlayerInfo[playerid][pAge], otext);
			    TDStr(RegDraw[playerid], string);
     			PlayerInfo[playerid][pWalk] = 13;
     			ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
     		}
   		}
   		SetPVarInt(playerid, "PuedePresionar", 1);
   		SetTimerEx("VolverPresionar", 400, 0, "d", playerid);
	}
	return 0;
}

stock SetPosEx(playerid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid)
{
    SetPlayerPos(playerid, X, Y, Z);
    SetPlayerFacingAngle(playerid, A);
    SetPlayerInterior(playerid, interiorid);
    SetPlayerVirtualWorld(playerid, worldid);
}

stock PlayerName(playerid)
{
    new Nombre[24];
    GetPlayerName(playerid,Nombre,24);
    new N[24];
    format(N,24,Nombre);
    for(new i = 0; i < MAX_PLAYER_NAME; i++)
    {
        if (N[i] == '_') N[i] = ' ';
    }
    return N;
}

DetectNumber(string[])
{
	new Numeros;
    for(new a = 0; a < strlen(string); a ++)
    {
        if(string[a] == '0' || string[a] == '1' || string[a] == '2' || string[a] == '3' || string[a] == '4' || string[a] == '5' || string[a] == '6' || string[a] == '7' || string[a] == '8' || string[a] == '9') Numeros ++;
    }
    if(Numeros >= 4) return 1;
    return 0;
}

function StopCall(playerid)
{
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
    SetTimerEx("RemoveHand", 1800, false, "i", playerid);
    new caller = Mobile[playerid];
    if(IsPlayerConnected(caller))
	{
		if(caller != INVALID_PLAYER_ID)
		{
			if(caller != 255)
			{
				if(caller < 255)
				{
					MessageEx(playerid, caller, COLOR_GRAD2, "Llamada finalizada.");
					SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
    				SetTimerEx("RemoveHand", 1800, false, "i", caller);
    				if(GetPVarInt(caller, "Speaker") == 1) DeletePVar(caller, "Speaker");
    				CellTime[caller] = 0;
					Mobile[caller] = 255;
				}
				CellTime[playerid] = 0;
				if(GetPVarInt(playerid, "Speaker") == 1) DeletePVar(playerid, "Speaker");
			}
		}
	}
	Mobile[playerid] = 255;
	return 1;
}

function RemoveHand(playerid){
    RemovePlayerAttachedObject(playerid, 0);
    Att_Obj_Slot_0[playerid] = "Vacío";
}

function UntazePlayer(playerid){
	new string[128];
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid, 1);
	format(string, sizeof(string), "* Recuperado de la descarga (%s)", PlayerName(playerid));
	ProxDetectorEx(30.0,playerid, string, 0xB6DB22FF);
	DeletePVar(playerid, "PlayerTazeado");
	return 1;
}

function FuelCar(playerid, gasid)
{
	new string[128], idcar = GetPlayerVehicleID(playerid), engine,lights,alarm,doors,bonnet,boot,objective;
	if(engineOn[idcar] == 1)
	{
	    format(string, sizeof(string), "* %s agarra la mangera y la introduce en el depósito.", PlayerName(playerid));
		ProxDetectorEx(30.0,playerid, string, COLOR_PURPLE);
	    new Float:boomx,Float:boomy,Float:boomz;
	    GetVehiclePos(idcar,boomx,boomy,boomz);
		CreateExplosion(boomx, boomy , boomz, 7, 10);
		GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(idcar,0,0,alarm,doors,0,0,objective);
		engineOn[idcar] = 0;
		Refueling[playerid] = -1;
		return 1;
	}
	else
	{
        Refueling[playerid] = gasid;
        TogglePlayerControllable(playerid, 0);
        format(string, sizeof(string), "* %s agarra la mangera y la introduce en el depósito.", PlayerName(playerid));
		ProxDetectorEx(30.0,playerid, string, COLOR_PURPLE);
		Message(playerid, COLOR_WHITE, "  El vehículo se está llenando, espera.");
		SetTimerEx("FillUp", RefuelWait, false, "i", playerid);
	}
	return 1;
}

function FillUp(playerid)
{
    if(IsPlayerConnected(playerid))
   	{
   	    new idcar 	= 	GetPlayerVehicleID(playerid);
   	    new recgas = 5;
   	    if(OwnableVehicle[idcar]) recgas = PlayerVehicleInfo[VehicleOwner[idcar]][VehicleSlot[idcar]][pvGas];

   	    new gasmax;
        if(Refueling[playerid] == 0) 		gasmax = gGas95_Full;
        else if(Refueling[playerid] == 1) 	gasmax = gGas98_Full;
        else if(Refueling[playerid] == 2) 	gasmax = gGasoil_Full;
        else if(Refueling[playerid] == 3) 	gasmax = gBiogas_Full;

        new pricegas;
        if(Refueling[playerid] == 0) 		pricegas = gGas95_Cost;
        else if(Refueling[playerid] == 1) 	pricegas = gGas98_Cost;
        else if(Refueling[playerid] == 2) 	pricegas = gGasoil_Cost;
        else if(Refueling[playerid] == 3) 	pricegas = gBiogas_Cost;

        new gasname[16];
        if(Refueling[playerid] == 0) 		gasname = "Sin plomo 95";
        else if(Refueling[playerid] == 1) 	gasname = "Sin plomo 98";
        else if(Refueling[playerid] == 2) 	gasname = "Gasoil";
        else if(Refueling[playerid] == 3) 	gasname = "Biodiesel";

	   	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	   	    {
	   	        new string[128];
	   	        new fillup 	= 	gasmax - Gas[idcar];
	   	        new price   =   fillup * pricegas;

	                if(recgas == 5 || recgas == Refueling[playerid])
	                {
	                    Gas[idcar] += fillup;
	                    ClearChatbox(playerid, 10);
	                    Message(playerid, 0x0097DFFF, "|_________| Gasolina - Recibo |_________|");
	                    format(string,sizeof(string),"  Precio: %d$/l (%s)",pricegas, gasname);
		    			Message(playerid, COLOR_WHITE, string);
		    			format(string,sizeof(string),"  Depósito: %d/%d Pagado: %d litros",Gas[idcar],gasmax,fillup);
		    			Message(playerid, COLOR_WHITE, string);
		    			Message(playerid, 0x0097DFFF, "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _");
		    			format(string,sizeof(string),"  Total: %d$",price);
		    			Message(playerid, COLOR_WHITE, string);
		    			TogglePlayerControllable(playerid, 1);
		    			Refueling[playerid] = -1;
		    			if(LSPD_IsACopCar(idcar) || SAMD_Vehicle(idcar) || Taxi_Vehicle(idcar))
						{
							GText(playerid, "~g~0$", 5000, 1);
							Message(playerid, COLOR_WHITE, "** Tu empresa se hace responsable de los gastos.");
						}
						else
						{
                            Bought(playerid, price);
                            Till(34, price);
						}
	                }
	                else
	                {
	                    Gas[idcar] += fillup;
	                    ClearChatbox(playerid, 10);
	                    Message(playerid, 0x0097DFFF, "|_________| Gasolina - Recibo |_________|");
	                    format(string,sizeof(string),"  Precio: %d$/l (%s)",pricegas, gasname);
		    			Message(playerid, COLOR_WHITE, string);
		    			format(string,sizeof(string),"  Depósito: %d/%d Pagado: %d litros",Gas[idcar],gasmax,fillup);
		    			Message(playerid, COLOR_WHITE, string);
		    			Message(playerid, 0x0097DFFF, "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _");
		    			format(string,sizeof(string),"  Total: %d$",price);
		    			Message(playerid, COLOR_WHITE, string);
		    			TogglePlayerControllable(playerid, 1);
		    			SetVehicleHealth(idcar, 500.0);
		    			Refueling[playerid] = -1;
		    			if(LSPD_IsACopCar(idcar) || SAMD_Vehicle(idcar) || Taxi_Vehicle(idcar))
						{
							GText(playerid, "~g~0$", 5000, 1);
							Message(playerid, COLOR_WHITE, "** Tu empresa se hace responsable de los gastos");
						}
						else
						{
                            Bought(playerid, price);
                            Till(34, price);
						}
	                }
	   	    }
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	if(!OwnableVehicle[vehicleid])
	{
		new string[32];
		new Float:carpos_x,Float:carpos_y,Float:carpos_z;
	    format(string, 128, "SA - %d",vehicleid);
	    SetVehicleNumberPlate(vehicleid, string);
		GetVehiclePos(vehicleid,carpos_x,carpos_y,carpos_z);
	    SetVehicleToRespawn(vehicleid);
	    SetVehiclePos(vehicleid,carpos_x,carpos_y,carpos_z);
	    return 1;
	}
	return 0;
}

function NoBattery(carid)
{
 	if(PlayerVehicleInfo[VehicleOwner[carid]][VehicleSlot[carid]][pvBattery] == 0 && OwnableVehicle[carid])
	{
		return 1;
	}
	return 0;
}

function MM_Noise()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(PlayerToPoint(20.0,i,1641.2056,-2139.6641,13.4100))
			{
			    PlayerPlaySound(i, 1133, 1641.2056,-2139.6641,13.4100);
			}
		}
	}
	return 0;
}

function MM_Exam(playerid)
{
	new x = GetPlayerVehicleID(playerid);
	new bat = PlayerVehicleInfo[VehicleOwner[x]][VehicleSlot[x]][pvBattery];
	new gas = PlayerVehicleInfo[VehicleOwner[x]][VehicleSlot[x]][pvGas];
	new gasa = Gas[x];
	new gasname[20], mes[12], string[64];

	if(gas == 0) gasname = "Sin Plomo 95";
	else if(gas == 1) gasname = "Sin Plomo 98";
	else if(gas == 2) gasname = "Diesel/Gasoil";
	else if(gas == 3) gasname = "Biodiesel";

	if(bat < 100) mes = "Agotada";
	if(bat > 100 || bat < 1000) mes = "Baja";
	if(bat > 1000 || bat < 5000) mes = "Normal";
	if(bat > 5000) mes = "Óptima";

	ClearChatbox(playerid, 10);
	format(string, sizeof(string), "___________| %s |___________", PlayerVehicleInfo[VehicleOwner[x]][VehicleSlot[x]][pvName]);
	Message(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "  Motor: %s", gasname);
	Message(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "  Estado Batería: %s", mes);
	Message(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "  Gasolina: %d", gasa);
	Message(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "  Suciedad: %d", PlayerVehicleInfo[VehicleOwner[x]][VehicleSlot[x]][pvSuciedad]);
	Message(playerid, COLOR_WHITE, string);
	KillTimer(mmtimer);
	return 1;
}

V_Documents(playerid, targetid){
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", PlayerVehicleInfo[playerid][0][pvName], PlayerVehicleInfo[playerid][0][pvPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", PlayerVehicleInfo[playerid][0][pvEmbargo], PlayerVehicleInfo[playerid][0][pvMulta]);
		Message(targetid, COLOR_WHITE, string);

	}
}

V_Documents2(playerid, targetid){
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", PlayerVehicleInfo[playerid][1][pvName], PlayerVehicleInfo[playerid][1][pvPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", PlayerVehicleInfo[playerid][1][pvEmbargo], PlayerVehicleInfo[playerid][1][pvMulta]);
		Message(targetid, COLOR_WHITE, string);

	}
}

V_Documents3(playerid, targetid){
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", PlayerVehicleInfo[playerid][2][pvName], PlayerVehicleInfo[playerid][2][pvPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", PlayerVehicleInfo[playerid][2][pvEmbargo], PlayerVehicleInfo[playerid][2][pvMulta]);
		Message(targetid, COLOR_WHITE, string);
	}
}

V_Documents4(playerid, targetid){
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", PlayerVehicleInfo[playerid][3][pvName], PlayerVehicleInfo[playerid][3][pvPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", PlayerVehicleInfo[playerid][3][pvEmbargo], PlayerVehicleInfo[playerid][3][pvMulta]);
		Message(targetid, COLOR_WHITE, string);
	}
}

stock MakeWeapon(playerid, mats, weaponid, ammo){
	new x[64], pmats = PlayerInfo[playerid][pMats];
	if(IsPlayerConnected(playerid)){
	    if(pmats < mats){
			format(x, sizeof(x), "* Te faltan %d materiales.", pmats - mats);
			Message(playerid, COLOR_GRAD2, x);
			return 1;
	    }
	    else{
	        SafeGivePlayerWeapon(playerid, weaponid, ammo);
	        format(x, sizeof(x), "~w~arma creada~n~~r~materiales gastados:~w~%d", mats);
			GText(playerid, x, 3000, 3);
			PlayerInfo[playerid][pMats] -= mats;
			return 1;
	    }
	}
	return 0;
}

function GetPlayerPass(playerid, name[], value[])
{
	if (!strcmp(name,"Key")) SetPVarString(playerid, "pPassword", value);
}

function GetPlayerDates(playerid, name[], value[])
{
    INI_String( "Key",          StatString[playerid][0], 28);
    INI_String( "MSN",			StatString[playerid][1], 28);
    INI_String( "MarriedTo",    StatString[playerid][2], 28);
    INI_Int( "Level",			StatInt[playerid][0]);
    INI_Int( "Money",			StatInt[playerid][1]);
    INI_Int( "Bank",			StatInt[playerid][2]);
    INI_Int( "Locked",			StatInt[playerid][3]);
    INI_Int( "Job",				StatInt[playerid][4]);
    INI_Int( "Donate",			StatInt[playerid][5]);
    INI_Int( "Married",			StatInt[playerid][6]);
    INI_Int( "AdminCP",			StatInt[playerid][7]);
	INI_Int( "House",           StatInt[playerid][8]);
	INI_Int( "pv0Model",        StatInt[playerid][9]);
	INI_Int( "pv1Model",        StatInt[playerid][10]);
	INI_Int( "Negocio",         StatInt[playerid][11]);
	return 0;
}

function GetPlayerFaction(playerid, name[], value[])
{
	INI_Int( "Member",      MemberFactionID[playerid]);
	return 0;
}

function Tutorial_Inside(i)
{
	   new string[512];
	if(GetPVarType(i, "TutStep") == 1)
	{
 		if(GetPVarInt(i, "TutTime") >= 1)
		{
			switch (GetPVarInt(i, "TutTime"))
			{
   				case 1:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
					ClearChatbox(i, 20);
				    TextDrawShowForPlayer(i, TextTut[i]);
					for(new p = 0; p < 4; p++)
					{
						TextDrawShowForPlayer(i, TutTxt[p]);
					}
					SetPlayerCameraPos(i,1462.0864,-1723.2189,13.6610);
					SetPlayerCameraLookAt(i,1480.3210,-1782.5449,39.5468);
					SetPlayerPos(i,1496.9926,-1665.6772,14.0469);
					SetPlayerVirtualWorld(i, 800);
					SetPlayerInterior(i, 0);
				    TogglePlayerControllable(i, 0);
        			format(string, sizeof(string), 		"Bienvenido, este servidor es un modo de juego Role Play y es muy importante~n~\
														 que te registres y visites nuestro foro para que obtengas la informacion que~n~\
														 necesites, tambien recuerda que tenemos administradores que pueden ayudarte en~n~\
														 cualquier problema que tengas, el comando para solicitarlos es ~r~/solicitaradmin~n~\
														 ~w~Esperamos que te diviertas y que invites a tus amigos!");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 2:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
					SetPlayerCameraPos(i,1256.5342,-2156.3215,83.8667);
					SetPlayerCameraLookAt(i,1357.3175,-2099.8274,54.6453);
					SetPlayerPos(i,1176.0361,-2182.2996,58.6712);
					format(string, sizeof(string), 		"Bien, comenzemos con algo sencillo y que derrepente hasta el momento te has~n~\
														preguntado. Que es Role Play? Aqui la respuesta, RolePlay es el modo de juego~n~\
														de este servidor y se basa en dar vida a tu personaje, simular la vida real~n~\
														y comportarte tal como quieres que sea tu personaje.");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 3:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
					SetPlayerCameraPos(i,2079.2710,-1777.4927,26.1454);
					SetPlayerCameraLookAt(i,2105.4841,-1821.9220,18.2734);
					SetPlayerPos(i,2106.8579,-1806.2799,13.5547);
					format(string, sizeof(string), 		"Existen muchas formas de generar dinero con los trabajos disponibles que~n~\
														tiene la ciudad, nosotros recomendamos el trabajo de Camionero o el de~n~\
														Pescador. Puedes buscar trabajos yendo al cyber que esta por el hospital~n~\
														~w~Para aceptar un trabajo debes ir al punto y usar ~r~/trabajo");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 4:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
					SetPlayerCameraPos(i,2098.2043,-1613.8120,32.3267);
					SetPlayerCameraLookAt(i,2060.1519,-1547.7297,16.6530);
					SetPlayerPos(i,2079.7817,-1581.7488,13.4535);
					format(string, sizeof(string), 		"Existen algunas familias y bandas dentro de la ciudad, si quieres pertenecer~n~\
														 a una de ellas debes buscarlos, amigarte y tratar de no morir en el intento.~n~\
														 Ellos siempre estan pendientes en aumentar el limite de su territorio, por lo~n~\
														 cual constantemente hay guerras entre bandas o familias, si ves una huye.");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 5:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
					SetPlayerCameraPos(i,539.0887,-1238.4155,20.8649);
					SetPlayerCameraLookAt(i,545.0177,-1293.3966,25.3480);
					SetPlayerPos(i,562.0253,-1256.7560,26.7422);
					format(string, sizeof(string), 		"Hay concesionarios donde puedes comprar un vehiculo cuando tengas dinero.~n~\
														 Tenemos 3 consecionarios con autos de diferente gama, los clase media y baja~n~\
														 son autos que son vendidos sin limites, mientras que los clase alta tienen un~n~\
														 limite, pero cada cierto tiempo llegan mas autos deportivos a la ciudad.");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 6:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
                    SetPlayerPos(i,2797.9883,-1798.2902,11.5401);
				    SetPlayerCameraPos(i, 2801.6760, -1838.4375, 18.4401);
					SetPlayerCameraLookAt(i, 2801.0291, -1837.6775, 18.1051);
					format(string, sizeof(string), 		"¿Estas aburrido? Ven y divertirte con tus amigos en el paintball, cuenta con 3~n~\
														 modos de juegos: ~b~DeathMacht, Team vs Team y Player vs Player ~w~ donde podras~n~\
														 divertirte y al mismo tiempo ganar habilidad en el uso de las diferentes armas~n~\
														 que te podria servir mucho cuando estes en una situacion de peligro.");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 7:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
				    SetPlayerPos(i,2257.7620,-1642.6335,19.2262);
					SetPlayerCameraPos(i,2264.7561,-1654.0725,16.3083);
					SetPlayerCameraLookAt(i,2245.9846,-1665.2828,19.2262);
					format(string, sizeof(string), 		"Si necesitas cambiarte de ropa o quieres accesorios puedes buscar las tiendas de~n~\
														 ropa, en Los Santos existen 2 tiendas de ropa, Binco y Victim donde puedes~n~\
														 conseguir prendas de vestir y toys personalizables.~n~\
														 ~b~Comandos Disponibles: ~w~/cropa y /ctoys");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 8:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
					SetPlayerPos(i, 1554.3381,-1675.5692,-10.0);
					SetPlayerCameraPos(i, 1514.7783,-1700.2913,36.7506);
					SetPlayerCameraLookAt(i, 1554.3381,-1675.5692,16.1953);
					format(string, sizeof(string), 		"Las fuerzas de la ley estan disponibles para la tranquilidad de cada ciudadano,~n~\
														 si cometes un crimen puedes quedar como buscado en el sistema del gobierno o~n~\
														 ser arrestado, puedes contactar con ellos en el juego.~n~~n~\
														 Tambien puedes aplicar en el foro para ser parte de ellos.");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 9:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
					SetPlayerPos(i, 1188.4574,-1309.2242,-10.0);
					SetPlayerCameraPos(i, 1207.39, -1294.71, 24.61);
					SetPlayerCameraLookAt(i, 1181.72, -1322.65, 13.58);
					format(string, sizeof(string), 		"Si tu resultas herido puedes llamar al ~b~911 ~w~y pedir asistencia medica o si~n~\
														 mueres seras trasladado al hospital, donde apareceras con perdida de memoria.~n~\
														 Puedes unirte a ellos contactandolos en el juego.~n~~n~\
														 Tambien puedes aplicar en el foro para ser parte de ellos.");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 10:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
				    TogglePlayerControllable(i, 0);
					SetPlayerPos(i, -2679.5342,1639.0643,-10.0);
					SetPlayerCameraPos(i,-2734.3477,1520.4971,87.1810);
					SetPlayerCameraLookAt(i,-2679.5342,1639.0643,65.8865);
					format(string, sizeof(string), 		"~b~Reglas - Resumen~n~\
														 ~w~| No DeathMatch - No matar personas sin razon alguna.~n~\
														 | No PowerGaming - No hacer cosas imposibles en el juego.~n~\
														 | No desconectarse en una situacion de Role Play.");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 11:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
				    TogglePlayerControllable(i, 0);
					SetPlayerPos(i, -2679.5342,1639.0643,-10.0);
					SetPlayerCameraPos(i,-2734.3477,1520.4971,87.1810);
					SetPlayerCameraLookAt(i,-2679.5342,1639.0643,65.8865);
					format(string, sizeof(string), 		"~r~i-Premium - Informacion~n~\
														 ~w~Contamos con un sistema de cuentas premium, puedes ver la informacion en~n~\
														 el foro, alli encontraras precios, formas de pago y los beneficios. Recuerda~n~\
														 que adquiriendo una cuenta VIP estas ayudando con los gastos del servidor.");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 12:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
					SetPlayerPos(i, -2679.5342,1639.0643,-10.0);
					SetPlayerCameraPos(i,-2734.3477,1520.4971,87.1810);
					SetPlayerCameraLookAt(i,-2679.5342,1639.0643,65.8865);
					format(string, sizeof(string), 		"~w~Dar las gracias a quienes hacen posible todo esto.~n~\
														 | ~b~Scripter: ~w~Jhon & Jesus~n~\
														 | ~b~Mappers: ~w~Vacante~n~\
														 | ~b~Creadores de la Base: ~w~Texter - Andrew - CodeMan - JunkBuster~n~");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 13:
				{
				    SetPVarInt(i, "PuedeP", 1);
				    SetTimerEx("PuedePTimer", 10000, 0, "d", i);
					SetPlayerPos(i, -2679.5342,1639.0643,-10.0);
					SetPlayerCameraPos(i,-2734.3477,1520.4971,87.1810);
					SetPlayerCameraLookAt(i,-2679.5342,1639.0643,65.8865);
					format(string, sizeof(string), 		"Fin del tutorial, esperamos que tengas una idea de como funciona este servidor~n~\
														 y como puedes aprovechar al maximo la experiencia del Role Play.~n~\
														 Si tienes otra duda puedes ingresar a nuestro foro que esta abajo.~n~\
														 Si ves algun jugador sospechoso no dudes en reportarlo, usando el comando~n~\
														 ~y~/re id razon~w~ Puedes usar tambien ~r~/ayudarol ~w~para ver los conceptos de rol.");
					TextDrawSetString(TextTut[i], string);
					return 1;
				}
				case 14:
				{
				    DeletePVar(i, "PuedeP");
				    TextDrawHideForPlayer(i, TextTut[i]);
					for(new p = 0; p < 4; p++)
					{
						TextDrawHideForPlayer(i, TutTxt[p]);
					}
              		ClearChatbox(i, 20);
              		DeletePVar(i, "TutTime");
					PlayerInfo[i][pAccount] = 5000;
					TextDrawShowForPlayer(i, Ciudad);
					TextDrawShowForPlayer(i, Prohibida);
					Message(i, -1, "{FFFFFF}Bienvenido a Miami Roleplay, recuerda divertirte.");
					gOoc[i] = 0;         gFam[i] = 0;         gNew[i] = 0;
					PlayerInfo[i][pReg] = 1;
					PlayerInfo[i][pTut] = 1;
					DeletePVar(i, "TutStep");
					SetPosEx(i,2247.9060,-1260.8608,23.9555,269.7802,0,0);
					OnPlayerUpdateTime(i);
					TogglePlayerControllable(i, 1);
  					SetPlayerInterior(i,0);
					SetPlayerVirtualWorld(i, 0);
					SetCameraBehindPlayer(i);
					UpdatePlayerStat(i);
					SetPlayerStats(i);
					ApplyAnimation(i, "PED","WALK_civi",4.1,1,1,1,1,1); //Anix
                	SetTimerEx("DetenerAnim", 5300, false, "i", i);
	  				GameTextForPlayer(i,"Ah shit,here we go again.",4000,1);
					return 1;
				}
			}
		}
	} return 1;
}

stock IsPlayerInVehicleRadio(playerid, Float:radius)
{
    new Float:r, Float:rr, Float:rrr, Float:rc, Float:rrc, Float:rrrc;
    GetPlayerPos(playerid, r, rr, rrr);
    for(new i; i < MAX_VEHICLES; i++)
    {
        if(VehicleSpawned[i])
        {
	        GetVehiclePos(i, rc, rrc, rrrc);
    	    if(PlayerToPoint(radius,playerid,rc,rrc,rrrc))
        	{
            	return i;
        	}
       	}
    }
    return false;
}

DetectarSPAM(string[])
{
    new SSPAM,CUENTAP,CUENTAN,CUENTADP,CUENTAGB,CUENTARM,CUENTAC;
	for(SSPAM = 0; SSPAM < strlen(string); SSPAM ++)
	{
	    if(string[SSPAM] == '.') CUENTAP ++;
	    if(string[SSPAM] == '0' || string[SSPAM] == '1' || string[SSPAM] == '2' || string[SSPAM] == '3' || string[SSPAM] == '4' || string[SSPAM] == '5' || string[SSPAM] == '6' || string[SSPAM] == '7' || string[SSPAM] == '8' || string[SSPAM] == '9') CUENTAN ++;
	    if(string[SSPAM] == ':') CUENTADP ++;
	    if(string[SSPAM] == '_') CUENTAGB ++;
	    if(string[SSPAM] == ',') CUENTAC ++;
	    if(string[SSPAM] == '-') CUENTARM ++;
	}
 	if(CUENTAP >= 2 && CUENTAN >= 6) return 1;
 	if(CUENTAC >= 2 && CUENTAN >= 6) return 1;
 	if(CUENTAN >= 7) return 1;
 	if(CUENTAGB >= 2 && CUENTAN >= 5) return 1;
 	if(CUENTARM >= 1 && CUENTAN >= 6) return 1;
 	if(CUENTADP >= 1 && CUENTAN >= 6) return 1;
 	if(strfind(string, ".com", true) != -1 || strfind(string, ".com.ar", true) != -1 || strfind(string, ".org", true) != -1 || strfind(string, ".net", true) != -1 || strfind(string, ".es", true) != -1 || strfind(string, ".tk", true) != -1 || strfind(string, ".co.cc", true) != -1) return 1;
 	return 0;
}

AccionSPAM(playerid,string[])
{
	new x[150];
	format(x, sizeof(x), "{11BB11}- AntiSPAM {FFFFFF}|| {FF2200}%s(%d): {FFFFFF}%s ||", PlayerName(playerid),playerid, string); A_Info(x);
	return 1;
}

StringOther(playerid, const string[])
{
	if(IsPlayerConnected(playerid))
	{
	    if(strfind(string, "=", true) != -1)    			return 0;
	    else if(strfind(string, "\n", true) != -1) 			return 0;
	    else return 1;
	}
	return 0;
}

stock CleanScreen()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
	        ClearChatbox(i, 100);
    	}
   	}
}

function DisableVehicleAlarm(vehicleid)
{
    new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    SetVehicleParamsEx(vehicleid, engine, lights, false, doors, bonnet, boot, objective);
}

function RespawnVehicles()
{
	Loop(c,MAX_VEHICLES)
	{
	    if(VehicleSpawned[c])
		{
		    if(OwnableVehicle[c])
		    {
			    SetVehicleToRespawn(c);
			    SetVehiclePos(c, PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvLocationx],PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvLocationy],PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvLocationz]);
			    SetVehicleZAngle(c, PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvAngle]);
		    	SetVehicleParamsEx(c ,0,0,0,PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvLock],0,0,0);
		    	engineOn[c] = false;
		    	ChangeVehicleColor(c, PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvColorOne], PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvColorTwo]);
				AddCarTuning(c, VehicleSlot[c]);
	    	}
			else
			{
 				SetVehicleToRespawn(c);
   				SetVehicleParamsEx(c ,0,0,0,0,0,0,0);
	    		engineOn[c] = false;
	    		Gas[c] = GasMax;
	    		if( c >= VV)
	    		{
	    		    SetVehiclePos(c, FactionVehicleInfo[F_ID[c]][FV_ID[c]][fvPos][0], FactionVehicleInfo[F_ID[c]][FV_ID[c]][fvPos][1], FactionVehicleInfo[F_ID[c]][FV_ID[c]][fvPos][2]);
	    		    SetVehicleZAngle(c, FactionVehicleInfo[F_ID[c]][FV_ID[c]][fvPos][3]);
	    		}
			}
		}
	}
	GlobalMsg(COLOR_GREEN, "Respawn general terminado.");
	return 1;
}

function RespawnVehicle(c)
{
	if(OwnableVehicle[c])
	{
	    SetVehicleToRespawn(c);
	    SetVehiclePos(c, PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvLocationx],PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvLocationy],PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvLocationz]);
	    SetVehicleZAngle(c, PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvAngle]);
	    SetVehicleParamsEx(c ,0,0,0,PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvLock],0,0,0);
	    engineOn[c] = false;
	    ChangeVehicleColor(c, PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvColorOne], PlayerVehicleInfo[VehicleOwner[c]][VehicleSlot[c]][pvColorTwo]);
	    AddCarTuning(c, VehicleSlot[c]);
	}
	else
	{
        SetVehicleToRespawn(c);
        SetVehicleParamsEx(c ,0,0,0,0,0,0,0);
	    engineOn[c] = false;
	    Gas[c] = GasMax;
	    if( c >= VV)
   		{
	    	SetVehiclePos(c, FactionVehicleInfo[F_ID[c]][FV_ID[c]][fvPos][0], FactionVehicleInfo[F_ID[c]][FV_ID[c]][fvPos][1], FactionVehicleInfo[F_ID[c]][FV_ID[c]][fvPos][2]);
		    SetVehicleZAngle(c, FactionVehicleInfo[F_ID[c]][FV_ID[c]][fvPos][3]);
   		}
	}
	return 1;
}

AddCarTuning(vehicleid, slot)
{
    if(PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvWheel] > 0)      AddVehicleComponent(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvWheel]);
    if(PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvHydraulics] > 0) AddVehicleComponent(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvHydraulics]);
    if(PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvNitro] > 0)      AddVehicleComponent(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvNitro]);
    if(PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvSideskirt] > 0)
	{
        AddVehicleComponent(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvSideskirt]);
        new skirt = PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvSideskirt];
        // X-FLOW
        if(skirt == 1030) AddVehicleComponent(vehicleid, 1031);
        else if(skirt == 1039) AddVehicleComponent(vehicleid, 1041);
        else if(skirt == 1048) AddVehicleComponent(vehicleid, 1052);
        else if(skirt == 1070) AddVehicleComponent(vehicleid, 1072);
        else if(skirt == 1057) AddVehicleComponent(vehicleid, 1063);
        else if(skirt == 1093) AddVehicleComponent(vehicleid, 1095);
        // ALIEN
        if(skirt == 1026) AddVehicleComponent(vehicleid, 1027);
        else if(skirt == 1036) AddVehicleComponent(vehicleid, 1040);
        else if(skirt == 1047) AddVehicleComponent(vehicleid, 1051);
        else if(skirt == 1069) AddVehicleComponent(vehicleid, 1071);
        else if(skirt == 1056) AddVehicleComponent(vehicleid, 1062);
        else if(skirt == 1094) AddVehicleComponent(vehicleid, 1090);
	}
    if(PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvRoof] > 0)      		AddVehicleComponent(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvRoof]);
    if(PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvSpoiler] > 0)      	AddVehicleComponent(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvSpoiler]);
    if(PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvRearBumper] > 0)    	AddVehicleComponent(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvRearBumper]);
    if(PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvFrontBumper] > 0)   	AddVehicleComponent(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvFrontBumper]);
    if(PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvExhaust] > 0)      	AddVehicleComponent(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvExhaust]);
    if(PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvPaintjob] > 0)     	ChangeVehiclePaintjob(vehicleid, PlayerVehicleInfo[VehicleOwner[vehicleid]][slot][pvPaintjob]-1);
}

stock IsLocolowVehicle(veh)
{
	new model = GetVehicleModel(veh);
    switch(model)
    {
        case 412,534,535,536,566,567,576: return 1;
    }
    return 0;
}

stock IsWAAVehicle(veh)
{
    new model = GetVehicleModel(veh);
    switch(model)
    {
        case 558,559,560,561,562,565: return 1;
    }
    return 0;
}

stock BikeModel(playerid)
{
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
    switch(model)
    {
		case 509,481,510,462,448,581,522,461,521,523,463,586,468,471: return 1;
	}
	return 0;
}

stock Boats(veh)
{
    new model = GetVehicleModel(veh);
    switch(model)
	{
	    case 484,454,493,446,452,487: return 1;
 	}
	return 0;
}

function SafeGivePlayerWeapon(playerid, weaponid, ammo)
{
	NoAntiCheat[playerid] = 2;
	new slot = GetWeaponSlot(weaponid);
	if(ScriptWeapons[playerid][slot] == weaponid) ScriptAmmo[playerid][slot] += ammo;
	else if(ScriptWeapons[playerid][slot] != weaponid) ScriptAmmo[playerid][slot] = ammo;
	ScriptWeapons[playerid][slot] = weaponid;
	GivePlayerWeapon(playerid, weaponid, ammo);
    return 1;
}

function SafeResetPlayerWeapons(playerid)
{
	ResetPlayerWeapons(playerid);
	for(new i = 0; i < 12; i++)
	{
	    ScriptWeapons[playerid][i] = 0;
	    ScriptAmmo[playerid][i] = 0;
 	}
	return 1;
}

stock GetWeaponSlot(weaponid)
{
	new slot;
	switch(weaponid)
	{
		case 0,1:		slot = 0;
		case 2..9:		slot = 1;
		case 10..15: 	slot = 10;
		case 16..18,39: slot = 8;
		case 22..24: 	slot = 2;
		case 25..27: 	slot = 3;
		case 28,29,32:	slot = 4;
		case 30,31: 	slot = 5;
		case 33,34: 	slot = 6;
		case 35..38: 	slot = 7;
		case 40: 		slot = 12;
		case 41..43: 	slot = 9;
		case 44..46: 	slot = 11;
	}
	return slot;
}

Ayuda(playerid, tip)
{
	switch(tip)
	{
		case 0:
		{
		    ClearChatbox(playerid, 10);
		    if(Team_LSPD(playerid))
		    {
		        Message(playerid, -1, "{FFFFFF}Departamento de Policía");
		        Message(playerid, -1, "{0098FF}/radio - /r - /d - (/m)egafono - /su - /duty /esposar - /ta /revisarcarga /quitarcarga /revisarcasa /pinchar");
		        Message(playerid, -1, "{0098FF}/quitar - /multar - /drag - /bk(c) - /tlc - /miranda - (/bar)rera - /qb(s) -  /placa - /expediente /bpinchar");
				Message(playerid, -1, "{0098FF}/ant - /limpiar - /sospechosos - /vercinturon - /remolcar - /allanarcasa - /incautar - /darlicencia");
				return 1;
		    }
		    else if(Team_SAMUR(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Equipo SAMUR");
                Message(playerid, -1, "{EC3226}/reanimar /curar /diagnostico /pcinfo /operar /tlc /duty /sacarsangre /darseguro");
                return 1;
			}
			else if(Team_Mecanicos(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Taller de Mecánicos");
                Message(playerid, -1, "{72DDC0} /mm /duty /changeit /subirbarras /bajarbarras");
                return 1;
			}
			else if(Pandilleros(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Pandilleros");
                Message(playerid, -1, "{72DDC0}/robar /lockhq /avastecerme /terminar /venderdrogas");
                return 1;
			}
			else if(Mafioso(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Mafiosos");
                Message(playerid, -1, "{FFDD11}/robarpieza /cerrajear /atar /vendar /robarbanco /fabricar /venderarma /lockhq /changeit");
                return 1;
			}
			else if(Hitman(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Hitman");
                Message(playerid, -1, "{FFDD11}/hits /encontrar /disfraz /amascara /atar /vendar");
                return 1;
			}
			else if(Journalist(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}San Andreas Radio Televisión");
                Message(playerid, -1, "{00BB22}(/n)oticias /entrevista /centrevista");
				return 1;
			}
			else if(Presidente(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Presidente");
			    Message(playerid, -1, "{FFDD11}(/gob)ierno /impuesto /fondoestado");
			    return 1;
			}
			else if(Gobierno(playerid) && !Presidente(playerid))
   			{
   			    Message(playerid, -1, "{FFFFFF}Gobierno");
   			    Message(playerid, -1, "{ECE826}(/gob)ierno");
   			    return 1;
		    }
			else if(Team_NG(playerid))
			{
		        Message(playerid, -1, "{FFFFFF}Equipo Militar");
		        Message(playerid, -1, "{72DD9B}(/r)adio /d /m /gob /equipo /esposar /ta /multar /pinchar /bpinchar /licencia /reanimar");
		        Message(playerid, -1, "{72DD9B}/quitar /controlcelda /vercinturon /automatico /misil /revisarcarga /quitarcarga /bk(c)");
		        return 1;
			}
			else if(Terroristas(playerid))
			{
   				Message(playerid, -1, "{FFFFFF}Terroristas");
			    Message(playerid, -1, "{FFDD11}/marcar /activarbomba /atar /vendar /equipo /duty /radio /r /disfraz [LIDER] /atacar");
			    return 1;
			}
			else if(GetPlayerFactionType(playerid) == 1)
			{
			    Message(playerid, -1, "{FFFFFF}Mafiosos");
                Message(playerid, -1, "{FFDD11}/robarpieza /cerrajear /atar /vendar /abrirhq /changeit");
                return 1;
			}
			else if(GetPlayerFactionType(playerid) == 2)
			{
			    Message(playerid, -1, "{FFFFFF}Pandilleros");
                Message(playerid, -1, "{72DDC0}/robar /abrirhq /avastecerme /terminar /venderdrogas");
                return 1;
			}
		}
		case 1:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "{D3FF8D}Ayuda - Chat");
		    Message(playerid, COLOR_WHITE, "{FFFFFF}Comandos IC:  (/g)ritar (/s)usurrar /me /do (/r)adio");
		    Message(playerid, COLOR_WHITE, "{FFFFFF}Comandos OOC: /b (/w)hisper (/f)accion");
		    return 1;
		}
		case 2:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda General]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: [ADMINISTRACIÓN] /re /duda /solicitaradmin /misw");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /cuenta /subirnivel");
			Message(playerid, COLOR_GRAD2, "Comandos disponibles: /pagar /hora /id /comer /cfumar /cropa /licencias /acciones /ven /seguro");
			Message(playerid, COLOR_GRAD2, "Comandos disponibles: /ap /cp /apgarage /cpgarage (/w)hisper /tognews /togooc /togfam /togb /togphone");
			Message(playerid, COLOR_GRAD2, "Comandos disponibles: /eject /usardrogas /llenar /admins /moneda /dar /drogas /ayudarol /pasar");
			return 1;
		}
		case 3:
		{
		    ClearChatbox(playerid, 10);
		    if(PlayerInfo[playerid][pLeader] < 1) return Message(playerid, COLOR_GRAD2, "¡No eres líder!");
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Líder]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /contratar /despedir /giverank");
		    return 1;
		}
		case 4:
		{
		    ClearChatbox(playerid, 10);
		    if(PlayerInfo[playerid][pJob] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes trabajo!");
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Trabajo]=-");
		    switch(PlayerInfo[playerid][pJob])
		    {
		        case 1,3:	{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /ruta"); return 1; }
		        case 2:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /dbarrer"); return 1; }
		        case 4:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /vendertelefono"); return 1; }
		        case 5:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /robar"); return 1; }
				case 6:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /vpizza /tomarpizza [En la Cocina]"); return 1; }
				case 7:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /vermapa /pescar /peces"); return 1; }
				case 8:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /cancelarentrega"); return 1; }
				case 9:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /equipo /dutytaxi /clientes /tarifa"); return 1; }
				case 10:    { Message(playerid, COLOR_GRAD2, "Comandos disponibles: /cosechar /cobrarcosecha /micosecha"); return 1; }
				case 11:    { Message(playerid, COLOR_GRAD2, "Comandos disponibles: /ruta"); return 1; }
            }
		}
		case 5:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Teléfono]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /iphone /colgar /altavoz");
		    return 1;
		}
		case 6:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Casa]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /abrir /comprarcasa /vendercasa /cinfo /renta /desalojar /cajafuerte");
			Message(playerid, COLOR_GRAD2, "Comandos disponibles: /guarardinero /garma /sarma /gbodega /sbodega /timehouse /ofrecercasa");
		    return 1;
		}
		case 7:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Vehiculo]=-");
            Message(playerid, COLOR_GRAD2, "Comandos disponibles: /v /venderveh(2) /cvehiculo(2) /darllaves /quitarllaves");
            return 1;
		}
		case 8:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Banco]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /depositar /sacar /transferir /balance /darcheque /cobrarcheques /vercheques");
		    return 1;
		}
		case 9:
		{
		    ClearChatbox(playerid, 10);
		    if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GRAD2, "¡Usted no es premium!");
		    Message(playerid, -1, "{00E7FF}-=[Ayuda Premium]=-");
		    if(PlayerInfo[playerid][pDonateT] == 1) Message(playerid, COLOR_GRAD2, "/v seguro(2) /v estacionar(2) /fixcar /traercarro");
			else if(PlayerInfo[playerid][pDonateT] == 2) Message(playerid, COLOR_GRAD2, "/v seguro(2) /v estacionar(2) /fixcar /traercarro /cropa /apvip /cpvip");
			else if(PlayerInfo[playerid][pDonateT] == 3) Message(playerid, COLOR_GRAD2, "/v seguro(2,3) /v estacionar(2,3) /fixcar /traercarro /cropa /apvip /cpvip (Casa 2: /abrirvip)");
			else if(PlayerInfo[playerid][pDonateT] == 4) Message(playerid, COLOR_GRAD2, "/v seguro(2,3,4) /v estacionar(2,3,4) /fixcar /traercarro /cropa /apvip /cpvip (Casa 2: /abrirvip)");
      		return 1;
		}
		case 10:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Negocio]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /comprarnegocio /vendernegocio /sganancias /binfo /extorcion /qextorcion [Extorcion]/recaudar");
		    return 1;
		}
	}
	return 0;
}

MessageEx(playerid_1, playerid_2, const color, const string[])
{
	Message(playerid_1, color, string);
	Message(playerid_2, color, string);
}

RadioMsg(const channel, const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i) && RadioOn[i])
			if(PFrecuencia[i] == channel) SendClientMessage(i, 0xDFD575FF, string);
}

ArmarPaintBall(playerid)
{
	SetHP(playerid, 100);
	SetPlayerArmour(playerid, 100);
 	SafeGivePlayerWeapon(playerid, 4, 1);
  	SafeGivePlayerWeapon(playerid, 24, 250);
   	SafeGivePlayerWeapon(playerid, 25, 200);
    SafeGivePlayerWeapon(playerid, 29, 500);
    SafeGivePlayerWeapon(playerid, 31, 500);
}

function PonerColor(playerid)	{	SetPlayerColor(playerid, Color[playerid]);	}

RobarBanco(playerid)
{
	new string[128];
	TogglePlayerControllable(playerid, 0);
	new timer = SetTimerEx("RobandoBanco", 60000, false, "i", playerid);
	SetPVarInt(playerid, "TimerRobo", timer);
    format(string,sizeof(string), "* %s toma una bolsa y empieza a guardar el dinero de la bodega.", PlayerName(playerid));
    ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
    format(string,sizeof(string), "* %s (( Guardando Guardando ))", PlayerName(playerid));
    ProxDetectorEx(20.0, playerid, string, 0xB6DB22FF);
    Message(playerid, COLOR_GRAD2, "¡Debes esperar 60 segundos a que se llene la bolsa!");
	ProxDetectorEx(20.0, playerid, "* Banco (( Bip Bip Bip ))", 0xB6DB22FF);
	ProxDetector(30.0, playerid, "¡La alarma contra robos ha sido activada, ya viene la policia!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	SendRadioMessage(1, TEAM_RADIO_COLOR, "ATENCIÓN: Se informa a todas las unidades que el Banco Central de LS esta siendo robado.");
}

function RobandoBanco(playerid)
{
	new string[128];
    new robmoney = random(50000);
    Earn(playerid, 50000+robmoney);
    TogglePlayerControllable(playerid, 1);
	format(string, sizeof(string), "¡Han robado $%d, ahora salgan de ahi antes de que llegue la policia!", robmoney);
 	Message(playerid, COLOR_GRAD2, string);
 	SaveRobs();
 	return 1;
}

function Pescando(playerid)
{
	new string[128], peces;
	peces = random(5);
	DeletePVar(playerid, "Fishing");
	format(string, sizeof(string), "* %s empieza a alzar las redes al barco y separa los peces.", PlayerName(playerid));
	ProxDetectorEx(25.0, playerid, string, COLOR_PURPLE);
	format(string, sizeof(string), "* Has atrapado %d peces.", peces+5);
	Message(playerid, COLOR_WHITE, string);
	PlayerInfo[playerid][pPeces] += (peces+5);
	return 1;
}

function SendPBMessage(type, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PaintballType[i] == type)
			{
				Message(i, color, string);
			}
		}
	}
}

DialogoEstado(playerid)
{
	new string[80], SituacionEs[14];
	switch(GetPVarInt(playerid, "EstadoON"))
	{
	    case 0: SituacionEs = "Habilitar";
	    case 1: SituacionEs = "Deshabilitar";
 	}
	format(string, sizeof(string), "Estado: %s\nAccion: %s", PlayerInfo[playerid][pEstado], SituacionEs);
	ShowPlayerDialog(playerid, DIALOG_ESTADO, DIALOG_STYLE_LIST, "Estado", string, "Seleccionar", "Salir");
	return 1;
}

function DestroyProgg(playerid)
{
    DestroyProgressBar(Cargando[playerid]);
	Cargando[playerid] = INVALID_BAR_ID;
	TogglePlayerControllable(playerid, 1);
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	if(GetPVarInt(playerid, "UsingBelt") == 0)
	{
	    new Float:X, Float:Y, Float:Z, Float:Speed, Float:Vida;
 		GetPlayerHealth(playerid, Vida);	GetVehicleVelocity(vehicleid, X, Y, Z);
		Speed = floatmul(floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)), floatpower(Z, 2))), 200.0);
		if(Speed > 10 && Speed < 20)        { SetHP(playerid, Vida-2); return 1; }
		else if(Speed > 21 && Speed < 50)	{ SetHP(playerid, Vida-5); return 1; }
		else if(Speed > 51 && Speed < 100)	{ SetHP(playerid, Vida-9); return 1; }
		else if(Speed > 101 && Speed < 200)	{ SetHP(playerid, Vida-12); return 1; }
		else if(Speed > 201 && Speed < 280)	{ SetHP(playerid, Vida-15); return 1; }
	}
	return 0;
}

function Remolcar(playerid)
{
    new idcarx = GetPlayerVehicleID(playerid);
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
		if(GetVehicleModel(idcarx) == 525)
		{
			new Float:pX,Float:pY,Float:pZ;
			GetPlayerPos(playerid,pX,pY,pZ);
			new Float:vX,Float:vY,Float:vZ;
			new Found=0;
			new vid=0;
			while((vid<MAX_VEHICLES)&&(!Found))
			{
			    vid++;
			    if(VehicleSpawned[vid])
			    {
					GetVehiclePos(vid,vX,vY,vZ);
					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
					{
						Found=1;
 						if(IsTrailerAttachedToVehicle(idcarx))
 						{
   							DetachTrailerFromVehicle(idcarx);
     					}
	        			else
    	      			{
							AttachTrailerToVehicle(vid,idcarx);
						}
					}
				}
			}
			if(!Found)
			{
				Message(playerid,COLOR_GRAD2,"No hay ningún vehículo cerca!");
			}
		} else Message(playerid, COLOR_GRAD2, "¡No puedes remolcar con este vehículo!");
	} else Message(playerid, COLOR_GRAD2, "¡No estas conduciendo ningun vehículo!");
	return 1;
}

RemoveObjects(playerid)
{

/// Deposito By Gus
	RemoveBuildingForPlayer(playerid, 13249, 857.2109, -609.9688, 17.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 13484, 738.3984, -553.9844, 21.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 775.3672, -646.9063, 14.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 780.8047, -643.4922, 15.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 807.2344, -643.7734, 15.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 835.6250, -643.5000, 15.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 808.5625, -612.9531, 15.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 806.7500, -612.6016, 15.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 780.0859, -594.4219, 15.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 709, 846.1328, -628.0078, 16.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 852.2031, -609.8359, 25.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1689, 846.4766, -609.1484, 25.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1691, 854.8906, -600.3047, 24.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 838.0156, -606.3359, 17.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 835.8672, -601.0313, 15.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 874.8125, -586.7969, 16.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 12981, 857.2109, -609.9688, 17.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1691, 863.3672, -600.3047, 24.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 866.0859, -602.9766, 25.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 876.3750, -599.0234, 17.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 867.9453, -589.0547, 16.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 866.8516, -573.1875, 16.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 859.2656, -573.8125, 16.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 848.8203, -574.6328, 15.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 13452, 915.1641, -525.5781, 40.1797, 0.25);

/// InDriver By Gus
    RemoveBuildingForPlayer(playerid, 5024, 1748.8438, -1883.0313, 14.1875, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1774.7578, -1901.5391, 16.3750, 0.25);

/// Banco ByJhon
	RemoveBuildingForPlayer(playerid, 5882, 1316.578, -984.789, 86.890, 0.250);
	RemoveBuildingForPlayer(playerid, 5884, 1316.578, -984.789, 86.890, 0.250);
/// Taller ByJhon
	RemoveBuildingForPlayer(playerid, 5214, 2193.5000, -2266.6172, 17.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3686, 2169.1172, -2276.5859, 15.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3686, 2195.0859, -2216.8438, 15.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3686, 2220.7813, -2261.0547, 15.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2179.9219, -2334.8516, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2165.2969, -2317.5000, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2193.2578, -2286.2891, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2183.1719, -2237.2734, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2174.6406, -2215.6563, 15.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2193.0625, -2196.6406, 15.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 5304, 2197.1875, -2325.5391, 27.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 2140.4219, -2301.9688, 12.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 5305, 2198.8516, -2213.9219, 14.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3747, 2234.3906, -2244.8281, 14.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3747, 2226.9688, -2252.1406, 14.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3747, 2219.4219, -2259.5234, 14.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3747, 2212.0938, -2267.0703, 14.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3747, 2204.6328, -2274.4141, 14.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2179.9219, -2334.8516, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 5126, 2197.1875, -2325.5391, 27.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2165.2969, -2317.5000, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2184.6250, -2308.3281, 17.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 2140.4219, -2301.9688, 12.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2202.8047, -2290.1016, 17.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3585, 2234.4297, -2287.3906, 14.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3578, 2165.0703, -2288.9688, 13.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2193.2578, -2286.2891, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3630, 2217.5859, -2284.6641, 15.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3585, 2231.8359, -2284.6406, 14.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3627, 2169.1172, -2276.5859, 15.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2131.3281, -2274.6484, 16.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2131.3438, -2274.6641, 14.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3569, 2204.6328, -2274.4141, 14.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3630, 2227.3828, -2274.7891, 15.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2126.8516, -2270.4453, 14.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2126.8359, -2270.4297, 16.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 5129, 2148.7813, -2269.6406, 17.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 5130, 2139.8594, -2271.7813, 16.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 3631, 2140.0391, -2271.5391, 14.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 5268, 2143.3047, -2267.4531, 20.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3569, 2212.0938, -2267.0703, 14.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2234.1094, -2269.5469, 16.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2234.1250, -2269.5703, 14.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 5127, 2193.5000, -2266.6172, 17.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3631, 2149.1406, -2266.9063, 12.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 5260, 2161.3438, -2264.9141, 14.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 3631, 2161.8516, -2264.0938, 16.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 3631, 2163.3750, -2262.6875, 16.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 3627, 2220.7813, -2261.0547, 15.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3569, 2219.4219, -2259.5234, 14.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2142.9141, -2256.3359, 13.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2144.2969, -2258.1484, 13.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3631, 2142.3047, -2255.8984, 12.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 5262, 2152.7109, -2256.7813, 15.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2158.0078, -2257.2656, 16.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2167.6641, -2256.7813, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2167.6641, -2256.7813, 13.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2167.6641, -2256.7813, 14.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2167.8047, -2257.3516, 16.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2167.1719, -2257.1250, 16.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2170.0781, -2257.6641, 16.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2169.3516, -2258.0703, 17.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2168.8281, -2257.5234, 17.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2140.3828, -2254.1016, 13.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2150.6641, -2251.5547, 12.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2150.2813, -2250.8516, 12.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2150.6953, -2252.9141, 16.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2149.8125, -2253.3672, 16.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 5261, 2152.2578, -2239.4609, 14.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 5269, 2146.3750, -2248.7969, 14.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2153.7734, -2253.0859, 14.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2154.5078, -2254.4766, 14.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2158.5703, -2251.0156, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2158.0469, -2250.5078, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 5132, 2163.2891, -2251.6094, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 5259, 2168.8438, -2246.7813, 13.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3578, 2194.4766, -2242.8750, 13.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2217.2188, -2250.3594, 16.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 3569, 2226.9688, -2252.1406, 14.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3569, 2234.3906, -2244.8281, 14.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2183.1719, -2237.2734, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2160.5625, -2234.8047, 14.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2160.5781, -2234.8203, 13.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3578, 2235.1641, -2231.8516, 13.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2174.6406, -2215.6563, 15.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 3627, 2195.0859, -2216.8438, 15.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 5244, 2198.8516, -2213.9219, 14.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2193.0625, -2196.6406, 15.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 3630, 2242.5156, -2289.0547, 15.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 3564, 2243.4766, -2278.0938, 14.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2249.1875, -2281.2266, 14.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2249.1719, -2281.2031, 16.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 3585, 2246.4297, -2269.3672, 14.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3630, 2261.6016, -2270.0313, 15.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2240.6094, -2266.6719, 14.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2240.5938, -2266.6563, 16.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 3631, 2243.1250, -2258.4531, 14.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2245.1172, -2260.7031, 15.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2243.7344, -2258.8906, 15.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 3564, 2262.2813, -2259.2891, 14.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3585, 2252.7031, -2263.0859, 14.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3576, 2253.5469, -2253.9375, 15.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2246.7031, -2251.8906, 14.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2241.2031, -2256.6563, 15.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2240.7813, -2240.8984, 16.3672, 0.25);
/// Trailero By Gus
	RemoveBuildingForPlayer(playerid, 17349, -542.0078, -522.8438, 29.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 17019, -606.0313, -528.8203, 30.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -541.4297, -561.2266, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 17012, -542.0078, -522.8438, 29.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -513.7578, -561.0078, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -503.6172, -540.5313, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -502.6094, -528.6484, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -502.1172, -521.0313, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -502.4063, -513.0156, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -553.6875, -481.6328, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -554.4531, -496.1797, 25.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -537.0391, -469.1172, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -516.9453, -496.6484, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -503.1250, -509.0000, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 17020, -475.9766, -544.8516, 28.1172, 0.25);
//____________RentBike
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 521.4531, -1251.4844, 19.0938, 0.25);
	//______Grotti___________
	RemoveBuildingForPlayer(playerid, 6357, 505.0547, -1269.9375, 28.6875, 0.25);
	// CNN2 ByJhon
    RemoveBuildingForPlayer(playerid, 4026, 1497.7969, -1543.7109, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 4218, 1497.7031, -1546.6172, 43.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 4016, 1497.7969, -1543.7109, 17.5547, 0.25);

	// Parking Frente a LSMD
	RemoveBuildingForPlayer(playerid, 5929, 1230.8906, -1337.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1341.8516, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1328.0938, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1356.2109, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1374.6094, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1356.5547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1374.6094, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1356.5547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1317.7422, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 5812, 1230.8906, -1337.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1317.7422, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1300.9219, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1300.9219, 12.2969, 0.25);
//
    RemoveBuildingForPlayer(playerid, 13862, 359.2500, -1125.8281, 80.8516, 0.25); //Premium Juliet
    RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25); //Graffiti Ayunta
    RemoveBuildingForPlayer(playerid, 1266, 1805.0234, -1692.4453, 25.1484, 0.25); //Parqueadero
	RemoveBuildingForPlayer(playerid, 1260, 1805.0234, -1692.4453, 25.1484, 0.25); //Parqueadero
	RemoveBuildingForPlayer(playerid, 1308, 1320.7734, -912.2344, 36.8438, 0.25); //24/7 Vinewood
	//Hospital
	RemoveBuildingForPlayer(playerid, 1440, 1141.9844, -1346.1094, 13.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 617, 1178.6016, -1332.0703, 12.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1177.7344, -1315.6641, 13.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1190.7734, -1320.8594, 15.9453, 0.25);
	//Restaurante Unity
	RemoveBuildingForPlayer(playerid, 4976, 1931.0000, -1871.3906, 15.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1904.3750, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1909.6563, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1914.9297, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1920.1953, -1879.9531, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1925.4609, -1879.9609, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1930.7188, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1946.4766, -1877.1094, 11.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 4848, 1931.0000, -1871.3906, 15.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1931.8750, -1863.4609, 16.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1915.7422, -1863.4609, 16.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1952.0313, -1862.9297, 11.5156, 0.25);
	// Ayuntamiento
	RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1407.1953, -1749.3125, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1405.2344, -1821.1172, 13.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1417.9766, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1405.5781, -1831.6953, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1447.1016, -1832.5000, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1456.3984, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1464.0938, -1831.8828, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1504.8438, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1499.0469, -1832.2734, 12.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1512.9453, -1832.3516, 13.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1404.9141, -1765.2656, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1415.3125, -1748.5625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1429.5313, -1748.4219, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1438.0313, -1747.9375, 13.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1447.9063, -1748.2266, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1516.0000, -1748.6016, 13.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1549.5313, -1832.3125, 12.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1555.6641, -1830.5938, 13.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1554.8203, -1816.1563, 13.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1553.2578, -1764.8125, 12.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1533.2656, -1749.0234, 12.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1522.1641, -1748.5703, 13.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1553.7031, -1747.9375, 13.4063, 0.25);
	// SAEM
	RemoveBuildingForPlayer(playerid, 5156, 2838.0391, -2423.8828, 10.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 5159, 2838.0313, -2371.9531, 7.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 5160, 2829.9531, -2479.5703, 5.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 5161, 2838.0234, -2358.4766, 21.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 5162, 2838.0391, -2423.8828, 10.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 5163, 2838.0391, -2532.7734, 17.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 5164, 2838.1406, -2447.8438, 15.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 5165, 2838.0313, -2520.1875, 18.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 5166, 2829.9531, -2479.5703, 5.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 5167, 2838.0313, -2371.9531, 7.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3689, 2685.3828, -2366.0547, 19.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 3707, 2716.2344, -2452.5938, 20.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3707, 2720.3203, -2530.9141, 19.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 3690, 2685.3828, -2366.0547, 19.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 3710, 2788.1563, -2417.7891, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3710, 2788.1563, -2455.8828, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3710, 2788.1563, -2493.9844, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3709, 2660.4766, -2429.2969, 17.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3709, 2639.5469, -2429.2969, 17.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3709, 2618.8594, -2429.2969, 17.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3708, 2720.3203, -2530.9141, 19.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 3708, 2716.2344, -2452.5938, 20.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2771.0703, -2372.4453, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2789.2109, -2377.6250, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2774.7969, -2386.8516, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2771.0703, -2520.5469, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2774.7969, -2534.9531, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3746, 2814.2656, -2356.5703, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3746, 2814.2656, -2521.4922, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3758, 2615.1094, -2464.6172, 3.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3758, 2748.0156, -2571.5938, 3.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3758, 2702.3984, -2324.2578, 3.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 5335, 2829.9531, -2479.5703, 5.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 5336, 2829.9531, -2479.5703, 5.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3770, 2795.8281, -2394.2422, 14.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3770, 2746.4063, -2453.4844, 14.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 5352, 2838.1953, -2488.6641, 29.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3753, 2615.1094, -2464.6172, 3.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3623, 2618.8594, -2429.2969, 17.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2674.5234, -2557.4922, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1306, 2669.9063, -2518.6641, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2674.2656, -2508.3047, 16.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2713.0625, -2508.3047, 16.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1315, 2672.5938, -2506.8594, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1315, 2680.8594, -2493.0781, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1635, 2704.3672, -2487.8672, 20.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1306, 2742.2656, -2481.5156, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2696.0234, -2474.8594, 16.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2675.5703, -2466.8516, 16.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 5326, 2661.5156, -2465.1406, 20.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1306, 2669.9063, -2447.2891, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2696.0234, -2446.6250, 16.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3623, 2639.5469, -2429.2969, 17.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3623, 2660.4766, -2429.2969, 17.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2629.2109, -2419.6875, 12.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2649.8984, -2419.6875, 12.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 1315, 2686.7578, -2416.6250, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2663.5078, -2409.5625, 16.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1315, 2672.5938, -2408.2500, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1306, 2742.2656, -2416.5234, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3578, 2639.1953, -2392.8203, 13.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3578, 2663.8359, -2392.8203, 13.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1306, 2669.9063, -2394.5078, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2692.6797, -2387.4766, 16.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2708.4063, -2391.5234, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3753, 2748.0156, -2571.5938, 3.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2774.7969, -2534.9531, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2771.0703, -2520.5469, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2501.8359, 14.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3624, 2788.1563, -2493.9844, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2486.9609, 14.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 3578, 2747.0078, -2480.2422, 13.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2463.8203, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2773.3438, -2479.9688, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3624, 2788.1563, -2455.8828, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3626, 2746.4063, -2453.4844, 14.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2448.4766, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2773.3438, -2443.1719, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2744.5703, -2436.1875, 13.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2744.5703, -2427.3203, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2425.3516, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2774.7969, -2386.8516, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2771.0703, -2372.4453, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2783.7813, -2410.2109, 14.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3624, 2788.1563, -2417.7891, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2789.2109, -2377.6250, 15.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2501.8359, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2797.5156, -2486.8281, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2486.9609, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2463.8203, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2797.5156, -2448.3438, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2448.4766, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2425.3516, 14.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2791.9531, -2410.2109, 14.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 3761, 2797.5156, -2410.0781, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3626, 2795.8281, -2394.2422, 14.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3620, 2814.2656, -2521.4922, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 5157, 2838.0391, -2532.7734, 17.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 5154, 2838.1406, -2447.8438, 15.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3724, 2838.1953, -2488.6641, 29.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3620, 2814.2656, -2356.5703, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 5155, 2838.0234, -2358.4766, 21.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3724, 2838.1953, -2407.1406, 29.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3753, 2702.3984, -2324.2578, 3.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2762.7578, -2333.3828, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 5158, 2837.7734, -2334.4766, 11.9922, 0.25);
	// Unity Gasolinera y Bar
	RemoveBuildingForPlayer(playerid, 4025, 1777.8359, -1773.9063, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 4215, 1777.5547, -1775.0391, 36.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 4019, 1777.8359, -1773.9063, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 5535, 1918.8516, -1776.3281, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1524, 1910.1641, -1779.6641, 18.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 5681, 1921.4844, -1778.9141, 18.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 5409, 1918.8516, -1776.3281, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1778.4531, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1774.3125, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 955, 1928.7344, -1772.4453, 12.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1771.3438, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1676, 1941.6563, -1767.2891, 14.1406, 0.25);
	// LSPD Exterior
	RemoveBuildingForPlayer(playerid, 1266, 1538.5234, -1609.8047, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1538.5234, -1609.8047, 19.8438, 0.25);
	// Construccion Hospital
	RemoveBuildingForPlayer(playerid, 5967, 1259.4375, -1246.8125, 17.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1388, 1238.3750, -1258.2813, 57.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1391, 1238.3750, -1258.2734, 44.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 5857, 1259.4375, -1246.8125, 17.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 1284.1797, -1239.6406, 12.9141, 0.25);
	//Hitman
	RemoveBuildingForPlayer(playerid, 17349, -542.0078, -522.8438, 29.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 17019, -606.0313, -528.8203, 30.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -541.4297, -561.2266, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 17012, -542.0078, -522.8438, 29.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -513.7578, -561.0078, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -503.6172, -540.5313, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -502.6094, -528.6484, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -502.1172, -521.0313, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -502.4063, -513.0156, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -620.4141, -490.5078, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -619.6250, -473.4531, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -553.6875, -481.6328, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -554.4531, -496.1797, 25.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -537.0391, -469.1172, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -516.9453, -496.6484, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -503.1250, -509.0000, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 17020, -475.9766, -544.8516, 28.1172, 0.25);
	// Al Qaeda
	RemoveBuildingForPlayer(playerid, 3295, 1099.1172, -358.4766, 77.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 3347, 1114.2969, -353.8203, 72.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 3347, 1107.5938, -358.5156, 72.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 3376, 1070.4766, -355.1641, 77.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 3404, 1019.3828, -300.2422, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1012.2891, -282.5391, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1023.4219, -279.9063, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1503, 1019.3203, -282.7891, 73.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1047.3125, -280.3359, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1059.2266, -281.2656, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1082.9922, -283.6797, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1042.8203, -410.4141, 62.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1040.8281, -434.0625, 53.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1007.7969, -385.0078, 71.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 948.9141, -387.3594, 61.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 960.1406, -390.7422, 64.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 926.3984, -380.3750, 55.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3425, 1015.0938, -361.1016, 84.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1007.6719, -361.6250, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1007.6250, -349.8984, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1007.5234, -326.4453, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1007.4766, -314.7188, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1007.4297, -302.9922, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1007.3828, -291.2578, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3402, 1019.3828, -300.2422, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1083.6641, -368.5313, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3375, 1070.4766, -355.1641, 77.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 1093.1953, -299.2969, 73.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 13206, 1072.9531, -289.1797, 72.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 1093.3047, -293.7813, 73.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 1096.1563, -291.2656, 73.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 656, 1096.6250, -294.4141, 72.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 1099.1172, -358.4766, 77.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 3175, 1107.5938, -358.5156, 72.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1107.1172, -368.5703, 73.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3253, 1106.6406, -319.8750, 73.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 3250, 1110.2422, -298.9453, 73.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 1101.6719, -291.3750, 73.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 1107.2656, -291.4609, 73.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 3175, 1114.2969, -353.8203, 72.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 1112.7813, -291.5703, 73.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 1118.3750, -291.6641, 73.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 1121.0234, -294.5234, 73.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 1120.9297, -300.1172, 73.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 1120.8203, -305.6328, 73.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1042.9688, -374.4766, 72.8906, 0.25);
	// Licoreria
	RemoveBuildingForPlayer(playerid, 5551, 2140.5156, -1735.1406, 15.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 5633, 2089.3594, -1643.9297, 18.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 5410, 2140.5156, -1735.1406, 15.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2173.2344, -1720.8203, 13.7031, 0.25);
	// Bowling
	RemoveBuildingForPlayer(playerid, 4070, 1719.7422, -1770.7813, 23.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1700.8516, -1778.3984, 12.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.3047, -1794.4297, 12.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.1484, -1753.2266, 12.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.2578, -1764.4844, 12.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1700.8984, -1743.9844, 12.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3986, 1719.7422, -1770.7813, 23.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1531, 1724.7344, -1741.5000, 14.1016, 0.25);
	// Trailers Gasolina
	RemoveBuildingForPlayer(playerid, 17350, -54.9922, -1130.7266, 4.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 1447, -89.9297, -1133.7500, 1.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -87.0547, -1132.6797, 0.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1462, -79.2500, -1137.7188, 0.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 3285, -73.8047, -1141.4219, 1.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 17072, -54.9922, -1130.7266, 4.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 17073, -56.1250, -1130.1719, 4.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1462, -84.3750, -1116.0938, 0.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1447, -84.0547, -1117.2188, 1.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -68.3516, -1104.9922, 0.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1462, -60.3594, -1116.9375, 0.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -63.6719, -1125.6953, 0.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -63.4141, -1115.4141, 0.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -63.8125, -1106.4219, 0.2188, 0.25);
	// Rusos
	RemoveBuildingForPlayer(playerid, 6204, 880.6016, -1653.7656, 14.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 866.4844, -1603.8594, 21.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 879.8984, -1606.7031, 15.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 872.0469, -1596.3750, 11.1172, 0.25);
}

public OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,
                                   Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,
                                   Float:fRotX, Float:fRotY, Float:fRotZ )
{
    PlayerToyInfo[playerid][index][ptPosX] = fOffsetX;
    PlayerToyInfo[playerid][index][ptPosY] = fOffsetY;
    PlayerToyInfo[playerid][index][ptPosZ] = fOffsetZ;
    PlayerToyInfo[playerid][index][ptRotX] = fRotX;
    PlayerToyInfo[playerid][index][ptRotY] = fRotY;
    PlayerToyInfo[playerid][index][ptRotZ] = fRotZ;
    SetPlayerAttachedObject(playerid,index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,1,1,1);
    new stringg[84];
 	format(stringg, sizeof(stringg), "Parte (%s)\nEditar Objeto", HoldingBones[PlayerToyInfo[playerid][GetPVarInt(playerid, "SlotSelection")][ptBone]]);
	ShowPlayerDialog(playerid, EDITTOYS2, DIALOG_STYLE_LIST, "Objeto Menu: Editar", stringg, "Seleccionar", "Cancelar");
	return 1;
}

SellHouse(playerid, houseid)
{
	PlayerInfo[playerid][pMats] += HouseInfo[houseid][hMats];
	PlayerInfo[playerid][pDrugs] += HouseInfo[houseid][hDrugs];
	PlayerInfo[playerid][pSpeed] += HouseInfo[houseid][hSpeed];
	PlayerInfo[playerid][pEctasy] += HouseInfo[houseid][hEctasy];
	PlayerInfo[playerid][pRitalin] += HouseInfo[houseid][hRitalin];
	PlayerInfo[playerid][pHeroina] += HouseInfo[houseid][hHeroina];
	PlayerInfo[playerid][pMarihuana] += HouseInfo[houseid][hMarihuana];
	HouseInfo[houseid][hLock] = 1;
	HouseInfo[houseid][hOwned] = 0;
	HouseInfo[houseid][hRent] = 0;
	HouseInfo[houseid][hTime] = 1999999999;
	HouseInfo[houseid][hRentabil] = 0;
	HouseInfo[houseid][hWep] = 0;
	HouseInfo[houseid][hAmmo] = 0;
	HouseInfo[houseid][hMats] = 0;
	HouseInfo[houseid][hDrugs] = 0;
	HouseInfo[houseid][hSpeed] = 0;
	HouseInfo[houseid][hEctasy] = 0;
	HouseInfo[houseid][hRitalin] = 0;
	HouseInfo[houseid][hHeroina] = 0;
	HouseInfo[houseid][hMarihuana] = 0;
	format(HouseInfo[houseid][hOwner], 24, "El Estado");
	UpdateHouses();
	OnPropTextdrawUpdate(houseid);
	return 1;
}

SellBizz(bizzid)
{
	BizzInfo[bizzid][bOwned] = 0;
	format(BizzInfo[bizzid][bOwner], 24, "El Estado");
	format(BizzInfo[bizzid][bExtortion], 24, "Nadie");
	BizzInfo[bizzid][bTill] = 0;
	BizzInfo[bizzid][bTillEx] = 0;
	UpdateBizz();
	OnBizzTextdrawUpdate(bizzid);
	return 1;
}

function SmokingCigarette(playerid)
{
	Connect
	    if(GetPVarInt(playerid, "IsSmoking") > 0)
		{
			new Float:PlayerHealth, string[128];
 			GetPlayerHealth(playerid, PlayerHealth);
  			switch(GetPVarInt(playerid, "IsSmoking"))
   			{
    			case 1:
     			{
					format(string, sizeof(string), "* %s acaba su cigarro y tira lo al suelo.", PlayerName(playerid));
					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					if( PlayerHealth < 100) SetHP(playerid, PlayerHealth+5);
					PlayerInfo[playerid][pCancer] += 2;
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					ClearAnimations(playerid);
  				}
	    		case 20:
		    	{
   					format(string, sizeof(string), "* %s hace circulos con el humo del cigarro.", PlayerName(playerid));
 	  				ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					if( PlayerHealth < 100) SetHP(playerid, PlayerHealth+5);
					PlayerInfo[playerid][pCancer] += 2;
  				}
		    	case 40:
		    	{
  					format(string, sizeof(string), "* %s se fuma su cigarro plácidamente.", PlayerName(playerid));
  					ProxDetectorEx(30.0, playerid, string, COLOR_PURPLE);
					if( PlayerHealth < 100) SetHP(playerid, PlayerHealth+5);
					PlayerInfo[playerid][pCancer] += 2;
  				}
	    	}
			SetPVarInt(playerid, "IsSmoking", GetPVarInt(playerid, "IsSmoking")-1);
		}
		else
		{
	    	KillTimer(GetPVarInt(playerid, "SmokeTimer"));
		}
	}
	return 1;
}

function CloseEstac()
{
    MoveDynamicObject(estac, 1761.42, -1703.32, 12.60, 2.5, -1000.0, -1000.0, -1000.0);
}

function CloseEstac2()
{
    MoveDynamicObject(estac2, 1805.53, -1722.11, 14.18, 2.5, -1000.0, -1000.0, -1000.0);
}

function TillTimer()
{
	for(new b = 0; b < MAX_BIZZ; b++)
	{
	    switch(b)
	    {
	        case 3..8,13,14,15,17,20,30,36: continue;
		}
	    new bearn = BizzInfo[b][bBuyPrice]/500;
		Till(b, bearn);
	}
	return 1;
}

stock Till(bizzid, amount)
{
	if(BizzInfo[bizzid][bOwned] == 1){
        if(strcmp("Nadie", BizzInfo[bizzid][bExtortion], true ) == 0){
            new impuestos = amount / 10;
            Tax += impuestos;
        	BizzInfo[bizzid][bTill] += (amount-impuestos);
        	return 1;
       	}
       	else{
			new impuestos = amount/10;
       	    new money = (amount-impuestos) / 4;
       	    Tax += impuestos;
			BizzInfo[bizzid][bTill] += (money * 3);
			BizzInfo[bizzid][bTillEx] += money;
			return 1;
		}
	}
	return 0;
}

SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
 			if(PlayerInfo[i][pJob] == job)
   			{
   			    Message(i, color, string);
			}
		}
	}
}

function CheckBizz(playerid, earn)
{
	if(PlayerToPoint(10.0,playerid,499.9703,-20.3358,1000.6797))    	 { Till(0, earn); return 1; }
	else if(PlayerToPoint(10.0,playerid,802.8769,-1369.1670,1014.5603))  { Till(1, earn); return 1; }
 	else if(PlayerToPoint(10.0,playerid,496.3752,-76.0410,998.7578))     { Till(2, earn); return 1; }
 	else if(PlayerToPoint(15.0,playerid,447.4146,-84.4904,999.5547))     { Till(11, earn); return 1; }
 	else if(PlayerToPoint(10.0,playerid,2147.5752,-1730.2357,13.5434))   { Till(16, earn); return 1; }
	else if(PlayerToPoint(10.0,playerid,1392.5297,-1893.1754,17.4266))   { Till(26, earn); return 1; }
	else if(PlayerToPoint(25.0,playerid,1920.0979,-1865.1298,13.6559))   { Till(27, earn); return 1; }
	else if(PlayerToPoint(15.0,playerid,1311.1902,-890.2754,46.2558))    { Till(32, earn); return 1; }
	else if(PlayerToPoint(15.0,playerid,681.6176,-456.7339,-25.6172))    { Till(33, earn); return 1; }
	else if(PlayerToPoint(15.0,playerid,1009.0618,-1355.6884,14.956))    { Till(35, earn); return 1; }
	return 0;
}

function ChecarSuciedad()
{
	for(new i=0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new string[128];
			if(PlayerInfo[i][pSuciedad] >= 70 && PlayerInfo[i][pSuciedad] < 80)
			{
			    Message(i, COLOR_WHITE, "Tu ropa está un poco sucia, debes ir a lavarla.");
			}
			else if(PlayerInfo[i][pSuciedad] >= 80 && PlayerInfo[i][pSuciedad] < 90)
			{
			    format(string, sizeof(string), "* %s desprende un olor un poco desagradable.", PlayerName(i));
			    ProxDetectorEx(20.0, i, string, COLOR_PURPLE);
			}
			else if(PlayerInfo[i][pSuciedad] >= 90 && PlayerInfo[i][pSuciedad] < 200)
			{
			    format(string, sizeof(string), "* %s desprende un olor un fétido.", PlayerName(i));
			    ProxDetectorEx(20.0, i, string, COLOR_PURPLE);
			}
			else if(PlayerInfo[i][pSuciedad] >= 200)
			{
			    SetHP(i, 0.0);
			    Message(i, -1, "{2471A3}M:RP-AntiPG: {FFFFFF}Tu suciedad supera el maximo de porcentaje permitido, has sido asesinado.");
			}
		}
	}
	SetTimer("ChecarSuciedadAutos", 60000, false);
	GMSuciedad = 8;
	return 1;
}
function ChecarSed()
{
	for(new i=0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(PlayerInfo[i][pSed] >= 70 && PlayerInfo[i][pSed] < 90)
			{
			    Message(i, COLOR_WHITE, "Tienes Sed, ve por agua para no morir deshidratado.");
			}
			else if(PlayerInfo[i][pSed] >= 100)
			{
			    SetHP(i, 0.0);
			    Message(i, -1, "{2471A3}M:RP-AntiPG: {FFFFFF}Moriste deshidratado.");
			    PlayerInfo[i][pSed] = 0;
			    SetProgressBarValue(Sed[i], PlayerInfo[i][pSed]);
  				UpdateProgressBar(Sed[i], i);
			}
		}
	}
	SetTimer("ChecarSuciedadAutos", 60000, false);
	GMSuciedad = 8;
	return 1;
}
function ChecarHambre()
{
	for(new i=0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(PlayerInfo[i][pHambre] >= 70 && PlayerInfo[i][pHambre] < 90)
			{
			    Message(i, COLOR_WHITE, "Tienes hambre, ve por comida para no morir de hambre.");
			}
			else if(PlayerInfo[i][pHambre] >= 100)
			{
			    SetHP(i, 0.0);
			    Message(i, -1, "{2471A3}M:RP-AntiPG: {FFFFFF}Moriste de hambre.");
			    PlayerInfo[i][pHambre] = 0;
			    SetProgressBarValue(Hambre[i], PlayerInfo[i][pHambre]);
  				UpdateProgressBar(Hambre[i], i);
			}
		}
	}
	SetTimer("ChecarSuciedadAutos", 60000, false);
	GMSuciedad = 8;
	return 1;
}
function ChecarSuciedadAutos()
{
	for(new i = VV; i < MAX_VEHICLES; i++)
	{   new string[128];
		if(VehicleSpawned[i])
		{
		    if(PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvSuciedad] >= 80 && PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvSuciedad] <= 100)
	        {
				Message(VehicleOwner[i], -1, "Tu vehículo está un poco sucio, deberas llevarlo a lavar si no quieres que pierda la pintura.");
	        }
	        else if(PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvSuciedad] > 100 && PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvSuciedad] < 150 && PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvColorOne] != 122)
	        {
	            format(string, sizeof string, "Tu vehículo ha perdido su pintura debido a que no lo has llevado a lavar(%s).", PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvName]);
	            Message(VehicleOwner[i], COLOR_YELLOW, string);
	            PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvColorOne] = 122;
	            PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvColorTwo] = 122;
	            ChangeVehicleColor(i, 122, 122);
         	}
         	else if(PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvSuciedad] > 150)
         	{
         	    Message(VehicleOwner[i], -1, "Se le ha sumado una perdida de respawn a tu vehículo por la excesiva suciedad, llevalo a lavar.");
         	    PlayerVehicleInfo[VehicleOwner[i]][VehicleSlot[i]][pvRespawn] += 1;
     	    }
   		}
	}
	return 1;
}

function AtaqueTerrorista(playerid, attack)
{
	Connect
	    new string[100], Location[48];
    	CreateExplosion(PointAttack[attack][0], PointAttack[attack][1], PointAttack[attack][2], 1, 100);
    	CreateExplosion(PointAttack[attack][0], PointAttack[attack][1]-6, PointAttack[attack][2], 1, 100);
    	CreateExplosion(PointAttack[attack][0], PointAttack[attack][1]+6, PointAttack[attack][2], 1, 100);
    	CreateExplosion(PointAttack[attack][0]-6, PointAttack[attack][1], PointAttack[attack][2], 1, 100);
    	CreateExplosion(PointAttack[attack][0]+6, PointAttack[attack][1], PointAttack[attack][2], 1, 100);
    	CreateExplosion(PointAttack[attack][0], PointAttack[attack][1]-12, PointAttack[attack][2], 1, 100);
    	CreateExplosion(PointAttack[attack][0], PointAttack[attack][1]+12, PointAttack[attack][2], 1, 100);
    	CreateExplosion(PointAttack[attack][0]-12, PointAttack[attack][1], PointAttack[attack][2], 1, 100);
    	CreateExplosion(PointAttack[attack][0]+12, PointAttack[attack][1], PointAttack[attack][2], 1, 100);
    	GetPVarString(playerid, "Localizacion", Location, 48);
		format(string, sizeof(string), "** Misil Detonado - Ubicacion: %s", Location);
    	SendRadioMessage(2, TEAM_RADIO_COLOR, string);
    	DeletePVar(playerid, "Localizacion");
		AtaqueRealizado = 0;
		PointAttack[attack][0] = 0;     PointAttack[attack][1] = 0;     PointAttack[attack][2] = 0;
		TerroPoint[attack] = 0;
		switch(attack)
		{
	    	case 0: StringPoint1 = "Sin Definir";
	    	case 1: StringPoint2 = "Sin Definir";
	    	case 2: StringPoint3 = "Sin Definir";
	    	case 3: StringPoint4 = "Sin Definir";
	    	case 4: StringPoint5 = "Sin Definir";
 		}
		return 1;
	}
	return 0;
}

function ExplodeCar(playerid, carid)
{
	Connect
		new Float:ECX, Float:ECY, Float:ECZ;
		SetVehicleHealth(carid, 1.0);
		GetVehiclePos(carid, ECX, ECY, ECZ);
		CreateExplosion(ECX, ECY, ECZ, 1, 100);
		Message(playerid, COLOR_GRAD2, "* La bomba colocada en el auto ha explotado con exito.");
    	SendRadioMessage(3, TEAM_RADIO_COLOR, "ATENCION: Ha detonado un coche bomba en Los Santos (Lugar marcado en el mapa)");
    	for(new i = 0; i<MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(Team_NG(i) && GetPVarType(i, "OnDuty") == 1 && RadioOn[i] == 1)
				{
				    SetPlayerCheckpoint(i, ECX, ECY, ECZ, 6);
  				}
			}
		}
		DeletePVar(playerid, "Bomba");
		return 1;
	}
	return 0;
}

function Lavadora(playerid)
{
	Connect
	    new string[128];
		Bought(playerid, 200);
		Till(28, 200);
		format(string, sizeof string, "* %s toma su ropa limpia y se la pone.", PlayerName(playerid));
		ProxDetectorEx(20.0, playerid, string, COLOR_PURPLE);
		Message(playerid, COLOR_WHITE, "{DC092F}Lavanderia: {FFFFFF}Has terminado de lavar tu ropa, esto te ha costado 200$.");
	    Skin(playerid, PlayerInfo[playerid][pChar]);
		PlayerInfo[playerid][pSuciedad] = 0;
		SetProgressBarValue(Suciedad[playerid], PlayerInfo[playerid][pSuciedad]);
		UpdateProgressBar(Suciedad[playerid], playerid);
		DeletePVar(playerid, "Lavando");
		DeletePVar(playerid, "TimerLavadora");
		return 1;
	}
	return 0;
}

function BajarBarra()
{
    SetDynamicObjectRot(pea1, -0.32, 90.22, 83.20);
}

function BajarBarra2()
{
    SetDynamicObjectRot(pea2, -2.90, -90.48, 82.91);
}

LoadObjects(playerid)
{
	TogglePlayerControllable(playerid, 0);
	TextDrawShowForPlayer(playerid, box);
	TextDrawShowForPlayer(playerid, streamer);
	SetPVarInt(playerid, "LoadingObjects", 1);
	SetTimerEx("SafeLoadObjects", 2500, false, "d", playerid);
}

function SafeLoadObjects(playerid)
{
	if(GetPVarType(playerid, "LoadingObjects"))
	{
		DeletePVar(playerid, "LoadingObjects");
		TogglePlayerControllable(playerid, 1);
		TextDrawHideForPlayer(playerid, box);
		TextDrawHideForPlayer(playerid, streamer);
	}
	return 0;
}

function PuedePTimer(playerid)
{
	DeletePVar(playerid, "PuedeP");
}

function Pizza(playerid)
{
	DeletePVar(playerid, "PizzaCallTime");
}

ApagarMotor(carid)
{
    new engine,lights,alarm,doors,bonnet,boot,objective;
   	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(carid,false,false,alarm,doors,bonnet,boot,objective);
	engineOn[carid] = false; 
}

Log(sz_fileName[], sz_input[])
{
	new
		sz_logEntry[164],
		i_dateTime[2][3],
		File: fileHandle = fopen(sz_fileName, io_append);

	gettime(i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2]);
	getdate(i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2]);

	format(sz_logEntry, sizeof(sz_logEntry), "[%i/%i/%i - %i:%i:%i] %s\r\n", i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2], i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2], sz_input);
	fwrite(fileHandle, sz_logEntry);
	return fclose(fileHandle);
}

Whispers(playerid, adminid, function)
{
	if(function == 1)
	{
		for(new d=0; d < 6; d++)
		{
			if(MPToAdmin[playerid][d] == adminid) return MPToAdmin[playerid][d] = 999;
   		}
	}
	else if(function == 2)
	{
		for(new d=0; d < 6; d++)
		{
			if(MPToAdmin[playerid][d] == 999) return MPToAdmin[playerid][d] = adminid;
		}
	}
	return 0;
}

function VehiculoLocalizado(playerid, idcar)
{
	Connect
	    new Float:X, Float:Y, Float:Z, Float:Speed, Texto[150], EstadoV[15], Motor[11];
    	new engine,lights,alarm,doors,bonnet,boot,objective;
    	GetVehicleVelocity(idcar, X, Y, Z);
    	Speed = floatmul(floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)), floatpower(Z, 2))), 200.0);
    	if(Speed > 10) EstadoV = "En Movimiento";
    	else    EstadoV = "Quieto";
    	GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
    	if(engine == 1) Motor = "Encendido";
    	else Motor = "Apagado";
		GetVehiclePos(idcar, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5.0);
		format(Texto, sizeof Texto, "{FF7617}Seguro S.A: {FFFFFF}Hemos localizado su vehículo {DC092F}(Punto Rojo) {FFFFFF}Estado: {2471A3}%s {FFFFFF}- Motor: {2471A3}%s", EstadoV, Motor);
		Message(playerid, -1, Texto);
		Bought(playerid, 1000);
		DeletePVar(playerid, "Searching");
		Till(30, 800);
		return 1;
	}
	return 0;
}

function VehiculoRecuperado(playerid, carid)
{
	Connect
		PlayerVehicleInfo[playerid][VehicleSlot[carid]][pvRespawn] = 0;
		SetVehiclePos(carid, 1278.6267,-1273.2335,13.4303);
		SetVehicleZAngle(carid, 90.0000);
		SetVehicleVirtualWorld(carid, 0);
		SetPlayerCheckpoint(playerid, 1278.6267,-1273.2335,13.4303, 4.0);
		Message(playerid, -1, "{FF7617}Seguro S.A: {FFFFFF}Su vehículo ha sido trasladado a los exteriores de nuestra instalacion {DC092F}(Punto Rojo)");
		Bought(playerid, 5000);
		DeletePVar(playerid, "Searching");
		Till(30, 3000);
		return 1;
	}
	return 0;
}

CrearCarroVenta(playerid, precio, modelo)
{
	if(GetPVarInt(playerid, "CVSlot") == 0) return Message(playerid, COLOR_GRAD2, "Ha ocurrido un error al tratar de comprar el vehículo, intenta nuevamente.");
	new slot = (GetPVarInt(playerid, "CVSlot")-1), Float:VX, Float:VY, Float:VZ, Float:VA, Float:Vida, Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	new carid = CreateVehicle(modelo, 797.6240,-616.8860,16.3266, 300.000, 1, 1, -1);
	SetVehicleVirtualWorld(carid, 0);
	Bought(playerid, precio);
	SetVehicleNumberPlate(carid, "SA - 00000");
	GetVehiclePos(carid, VX, VY, VZ);
	GetVehicleZAngle(carid, VA);
	GetVehicleHealth(carid, Vida);
	PlayerVehicleInfo[playerid][slot][pvModel] = modelo;
	PlayerVehicleInfo[playerid][slot][pvLocationx] = VX;
	PlayerVehicleInfo[playerid][slot][pvLocationy] = VY;
	PlayerVehicleInfo[playerid][slot][pvLocationz] = VZ;
	PlayerVehicleInfo[playerid][slot][pvAngle] = VA;
	PlayerVehicleInfo[playerid][slot][pvHealth] = Vida;
	PlayerVehicleInfo[playerid][slot][pvColorOne] = 1;
	PlayerVehicleInfo[playerid][slot][pvColorTwo] = 1;
	format(PlayerVehicleInfo[playerid][slot][pvName], 14, GetVehicleFriendlyName(carid));
	PlayerVehicleInfo[playerid][slot][pvValue] = precio;
	PlayerVehicleInfo[playerid][slot][pvBattery] = 5000;
	PlayerVehicleInfo[playerid][slot][pvGasolina] = 100;
	PlayerVehicleInfo[playerid][slot][pvID] = carid;
	PlayerVehicleInfo[playerid][slot][pvSpawned] = 1;
	VehicleOwner[carid] = playerid;
	VehicleSlot[carid] = slot;
	VehicleSpawned[carid] = true;
	OwnableVehicle[carid] = true;
	VehicleDeath[carid] = false;
	Gas[carid] += 100;
	Message(playerid, COLOR_YELLOW, "Motor asignado estándar (Sin plomo 95), capacidad: 100 litros");
	Message(playerid, COLOR_YELLOW, "{FFFFFF}Dirigete al deposito para retirarlo. (Fue marcado en tu mapa)");
	SetPlayerCheckpoint(playerid, 797.6240,-616.8860,16.3266, 5.0);
	new string[100];
	format(string, sizeof string, "* %s ha comprado un auto - Modelo %d Precio %d Slot %d.", PlayerName(playerid), modelo, precio, slot);
	Log("Logs/Propiedades.log", string);
	if(PlayerToPoint(30.0,playerid,563.0288,-1300.2478,17.2871))    Till(6, precio/60);
	if(PlayerToPoint(30.0,playerid,552.3003,-1300.5541,17.2871))     Till(7, precio/50);
	if(PlayerToPoint(50.0,playerid,537.9150,-1300.2504,17.2871))   Till(8, precio/40);
	DeletePVar(playerid, "CVSlot");
	DeletePVar(playerid, "ModelID");
	DeletePVar(playerid, "PriceID");
	DeletePVar(playerid, "FreeNo");
	OnPlayerUpdateTime(playerid);
	switch(modelo)
	{
		case 411: 	AutoCat[0] -= 1;
		case 415: 	AutoCat[1] -= 1;
		case 429: 	AutoCat[2] -= 1;
		case 451: 	AutoCat[3] -= 1;
		case 477: 	AutoCat[4] -= 1;
		case 480: 	AutoCat[5] -= 1;
		case 506:	AutoCat[6] -= 1;
		case 522:	AutoCat[7] -= 1;
		case 521:	AutoCat[8] -= 1;
		case 541: 	AutoCat[9] -= 1;
		case 560: 	AutoCat[10] -= 1;
		case 562: 	AutoCat[11] -= 1;
		case 587: 	AutoCat[12] -= 1;
		case 603: 	AutoCat[13] -= 1;
		case 402: 	AutoCat[14] -= 1;
		case 409: 	AutoCat[15] -= 1;
		case 470: 	AutoCat[16] -= 1;
		case 558: 	AutoCat[17] -= 1;
		case 559: 	AutoCat[18] -= 1;
	}
	return 1;
}

SpawnearVehiculo(playerid)
{
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
	{
	    if(PlayerVehicleInfo[playerid][v][pvModel] != 0)
	    {
	        if(PlayerVehicleInfo[playerid][v][pvID] != 9999 && VehicleSpawned[PlayerVehicleInfo[playerid][v][pvID]] && VehicleOwner[PlayerVehicleInfo[playerid][v][pvID]] == playerid) { continue; }
			new	carro = CreateVehicle(PlayerVehicleInfo[playerid][v][pvModel], 797.6240,-616.8860,16.3266, PlayerVehicleInfo[playerid][v][pvAngle], PlayerVehicleInfo[playerid][v][pvColorOne], PlayerVehicleInfo[playerid][v][pvColorTwo], -1);
            DestruirNeon(carro);
			SetVehicleHealth(carro, PlayerVehicleInfo[playerid][v][pvHealth]);
			SetVehicleParamsEx(carro ,0,0,0,PlayerVehicleInfo[playerid][v][pvLock],0,0,0);
			PlayerVehicleInfo[playerid][v][pvID] = carro;
			PlayerVehicleInfo[playerid][v][pvSpawned] = 1;
			VehicleOwner[carro] = playerid;
			VehicleSlot[carro] = v;
			VehicleSpawned[carro] = true;
			OwnableVehicle[carro] = true;
			Gas[carro] += PlayerVehicleInfo[playerid][v][pvGasolina];
			AddCarTuning(carro, v);
			engineOn[carro] = false;
		}
	}
}

DestruirVehiculo(playerid)
{
    new Float:X, Float:Y, Float:Z, Float:A, Float:H;
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
	{
	    if(PlayerVehicleInfo[playerid][v][pvModel] != 0)
	    {
	        if(PlayerVehicleInfo[playerid][v][pvSpawned] == 1)
			{
			    new idcar = PlayerVehicleInfo[playerid][v][pvID];
				GetVehiclePos(PlayerVehicleInfo[playerid][v][pvID], X, Y, Z);
				GetVehicleZAngle(PlayerVehicleInfo[playerid][v][pvID], A);
				GetVehicleHealth(PlayerVehicleInfo[playerid][v][pvID], H);
				PlayerVehicleInfo[playerid][v][pvGasolina] = Gas[PlayerVehicleInfo[playerid][v][pvID]];
				PlayerVehicleInfo[playerid][v][pvLocationx] = X;
				PlayerVehicleInfo[playerid][v][pvLocationy] = Y;
				PlayerVehicleInfo[playerid][v][pvLocationz] = Z;
				PlayerVehicleInfo[playerid][v][pvAngle] = A;
				PlayerVehicleInfo[playerid][v][pvHealth] = H;
				DestroyVehicle(PlayerVehicleInfo[playerid][v][pvID]);
				VehicleOwner[PlayerVehicleInfo[playerid][v][pvID]] = 999;
				VehicleSlot[PlayerVehicleInfo[playerid][v][pvID]] = 999;
 				VehicleSpawned[PlayerVehicleInfo[playerid][v][pvID]] = false;
 				OwnableVehicle[PlayerVehicleInfo[playerid][v][pvID]] = false;
 				engineOn[PlayerVehicleInfo[playerid][v][pvID]] = false;
                VehicleDeath[PlayerVehicleInfo[playerid][v][pvID]] = false;
  				Gas[PlayerVehicleInfo[playerid][v][pvID]] = 0;
  				DestruirNeon(idcar);
  				if(VehTimer[PlayerVehicleInfo[playerid][v][pvID]]) KillTimer(VehTimer[PlayerVehicleInfo[playerid][v][pvID]]);
			}
		}
	}
}

VenderVehiculo(playerid, vehicleid)
{
	new string[72], IP[18];
	new carsellprice = (PlayerVehicleInfo[playerid][0][pvValue]/4) * 3;
	GetPlayerIp(playerid, IP, 18);
	format(string, sizeof string, "* %s(%s) ha vendido su vehiculo.", PlayerName(playerid), IP);
	Log("Logs/Propiedades.log", string);
	format(string, sizeof(string), "* Has vendido tu vehículo por %d$", carsellprice);
	Message(playerid, COLOR_GREEN, string);
	switch(GetVehicleModel(vehicleid))
	{
		case 411: { AutoCat[0] += 1; }
		case 415: { AutoCat[1] += 1; }
		case 429: { AutoCat[2] += 1; }
		case 451: { AutoCat[3] += 1; }
		case 477: { AutoCat[4] += 1; }
		case 480: { AutoCat[5] += 1; }
		case 506: { AutoCat[6] += 1; }
		case 522: { AutoCat[7] += 1; }
		case 521: { AutoCat[8] += 1; }
		case 541: { AutoCat[9] += 1; }
		case 560: { AutoCat[10] += 1; }
		case 562: { AutoCat[11] += 1; }
		case 587: { AutoCat[12] += 1; }
		case 603: { AutoCat[13] += 1; }
		case 402: { AutoCat[14] += 1; }
		case 409: { AutoCat[15] += 1; }
		case 470: { AutoCat[16] += 1; }
		case 558: { AutoCat[17] += 1; }
		case 559: { AutoCat[18] += 1; }
	}
	Earn(playerid, carsellprice);
	RemovePlayerFromVehicle(playerid);
	VehicleOwner[vehicleid] = 999;
	VehicleSlot[vehicleid] = 999;
	engineOn[vehicleid] = false;
	VehicleSpawned[vehicleid] = false;
	OwnableVehicle[vehicleid] = false;
	VehicleDeath[vehicleid] = false;
	ResetearVariablesAuto(playerid, 0);
	DestroyVehicle(vehicleid);
	OnPlayerUpdateTime(playerid);
	return 1;
}

CompraVentaVehiculo(playerid)
{
	Message(playerid, COLOR_WHITE, "¡Felicidades! Tienes nuevo vehículo, utiliza /papeles");
	Message(GetPVarInt(playerid, "OwnableCarOffer"), COLOR_WHITE, "Has vendido tu vehículo!");
	new string[102];
	format(string, sizeof string, "* %s ha vendido su vehiculo a %s por %d", PlayerName(playerid), PlayerName(GetPVarInt(playerid, "OwnableCarOffer")), GetPVarInt(playerid, "OwnableCarPrice"));
	Log("Logs/Propiedades.log", string);
	RemovePlayerFromVehicle(GetPVarInt(playerid, "OwnableCarOffer"));
	Bought(playerid, GetPVarInt(playerid, "OwnableCarPrice"));
	Earn(GetPVarInt(playerid, "OwnableCarOffer"), GetPVarInt(playerid, "OwnableCarPrice"));
	new Float:X, Float:Y, Float:Z, Float:A, Float:H;
	new id = GetPVarInt(playerid, "OwnableCarOffer");
	GetVehiclePos(PlayerVehicleInfo[id][0][pvID], X, Y, Z);
	GetVehicleZAngle(PlayerVehicleInfo[id][0][pvID], A);
	GetVehicleHealth(PlayerVehicleInfo[id][0][pvID], H);
	PlayerVehicleInfo[playerid][0][pvID] = GetPVarInt(playerid, "OwnableCarID");        		PlayerVehicleInfo[playerid][0][pvHealth] = H;       											PlayerVehicleInfo[playerid][0][pvSpoiler] = PlayerVehicleInfo[id][0][pvSpoiler];
   	PlayerVehicleInfo[playerid][0][pvModel] = PlayerVehicleInfo[id][0][pvModel];        		PlayerVehicleInfo[playerid][0][pvColorOne] = PlayerVehicleInfo[id][0][pvColorOne];        		PlayerVehicleInfo[playerid][0][pvHood] = PlayerVehicleInfo[id][0][pvHood];
   	PlayerVehicleInfo[playerid][0][pvLocationx] = X;  											PlayerVehicleInfo[playerid][0][pvColorTwo] = PlayerVehicleInfo[id][0][pvColorTwo];        		PlayerVehicleInfo[playerid][0][pvRoof] = PlayerVehicleInfo[id][0][pvRoof];
   	PlayerVehicleInfo[playerid][0][pvLocationy] = Y;  											PlayerVehicleInfo[playerid][0][pvValue] = PlayerVehicleInfo[id][0][pvValue];        			PlayerVehicleInfo[playerid][0][pvSideskirt] = PlayerVehicleInfo[id][0][pvSideskirt];
   	PlayerVehicleInfo[playerid][0][pvLocationz] = Z;  											PlayerVehicleInfo[playerid][0][pvLock] = PlayerVehicleInfo[id][0][pvLock];        				PlayerVehicleInfo[playerid][0][pvNitro] = PlayerVehicleInfo[id][0][pvNitro];
   	PlayerVehicleInfo[playerid][0][pvAngle] = A;      											PlayerVehicleInfo[playerid][0][pvBattery] = PlayerVehicleInfo[id][0][pvBattery];        		PlayerVehicleInfo[playerid][0][pvExhaust] = PlayerVehicleInfo[id][0][pvExhaust];
   	PlayerVehicleInfo[playerid][0][pvWheel] = PlayerVehicleInfo[id][0][pvWheel];        		PlayerVehicleInfo[playerid][0][pvFrontBumper] = PlayerVehicleInfo[id][0][pvFrontBumper];      	PlayerVehicleInfo[playerid][0][pvMulta] = PlayerVehicleInfo[id][0][pvMulta];
   	PlayerVehicleInfo[playerid][0][pvHydraulics] = PlayerVehicleInfo[id][0][pvHydraulics];   	PlayerVehicleInfo[playerid][0][pvRearBumper] = PlayerVehicleInfo[id][0][pvRearBumper];       	PlayerVehicleInfo[playerid][0][pvGas] = PlayerVehicleInfo[id][0][pvGas];
   	PlayerVehicleInfo[playerid][0][pvPaintjob] = PlayerVehicleInfo[id][0][pvPaintjob];     		PlayerVehicleInfo[playerid][0][pvEmbargo] = PlayerVehicleInfo[id][0][pvEmbargo];       			PlayerVehicleInfo[playerid][0][pvAlarm] = PlayerVehicleInfo[id][0][pvAlarm];
   	PlayerVehicleInfo[playerid][0][pvGPS] = PlayerVehicleInfo[id][0][pvGPS];                 	PlayerVehicleInfo[playerid][0][pvGasolina] = PlayerVehicleInfo[id][0][pvGasolina];             	PlayerVehicleInfo[playerid][0][pvSpawned] = 1;
    PlayerVehicleInfo[playerid][0][pvSuciedad] = PlayerVehicleInfo[id][0][pvSuciedad];
   	format(PlayerVehicleInfo[playerid][0][pvName], 14, PlayerVehicleInfo[id][0][pvName]);      format(PlayerVehicleInfo[playerid][0][pvPlate], 12, PlayerVehicleInfo[id][0][pvPlate]);
	VehicleOwner[GetPVarInt(playerid, "OwnableCarID")] = playerid;
	ResetearVariablesAuto(GetPVarInt(playerid, "OwnableCarOffer"), 0);
	OnPlayerUpdateTime(playerid);
	DeletePVar(playerid, "Facturing");
	DeletePVar(playerid, "OwnableCarOffer");
	DeletePVar(playerid, "OwnableCarID");
	DeletePVar(playerid, "OwnableCarPrice");
	return 1;
}

ResetearVariablesAuto(playerid, slot)
{
	PlayerVehicleInfo[playerid][slot][pvID] = 9999;        PlayerVehicleInfo[playerid][slot][pvHealth] = 0.0;       	PlayerVehicleInfo[playerid][slot][pvSpoiler] = 0;
	PlayerVehicleInfo[playerid][slot][pvModel] = 0;        PlayerVehicleInfo[playerid][slot][pvColorOne] = 0;        	PlayerVehicleInfo[playerid][slot][pvHood] = 0;
	PlayerVehicleInfo[playerid][slot][pvLocationx] = 0.0;  PlayerVehicleInfo[playerid][slot][pvColorTwo] = 0;        	PlayerVehicleInfo[playerid][slot][pvRoof] = 0;
	PlayerVehicleInfo[playerid][slot][pvLocationy] = 0.0;  PlayerVehicleInfo[playerid][slot][pvValue] = 0;        		PlayerVehicleInfo[playerid][slot][pvSideskirt] = 0;
	PlayerVehicleInfo[playerid][slot][pvLocationz] = 0.0;  PlayerVehicleInfo[playerid][slot][pvLock] = 0;        		PlayerVehicleInfo[playerid][slot][pvNitro] = 0;
	PlayerVehicleInfo[playerid][slot][pvAngle] = 0.0;      PlayerVehicleInfo[playerid][slot][pvBattery] = 0;        	PlayerVehicleInfo[playerid][slot][pvExhaust] = 0;
	PlayerVehicleInfo[playerid][slot][pvWheel] = 0;        PlayerVehicleInfo[playerid][slot][pvFrontBumper] = 0;      	PlayerVehicleInfo[playerid][slot][pvMulta] = 0;
	PlayerVehicleInfo[playerid][slot][pvHydraulics] = 0;   PlayerVehicleInfo[playerid][slot][pvRearBumper] = 0;       	PlayerVehicleInfo[playerid][slot][pvGas] = 0;
	PlayerVehicleInfo[playerid][slot][pvPaintjob] = 0;     PlayerVehicleInfo[playerid][slot][pvEmbargo] = 0;       		PlayerVehicleInfo[playerid][slot][pvAlarm] = 0;
	PlayerVehicleInfo[playerid][slot][pvGPS] = 0;          PlayerVehicleInfo[playerid][slot][pvGasolina] = 0;           PlayerVehicleInfo[playerid][slot][pvRespawn] = 0;
	PlayerVehicleInfo[playerid][slot][pvSpawned] = 0;      PlayerVehicleInfo[playerid][slot][pvSuciedad] = 0;
	PlayerVehicleInfo[playerid][slot][pvTanque] = 0;
	format(PlayerVehicleInfo[playerid][slot][pvName], 14, "Ninguno");     format(PlayerVehicleInfo[playerid][slot][pvPlate], 12, "SA - 00000");
	OnPlayerUpdateTime(playerid);
}

function DeleteBadName(playerid)
{
	Connect
	    if(GetPVarType(playerid, "DeleteName") == 2)
	    {
	    	new Account[40], Name[24];
	    	GetPVarString(playerid, "DeleteName", Name, 24);
			format(Account, sizeof Account, "users/%s.ini", Name);
			DeletePVar(playerid, "TickNameUsed");
			DeletePVar(playerid, "DeleteName");
			if(INI_Exist(Account)) fremove(Account);
			return 1;
		}
	}
	return 0;
}

function UpdateName(playerid)
{
	Connect
	    if(GetPVarInt(playerid, "ChangeNameUsed") == 1)
	    {
	        new string[40], BanName[24];
			GetPVarString(playerid, "OldNameVar", BanName, 24);
			format(string, sizeof string, "users/%s.ini", BanName);
			if(INI_Exist(string)){
		    	new INI:ini = INI_Open(string);
				INI_WriteInt(ini, "Locked", 8);
				INI_Close(ini);
			}
		    if(PlayerInfo[playerid][pPhousekey] != 9999)
			{
				new h = PlayerInfo[playerid][pPhousekey];
            	format(HouseInfo[h][hOwner], 24, PlayerName(playerid));
            	OnPropTextdrawUpdate(h);
			}
			if(PlayerInfo[playerid][pPbizzkey] != 9999)
			{
				new b = PlayerInfo[playerid][pPbizzkey];
				format(BizzInfo[b][bOwner], 24, PlayerName(playerid));
				OnBizzTextdrawUpdate(b);
			}
			Message(playerid, COLOR_WHITE, "Has sido kickeado automaticamente, ahora entra con tu nueva cuenta (Vieja Cuenta Baneada).");
			KickTimer(playerid);
			return 1;
		}
	}
	return 0;
}

stock MakeArmour(playerid)
{
	new x[30], pmats = PlayerInfo[playerid][pMats];
	Connect
	    if(pmats < 100)
	    {
	        format(x, sizeof x, "* Te faltan %d materiales.", 100-pmats);
	        Message(playerid, COLOR_GRAD2, x);
	        return 1;
		}
		else
		{
		    SetPlayerArmour(playerid, 100);
		    GText(playerid, "~w~chaleco creado~n~~r~materiales gastados: ~w~100", 3000, 3);
			PlayerInfo[playerid][pMats] -= 100;
			return 1;
		}
	}
	return 0;
}

function OutHouse(playerid)
{
	Connect
	    new hid = GetPVarInt(playerid, "IDHouse");
		SetPosEx(playerid, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez], 0, 0, 0);
		Message(playerid, COLOR_WHITE, "Has salido de la casa debido a que se ha terminado el tiempo para verla.");
		DeletePVar(playerid, "IDHouse");
		DeletePVar(playerid, "TimerHouse");
		return 1;
	}
	return 0;
}

function CarWash(playerid)
{
	new valor = GetPVarInt(playerid, "UpdatesBar");
	new id = GetPlayerVehicleID(playerid);
 	SetProgressBarValue(Lavando[playerid], valor);
  	UpdateProgressBar(Lavando[playerid], playerid);
   	SetPVarInt(playerid, "UpdatesBar", valor+1);
    if(GetPVarInt(playerid, "UpdatesBar") == 13)
    {
		KillTimer(GetPVarInt(playerid, "TimerCarWash"));
		DestroyProgressBar(Lavando[playerid]);
		Lavando[playerid] = INVALID_BAR_ID;
		DeletePVar(playerid, "TimerCarWash");
		DeletePVar(playerid, "UsageCarWash");
		DeletePVar(playerid, "UpdatesBar");
		TogglePlayerControllable(playerid, 1);
		AutoLavado = -1;
		PlayerVehicleInfo[VehicleOwner[id]][VehicleSlot[id]][pvSuciedad] = 0;
		Bought(playerid, 250);
		Till(36, 250);
	}
	return 1;
}

function LlenarTanque(playerid, carid)
{
	Connect
		new pricegas, gasname[14], string[80];
		if(Refueling[playerid] == 0)			pricegas = gGas95_Cost,		gasname = "Sin plomo 95";
		else if(Refueling[playerid] == 1)		pricegas = gGas98_Cost,     gasname = "Sin plomo 98";
		else if(Refueling[playerid] == 2)     	pricegas = gGasoil_Cost,    gasname = "Gasoil";
		else if(Refueling[playerid] == 3)     	pricegas = gBiogas_Cost,    gasname = "Biodiesel";

		new totalgas = 50 - PlayerVehicleInfo[VehicleOwner[carid]][VehicleSlot[carid]][pvTanque];
		new price = totalgas*pricegas;

		PlayerVehicleInfo[VehicleOwner[carid]][VehicleSlot[carid]][pvTanque] = 50;
    	ClearChatbox(playerid, 10);
    	Message(playerid, 0x0097DFFF, "|_________| Gasolina - Recibo |_________|");
    	format(string,sizeof(string),"  Precio: %d$/l (%s)",pricegas, gasname);
    	Message(playerid, COLOR_WHITE, string);
    	format(string,sizeof(string),"  Depósito: 50/50 Pagado: %d litros",totalgas);
    	Message(playerid, COLOR_WHITE, string);
    	Message(playerid, 0x0097DFFF, "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _");
    	format(string,sizeof(string),"  Total: %d$",price);
		Message(playerid, COLOR_WHITE, string);
    	TogglePlayerControllable(playerid, 1);
    	Refueling[playerid] = -1;
    	Bought(playerid, price);
    	Till(34, price);
    }
	return 1;
}

function VaciarDeposito(playerid, carid, cantidad)
{
	Connect
	    PlayerVehicleInfo[VehicleOwner[carid]][VehicleSlot[carid]][pvTanque] -= cantidad;
		TogglePlayerControllable(playerid, 1);
        Gas[carid] += cantidad;
		Message(playerid, COLOR_WHITE, "Has terminado de llenar el vehículo con suficiente gasolina.");
		return 1;
	}
	return 0;
}

SeeAds(playerid)
{
	new Anuncios[3750], count = 0;
	for(new i=See_AD[playerid]; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pADSent] == 1)
		    {
		        count++;
				format(Anuncios, sizeof(Anuncios), "%s{DC092F}(%d){FFFFFF} - %s ({B1FF8C}Contacto: {FFFFFF}%d)\n", Anuncios, i, PlayerInfo[i][pAnuncio], PlayerInfo[i][pPnumber]);
				if(count == 25)
				{
					See_AD[playerid] = (i+1);
					ShowPlayerDialog(playerid, VER_ANUNCIOS, DIALOG_STYLE_MSGBOX, "{2471A3}Publicidad de Los Santos", Anuncios, "Continuar", "Cancelar");
					return 1;
				}
			}
		}
	}
    ShowPlayerDialog(playerid, 1620, DIALOG_STYLE_MSGBOX, "{2471A3}Publicidad de Los Santos", Anuncios, "Aceptar", "");
    See_AD[playerid] = 0;
	return 1;
}

stock LoadVehiclesFaction(f)
{
	new string[12];
	for(new fv = 0; fv < MAX_VEHICLES_FACTION; fv++)
	{
	    if(FactionVehicleInfo[f][fv][fvModel] != 0)
	    {
	        new carid = CreateVehicle(FactionVehicleInfo[f][fv][fvModel], FactionVehicleInfo[f][fv][fvPos][0], FactionVehicleInfo[f][fv][fvPos][1], FactionVehicleInfo[f][fv][fvPos][2], FactionVehicleInfo[f][fv][fvPos][3], FactionVehicleInfo[f][fv][fvColorOne], FactionVehicleInfo[f][fv][fvColorTwo], -1);
			FactionVehicleInfo[f][fv][fvID] = carid;
			VehicleSpawned[carid] = true;
			OwnableVehicle[carid] = false;
			format(string, 12, "LS - %d",carid);
    		SetVehicleNumberPlate(carid, string);
    		Gas[carid] = GasMax;
			Faction_Vehicle[f][fv] = carid;
			F_ID[carid] = f;
			FV_ID[carid] = fv;
		}
	}
}

stock GetFactionsVehicles(f)
{
	new i = 0;
  	while ( i < MAX_VEHICLES_FACTION && FactionVehicleInfo[f][i][fvID] != INVALID_VEHICLE_ID )
  	{
  	    i++;
	}
	if( i == MAX_VEHICLES_FACTION ) return -1;
	return i;
}

stock CreateFactionVehicle(playerid, faction, vehicleslot, modelid, colorone, colortwo)
{
	new fac = faction-1, string[10];
	if(FactionVehicleInfo[fac][vehicleslot][fvID] == INVALID_VEHICLE_ID)
	{
        new Float:PosX, Float:PosY, Float:PosZ, Float:PosA;
        GetPlayerPos(playerid, PosX, PosY, PosZ);
        GetPlayerFacingAngle(playerid, PosA);
		FactionVehicleInfo[fac][vehicleslot][fvModel] = modelid;
		FactionVehicleInfo[fac][vehicleslot][fvPos][0] = PosX;
		FactionVehicleInfo[fac][vehicleslot][fvPos][1] = PosY;
		FactionVehicleInfo[fac][vehicleslot][fvPos][2] = PosZ;
		FactionVehicleInfo[fac][vehicleslot][fvPos][3] = PosA;
		FactionVehicleInfo[fac][vehicleslot][fvColorOne] = colorone;
		FactionVehicleInfo[fac][vehicleslot][fvColorTwo] = colortwo;
		new vehicleid = CreateVehicle(modelid, PosX, PosY, PosZ, PosA, colorone, colortwo, -1);
		FactionVehicleInfo[fac][vehicleslot][fvID] = vehicleid;
		VehicleSpawned[vehicleid] = true;
		OwnableVehicle[vehicleid] = false;
		engineOn[vehicleid] = false;
		Faction_Vehicle[fac][vehicleslot] = vehicleid;
		F_ID[vehicleid] = fac;
		FV_ID[vehicleid] = vehicleslot;
		format(string, 12, "LS - %d",vehicleid);
		SetVehicleNumberPlate(vehicleid, string);
		Gas[vehicleid] = GasMax;
		return vehicleid;
	}
	return INVALID_VEHICLE_ID;
}

stock DeleteFactionVehicle(faction, vehicle)
{
	new f = faction-1, fv = vehicle-1;
	if(FactionVehicleInfo[f][fv][fvID] != INVALID_VEHICLE_ID)
	{
	    F_ID[FactionVehicleInfo[f][fv][fvID]] = -1;
	    FV_ID[FactionVehicleInfo[f][fv][fvID]] = -1;
	    DestroyVehicle(FactionVehicleInfo[f][fv][fvID]);
	    VehicleSpawned[FactionVehicleInfo[f][fv][fvID]] = false;
		FactionVehicleInfo[f][fv][fvModel] = 0;
		FactionVehicleInfo[f][fv][fvPos][0] = 0.000000;
		FactionVehicleInfo[f][fv][fvPos][1] = 0.000000;
		FactionVehicleInfo[f][fv][fvPos][2] = 0.000000;
		FactionVehicleInfo[f][fv][fvPos][3] = 0.000000;
		FactionVehicleInfo[f][fv][fvColorOne] = 0;
		FactionVehicleInfo[f][fv][fvColorTwo] = 0;
		FactionVehicleInfo[f][fv][fvID] = INVALID_VEHICLE_ID;
		Faction_Vehicle[f][fv] = INVALID_VEHICLE_ID;
	}
}

stock DeleteFaction(faction)
{
	new f = faction-1;
	FactionInfo[f][fType] = 0;
	format(FactionInfo[f][fName], 24, "Ninguna");
	FactionInfo[f][fFounds] = 0;
	format(FactionInfo[f][fRank1], 20, "Ninguno");
	format(FactionInfo[f][fRank2], 20, "Ninguno");
	format(FactionInfo[f][fRank3], 20, "Ninguno");
	format(FactionInfo[f][fRank4], 20, "Ninguno");
	format(FactionInfo[f][fRank5], 20, "Ninguno");
	format(FactionInfo[f][fRank6], 20, "Ninguno");
	FactionInfo[f][fInterior] = 0;
	FactionInfo[f][fVirtualWorld] = 0;
	FactionInfo[f][fEntrance][0] = 0.000000;
	FactionInfo[f][fEntrance][1] = 0.000000;
	FactionInfo[f][fEntrance][2] = 0.000000;
	FactionInfo[f][fExit][0] = 0.000000;
	FactionInfo[f][fExit][1] = 0.000000;
	FactionInfo[f][fExit][2] = 0.000000;
	if(FactionInfo[f][fPickup] != -1) { DestroyDynamicPickup(FactionInfo[f][fPickup]); DestroyDynamic3DTextLabel(FactionInfo[f][fTextLabel]); FactionInfo[f][fPickup] = -1; }
	for(new fv = 0; fv < MAX_VEHICLES_FACTION; fv++)
	{
	    if(FactionVehicleInfo[f][fv][fvModel] != 0)
	    {
	        DeleteFactionVehicle((f+1), (fv+1));
    	}
	}
	SaveFactions();
}

stock GetPlayerFactionType(playerid)
{
	new Data;
	if(PlayerInfo[playerid][pMember] > PlayerInfo[playerid][pLeader])       Data = PlayerInfo[playerid][pMember];
	else                                        							Data = PlayerInfo[playerid][pLeader];
	if(Data > 14)
	{
		for(new f = 0; f < MAX_FACTION; f++)
		{
			if((f+15) == Data)
			{
                return FactionInfo[f][fType];
			}
		}
	}
	return 0;
}

AntiCheat()
{
	new Float:armor, Float:health, weapon, ammo, slot;
	Loop(i, MAX_PLAYERS)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(MoneyInHand(i) > ScriptMoney[i])		SetMoneyToPlayer(i, ScriptMoney[i]);
			GetPlayerHealth(i, health);				GetPlayerArmour(i, armor);
			if(health > PlayerInfo[i][pHealth])		SetHP(i, PlayerInfo[i][pHealth]);
			if(armor > ScriptArmor[i]) 				GiveArmorToPlayer(i, ScriptArmor[i]);
			weapon = GetPlayerWeapon(i);
			if(weapon > 0)
			{
			    if(NoAntiCheat[i] == 0)
			    {
			        slot = GetWeaponSlot(weapon);	ammo = GetPlayerAmmo(i);
					if(weapon != ScriptWeapons[i][slot] || ammo > ScriptAmmo[i][slot])
					{
					    SafeResetPlayerWeapons(i);
			    	}
    			}
			}
		}
	}
}

PlayerText:CreateCurrentPageTextDraw(playerid, Float:Xpos, Float:Ypos)
{
	new PlayerText:txtInit;
   	txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, "0/0");
   	PlayerTextDrawUseBox(playerid, txtInit, 0);
	PlayerTextDrawLetterSize(playerid, txtInit, 0.4, 1.1);
	PlayerTextDrawFont(playerid, txtInit, 1);
	PlayerTextDrawSetShadow(playerid, txtInit, 0);
    PlayerTextDrawSetOutline(playerid, txtInit, 1);
    PlayerTextDrawColor(playerid, txtInit, 0xACCBF1FF);
    PlayerTextDrawShow(playerid, txtInit);
    return txtInit;
}

PlayerText:CreatePlayerDialogButton(playerid, Float:Xpos, Float:Ypos, Float:Width, Float:Height, button_text[])
{
 	new PlayerText:txtInit;
   	txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, button_text);
   	PlayerTextDrawUseBox(playerid, txtInit, 1);
   	PlayerTextDrawBoxColor(playerid, txtInit, 0x000000FF);
   	PlayerTextDrawBackgroundColor(playerid, txtInit, 0x000000FF);
	PlayerTextDrawLetterSize(playerid, txtInit, 0.4, 1.1);
	PlayerTextDrawFont(playerid, txtInit, 1);
	PlayerTextDrawSetShadow(playerid, txtInit, 0);
    PlayerTextDrawSetOutline(playerid, txtInit, 0);
    PlayerTextDrawColor(playerid, txtInit, 0x4A5A6BFF);
    PlayerTextDrawSetSelectable(playerid, txtInit, 1);
    PlayerTextDrawAlignment(playerid, txtInit, 2);
    PlayerTextDrawTextSize(playerid, txtInit, Height, Width);
    PlayerTextDrawShow(playerid, txtInit);
    return txtInit;
}

PlayerText:CreatePlayerHeaderTextDraw(playerid, Float:Xpos, Float:Ypos, header_text[])
{
	new PlayerText:txtInit;
   	txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, header_text);
   	PlayerTextDrawUseBox(playerid, txtInit, 0);
	PlayerTextDrawLetterSize(playerid, txtInit, 1.25, 3.0);
	PlayerTextDrawFont(playerid, txtInit, 0);
	PlayerTextDrawSetShadow(playerid, txtInit, 0);
    PlayerTextDrawSetOutline(playerid, txtInit, 1);
    PlayerTextDrawColor(playerid, txtInit, 0xACCBF1FF);
    PlayerTextDrawShow(playerid, txtInit);
    return txtInit;
}

PlayerText:CreatePlayerBackgroundTextDraw(playerid, Float:Xpos, Float:Ypos, Float:Width, Float:Height)
{
	new PlayerText:txtBackground = CreatePlayerTextDraw(playerid, Xpos, Ypos,
	"                                            ~n~");
    PlayerTextDrawUseBox(playerid, txtBackground, 1);
    PlayerTextDrawBoxColor(playerid, txtBackground, 0x4A5A6BBB);
	PlayerTextDrawLetterSize(playerid, txtBackground, 5.0, 5.0);
	PlayerTextDrawFont(playerid, txtBackground, 0);
	PlayerTextDrawSetShadow(playerid, txtBackground, 0);
    PlayerTextDrawSetOutline(playerid, txtBackground, 0);
    PlayerTextDrawColor(playerid, txtBackground,0x000000FF);
    PlayerTextDrawTextSize(playerid, txtBackground, Width, Height);
   	PlayerTextDrawBackgroundColor(playerid, txtBackground, 0x4A5A6BBB);
    PlayerTextDrawShow(playerid, txtBackground);
    return txtBackground;
}

PlayerText:CreateModelPreviewTextDraw(playerid, modelindex, Float:Xpos, Float:Ypos, Float:width, Float:height)
{
    new PlayerText:txtPlayerSprite = CreatePlayerTextDraw(playerid, Xpos, Ypos, "");
    PlayerTextDrawFont(playerid, txtPlayerSprite, TEXT_DRAW_FONT_MODEL_PREVIEW);
    PlayerTextDrawColor(playerid, txtPlayerSprite, 0xFFFFFFFF);
    PlayerTextDrawBackgroundColor(playerid, txtPlayerSprite, 0x88888899);
    PlayerTextDrawTextSize(playerid, txtPlayerSprite, width, height);
    PlayerTextDrawSetPreviewModel(playerid, txtPlayerSprite, modelindex);
    if(GetPVarInt(playerid, "ModelsType") == 2) PlayerTextDrawSetPreviewRot(playerid,txtPlayerSprite, -16.0, 0.0, -55.0);
    if(GetPVarInt(playerid, "ModelsType") == 3) PlayerTextDrawSetPreviewRot(playerid,txtPlayerSprite, -15.0, 0.0, 0.0);
    PlayerTextDrawSetSelectable(playerid, txtPlayerSprite, 1);
    PlayerTextDrawShow(playerid,txtPlayerSprite);
    return txtPlayerSprite;
}

GetNumberOfPages(playerid)
{
	if((gTotalItems[playerid] >= SELECTION_ITEMS) && (gTotalItems[playerid] % SELECTION_ITEMS) == 0)
	{
		return (gTotalItems[playerid] / SELECTION_ITEMS);
	}
	else return (gTotalItems[playerid] / SELECTION_ITEMS) + 1;
}

DestroyPlayerModelPreviews(playerid)
{
	new x=0;
	while(x != SELECTION_ITEMS) {
	    if(gSelectionItems[playerid][x] != PlayerText:INVALID_TEXT_DRAW) {
			PlayerTextDrawDestroy(playerid, gSelectionItems[playerid][x]);
			gSelectionItems[playerid][x] = PlayerText:INVALID_TEXT_DRAW;
		}
		x++;
	}
}

ShowPlayerModelPreviews(playerid)
{
    new x=0;
	new Float:BaseX = DIALOG_BASE_X;
	new Float:BaseY = DIALOG_BASE_Y - (SPRITE_DIM_Y * 0.33);
	new linetracker = 0;

	new itemat = GetPVarInt(playerid, "ModelsPage") * SELECTION_ITEMS;

	DestroyPlayerModelPreviews(playerid);

	while(x != SELECTION_ITEMS && itemat < gTotalItems[playerid]) {
	    if(linetracker == 0) {
	        BaseX = DIALOG_BASE_X + 25.0;
	        BaseY += SPRITE_DIM_Y + 1.0;
		}
  		if(GetPVarInt(playerid, "ModelsSkins") == 1){
  			gSelectionItems[playerid][x] = CreateModelPreviewTextDraw(playerid, gSkinList[itemat], BaseX, BaseY, SPRITE_DIM_X, SPRITE_DIM_Y);
  			gSelectionItemsTag[playerid][x] = gSkinList[itemat];
		}
		else if(GetPVarInt(playerid, "ModelsGrotti") == 1){
		    gSelectionItems[playerid][x] = CreateModelPreviewTextDraw(playerid, gGrottiList[itemat], BaseX, BaseY, SPRITE_DIM_X, SPRITE_DIM_Y);
  			gSelectionItemsTag[playerid][x] = gGrottiList[itemat];
		}
		else if(GetPVarInt(playerid, "ModelsMedium") == 1){
		    gSelectionItems[playerid][x] = CreateModelPreviewTextDraw(playerid, gMediumList[itemat], BaseX, BaseY, SPRITE_DIM_X, SPRITE_DIM_Y);
  			gSelectionItemsTag[playerid][x] = gMediumList[itemat];
		}
		else if(GetPVarInt(playerid, "ModelsCas") == 1){
		    gSelectionItems[playerid][x] = CreateModelPreviewTextDraw(playerid, gCasList[itemat], BaseX, BaseY, SPRITE_DIM_X, SPRITE_DIM_Y);
  			gSelectionItemsTag[playerid][x] = gCasList[itemat];
		}
		else if(GetPVarInt(playerid, "ModelsToys") == 1){
			gSelectionItems[playerid][x] = CreateModelPreviewTextDraw(playerid, gToysList[itemat][toymodelid], BaseX, BaseY, SPRITE_DIM_X, SPRITE_DIM_Y);
			gSelectionItemsTag[playerid][x] = gToysList[itemat][toymodelid];
		}
		BaseX += SPRITE_DIM_X + 1.0;
		linetracker++;
		if(linetracker == ITEMS_PER_LINE) linetracker = 0;
		itemat++;
		x++;
	}
}

UpdatePageTextDraw(playerid)
{
	new PageText[64+1];
	format(PageText, 64, "%d/%d", GetPVarInt(playerid,"ModelsPage") + 1, GetNumberOfPages(playerid));
	PlayerTextDrawSetString(playerid, gCurrentPageTextDrawId[playerid], PageText);
}

CreateSelectionMenu(playerid)
{
	new HeaderName[24];
	GetPVarString(playerid, "ModelsName", HeaderName, 24);
    gBackgroundTextDrawId[playerid] = CreatePlayerBackgroundTextDraw(playerid, DIALOG_BASE_X, DIALOG_BASE_Y + 20.0, DIALOG_WIDTH, DIALOG_HEIGHT);
    gHeaderTextDrawId[playerid] = CreatePlayerHeaderTextDraw(playerid, DIALOG_BASE_X, DIALOG_BASE_Y, HeaderName);
    gCurrentPageTextDrawId[playerid] = CreateCurrentPageTextDraw(playerid, DIALOG_WIDTH - 30.0, DIALOG_BASE_Y + 15.0);
    gNextButtonTextDrawId[playerid] = CreatePlayerDialogButton(playerid, DIALOG_WIDTH - 30.0, DIALOG_BASE_Y+DIALOG_HEIGHT+100.0, 50.0, 16.0, NEXT_TEXT);
    gPrevButtonTextDrawId[playerid] = CreatePlayerDialogButton(playerid, DIALOG_WIDTH - 90.0, DIALOG_BASE_Y+DIALOG_HEIGHT+100.0, 50.0, 16.0, PREV_TEXT);

    ShowPlayerModelPreviews(playerid);
    UpdatePageTextDraw(playerid);
}

DestroySelectionMenu(playerid)
{
	DestroyPlayerModelPreviews(playerid);

	PlayerTextDrawDestroy(playerid, gHeaderTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gBackgroundTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gCurrentPageTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gNextButtonTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gPrevButtonTextDrawId[playerid]);

	gHeaderTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gBackgroundTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gCurrentPageTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gNextButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gPrevButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
}

HandlePlayerSkinSelection(playerid, selecteditem)
{
  	if(gSelectionItemsTag[playerid][selecteditem] >= 0 && gSelectionItemsTag[playerid][selecteditem] < 300)
	{
		if(CheckMoney(playerid,100))
		{
  			PlayerInfo[playerid][pChar] = gSelectionItemsTag[playerid][selecteditem];
    		SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
     		if(PlayerInfo[playerid][pDonateT] == 0){
				Bought(playerid, 100);
  				if(PlayerToPoint(30.0,playerid,211.7609,-7.6523,1001.2109))   		Till(9, 100);
  				else if(PlayerToPoint(20.0,playerid,207.7558,-103.3743,1005.2578))  Till(10, 100);
			}
 		}
	}
}

HandlePlayerVehicleSelection(playerid, selecteditem)
{
	if(gSelectionItemsTag[playerid][selecteditem] >= 400 && gSelectionItemsTag[playerid][selecteditem] < 612)
	{
	    new Price, Free, string[86];
		switch(gSelectionItemsTag[playerid][selecteditem])
		{
		    case 400:   Price = 250000, 	Free = 100;
		    case 401:   Price = 50000,		Free = 100;
		    case 402:   Price = 480000, 	Free = AutoCat[14];
		    case 404:   Price = 48000, 		Free = 100;
		    case 405:   Price = 200000, 	Free = 100;
		    case 409:   Price = 820000, 	Free = AutoCat[15];
		    case 410:   Price = 40000, 		Free = 100;
		    case 411:   Price = 1500000, 	Free = AutoCat[0];
		    case 412:   Price = 35000, 		Free = 100;
		    case 413:   Price = 30000,		Free = 100;
		    case 415:   Price = 800000, 	Free = AutoCat[1];
		    case 418:   Price = 29000, 		Free = 100;
		    case 419:   Price = 26000, 		Free = 100;
		    case 421:   Price = 120000, 	Free = 100;
		    case 422:   Price = 50000, 		Free = 100;
		    case 424:   Price = 150000, 	Free = 100;
		    case 426:   Price = 100000, 	Free = 100;
		    case 429:   Price = 1000000, 	Free = AutoCat[2];
		    case 434:   Price = 150000, 	Free = 100;
		    case 436:   Price = 40000, 		Free = 100;
		    case 439:   Price = 200000, 	Free = 100;
		    case 440:   Price = 27000, 		Free = 100;
		    case 442:   Price = 25000, 		Free = 100;
		    case 445:   Price = 70000, 		Free = 100;
		    case 451:   Price = 1400000, 	Free = AutoCat[3];
		    case 458:   Price = 68000, 		Free = 100;
		    case 462:   Price = 10000, 		Free = 100;
		    case 463:   Price = 80000, 		Free = 100;
		    case 466:   Price = 35000, 		Free = 100;
		    case 467:   Price = 26000, 		Free = 100;
		    case 468:   Price = 78000, 		Free = 100;
		    case 470:   Price = 900000, 	Free = AutoCat[16];
		    case 471:   Price = 20000, 		Free = 100;
		    case 474:   Price = 32000, 		Free = 100;
		    case 475:   Price = 120000, 	Free = 100;
		    case 477:   Price = 600000, 	Free = AutoCat[4];
		    case 479:   Price = 32000, 		Free = 100;
		    case 480:   Price = 500000, 	Free = AutoCat[5];
		    case 481:   Price = 1200, 		Free = 100;
		    case 482:   Price = 65000, 		Free = 100;
		    case 489:   Price = 88000, 		Free = 100;
		    case 492:   Price = 29000, 		Free = 100;
		    case 496:   Price = 100000, 	Free = 100;
		    case 500:   Price = 75000, 		Free = 100;
		    case 506:   Price = 720000, 	Free = AutoCat[6];
		    case 507:   Price = 125000, 	Free = 100;
		    case 509:   Price = 1000, 		Free = 100;
		    case 510:   Price = 2200, 		Free = 100;
		    case 516:   Price = 25000, 		Free = 100;
		    case 517:   Price = 37000, 		Free = 100;
		    case 521:   Price = 600000, 	Free = AutoCat[8];
		    case 522:   Price = 1200000, 	Free = AutoCat[7];
		    case 526:   Price = 46000, 		Free = 100;
		    case 527:   Price = 45000, 		Free = 100;
		    case 533:   Price = 42000, 		Free = 100;
		    case 535:   Price = 200000, 	Free = 100;
		    case 536:   Price = 46000, 		Free = 100;
		    case 541:   Price = 1300000, 	Free = AutoCat[9];
		    case 545:   Price = 43000, 		Free = 100;
		    case 546:   Price = 37000, 		Free = 100;
		    case 547:   Price = 36000, 		Free = 100;
		    case 550:   Price = 47000, 		Free = 100;
		    case 551:   Price = 95000, 		Free = 100;
		    case 554:   Price = 140000, 	Free = 100;
		    case 555:   Price = 250000, 	Free = 100;
		    case 558:   Price = 420000, 	Free = AutoCat[17];
		    case 559:   Price = 700000, 	Free = AutoCat[18];
		    case 560:   Price = 1420000, 	Free = AutoCat[10];
		    case 561:   Price = 220000, 	Free = 100;
		    case 562:   Price = 840000, 	Free = AutoCat[11];
		    case 565:   Price = 300000, 	Free = 100;
		    case 576:   Price = 25000, 		Free = 100;
		    case 579:   Price = 340000, 	Free = 100;
		    case 581:   Price = 120000, 	Free = 100;
		    case 586:   Price = 10000, 		Free = 100;
		    case 587:   Price = 480000, 	Free = AutoCat[12];
		    case 589:   Price = 165000, 	Free = 100;
		    case 602:   Price = 300000, 	Free = 100;
		    case 603:   Price = 620000, 	Free = AutoCat[13];
		}
		SetPVarInt(playerid, "ModelID", gSelectionItemsTag[playerid][selecteditem]);
		SetPVarInt(playerid, "PriceID", Price);
		SetPVarInt(playerid, "FreeNo", Free);
		format(string, sizeof string, "   {FFFFFF}Modelo: %s - Precio: %d - Disponibles: %d", VehicleFriendlyNames[gSelectionItemsTag[playerid][selecteditem]-400], Price, Free);
		ShowPlayerDialog(playerid, VEHICLE_INFO, DIALOG_STYLE_MSGBOX, "{FFFFFF}Consecionario", string, "Aceptar", "Cancelar");
	}
}

HandlePlayerToySelection(playerid, selecteditem)
{
    if(gSelectionItemsTag[playerid][selecteditem] >= 18600 && gSelectionItemsTag[playerid][selecteditem] < 19600)
	{
	    if(CheckMoney(playerid, 1000))
	    {
	        new string[100];
	        Bought(playerid, 1000);
	        if(PlayerToPoint(30.0,playerid,211.7609,-7.6523,1001.2109))     Till(9, 1000);
  			if(PlayerToPoint(20.0,playerid,207.7558,-103.3743,1005.2578))   Till(10, 1000);
  			PlayerToyInfo[playerid][GetPVarInt(playerid, "SlotSelection")][ptModelID] = gSelectionItemsTag[playerid][selecteditem];
			PlayerToyInfo[playerid][GetPVarInt(playerid, "SlotSelection")][ptBone] = 2;
			format(string, sizeof(string), "* Has comprado un toy por $1000 (Slot: %d), usa /toys para editarlo.", GetPVarInt(playerid, "SlotSelection"));
			Message(playerid, COLOR_RED, string);
			format(string, sizeof(string), "Numero: %d", gSelectionItemsTag[playerid][selecteditem]);
			Message(playerid, -1, string);
		}
	}
}

stock KickTimer(playerid)
{
    SetTimerEx("KickPublic", 1000, 0, "d", playerid);
}

function KickPublic(playerid)
{
	Kick(playerid);
}
